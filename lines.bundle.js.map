{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/gl.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/shaders/lines.frag","webpack:///./src/shaders/lines.vert","webpack:///./src/js/graphics/LineRenderer.js","webpack:///./src/js/util.js","webpack:///./src/js/graphics/Sprite.js","webpack:///./src/js/graphics/SpriteRenderer.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/common.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2d.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat4.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec4.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/quat.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/quat2.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec2.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/js/graphics.js","webpack:///./src/js/input.js","webpack:///./src/demo/lines.js","webpack:///./node_modules/underscore/underscore.js","webpack:///./src/js/graphics/Camera.js","webpack:///./src/css/app.css","webpack:///./src/css/app.css?13d6","webpack:///./src/shaders/sprite.frag","webpack:///./src/shaders/sprite.vert","webpack:///./src/js/vendor/webgl-debug.js","webpack:///./node_modules/twgl.js/dist/4.x/twgl-full.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/js/resource.js","webpack:///./src/js/app.js","webpack:///./src/js/twgl.js","webpack:///./src/js/graphics/Grid.js","webpack:///./src/shaders/grid.frag","webpack:///./src/shaders/grid.vert"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_gl","gl","g","this","Function","eval","e","window","_twgl","_interopRequireDefault","_util","_lines","_lines2","sharedProgram","LineRenderer","opts","_classCallCheck","_maxLines$opts","_objectSpread","maxLines","game","twgl","createProgramInfo","vs","fs","programInfo","setup","bufferInfo","createBufferInfoFromArrays","position","numComponents","drawType","DYNAMIC_DRAW","translation","arrays","Float32Array","vao","createVertexArrayInfo","setBuffersAndAttributes","lines","color","arguments","length","undefined","set","useProgram","program","setUniforms","projection","viewMatrix","setAttribInfoBufferFromArray","attribs","drawBufferInfo","LINES","polygons","setter","arraySetter","lineCount","forEach","polygon","vertices","slice","vtx","concat","buffer","count","newElements","Error","h","b","x","isFinite","Math","max","min","abs","round","width","height","framebuffer","createFramebuffer","texture","createTexture","bindTexture","TEXTURE_2D","texStorage2D","RGBA8","texParameteri","TEXTURE_MIN_FILTER","NEAREST","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","attach","viewport","detach","src","Promise","resolve","reject","img","Image","removeListeners","removeEventListener","addEventListener","error","Sprite","options","size","angle","offset","backgroundColor","textureName","_sprite","_sprite2","SPRITE_RECT_VERTICES","SpriteRenderer","_ref","textureInfo","loader","_arrays","vertex","data","divisor","STATIC_DRAW","texcoord","type","Int16Array","indices","sprites","positions","sizes","offsets","sprite","spriteIndex","v","compIndex","TRIANGLE_STRIP","EPSILON","ARRAY_TYPE","Array","RANDOM","random","setMatrixArrayType","degree","PI","toRadian","a","equals","out","clone","copy","identity","fromValues","m00","m01","m10","m11","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","sin","cos","mat2_scale","v0","v1","fromRotation","fromScaling","str","frob","sqrt","pow","LDU","L","D","U","add","subtract","exactEquals","mat2_equals","multiplyScalar","multiplyScalarAndAdd","scale","mul","sub","mat2d_create","mat2d_clone","mat2d_copy","mat2d_identity","mat2d_fromValues","tx","ty","mat2d_set","mat2d_invert","aa","ab","ac","ad","atx","aty","mat2d_determinant","mat2d_multiply","a4","a5","b4","b5","mat2d_rotate","mat2d_scale","translate","mat2d_fromRotation","mat2d_fromScaling","fromTranslation","mat2d_str","mat2d_frob","mat2d_add","mat2d_subtract","mat2d_multiplyScalar","mat2d_multiplyScalarAndAdd","mat2d_exactEquals","mat2d_equals","mat2d_mul","mat2d_sub","mat3_create","fromMat4","mat3_clone","mat3_copy","mat3_fromValues","m02","m12","m20","m21","m22","mat3_set","mat3_identity","mat3_transpose","a01","a02","a12","mat3_invert","a00","a10","a11","a20","a21","a22","b01","b11","b21","mat3_adjoint","mat3_determinant","mat3_multiply","b00","b02","b10","b12","b20","b22","mat3_translate","y","mat3_rotate","mat3_scale","mat3_fromTranslation","mat3_fromRotation","mat3_fromScaling","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","mat3_str","mat3_frob","mat3_add","mat3_subtract","mat3_multiplyScalar","mat3_multiplyScalarAndAdd","mat3_exactEquals","mat3_equals","a6","a7","a8","b6","b7","b8","mat3_mul","mat3_sub","mat4_create","mat4_clone","mat4_copy","mat4_fromValues","m03","m13","m23","m30","m31","m32","m33","mat4_set","mat4_identity","mat4_transpose","mat4_invert","mat4_adjoint","mat4_determinant","mat4_multiply","mat4_translate","mat4_scale","mat4_rotate","axis","len","rotateX","rotateY","rotateZ","mat4_fromTranslation","mat4_fromScaling","mat4_fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","mat4_fromQuat","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","mat4_str","mat4_frob","mat4_add","mat4_subtract","mat4_multiplyScalar","mat4_multiplyScalarAndAdd","mat4_exactEquals","mat4_equals","a9","a14","a15","b9","b13","b14","b15","mat4_mul","mat4_sub","vec3_create","vec3_clone","vec3_length","vec3_fromValues","vec3_copy","vec3_set","vec3_add","vec3_subtract","vec3_multiply","divide","ceil","floor","vec3_scale","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","vec3_dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","vec3_rotateX","vec3_rotateY","vec3_rotateZ","tempA","tempB","cosine","acos","vec3_str","vec3_exactEquals","vec3_equals","vec3_sub","vec3_mul","div","dist","sqrDist","vec3_len","sqrLen","vec","stride","fn","arg","vec4_create","vec4_clone","vec4_fromValues","vec4_copy","vec4_set","vec4_add","vec4_subtract","vec4_multiply","vec4_divide","vec4_ceil","vec4_floor","vec4_min","vec4_max","vec4_round","vec4_scale","vec4_scaleAndAdd","vec4_distance","vec4_squaredDistance","vec4_length","vec4_squaredLength","vec4_negate","vec4_inverse","vec4_normalize","vec4_dot","vec4_lerp","vec4_random","vectorScale","v2","v3","v4","s1","s2","vec4_transformMat4","vec4_transformQuat","ix","iy","iz","iw","vec4_str","vec4_exactEquals","vec4_equals","vec4_sub","vec4_mul","vec4_div","vec4_dist","vec4_sqrDist","vec4_len","vec4_sqrLen","vec4_forEach","quat_create","quat_identity","setAxisAngle","getAxisAngle","out_axis","quat_multiply","quat_rotateX","quat_rotateY","quat_rotateZ","calculateW","slerp","omega","cosom","sinom","scale0","scale1","quat_invert","dot","invDot","conjugate","fromMat3","fRoot","fTrace","j","k","fromEuler","halfToRad","cx","cy","cz","quat_str","quat_clone","quat_fromValues","quat_copy","quat_set","quat_add","quat_mul","quat_scale","quat_dot","quat_lerp","quat_length","quat_len","quat_squaredLength","quat_sqrLen","quat_normalize","quat_exactEquals","quat_equals","rotationTo","tmpvec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","view","quat2_create","dq","quat2_clone","quat2_fromValues","w1","fromRotationTranslationValues","quat2_fromRotationTranslation","quat2_fromTranslation","quat2_fromRotation","quat2_fromMat4","outer","quat2_copy","quat2_identity","quat2_set","getReal","getDual","setReal","setDual","quat2_getTranslation","quat2_translate","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","quat2_rotateX","quat2_rotateY","quat2_rotateZ","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","quat2_add","quat2_multiply","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","quat2_mul","quat2_scale","quat2_dot","quat2_lerp","mt","quat2_invert","sqlen","quat2_squaredLength","quat2_conjugate","quat2_length","quat2_len","quat2_sqrLen","quat2_normalize","quat2_str","quat2_exactEquals","quat2_equals","vec2_create","vec2_clone","vec2_fromValues","vec2_copy","vec2_set","vec2_add","vec2_subtract","vec2_multiply","vec2_divide","vec2_ceil","vec2_floor","vec2_min","vec2_max","vec2_round","vec2_scale","vec2_scaleAndAdd","vec2_distance","vec2_squaredDistance","vec2_length","vec2_squaredLength","vec2_negate","vec2_inverse","vec2_normalize","vec2_dot","vec2_cross","vec2_lerp","vec2_random","transformMat2","transformMat2d","vec2_transformMat3","vec2_transformMat4","vec2_rotate","p0","p1","sinC","cosC","vec2_angle","len1","len2","vec2_str","vec2_exactEquals","vec2_equals","vec2_len","vec2_sub","vec2_mul","vec2_div","vec2_dist","vec2_sqrDist","vec2_sqrLen","vec2_forEach","stylesInDom","isOldIE","memo","apply","memoize","document","all","atob","getElement","selector","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","item","domStyle","id","refs","parts","push","addStyle","listToStyles","list","newStyles","base","part","css","media","sourceMap","insertStyleElement","style","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","attrs","addAttrs","el","keys","setAttribute","obj","update","remove","result","transform","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","index","replacement","filter","Boolean","join","cssNode","childNodes","useSourceMap","toString","map","content","cssMapping","sourceMapping","toComment","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","_glMatrix","TilemapTextureBuilder","assign","tileWidth","tileHeight","layers","copyIndex","TEXTURE_2D_ARRAY","texStorage3D","_this","tileWide","detectWidthInTiles","tileHigh","detectHeightInTiles","canvas","ctx","getContext","drawImage","copyTile","tileX","tileY","imageData","getImageData","_this$tileCoordinates","tileCoordinates","texSubImage3D","RGBA","UNSIGNED_BYTE","pixelStorei","UNPACK_FLIP_Y_WEBGL","isFull","maxIndex","Uint8Array","layerWidth","layerHeight","fb","READ_FRAMEBUFFER","layer","framebufferTextureLayer","readPixels","ImageData","Uint8ClampedArray","CoordinateConversions","canvasToWorldMatrix","displaySize","virtualSize","acc","mat4","temp","MouseListener","updateCallback","mousePosition","evt","onMouseMove","offsetX","offsetY","_Grid","_Sprite","_app2","_SpriteRenderer","_LineRenderer","app","App","initCanvas","debug","clearColor","resolution","load","basePath","programs","parsePathString","split","parseFloat","pathToPositions","path","_toConsumableArray","MouseDrawing","_lineData","currentLineIdx","available","isDrawing","convertMouseCoordinates","endLine","startLine","coord","mvec","vec3","canvasToWorld","inBounds","lineIndex","_callee","framebufferRenderer","lineDrawer","lineRenderer","regeneratorRuntime","wrap","_context","prev","next","loading","Grid","addGrid","requestAnimationFrame","render","adjustViewport","clear","lineData","stop","run","__WEBPACK_AMD_DEFINE_RESULT__","root","self","global","previousUnderscore","_","ArrayProto","ObjProto","SymbolProto","nativeIsArray","isArray","nativeKeys","nativeCreate","Ctor","_wrapped","nodeType","VERSION","builtinIteratee","optimizeCb","func","context","argCount","collection","accumulator","cb","iteratee","isFunction","isObject","matcher","Infinity","restArguments","startIndex","rest","args","baseCreate","shallowProperty","has","deepGet","MAX_ARRAY_INDEX","getLength","isArrayLike","each","collect","results","currentKey","createReduce","dir","initial","reducer","reduce","foldl","inject","reduceRight","foldr","find","detect","predicate","findIndex","findKey","select","every","some","any","contains","includes","include","fromIndex","guard","values","invoke","contextPath","method","pluck","where","findWhere","computed","lastComputed","shuffle","sample","last","rand","sortBy","criteria","sort","group","behavior","partition","groupBy","indexBy","countBy","reStrSymbol","toArray","isString","match","pass","first","take","array","tail","drop","compact","flatten","input","shallow","strict","output","isArguments","without","otherArrays","difference","uniq","unique","isSorted","isBoolean","seen","union","intersection","argsLength","unzip","zip","createPredicateIndexFinder","findLastIndex","sortedIndex","low","high","mid","createIndexFinder","predicateFind","isNaN","lastIndexOf","range","start","step","chunk","executeBound","sourceFunc","boundFunc","callingContext","TypeError","bound","callArgs","partial","boundArgs","placeholder","bindAll","hasher","cache","address","delay","wait","setTimeout","defer","throttle","timeout","previous","later","leading","now","throttled","remaining","clearTimeout","trailing","cancel","debounce","immediate","debounced","callNow","wrapper","compose","after","times","once","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","collectNonEnumProps","nonEnumIdx","constructor","proto","prop","allKeys","mapObject","pairs","functions","methods","names","createAssigner","keysFunc","defaults","extend","extendOwn","eq","deepEq","keyInObj","pick","omit","String","props","tap","interceptor","isMatch","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isElement","nodelist","Int8Array","isSymbol","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","RegExp","replaceRegexp","string","escape","fallback","idCounter","uniqueId","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeRegExp","escapeChar","template","text","settings","oldSettings","variable","argument","chain","instance","_chain","chainResult","mixin","toJSON","Camera","bounds","_translation","vec2","_bounds","vec4","hmr","locals","WebGLDebugUtils","msg","console","log","glValidEnumContexts","enable","1","0","disable","getParameter","drawArrays","3","drawElements","4","2","createShader","getShaderParameter","getProgramParameter","getShaderPrecisionFormat","getVertexAttrib","vertexAttribPointer","6","activeTexture","getTexParameter","texParameterf","copyTexImage2D","8","copyTexSubImage2D","generateMipmap","bindBuffer","getBufferParameter","bindRenderbuffer","checkFramebufferStatus","framebufferRenderbuffer","5","getFramebufferAttachmentParameter","getRenderbufferParameter","renderbufferStorage","enumBitwiseOr","depthFunc","blendFunc","blendFuncSeparate","blendEquation","blendEquationSeparate","stencilFunc","stencilFuncSeparate","stencilMaskSeparate","stencilOp","stencilOpSeparate","cullFace","frontFace","drawArraysInstancedANGLE","drawElementsInstancedANGLE","blendEquationEXT","bufferData","bufferSubData","copyBufferSubData","getBufferSubData","blitFramebuffer","10","9","invalidateFramebuffer","invalidateSubFramebuffer","readBuffer","getInternalformatParameter","renderbufferStorageMultisample","texImage2D","7","texImage3D","11","texSubImage2D","12","copyTexSubImage3D","compressedTexImage2D","compressedTexImage3D","compressedTexSubImage2D","compressedTexSubImage3D","vertexAttribIPointer","drawArraysInstanced","drawElementsInstanced","drawRangeElements","clearBufferfv","clearBufferiv","clearBufferuiv","clearBufferfi","beginQuery","endQuery","getQuery","getQueryParameter","samplerParameteri","samplerParameterf","getSamplerParameter","fenceSync","clientWaitSync","waitSync","getSyncParameter","bindTransformFeedback","beginTransformFeedback","transformFeedbackVaryings","bindBufferBase","bindBufferRange","getIndexedParameter","getActiveUniforms","getActiveUniformBlockParameter","glEnums","enumStringToValue","init","propertyName","checkInit","glEnumToString","glFunctionArgToString","functionName","numArgs","argumentIndex","funcInfo","enums","orResult","orEnums","enumValue","makePropertyWrapper","original","__defineGetter__","__defineSetter__","resetToInitialState","isWebGL2RenderingContext","createTransformFeedback","bindVertexArray","numAttribs","MAX_VERTEX_ATTRIBS","tmp","createBuffer","ARRAY_BUFFER","ii","disableVertexAttribArray","FLOAT","vertexAttrib1f","vertexAttribDivisor","deleteBuffer","numTextureUnits","MAX_TEXTURE_IMAGE_UNITS","TEXTURE0","TEXTURE_CUBE_MAP","TEXTURE_3D","bindSampler","ELEMENT_ARRAY_BUFFER","RENDERBUFFER","BLEND","CULL_FACE","DEPTH_TEST","DITHER","SCISSOR_TEST","blendColor","FUNC_ADD","ONE","ZERO","clearDepth","clearStencil","colorMask","BACK","LESS","depthMask","depthRange","CCW","hint","GENERATE_MIPMAP_HINT","DONT_CARE","lineWidth","PACK_ALIGNMENT","UNPACK_ALIGNMENT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","BROWSER_DEFAULT_WEBGL","polygonOffset","sampleCoverage","scissor","ALWAYS","stencilMask","KEEP","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","drawBuffers","COPY_READ_BUFFER","COPY_WRITE_BUFFER","PIXEL_PACK_BUFFER","PIXEL_UNPACK_BUFFER","numTransformFeedbacks","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","TRANSFORM_FEEDBACK_BUFFER","numUBOs","MAX_UNIFORM_BUFFER_BINDINGS","UNIFORM_BUFFER","RASTERIZER_DISCARD","UNPACK_IMAGE_HEIGHT","UNPACK_SKIP_IMAGES","UNPACK_ROW_LENGTH","UNPACK_SKIP_ROWS","UNPACK_SKIP_PIXELS","PACK_ROW_LENGTH","PACK_SKIP_ROWS","PACK_SKIP_PIXELS","FRAGMENT_SHADER_DERIVATIVE_HINT","getError","mightBeEnum","glFunctionArgsToString","argStr","makeDebugContext","opt_onErrorFunc","opt_onFunc","opt_err_ctx","err","glErrorShadow","makeErrorWrapper","wrapped","NO_ERROR","makeLostContextSimulatingCanvas","unwrappedContext_","onLost_","onRestored_","wrappedContext_","contextId_","contextLost_","resourceDb_","numCallsToLoseContext_","numCalls_","canRestore_","restoreTimeout_","glErrorShadow_","wrapEvent","listener","info","handleEvent","WebGLRenderingContext","WebGL2RenderingContext","makeLostContextFunctionWrapper","loseContextIfTime","creationFunctions","__webglDebugContextLostId__","functionsThatShouldReturnNull","isFunctions","FRAMEBUFFER_UNSUPPORTED","getAttribLocation","getVertexAttribOffset","isContextLost","getFragDataLocation","WAIT_FAILED","getUniformBlockIndex","INVALID_INDEX","makeLostContextSimulatingContext","addOnContextLostListener","addOnContextRestoredListener","loseContext","makeWebGLContextEvent","statusMessage","preventDefault","bubble","wrapAddEventListener","clearErrors","CONTEXT_LOST_WEBGL","event","callbacks","restoreContext","resource","WebGLBuffer","WebGLFramebuffer","deleteFramebuffer","WebGLProgram","deleteProgram","WebGLRenderbuffer","deleteRenderbuffer","WebGLShader","deleteShader","WebGLTexture","deleteTexture","WebGLQuery","deleteQuery","WebGLSampler","deleteSampler","WebGLSync","deleteSync","WebGLTransformFeedback","deleteTransformFeedback","WebGLVertexArrayObject","deleteVertexArray","freeResources","loseContextInNCalls","numCalls","getNumCalls","setRestoreTimeout","factory","configurable","copyExistingProperties","dst","copyNamedProperties","isBuffer","repBuffer","isRenderbuffer","repRenderbuffer","createRenderbuffer","isShader","repShader","VERTEX_SHADER","isTexture","repTexture","isSampler","repSampler","createSampler","warn","_globalObject","default","getGLTypeForTypedArray","typedArray","BYTE","SHORT","Uint16Array","UNSIGNED_SHORT","Int32Array","INT","Uint32Array","UNSIGNED_INT","getGLTypeForTypedArrayType","typedArrayType","getTypedArrayTypeForGLType","CTOR","glTypeToTypedArray","isArrayBuffer","tt","SharedArrayBuffer","ArrayBuffer","VecType","t1","t2","dx","dy","dz","distanceSq","divScalar","lengthSq","mulScalar","lenSq","setDefaultType","ctor","oldType","isWebGL1","isWebGL2","haveEnumsForType","existing","addEnums","createAttributeSetters","createProgram","createProgramFromScripts","shaderScriptIds","opt_attribs","opt_locations","opt_errorCallback","progOptions","getProgramOptions","shaders","shader","createShaderFromScript","defaultShaderType","errorCallback","createProgramFromSources","shaderSources","good","script","getElementById","createProgramInfoFromProgram","createUniformSetters","createUniformBlockSpecFromProgram","createUniformBlockInfoFromProgram","createUniformBlockInfo","blockName","uniformBlockSpec","tf","TRANSFORM_FEEDBACK","bindTransformFeedbackInfo","transformFeedbackInfo","varying","unbindTransformFeedbackInfo","createTransformFeedbackInfo","setAttributes","buffers","vertexArrayObject","attribSetters","setters","actualSetters","uniformSetters","andx","vals","numValues","setUniformBlock","uniformBlockInfo","bindUniformBlock","setBlockUniforms","uniforms","utils","_interopRequireWildcard","helper","desc","getOwnPropertyDescriptor","typeMap","getBindPointForSamplerType","bindPoint","intSetter","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","textureOrPair","sampler","samplerArraySetter","units","textures","floatAttribSetter","enableVertexAttribArray","intAttribSetter","matAttribSetter","typeInfo","defaultSize","rowOffset","Type","uniform1f","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","attrTypeMap","spaceRE","loadShader","shaderSource","shaderType","errFn","lineOffset","compileShader","COMPILE_STATUS","lastError","getShaderInfoLog","line","ndx","addLineNumbers","opt","attribLocations","attrib","getShaderTypeFromScriptType","scriptType","FRAGMENT_SHADER","deleteShaders","realShaders","newShaders","elem","attachShader","bindAttribLocation","varyings","transformFeedbackMode","SEPARATE_ATTRIBS","linkProgram","LINK_STATUS","getProgramInfoLog","scriptId","opt_shaderType","shaderScript","isBuiltIn","startsWith","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","substr","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","numVaryings","TRANSFORM_FEEDBACK_VARYINGS","getTransformFeedbackVarying","buf","uniformData","uniformIndices","pair","pname","blockSpecs","numUniformBlocks","ACTIVE_UNIFORM_BLOCKS","_ii","getActiveUniformBlockName","blockSpec","usedByVertexShader","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","usedByFragmentShader","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","used","usedByVertexSahder","arraySuffixRE","uniformBufferIndex","uniformBlockBinding","uniformNdx","BYTES_PER_ELEMENT","asFloat","bufferBindIndex","byteLength","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","axisRotate","angleInRadians","MatType","oneMinusCosine","r00","r01","r02","r10","r11","r12","r20","r21","r22","axisRotation","getAxis","off","xAxis","tempV3a","yAxis","tempV3b","zAxis","tempV3c","b23","b30","b31","b32","b33","fieldOfViewYInRadians","zNear","zFar","rangeInv","rotationX","rotationY","rotationZ","scaling","setAxis","setTranslation","transformDirection","transformNormal","mi","transformPoint","tmp_0","tmp_1","tmp_2","tmp_3","tmp_4","tmp_5","tmp_6","tmp_7","tmp_8","tmp_9","tmp_10","tmp_11","tmp_12","tmp_13","tmp_14","tmp_15","tmp_16","tmp_17","tmp_18","tmp_19","tmp_20","tmp_21","tmp_22","tmp_23","t0","t3","createAttribsFromArrays","createBuffersFromArrays","createBufferFromArray","numElements","elementType","typedArrays","makeTypedArray","positionKeys","getArray","getNumComponents","getNumElementsFromNonIndexedArrays","createBufferFromTypedArray","newIndices","attribPrefix","numBytes","BUFFER_SIZE","bytesPerValue","getBytesPerValueForGLType","totalElements","getNumElementsFromAttributes","setBufferFromTypedArray","setAttributePrefix","setAttributeDefaults_","newDefaults","getNumComponents_","getArray_","isIndices","texcoordRE","colorRE","guessNumComponentsFromName","arrayName","normalization","attribName","arrayType","getNormalizationForTypedArrayType","getNormalizationForTypedArray","setTextureDefaults_","textureColor","setDefaultTextureColor","createSamplers","samplerOptions","samplers","setSamplerParameters","setEmptyTexture","setTextureFromArray","loadTextureFromUrl","setTextureFromElement","setTextureFilteringForSize","setTextureParameters","createTextures","textureOptions","callback","numDownloading","errors","images","callCallbackIfReady","onLoadFn","isAsyncSrc","tex","resizeTexture","level","internalFormat","format","formatType","getFormatAndTypeForInternalFormat","getTextureTypeForArrayType","TEXTURE_CUBE_MAP_POSITIVE_X","getNumComponentsForFormat","formatInfo","numColorComponents","getBytesPerElementForInternalFormat","crossOrigin","RGB","RG","textureInternalFormatInfo","bytesPerElement","bytesPerElementMap","textureFormat","isPowerOf2","defaultType","guessDimensions","colorRenderable","textureFilterable","lastPackState","savePackState","colorspaceConversion","premultiplyAlpha","flipY","restorePackState","saveSkipState","unpackAlignment","unpackRowLength","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","restoreSkipState","setTextureSamplerParameters","parameteriFn","minMag","TEXTURE_MAG_FILTER","mag","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","wrapR","wrapS","wrapT","minLod","TEXTURE_MIN_LOD","maxLod","TEXTURE_MAX_LOD","baseLevel","TEXTURE_BASE_LEVEL","maxLevel","TEXTURE_MAX_LEVEL","canGenerateMipmap","filtering","canFilter","LINEAR","CLAMP_TO_EDGE","shouldAutomaticallySetTextureFilteringForSize","auto","getCubeFaceOrder","cubeFaceOrder","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","getCubeFacesWithNdx","facesWithNdx","face","element","slices","imgWidth","imgHeight","nodeName","xOffset","yOffset","createImageBitmap","colorSpaceConversion","then","imageBitmap","smallest","largest","depth","xMult","yMult","srcX","srcY","isTexImageSource","ImageBitmap","HTMLElement","loadAndUseImage","url","clearEventHandlers","onError","onLoad","bm","fetch","response","ok","bitmap","catch","loadImage","setTextureTo1PixelColor","make1Pixel","loadCubemapFromUrls","urls","imgs","numToLoad","faces","faceTarget","otherTarget","uploadImg","loadSlicesFromUrls","firstImage","dimensions","cbrt","faceSize","subarray","_exportNames","m4","primitives","create3DFVertices","createAugmentedTypedArray","createCubeVertices","createPlaneVertices","createSphereVertices","createTruncatedConeVertices","createXYQuadVertices","createCresentVertices","createCylinderVertices","createTorusVertices","createDiscVertices","deindexVertices","newVertices","allButIndices","channel","srcBuffer","dstBuffer","jj","flattenNormals","normals","normal","numNormals","nax","nay","naz","nbx","nby","nbz","ncx","ncy","ncz","nx","ny","nz","makeRandomVertexColors","vcolors","randInt","numVertsPerColor","vertsPerColor","numSets","_ii2","reorientDirections","reorientNormals","reorientPositions","reorientVertices","concatVertices","arrayOfArrays","baseName","_loop","arrayInfo","newArrays","arraySpec","spec","getLengthOfCombinedArrays","newArraySpec","createArrayOfSameType","newArray","baseIndex","copyElements","copyArraysToNewArray","duplicateVertices","srcArray","createDiscBuffers","createDiscBufferInfo","createTorusBuffers","createTorusBufferInfo","createCylinderBuffers","createCylinderBufferInfo","createCresentBuffers","createCresentBufferInfo","createXYQuadBuffers","createXYQuadBufferInfo","createTruncatedConeBuffers","createTruncatedConeBufferInfo","createSphereBuffers","createSphereBufferInfo","createPlaneBuffers","createPlaneBufferInfo","createCubeBuffers","createCubeBufferInfo","create3DFBuffers","create3DFBufferInfo","attributes","augmentTypedArray","cursor","reset","opt_index","opt_type","applyFuncToV3Array","matrix","subdivisionsWidth","subdivisionsDepth","numVertices","texcoords","u","numVertsAcross","_z","_x","radius","subdivisionsAxis","subdivisionsHeight","opt_startLatitudeInRadians","opt_endLatitudeInRadians","opt_startLongitudeInRadians","opt_endLongitudeInRadians","latRange","longRange","theta","phi","sinTheta","cosTheta","sinPhi","ux","uy","uz","numVertsAround","_x2","_y","CUBE_FACE_INDICES","cornerVertices","faceNormals","uvCoords","faceIndices","uv","bottomRadius","topRadius","radialSubdivisions","verticalSubdivisions","opt_topCap","opt_bottomCap","topCap","bottomCap","extra","vertsAroundEdge","slant","atan2","cosSlant","sinSlant","end","ringRadius","_yy","expandRLEData","rleData","padding","runLength","colors","numVerts","verticalRadius","outerRadius","innerRadius","thickness","subdivisionsDown","startOffset","endOffset","subdivisionsThick","offsetRange","createArc","arcRadius","normalMult","normalAdd","uMult","uAdd","uBack","xBack","px","py","pz","createSurface","leftArcOffset","rightArcOffset","numVerticesDown","bodySubdivisions","startAngle","endAngle","radialParts","bodyParts","sliceAngle","sliceSin","ring","ringAngle","xSin","zCos","_slice","_ring","nextRingIndex","nextSliceIndex","divisions","stacks","stackPower","firstIndex","radiusSpan","pointsPerStack","stack","stackRadius","createBufferFunc","createBufferInfoFunc","arraySpecPropertyNames","dstNdx","arraySrc","addExtensionsToContext","getWebGLContext","resizeCanvasToDisplaySize","setDefaults","createContext","create3DContext","multiplier","clientWidth","clientHeight","_draw","_framebuffers","_programs","_typedarrays","_vertexArrays","prefixRE","addExtensionToContext","extensionName","ext","getExtension","fnSuffix","exec","enumSuffix","isFunc","suffix","endsWith","substring","origFn","supportedExtensions","drawObjectList","objectsToDraw","lastUsedProgramInfo","lastUsedBufferInfo","active","vertexArrayInfo","bindBuffers","TRIANGLES","instanceCount","bindFramebufferInfo","framebufferInfo","drawingBufferWidth","drawingBufferHeight","createFramebufferInfo","attachments","colorAttachmentCount","defaultAttachments","attachmentOptions","attachment","attachmentPoint","attachmentsByFormat","getAttachmentPointForFormat","renderbufferFormats","isRenderbufferFormat","texTarget","resizeFramebufferInfo","programInfos","createVertexArray","createVAOAndSetAttributes","createVAOFromBufferInfo","webpackPolyfill","deprecate","paths","children","_underscore","Loader","Map","textureCache","programCache","_basePath$raiseOnFail","raiseOnFailure","loadPromise","_asyncToGenerator","mark","_ref2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","progOpts","_opts","fp","vsName","fsName","loadPaths","sent","iterator","done","abrupt","return","finish","_x3","res","ret","raise","contents","req","status","statusText","_resource","_graphics","_Camera","logGLCall","containerId","canvasClass","mountPoint","classList","pixelMultiplier","registerContext","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","attachFramebuffer","camera","cameraEnabled","updateCanvasSize","devicePixelRatio","canvas_width","canvas_height","_canvasToWorld","_this$gl","getProgram","timestamp","running","time","dt","stage","prerender","beginRenderToTexture","postrender","endRenderToTexture","_grid","_grid2","GRID_VERTICES","grids","lineColor","xcells","ycells","_makeGridVertices","_ref3","row","col","makeGridVertices","cameraPos","gridInfo","line_color"],"mappings":"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","file":"lines.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 263);\n","let gl = {};\n\nfunction registerContext(_gl) {\n    gl = _gl;\n}\n\nexport {registerContext, gl};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = \"#version 300 es\\n\\nprecision mediump float;\\nprecision mediump int;\\n\\nout vec4 out_color;\\n\\nuniform highp vec4 color;\\n\\nvoid main() {\\n    out_color = color;\\n}\\n\"","module.exports = \"#version 300 es\\n\\nlayout(location = 0) in vec2 position;\\n\\nuniform mat4 projection;\\n\\nvoid main() {\\n    vec4 transformed_position = projection * vec4(position, 0, 1);\\n    gl_Position = transformed_position;\\n}\\n\"","import twgl from \"../twgl\";\nimport {gl} from \"../gl\";\nimport {arraySetter} from \"../util\";\nimport vs from '../../shaders/lines.vert';\nimport fs from '../../shaders/lines.frag';\n\nexport {LineRenderer};\n\nlet sharedProgram = null;\n\nclass LineRenderer {\n\n    constructor(opts) {\n\n        const {game, maxLines} = {\n            maxLines: 32768,\n            ...opts\n        };\n\n        this.game = game;\n        this.maxLines = maxLines;\n\n        // Share program between renderer instances\n        if (!sharedProgram) {\n            sharedProgram = twgl.createProgramInfo(gl, [vs, fs]);\n        }\n\n        this.programInfo = sharedProgram;\n\n        this.setup();\n    }\n\n    setup() {\n        this.bufferInfo = twgl.createBufferInfoFromArrays(gl, {\n            position: {\n                numComponents: 2,\n                drawType: gl.DYNAMIC_DRAW\n            },\n            translation: {\n                numComponents: 2,\n                drawType: gl.DYNAMIC_DRAW\n            }\n        });\n\n        this.arrays = {\n            position: new Float32Array(2 * 2 * this.maxLines)\n        };\n\n        this.vao = twgl.createVertexArrayInfo(gl, this.programInfo, this.bufferInfo);\n        twgl.setBuffersAndAttributes(gl, this.programInfo, this.vao);\n    }\n\n    render(lines, color = [1, 1, 1, 1]) {\n        // copy data from lines to this.arrays.position\n        this.arrays.position.set(lines);\n\n        //gl.enable(gl.LINES);\n\n        gl.useProgram(this.programInfo.program);\n\n        twgl.setUniforms(this.programInfo, {\n            projection: this.game.viewMatrix,\n            color: color\n        });\n\n        twgl.setAttribInfoBufferFromArray(\n            gl,\n            this.bufferInfo.attribs.position,\n            this.arrays.position\n        );\n\n        twgl.setBuffersAndAttributes(gl, this.programInfo, this.vao);\n        twgl.drawBufferInfo(gl, this.vao, gl.LINES, lines.length / 2);\n    }\n\n    renderPolygons(polygons, color = [1, 1, 1, 1]) {\n        const setter = arraySetter(this.arrays.position);\n\n        let lineCount = 0;\n        polygons.forEach(polygon => {\n            setter(polygon.vertices[0]);\n            polygon.vertices.slice(1).forEach(vtx => setter(vtx.concat(vtx)));\n            setter(polygon.vertices[0]);\n            lineCount += polygon.vertices.length;\n        });\n\n        twgl.setAttribInfoBufferFromArray(\n            gl,\n            this.bufferInfo.attribs.position,\n            this.arrays.position\n        );\n\n        gl.useProgram(this.programInfo.program);\n\n        twgl.setUniforms(this.programInfo, {\n            projection: this.game.viewMatrix,\n            color: color\n        });\n\n        twgl.setBuffersAndAttributes(gl, this.programInfo, this.vao);\n        twgl.drawBufferInfo(gl, this.vao, gl.LINES, lineCount * 2);\n    }\n}","function arraySetter(buffer) {\n    let count = 0;\n    return function (newElements) {\n        if (!newElements.length) {\n            newElements = [newElements];\n            if (count + newElements.length > buffer.length) {\n                throw new Error('attempting to append beyond buffer length');\n            }\n        }\n        buffer.set(newElements, count);\n        count += newElements.length;\n    }\n}\n\nfunction hsl2rgb (h, s, l) {\n\n    var r, g, b, m, c, x\n\n    if (!isFinite(h)) h = 0\n    if (!isFinite(s)) s = 0\n    if (!isFinite(l)) l = 0\n\n    h /= 60\n    if (h < 0) h = 6 - (-h % 6)\n    h %= 6\n\n    s = Math.max(0, Math.min(1, s / 100))\n    l = Math.max(0, Math.min(1, l / 100))\n\n    c = (1 - Math.abs((2 * l) - 1)) * s\n    x = c * (1 - Math.abs((h % 2) - 1))\n\n    if (h < 1) {\n        r = c\n        g = x\n        b = 0\n    } else if (h < 2) {\n        r = x\n        g = c\n        b = 0\n    } else if (h < 3) {\n        r = 0\n        g = c\n        b = x\n    } else if (h < 4) {\n        r = 0\n        g = x\n        b = c\n    } else if (h < 5) {\n        r = x\n        g = 0\n        b = c\n    } else {\n        r = c\n        g = 0\n        b = x\n    }\n\n    m = l - c / 2\n    r = Math.round((r + m) * 255)\n    g = Math.round((g + m) * 255)\n    b = Math.round((b + m) * 255)\n\n    return [r, g, b];\n}\n\nfunction attachFramebuffer(gl, width, height) {\n    const framebuffer = gl.createFramebuffer();\n    const texture = gl.createTexture();\n\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA8, width, height);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    return {\n        width,\n        height,\n        attach() {\n            gl.viewport(0, 0, width, height);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        },\n        detach() {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        },\n        texture,\n        framebuffer\n    }\n}\n\nfunction loadImage(src) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n\n        function removeListeners() {\n            img.removeEventListener('load', null);\n            img.removeEventListener('error', null);\n        }\n\n        img.addEventListener('load', () => {\n            removeListeners();\n            resolve(img);\n        });\n\n        img.addEventListener('error', (error) => {\n            removeListeners();\n            reject(error);\n        });\n\n        img.src = src;\n    });\n}\n\nexport {arraySetter, hsl2rgb, attachFramebuffer, loadImage};\n","export {Sprite};\n\nclass Sprite {\n    constructor(options) {\n        this.position = options.position || [0, 0];\n        this.size = options.size;// || [8, 8];\n        // default angle is 0 radians\n        this.angle = 0;\n        // default is offset sets the sprite's bottom left corner at position\n        this.offset = options.offset || [0, 0];\n        // default backgroundColor is transparent black\n        this.backgroundColor = options.backgroundColor || [0, 0, 0, 0];\n        this.textureName = options.textureName || null;\n    }\n}\n","import twgl from '../twgl';\n\nimport vs from '../../shaders/sprite.vert';\nimport fs from '../../shaders/sprite.frag';\n\nconst SPRITE_RECT_VERTICES = new Float32Array([\n    0, 0, // bottom left\n    1, 0, // bottom right\n    0, 1, // top left\n    1, 1  // top right\n]);\n\nclass SpriteRenderer {\n    constructor({game, textureInfo}) {\n        this.gl = game.gl;\n        this.loader = game.loader;\n        this.game = game;\n\n        this.textureInfo = textureInfo;\n\n        this.setup();\n    }\n\n    setup() {\n        this.programInfo = twgl.createProgramInfo(this.gl, [vs, fs]);\n\n        this._arrays = {\n            vertex: {\n                data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 0,\n                drawType: this.gl.STATIC_DRAW\n            },\n            position: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            offset: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            size: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            texcoord: {\n                data: [\n                    // 0, 0,\n                    // this.textureInfo.width, 0,\n                    // 0, this.textureInfo.height,\n                    // this.textureInfo.width, this.textureInfo.height\n                    0, 0,\n                    1, 0,\n                    0, 1,\n                    1, 1\n                ],\n                numComponents: 2,\n                divisor: 0,\n                type: Int16Array\n            },\n            indices: {\n                data: [\n                    0,\n                    1,\n                    2,\n                    3\n                ]\n            }\n        };\n\n        this.bufferInfo = twgl.createBufferInfoFromArrays(this.gl, this._arrays);\n        this.vao = twgl.createVertexArrayInfo(this.gl, this.programInfo, this.bufferInfo);\n    }\n\n    render(sprites, projection) {\n        const positions = new Float32Array(2 * sprites.length);\n        const sizes = new Float32Array(2 * sprites.length);\n        const offsets = new Float32Array(2 * sprites.length);\n\n        sprites.forEach((sprite, spriteIndex) => {\n            sprite.position.forEach((v, compIndex) => {\n                positions[spriteIndex * 2 + compIndex] = v;\n            });\n\n            sprite.size.forEach((v, compIndex) => {\n                sizes[spriteIndex * 2 + compIndex] = v;\n            });\n\n            sprite.offset.forEach((v, compIndex) => {\n                offsets[spriteIndex * 2 + compIndex] = v;\n            });\n        });\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.position,\n            positions\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.size,\n            sizes\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.offset,\n            offsets\n        );\n\n        this.gl.useProgram(this.programInfo.program);\n\n        twgl.setUniforms(this.programInfo, {\n            projection: projection,\n            texture: this.textureInfo.texture\n        });\n\n        twgl.setBuffersAndAttributes(this.gl, this.programInfo, this.vao);\n        twgl.drawBufferInfo(this.gl, this.vao, this.gl.TRIANGLE_STRIP, undefined, undefined, sprites.length);\n    }\n}\n\nexport {SpriteRenderer};\n","/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nexport const RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\n\nconst degree = Math.PI / 180;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n","import * as glMatrix from \"./common.js\"\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nexport function fromValues(m00, m01, m10, m11) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    let a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\n  // Calculate the determinant\n  let det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] =  a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] =  a0 * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  let a0 = a[0];\n  out[0] =  a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] =  a0;\n\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n}\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix\n * @param {mat2} D the diagonal matrix\n * @param {mat2} U the upper triangular matrix\n * @param {mat2} a the input matrix to factorize\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2]/a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 2x3 Matrix\n * @module mat2d\n *\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nexport function fromValues(a, b, c, d, tx, ty) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function invert(out, a) {\n  let aa = a[0], ab = a[1], ac = a[2], ad = a[3];\n  let atx = a[4], aty = a[5];\n\n  let det = aa * ad - ab * ac;\n  if(!det){\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nexport function translate(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}\n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));\n}\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b01 = a22 * a11 - a12 * a21;\n  let b11 = -a22 * a10 + a12 * a20;\n  let b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  out[0] = (a11 * a22 - a12 * a21);\n  out[1] = (a02 * a21 - a01 * a22);\n  out[2] = (a01 * a12 - a02 * a11);\n  out[3] = (a12 * a20 - a10 * a22);\n  out[4] = (a00 * a22 - a02 * a20);\n  out[5] = (a02 * a10 - a00 * a12);\n  out[6] = (a10 * a21 - a11 * a20);\n  out[7] = (a01 * a20 - a00 * a21);\n  out[8] = (a00 * a11 - a01 * a10);\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b00 = b[0], b01 = b[1], b02 = b[2];\n  let b10 = b[3], b11 = b[4], b12 = b[5];\n  let b20 = b[6], b21 = b[7], b22 = b[8];\n\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n    x = v[0], y = v[1];\n\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n\n    s = Math.sin(rad),\n    c = Math.cos(rad);\n\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1];\n\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n\n  return out;\n}\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nexport function normalFromMat4(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ', ' +\n          a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] &&\n         a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\n         a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a03 = a[3];\n    let a12 = a[6], a13 = a[7];\n    let a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n  out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n  out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n  out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n  out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n  out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  let b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n  out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n  out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n  out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n    out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n    out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n  let b00, b01, b02;\n  let b10, b11, b12;\n  let b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n  a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n  a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[0]  = a[0];\n    out[1]  = a[1];\n    out[2]  = a[2];\n    out[3]  = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[4]  = a[4];\n    out[5]  = a[5];\n    out[6]  = a[6];\n    out[7]  = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[8]  = a[8];\n    out[9]  = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function fromRotation(out, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n\n  if (len < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromXRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = 1;\n  out[1]  = 0;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromYRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = 0;\n  out[2]  = -s;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromZRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = s;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {quat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\nexport function fromQuat2(out, a) {\n  let translation = new glMatrix.ARRAY_TYPE(3);\n  let bx = -a[0], by = -a[1], bz = -a[2], bw = a[3],\n  ax = a[4], ay = a[5], az = a[6], aw = a[7];\n\n  let magnitude = bx * bx + by * by + bz * bz + bw * bw;\n  //Only scale if it makes sense\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n  let m11 = mat[0];\n  let m12 = mat[1];\n  let m13 = mat[2];\n  let m21 = mat[4];\n  let m22 = mat[5];\n  let m23 = mat[6];\n  let m31 = mat[8];\n  let m32 = mat[9];\n  let m33 = mat[10];\n\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport function getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  let trace = mat[0] + mat[5] + mat[10];\n  let S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if ((mat[0] > mat[5]) && (mat[0] > mat[10])) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  let ox = o[0];\n  let oy = o[1];\n  let oz = o[2];\n\n  let out0 = (1 - (yy + zz)) * sx;\n  let out1 = (xy + wz) * sx;\n  let out2 = (xz - wy) * sx;\n  let out4 = (xy - wz) * sy;\n  let out5 = (1 - (xx + zz)) * sy;\n  let out6 = (yz + wx) * sy;\n  let out8 = (xz + wy) * sz;\n  let out9 = (yz - wx) * sz;\n  let out10 = (1 - (xx + yy)) * sz;\n\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function frustum(out, left, right, bottom, top, near, far) {\n  let rl = 1 / (right - left);\n  let tb = 1 / (top - bottom);\n  let nf = 1 / (near - far);\n  out[0] = (near * 2) * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = (near * 2) * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (far * near * 2) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n  let f = 1.0 / Math.tan(fovy / 2);\n  let nf = 1 / (near - far);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (2 * far * near) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  let upTan = Math.tan(fov.upDegrees * Math.PI/180.0);\n  let downTan = Math.tan(fov.downDegrees * Math.PI/180.0);\n  let leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0);\n  let rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0);\n  let xScale = 2.0 / (leftTan + rightTan);\n  let yScale = 2.0 / (upTan + downTan);\n\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = ((upTan - downTan) * yScale * 0.5);\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = (far * near) / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n  let lr = 1 / (left - right);\n  let bt = 1 / (bottom - top);\n  let nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  let x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  let eyex = eye[0];\n  let eyey = eye[1];\n  let eyez = eye[2];\n  let upx = up[0];\n  let upy = up[1];\n  let upz = up[2];\n  let centerx = center[0];\n  let centery = center[1];\n  let centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n      Math.abs(eyey - centery) < glMatrix.EPSILON &&\n      Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n  let eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n\n  let z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n\n  let len = z0*z0 + z1*z1 + z2*z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  let x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n\n  len = x0*x0 + x1*x1 + x2*x2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n          a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n          a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\n          a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  out[9] = a[9] + (b[9] * scale);\n  out[10] = a[10] + (b[10] * scale);\n  out[11] = a[11] + (b[11] * scale);\n  out[12] = a[12] + (b[12] * scale);\n  out[13] = a[13] + (b[13] * scale);\n  out[14] = a[14] + (b[14] * scale);\n  out[15] = a[15] + (b[15] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n         a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] &&\n         a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n         a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3];\n  let a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7];\n  let a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11];\n  let a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\n\n  let b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3];\n  let b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7];\n  let b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11];\n  let b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n          Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n          Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n          Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n          Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n          Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n          Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n          Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let len = x*x + y*y + z*z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2];\n  let bx = b[0], by = b[1], bz = b[2];\n\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  let factorTimes2 = t * t;\n  let factor1 = factorTimes2 * (2 * t - 3) + 1;\n  let factor2 = factorTimes2 * (t - 2) + t;\n  let factor3 = factorTimes2 * (t - 1);\n  let factor4 = factorTimes2 * (3 - 2 * t);\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  let inverseFactor = 1 - t;\n  let inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  let factorTimes2 = t * t;\n  let factor1 = inverseFactorTimesTwo * inverseFactor;\n  let factor2 = 3 * t * inverseFactorTimesTwo;\n  let factor3 = 3 * factorTimes2 * inverseFactor;\n  let factor4 = factorTimes2 * t;\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n\n  let r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  let z = (glMatrix.RANDOM() * 2.0) - 1.0;\n  let zScale = Math.sqrt(1.0-z*z) * scale;\n\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n    let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n    let x = a[0], y = a[1], z = a[2];\n    // var qvec = [qx, qy, qz];\n    // var uv = vec3.cross([], qvec, a);\n    let uvx = qy * z - qz * y,\n        uvy = qz * x - qx * z,\n        uvz = qx * y - qy * x;\n    // var uuv = vec3.cross([], qvec, uv);\n    let uuvx = qy * uvz - qz * uvy,\n        uuvy = qz * uvx - qx * uvz,\n        uuvz = qx * uvy - qy * uvx;\n    // vec3.scale(uv, uv, 2 * w);\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n    // vec3.scale(uuv, uuv, 2);\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n    // return vec3.add(out, a, vec3.add(out, uv, uuv));\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let tempA = fromValues(a[0], a[1], a[2]);\n  let tempB = fromValues(b[0], b[1], b[2]);\n\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n\n  let cosine = dot(tempA, tempB);\n\n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2];\n  let b0 = b[0], b1 = b[1], b2 = b[2];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 3;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n    }\n\n    return a;\n  };\n})();\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  let len = x*x + y*y + z*z + w*w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  let aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, vectorScale) {\n  vectorScale = vectorScale || 1.0;\n\n  // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n  var v1, v2, v3, v4;\n  var s1, s2;\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2], w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  let x = a[0], y = a[1], z = a[2];\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n\n  // calculate quat * vec\n  let ix = qw * x + qy * z - qz * y;\n  let iy = qw * y + qz * x - qx * z;\n  let iz = qw * z + qx * y - qy * x;\n  let iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 4;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n    }\n\n    return a;\n  };\n})();\n","import * as glMatrix from \"./common.js\"\nimport * as mat3 from \"./mat3.js\"\nimport * as vec3 from \"./vec3.js\"\nimport * as vec4 from \"./vec4.js\"\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nexport function getAxisAngle(out_axis, q) {\n  let rad = Math.acos(q[3]) * 2.0;\n  let s = Math.sin(rad / 2.0);\n  if (s != 0.0) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let by = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bz = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nexport function calculateW(out, a) {\n  let x = a[0], y = a[1], z = a[2];\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  let omega, cosom, sinom, scale0, scale1;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if ( cosom < 0.0 ) {\n    cosom = -cosom;\n    bx = - bx;\n    by = - by;\n    bz = - bz;\n    bw = - bw;\n  }\n  // calculate coefficients\n  if ( (1.0 - cosom) > 0.000001 ) {\n    // standard case (slerp)\n    omega  = Math.acos(cosom);\n    sinom  = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let dot = a0*a0 + a1*a1 + a2*a2 + a3*a3;\n  let invDot = dot ? 1.0/dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0*invDot;\n  out[1] = -a1*invDot;\n  out[2] = -a2*invDot;\n  out[3] = a3*invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  let fTrace = m[0] + m[4] + m[8];\n  let fRoot;\n\n  if ( fTrace > 0.0 ) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5/fRoot;  // 1/(4w)\n    out[0] = (m[5]-m[7])*fRoot;\n    out[1] = (m[6]-m[2])*fRoot;\n    out[2] = (m[1]-m[3])*fRoot;\n  } else {\n    // |w| <= 1/2\n    let i = 0;\n    if ( m[4] > m[0] )\n      i = 1;\n    if ( m[8] > m[i*3+i] )\n      i = 2;\n    let j = (i+1)%3;\n    let k = (i+2)%3;\n\n    fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n    out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n    out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n  }\n\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, x, y, z) {\n    let halfToRad = 0.5 * Math.PI / 180.0;\n    x *= halfToRad;\n    y *= halfToRad;\n    z *= halfToRad;\n\n    let sx = Math.sin(x);\n    let cx = Math.cos(x);\n    let sy = Math.sin(y);\n    let cy = Math.cos(y);\n    let sz = Math.sin(z);\n    let cz = Math.cos(z);\n\n    out[0] = sx * cy * cz - cx * sy * sz;\n    out[1] = cx * sy * cz + sx * cy * sz;\n    out[2] = cx * cy * sz - sx * sy * cz;\n    out[3] = cx * cy * cz + sx * sy * sz;\n\n    return out;\n}\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nexport const clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nexport const fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const equals = vec4.equals;\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nexport const rotationTo = (function() {\n  let tmpvec3 = vec3.create();\n  let xUnitVec3 = vec3.fromValues(1,0,0);\n  let yUnitVec3 = vec3.fromValues(0,1,0);\n\n  return function(out, a, b) {\n    let dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001)\n        vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n})();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport const sqlerp = (function () {\n  let temp1 = create();\n  let temp2 = create();\n\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\n    return out;\n  };\n}());\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nexport const setAxes = (function() {\n  let matr = mat3.create();\n\n  return function(out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n\n    return normalize(out, fromMat3(out, matr));\n  };\n})();\n","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\nexport function create() {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = 0;\n  dq[1] = 0;\n  dq[2] = 0;\n  dq[3] = 1;\n  dq[4] = 0;\n  dq[5] = 0;\n  dq[6] = 0;\n  dq[7] = 0;\n  return dq;\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function clone(a) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  let ax = x2 * 0.5,\n    ay = y2 * 0.5,\n    az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {quat} q quaternion\n * @param {vec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromRotationTranslation(out, q, t) {\n  let ax = t[0] * 0.5,\n    ay = t[1] * 0.5,\n    az = t[2] * 0.5,\n    bx = q[0],\n    by = q[1],\n    bz = q[2],\n    bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Creates a dual quat from a translation\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {vec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {quat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {mat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  let outer = quat.create();\n  mat4.getRotation(outer, a);\n  let t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {quat2} a Dual Quaternion\n * @return {quat} real part\n */\nexport const getReal = quat.copy;\n\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {quat2} a Dual Quaternion\n * @return {quat} dual part\n */\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\nexport const setReal = quat.copy;\n\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {quat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\nexport function getTranslation(out, a) {\n  let ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to translate\n * @param {vec3} v vector to translate by\n * @returns {quat2} out\n */\nexport function translate(out, a, v) {\n  let ax1 = a[0],\n    ay1 = a[1],\n    az1 = a[2],\n    aw1 = a[3],\n    bx1 = v[0] * 0.5,\n    by1 = v[1] * 0.5,\n    bz1 = v[2] * 0.5,\n    ax2 = a[4],\n    ay2 = a[5],\n    az2 = a[6],\n    aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateX(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateY(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateZ(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {quat} q quaternion to rotate by\n * @returns {quat2} out\n */\nexport function rotateByQuatAppend(out, a, q) {\n  let qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3],\n    ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat} q quaternion to rotate by\n * @param {quat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\nexport function rotateByQuatPrepend(out, q, a) {\n  let qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3],\n    bx = a[0],\n    by = a[1],\n    bz = a[2],\n    bw = a[3];\n\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {vec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n  let axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  let bx = s * axis[0] / axisLength;\n  let by = s * axis[1] / axisLength;\n  let bz = s * axis[2] / axisLength;\n  let bw = Math.cos(rad);\n\n  let ax1 = a[0],\n    ay1 = a[1],\n    az1 = a[2],\n    aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n\n  let ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n\n  return out;\n}\n\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {quat2} out\n * @function\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {quat2} out\n */\nexport function multiply(out, a, b) {\n  let ax0 = a[0],\n    ay0 = a[1],\n    az0 = a[2],\n    aw0 = a[3],\n    bx1 = b[4],\n    by1 = b[5],\n    bz1 = b[6],\n    bw1 = b[7],\n    ax1 = a[4],\n    ay1 = a[5],\n    az1 = a[6],\n    aw1 = a[7],\n    bx0 = b[0],\n    by0 = b[1],\n    bz0 = b[2],\n    bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {quat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = quat.dot;\n\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\nexport function lerp(out, a, b, t) {\n  let mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\nexport function invert(out, a) {\n  let sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n\n/**\n * Calculates the length of a dual quat\n *\n * @param {quat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\nexport const length = quat.length;\n\n/**\n * Alias for {@link quat2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {quat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = quat.squaredLength;\n\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\nexport function normalize(out, a) {\n  let magnitude = squaredLength(a);\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    out[0] = a[0] / magnitude;\n    out[1] = a[1] / magnitude;\n    out[2] = a[2] / magnitude;\n    out[3] = a[3] / magnitude;\n    out[4] = a[4] / magnitude;\n    out[5] = a[5] / magnitude;\n    out[6] = a[6] / magnitude;\n    out[7] = a[7] / magnitude;\n  }\n  return out;\n}\n\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {quat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\nexport function str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat2} a the first dual quaternion.\n * @param {quat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n    a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {quat2} a the first dual quat.\n * @param {quat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5],\n    a6 = a[6],\n    a7 = a[7];\n  let b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n    Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n    Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n    Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n    Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n    Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n    Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n    Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)));\n}\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = 0;\n  out[1] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nexport function fromValues(x, y) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nexport function round (out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return Math.sqrt(x*x + y*y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return x*x + y*y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0],\n    y = a[1];\n  return Math.sqrt(x*x + y*y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength (a) {\n  var x = a[0],\n    y = a[1];\n  return x*x + y*y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n  var x = a[0],\n    y = a[1];\n  var len = x*x + y*y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n    ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0];\n  let y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {vec2} a The vec2 point to rotate\n * @param {vec2} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec2} out\n */\nexport function rotate(out, a, b, c) {\n  //Translate point to the origin\n  let p0 = a[0] - b[0],\n  p1 = a[1] - b[1],\n  sinC = Math.sin(c),\n  cosC = Math.cos(c);\n  \n  //perform rotation and translate to correct position\n  out[0] = p0*cosC - p1*sinC + b[0];\n  out[1] = p0*sinC + p1*cosC + b[1];\n\n  return out;\n}\n\n/**\n * Get the angle between two 2D vectors\n * @param {vec2} a The first operand\n * @param {vec2} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let x1 = a[0],\n    y1 = a[1],\n    x2 = b[0],\n    y2 = b[1];\n  \n  let len1 = x1*x1 + y1*y1;\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n  \n  let len2 = x2*x2 + y2*y2;\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n  \n  let cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n  \n  \n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1];\n  let b0 = b[0], b1 = b[1];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 2;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1];\n    }\n\n    return a;\n  };\n})();\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tvar styleTarget = fn.call(this, selector);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[selector] = styleTarget;\n\t\t}\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","import {mat3, mat4, vec2, vec3, vec4} from 'gl-matrix';\n\nimport {gl} from 'gl.js';\n\nconst POSITION_COMPONENTS = 2;\nconst SIZE_COMPONENTS = 2;\n\nclass TilemapTextureBuilder {\n    constructor(opts) {\n        Object.assign(this, {\n            tileWidth: 8,\n            tileHeight: 8,\n            width: 256,\n            height: 1,\n            layers: 2,\n            ...opts\n        });\n\n        this.copyIndex = 0;\n\n        this.texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n        gl.texStorage3D(gl.TEXTURE_2D_ARRAY, 1, gl.RGBA8, this.width * this.tileWidth, this.height * this.tileHeight, this.layers);\n        gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, null);\n\n    }\n\n    tileCoordinates() {\n        return {\n            x: this.copyIndex % this.width,\n            y: Math.floor(this.copyIndex / (this.width)) % this.height,\n            z: Math.floor(this.copyIndex / (this.width * this.height)) % this.layers\n        }\n    }\n\n    addTiles(src) {\n        const tileWide = this.detectWidthInTiles(src);\n        const tileHigh = this.detectHeightInTiles(src);\n\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        canvas.width = src.width;\n        canvas.height = src.height;\n\n        ctx.drawImage(src, 0, 0);\n\n        /**\n         *  Copies pixels in src from the tile starting at (tileX, tileY) to the current\n         * tile and advances the copy index\n         */\n        const copyTile = (tileX, tileY) => {\n            const imageData = ctx.getImageData(\n                tileX * this.tileWidth,\n                tileY * this.tileHeight,\n                this.tileWidth,\n                this.tileHeight\n            );\n\n            const {x, y, z} = this.tileCoordinates();\n\n            gl.texSubImage3D(\n                gl.TEXTURE_2D_ARRAY, // target\n                0,                   // mipmap level, always zero\n                x * this.tileWidth,  // xoffset\n                y * this.tileHeight, // yoffset\n                z,                   // zoffset\n                this.tileWidth,      // width\n                this.tileHeight,     // height\n                1,                   // depth\n                gl.RGBA,             // format, guaranteed by ImageData to be RGBA\n                gl.UNSIGNED_BYTE,    // type, guaranteed by ImageData to be Uint8ClampedArray, i.e. UNSIGNED_BYTE\n                imageData            // pixel data\n            );\n\n            this.copyIndex++;\n        };\n\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n\n        for (let y = 0; y < tileHigh; y++) {\n            for (let x = 0; x < tileWide; x++) {\n                if (this.isFull()) {\n                    break;\n                }\n                copyTile(x, y);\n            }\n        }\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, null);\n    }\n\n    detectWidthInTiles(src) {\n        return Math.floor(src.width / this.tileWidth);\n    }\n\n    detectHeightInTiles(src) {\n        return Math.floor(src.height / this.tileHeight);\n    }\n\n    get layerWidth() {\n        return this.tileWidth * this.width;\n    }\n\n    get layerHeight() {\n        return this.tileHeight * this.height;\n    }\n\n    get maxIndex() {\n        return this.width * this.height * this.layers;\n    }\n\n    isFull() {\n        return this.copyIndex >= this.maxIndex;\n    }\n\n    /**\n     * Reads texture from GL memory returns it as Array of ImageData\n     */\n    readback() {\n        // Uint8Array long enough to hold pixel data for one layer\n        const buffer = new Uint8Array(this.layerWidth * this.layerHeight * 4);\n        const fb = gl.createFramebuffer();\n        const layers = [];\n\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, fb);\n\n        for (let layer = 0; layer < this.layers; layer++) {\n            gl.framebufferTextureLayer(gl.READ_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, this.texture, 0, layer);\n            gl.readPixels(0, 0, this.layerWidth, this.layerHeight, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n            layers.push(new ImageData(new Uint8ClampedArray(buffer), this.layerWidth, this.layerHeight));\n        }\n\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n\n        return layers;\n    }\n}\n\n\nconst CoordinateConversions = {\n    canvasToWorldMatrix(viewMatrix, displaySize, virtualSize) {\n        const acc = mat4.create();\n        const temp = mat4.create();\n\n        // (scale to virtualSize) * (project viewport) * (subtract offset) * point\n\n        // (inverse viewMatrix) * (scale virtualSize / displaySize) * (flip y) * point\n\n        // flip y\n        mat4.multiply(\n            acc,\n            mat4.fromValues(\n                1,  0, 0, 0,\n                0, -1, 0, 0,\n                0,  0, 1, 0,\n                0, displaySize.height, 1, 1\n            ),\n            acc\n        );\n\n        // scale\n        mat4.fromScaling(\n            temp,\n            [virtualSize.width / displaySize.width, virtualSize.height / displaySize.height, 1]\n        );\n        mat4.multiply(acc, temp, acc);\n\n        // invert view\n        mat4.invert(temp, viewMatrix);\n        mat4.multiply(acc, temp, acc);\n\n        return acc;\n    }\n};\n\n\nexport {\n    TilemapTextureBuilder,\n    CoordinateConversions};\n","class MouseListener {\n    constructor(canvas, updateCallback) {\n        this.canvas = canvas;\n        this.updateCallback = updateCallback;\n        this.mousePosition = {\n            x: 0,\n            y: 0\n        };\n        this.canvas.addEventListener('mousemove', evt => this.onMouseMove(evt));\n    }\n\n    onMouseMove(evt) {\n        const {offsetX: x, offsetY: y} = evt;\n\n        this.mousePosition.x = x;\n        this.mousePosition.y = y;\n\n        if (this.updateCallback) {\n            this.updateCallback({mousePosition: {x, y}});\n        }\n    }\n}\n\nexport {\n    MouseListener\n};\n","import {Grid} from '../js/graphics/Grid.js';\nimport {MouseListener} from '../js/input.js';\nimport {Sprite} from '../js/graphics/Sprite.js';\nimport {mat3, vec3} from 'gl-matrix';\nimport '../css/app.css'\n\nimport {App, initCanvas} from '../js/app.js';\nimport {SpriteRenderer} from \"../js/graphics/SpriteRenderer\";\nimport {LineRenderer} from \"../js/graphics/LineRenderer\";\n\n\n\n\nconst app = new App({\n    el: initCanvas('content', 'game'),\n    debug: false,\n    clearColor: [0.1, 0.1, 0.1, 1],\n    resolution: {\n        width: 320,\n        height: 240\n    }\n});\n\n\napp.load({\n    basePath: 'shaders/',\n    programs: ['grid', 'sprite', 'lines']\n});\n\n\nconst parsePathString = (s) => {\n    const parseCoord = (p) => {\n        return p.split(',').map(parseFloat);\n    };\n\n    return s.split(\" \").map(parseCoord);\n};\n\nconst pathToPositions = (path, offset) => {\n    const out = [];\n\n    for (let i = 0; i < path.length; i++) {\n        out.push(...path[i]);\n        if (!(i === 0 || i === path.length - 1)) {\n            out.push(...path[i]);\n        }\n    }\n\n    return out.map((position, index) => {\n        if (index % 2 === 0) {\n            return position + offset.x;\n        } else {\n            return position + offset.y;\n        }\n    });\n};\n\nclass MouseDrawing {\n    constructor(game) {\n        this.game = game;\n\n        // this.callbacks = {\n        //     lineAddedCallback\n        // };\n\n        this._lineData = new Float32Array(2 * 2 * 1024);\n        this.currentLineIdx = 0;\n        this.available = 0;\n        this.isDrawing = false;\n\n        this.game.canvas.addEventListener('mousemove', (evt) => {\n            this.update(this.convertMouseCoordinates({ x: evt.offsetX, y: evt.offsetY }));\n        });\n\n        this.game.canvas.addEventListener('mousedown', (evt) => {\n            if (!this.isDrawing) {\n                this.startLine(this.convertMouseCoordinates({ x: evt.offsetX, y: evt.offsetY }));\n            } else {\n                this.endLine(this.convertMouseCoordinates({ x: evt.offsetX, y: evt.offsetY }));\n            }\n        });\n    }\n\n    convertMouseCoordinates(coord) {\n        const mvec = vec3.fromValues(coord.x, coord.y, 1);\n\n        vec3.transformMat3(mvec, mvec, this.game.canvasToWorld);\n\n        return { x: mvec[0], y: mvec[1] };\n    }\n\n    inBounds(coord) {\n        return true;\n    }\n\n    startLine(coord) {\n        if (this.inBounds(coord) && !this.isDrawing) {\n            this.isDrawing = true;\n            this.available++;\n\n            this._lineData[this.lineIndex + 0] = coord.x;\n            this._lineData[this.lineIndex + 1] = coord.y;\n\n            this.update(coord);\n        }\n    }\n\n    get lineIndex() {\n        return this.currentLineIdx * 4;\n    }\n\n    get lineData() {\n        return this._lineData.slice(0, this.available * 4);\n    }\n\n    endLine(coord) {\n        if (this.isDrawing) {\n            this.isDrawing = false;\n\n            this._lineData[this.lineIndex + 2] = coord.x;\n            this._lineData[this.lineIndex + 3] = coord.y;\n\n            this.currentLineIdx++;\n        }\n    }\n\n    update(coord) {\n        if (this.isDrawing) {\n            this._lineData[this.lineIndex + 2] = coord.x;\n            this._lineData[this.lineIndex + 3] = coord.y;\n        }\n    }\n}\n\n\nconst startDrawing = (lineData) => {\n    new MouseListener(app.canvas, (({mousePosition}) => {\n\n    }));\n};\n\n\nasync function run() {\n    await app.loader.loading;\n\n    const framebufferRenderer = new SpriteRenderer({\n        game: app,\n        textureInfo: {\n            texture: app.framebuffer.texture,\n            ...app.resolution\n        }\n    });\n\n    const svgData = \"4.8568191,153.96584 97.697976,10.708555 198.82851,9.0231583 314.87993,96.662894 296.64327,192.72952 137.48702,236.54939 4.8568191,153.96584\";\n    //const svgData = \"0,0 160,10 200,100 160,224\";\n    const lineData = pathToPositions(parsePathString(svgData), {x:0, y:0}); //{ x: 320/2, y: 240/2 });\n\n    const lineDrawer = new MouseDrawing(app);\n\n    //startDrawing(lineData);\n\n    const grid = new Grid(app);\n    grid.addGrid( 8,  8, [0.4, 0.1, 0.9, 0.4], 1);\n    //grid.addGrid(16, 16, [0.1, 0.3, 0.9, 0.4], 1);\n    //grid.addGrid(32, 32, [0,   0.5, 0.9, 0.3], 1);\n\n    const lineRenderer = new LineRenderer({\n        game: app\n    });\n\n\n    requestAnimationFrame(function render() {\n        app.adjustViewport();\n        app.clear();\n\n        app.framebuffer.attach();\n        app.clear();\n\n        if (lineDrawer.available > 0) {\n            lineRenderer.render(lineDrawer.lineData, [1, 1, 1, 1]);\n        }\n\n        //grid.render();\n\n        app.framebuffer.detach();\n        app.adjustViewport();\n\n        framebufferRenderer.render([\n            new Sprite({\n                position: [0, 0],\n                size: [app.resolution.width, app.resolution.height]\n            })\n        ]);\n\n        requestAnimationFrame(render);\n    });\n}\n\nrun();\n","//     Underscore.js 1.9.1\n//     http://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global ||\n            this ||\n            {};\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n  if (typeof exports != 'undefined' && !exports.nodeType) {\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.9.1';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      // The 2-argument case is omitted because we’re not using it.\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee;\n\n  // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  };\n\n  // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n  _.iteratee = builtinIteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n  var restArguments = function(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n      switch (startIndex) {\n        case 0: return func.call(this, rest);\n        case 1: return func.call(this, arguments[0], rest);\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\n      }\n      var args = Array(startIndex + 1);\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function(obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  }\n\n  var deepGet = function(obj, path) {\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n    return length ? obj : void 0;\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  var createReduce = function(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    };\n\n    return function(obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  };\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = restArguments(function(obj, path, args) {\n    var contextPath, func;\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n    return _.map(obj, function(context) {\n      var method = func;\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n        if (context == null) return void 0;\n        method = context[path];\n      }\n      return method == null ? method : method.apply(context, args);\n    });\n  });\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection.\n  _.shuffle = function(obj) {\n    return _.sample(obj, Infinity);\n  };\n\n  // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n    return sample.slice(0, n);\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior, partition) {\n    return function(obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = group(function(result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true);\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, Boolean);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0, len = value.length;\n          while (j < len) output[idx++] = value[j++];\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = restArguments(function(array, otherArrays) {\n    return _.difference(array, otherArrays);\n  });\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = restArguments(function(arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  });\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = restArguments(function(array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  });\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = restArguments(_.unzip);\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions.\n  var createPredicateIndexFinder = function(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  };\n\n  // Returns the first index on an array-like that passes a predicate test.\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions.\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n  _.chunk = function(array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0, length = array.length;\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n    return result;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = restArguments(function(func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function(callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  });\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n  _.partial = restArguments(function(func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  });\n\n  _.partial.placeholder = _;\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = restArguments(function(obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  });\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = restArguments(function(func, wait, args) {\n    return setTimeout(function() {\n      return func.apply(null, args);\n    }, wait);\n  });\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function() {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n\n    var later = function(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function(args) {\n      if (timeout) clearTimeout(timeout);\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function() {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  _.restArguments = restArguments;\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  };\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, defaults) {\n    return function(obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test.\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Internal pick helper function to determine if `obj` has key `key`.\n  var keyInObj = function(value, key, obj) {\n    return key in obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = restArguments(function(obj, keys) {\n    var result = {}, iteratee = keys[0];\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  });\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = restArguments(function(obj, keys) {\n    var iteratee = keys[0], context;\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  });\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq, deepEq;\n  eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  deepEq = function(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n  var nodelist = root.document && root.document.childNodes;\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`?\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n      obj = obj[key];\n    }\n    return !!length;\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n  _.property = function(path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n    return function(obj) {\n      return deepGet(obj, path);\n    };\n  };\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    if (obj == null) {\n      return function(){};\n    }\n    return function(path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n  // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped.\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n  _.result = function(obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n    return obj;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offset.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    var render;\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var chainResult = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n    return _;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return String(this._wrapped);\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define == 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}());\n","import {mat3, mat4, vec2, vec3, vec4} from 'gl-matrix';\n\nexport {Camera};\n\nclass Camera {\n    constructor(bounds) {\n        this._translation = vec2.create();\n        this._bounds = bounds;\n    }\n\n    centerAt(x, y) {\n        this._translation.set([\n            -(x - this._bounds.width / 2),\n            -(y - this._bounds.height / 2)\n        ]);\n\n        return this;\n    }\n\n    translate(x, y) {\n        vec2.sub(this._translation, this._translation, [x, y]);\n\n        return this;\n    }\n\n    get position() {\n        return vec2.clone(this._translation);\n    }\n\n    get translation() {\n        return this.position;\n    }\n\n    get matrix() {\n        return mat4.fromTranslation(mat4.create(), vec4.fromValues(...this._translation, 0, 1));\n    }\n}\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html {\\n    height: 100%;\\n    background-color: #555;\\n    color: #eee;\\n    font-family: monospace;\\n}\\n\\nbody {\\n    padding: 0;\\n    margin: 0;\\n    height: 100%;\\n}\\n\\n#content {\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    flex-direction: column;\\n}\\n\\ncanvas.game {\\n    width: 100vw;\\n    height: 100vh;\\n}\\n\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!./app.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./app.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./app.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \"#version 300 es\\n\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nin vec2 v_tex_coord;\\n\\nuniform sampler2D texture;\\n\\nvoid main() {\\n    float line = v_tex_coord.y - floor(v_tex_coord.y);\\n\\n    vec4 texel = texelFetch(texture, ivec2(v_tex_coord), 0).xyzw;\\n    out_color = texel; //vec4(texel.xyz * (line >= 0.5 ? 1. : .25), texel.w);\\n}\\n\"","module.exports = \"#version 300 es\\n\\nlayout(location = 0) in vec2 vertex;\\nlayout(location = 1) in vec2 position;\\nlayout(location = 2) in vec2 size;\\nlayout(location = 3) in ivec2 texcoord;\\nlayout(location = 4) in vec2 offset;\\n\\nout vec2 v_tex_coord;\\n\\nuniform mat4 projection;\\n\\n/*\\n\\nConvert coordinates from world space to clip space\\n\\n 1. Scale [0, dim] -> [-1, 1] where dim is screen width or height\\n    dim pixels = 2 clip\\n    clip / pixels = 2 / dim\\n    x' = 2 * x / width - 1\\n    y' = 2 * y / height - 1\\n\\n    2/w  0   0   -1\\n     0  2/h  0   -1\\n     0   0   1    0\\n     0   0   0    1\\n*/\\n\\nvoid main() {\\n    vec4 transformed_position = projection * vec4(position + size * (vertex - offset), 0, 1);\\n    gl_Position = transformed_position;\\n    v_tex_coord = vec2(texcoord * ivec2(size));\\n}\\n\"","/*\n** Copyright (c) 2012 The Khronos Group Inc.\n**\n** Permission is hereby granted, free of charge, to any person obtaining a\n** copy of this software and/or associated documentation files (the\n** \"Materials\"), to deal in the Materials without restriction, including\n** without limitation the rights to use, copy, modify, merge, publish,\n** distribute, sublicense, and/or sell copies of the Materials, and to\n** permit persons to whom the Materials are furnished to do so, subject to\n** the following conditions:\n**\n** The above copyright notice and this permission notice shall be included\n** in all copies or substantial portions of the Materials.\n**\n** THE MATERIALS ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\n*/\n\n// Various functions for helping debug WebGL apps.\n\nWebGLDebugUtils = function() {\n\n/**\n * Wrapped logging function.\n * @param {string} msg Message to log.\n */\nvar log = function(msg) {\n  if (window.console && window.console.log) {\n    window.console.log(msg);\n  }\n};\n\n/**\n * Wrapped error logging function.\n * @param {string} msg Message to log.\n */\nvar error = function(msg) {\n  if (window.console && window.console.error) {\n    window.console.error(msg);\n  } else {\n    log(msg);\n  }\n};\n\n\n/**\n * Which arguments are enums based on the number of arguments to the function.\n * So\n *    'texImage2D': {\n *       9: { 0:true, 2:true, 6:true, 7:true },\n *       6: { 0:true, 2:true, 3:true, 4:true },\n *    },\n *\n * means if there are 9 arguments then 6 and 7 are enums, if there are 6\n * arguments 3 and 4 are enums\n *\n * @type {!Object.<number, !Object.<number, string>}\n */\nvar glValidEnumContexts = {\n  // Generic setters and getters\n\n  'enable': {1: { 0:true }},\n  'disable': {1: { 0:true }},\n  'getParameter': {1: { 0:true }},\n\n  // Rendering\n\n  'drawArrays': {3:{ 0:true }},\n  'drawElements': {4:{ 0:true, 2:true }},\n\n  // Shaders\n\n  'createShader': {1: { 0:true }},\n  'getShaderParameter': {2: { 1:true }},\n  'getProgramParameter': {2: { 1:true }},\n  'getShaderPrecisionFormat': {2: { 0: true, 1:true }},\n\n  // Vertex attributes\n\n  'getVertexAttrib': {2: { 1:true }},\n  'vertexAttribPointer': {6: { 2:true }},\n\n  // Textures\n\n  'bindTexture': {2: { 0:true }},\n  'activeTexture': {1: { 0:true }},\n  'getTexParameter': {2: { 0:true, 1:true }},\n  'texParameterf': {3: { 0:true, 1:true }},\n  'texParameteri': {3: { 0:true, 1:true, 2:true }},\n  // texImage2D and texSubImage2D are defined below with WebGL 2 entrypoints\n  'copyTexImage2D': {8: { 0:true, 2:true }},\n  'copyTexSubImage2D': {8: { 0:true }},\n  'generateMipmap': {1: { 0:true }},\n  // compressedTexImage2D and compressedTexSubImage2D are defined below with WebGL 2 entrypoints\n\n  // Buffer objects\n\n  'bindBuffer': {2: { 0:true }},\n  // bufferData and bufferSubData are defined below with WebGL 2 entrypoints\n  'getBufferParameter': {2: { 0:true, 1:true }},\n\n  // Renderbuffers and framebuffers\n\n  'pixelStorei': {2: { 0:true, 1:true }},\n  // readPixels is defined below with WebGL 2 entrypoints\n  'bindRenderbuffer': {2: { 0:true }},\n  'bindFramebuffer': {2: { 0:true }},\n  'checkFramebufferStatus': {1: { 0:true }},\n  'framebufferRenderbuffer': {4: { 0:true, 1:true, 2:true }},\n  'framebufferTexture2D': {5: { 0:true, 1:true, 2:true }},\n  'getFramebufferAttachmentParameter': {3: { 0:true, 1:true, 2:true }},\n  'getRenderbufferParameter': {2: { 0:true, 1:true }},\n  'renderbufferStorage': {4: { 0:true, 1:true }},\n\n  // Frame buffer operations (clear, blend, depth test, stencil)\n\n  'clear': {1: { 0: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }}},\n  'depthFunc': {1: { 0:true }},\n  'blendFunc': {2: { 0:true, 1:true }},\n  'blendFuncSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},\n  'blendEquation': {1: { 0:true }},\n  'blendEquationSeparate': {2: { 0:true, 1:true }},\n  'stencilFunc': {3: { 0:true }},\n  'stencilFuncSeparate': {4: { 0:true, 1:true }},\n  'stencilMaskSeparate': {2: { 0:true }},\n  'stencilOp': {3: { 0:true, 1:true, 2:true }},\n  'stencilOpSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},\n\n  // Culling\n\n  'cullFace': {1: { 0:true }},\n  'frontFace': {1: { 0:true }},\n\n  // ANGLE_instanced_arrays extension\n\n  'drawArraysInstancedANGLE': {4: { 0:true }},\n  'drawElementsInstancedANGLE': {5: { 0:true, 2:true }},\n\n  // EXT_blend_minmax extension\n\n  'blendEquationEXT': {1: { 0:true }},\n\n  // WebGL 2 Buffer objects\n\n  'bufferData': {\n    3: { 0:true, 2:true }, // WebGL 1\n    4: { 0:true, 2:true }, // WebGL 2\n    5: { 0:true, 2:true }  // WebGL 2\n  },\n  'bufferSubData': {\n    3: { 0:true }, // WebGL 1\n    4: { 0:true }, // WebGL 2\n    5: { 0:true }  // WebGL 2\n  },\n  'copyBufferSubData': {5: { 0:true, 1:true }},\n  'getBufferSubData': {3: { 0:true }, 4: { 0:true }, 5: { 0:true }},\n\n  // WebGL 2 Framebuffer objects\n\n  'blitFramebuffer': {10: { 8: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }, 9:true }},\n  'framebufferTextureLayer': {5: { 0:true, 1:true }},\n  'invalidateFramebuffer': {2: { 0:true }},\n  'invalidateSubFramebuffer': {6: { 0:true }},\n  'readBuffer': {1: { 0:true }},\n\n  // WebGL 2 Renderbuffer objects\n\n  'getInternalformatParameter': {3: { 0:true, 1:true, 2:true }},\n  'renderbufferStorageMultisample': {5: { 0:true, 2:true }},\n\n  // WebGL 2 Texture objects\n\n  'texStorage2D': {5: { 0:true, 2:true }},\n  'texStorage3D': {6: { 0:true, 2:true }},\n  'texImage2D': {\n    9: { 0:true, 2:true, 6:true, 7:true }, // WebGL 1 & 2\n    6: { 0:true, 2:true, 3:true, 4:true }, // WebGL 1\n    10: { 0:true, 2:true, 6:true, 7:true } // WebGL 2\n  },\n  'texImage3D': {\n    10: { 0:true, 2:true, 7:true, 8:true },\n    11: { 0:true, 2:true, 7:true, 8:true }\n  },\n  'texSubImage2D': {\n    9: { 0:true, 6:true, 7:true }, // WebGL 1 & 2\n    7: { 0:true, 4:true, 5:true }, // WebGL 1\n    10: { 0:true, 6:true, 7:true } // WebGL 2\n  },\n  'texSubImage3D': {\n    11: { 0:true, 8:true, 9:true },\n    12: { 0:true, 8:true, 9:true }\n  },\n  'copyTexSubImage3D': {9: { 0:true }},\n  'compressedTexImage2D': {\n    7: { 0: true, 2:true }, // WebGL 1 & 2\n    8: { 0: true, 2:true }, // WebGL 2\n    9: { 0: true, 2:true }  // WebGL 2\n  },\n  'compressedTexImage3D': {\n    8: { 0: true, 2:true },\n    9: { 0: true, 2:true },\n    10: { 0: true, 2:true }\n  },\n  'compressedTexSubImage2D': {\n    8: { 0: true, 6:true }, // WebGL 1 & 2\n    9: { 0: true, 6:true }, // WebGL 2\n    10: { 0: true, 6:true } // WebGL 2\n  },\n  'compressedTexSubImage3D': {\n    10: { 0: true, 8:true },\n    11: { 0: true, 8:true },\n    12: { 0: true, 8:true }\n  },\n\n  // WebGL 2 Vertex attribs\n\n  'vertexAttribIPointer': {5: { 2:true }},\n\n  // WebGL 2 Writing to the isDrawing buffer\n\n  'drawArraysInstanced': {4: { 0:true }},\n  'drawElementsInstanced': {5: { 0:true, 2:true }},\n  'drawRangeElements': {6: { 0:true, 4:true }},\n\n  // WebGL 2 Reading back pixels\n\n  'readPixels': {\n    7: { 4:true, 5:true }, // WebGL 1 & 2\n    8: { 4:true, 5:true }  // WebGL 2\n  },\n\n  // WebGL 2 Multiple Render Targets\n\n  'clearBufferfv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferiv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferuiv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferfi': {4: { 0:true }},\n\n  // WebGL 2 Query objects\n\n  'beginQuery': {2: { 0:true }},\n  'endQuery': {1: { 0:true }},\n  'getQuery': {2: { 0:true, 1:true }},\n  'getQueryParameter': {2: { 1:true }},\n\n  // WebGL 2 Sampler objects\n\n  'samplerParameteri': {3: { 1:true, 2:true }},\n  'samplerParameterf': {3: { 1:true }},\n  'getSamplerParameter': {2: { 1:true }},\n\n  // WebGL 2 Sync objects\n\n  'fenceSync': {2: { 0:true, 1: { 'enumBitwiseOr': [] } }},\n  'clientWaitSync': {3: { 1: { 'enumBitwiseOr': ['SYNC_FLUSH_COMMANDS_BIT'] } }},\n  'waitSync': {3: { 1: { 'enumBitwiseOr': [] } }},\n  'getSyncParameter': {2: { 1:true }},\n\n  // WebGL 2 Transform Feedback\n\n  'bindTransformFeedback': {2: { 0:true }},\n  'beginTransformFeedback': {1: { 0:true }},\n  'transformFeedbackVaryings': {3: { 2:true }},\n\n  // WebGL2 Uniform Buffer Objects and Transform Feedback Buffers\n\n  'bindBufferBase': {3: { 0:true }},\n  'bindBufferRange': {5: { 0:true }},\n  'getIndexedParameter': {2: { 0:true }},\n  'getActiveUniforms': {3: { 2:true }},\n  'getActiveUniformBlockParameter': {3: { 2:true }}\n};\n\n/**\n * Map of numbers to names.\n * @type {Object}\n */\nvar glEnums = null;\n\n/**\n * Map of names to numbers.\n * @type {Object}\n */\nvar enumStringToValue = null;\n\n/**\n * Initializes this module. Safe to call more than once.\n * @param {!WebGLRenderingContext} ctx A WebGL context. If\n *    you have more than one context it doesn't matter which one\n *    you pass in, it is only used to pull out constants.\n */\nfunction init(ctx) {\n  if (glEnums == null) {\n    glEnums = { };\n    enumStringToValue = { };\n    for (var propertyName in ctx) {\n      if (typeof ctx[propertyName] == 'number') {\n        glEnums[ctx[propertyName]] = propertyName;\n        enumStringToValue[propertyName] = ctx[propertyName];\n      }\n    }\n  }\n}\n\n/**\n * Checks the utils have been initialized.\n */\nfunction checkInit() {\n  if (glEnums == null) {\n    throw 'WebGLDebugUtils.init(ctx) not called';\n  }\n}\n\n/**\n * Returns true or false if value matches any WebGL enum\n * @param {*} value Value to check if it might be an enum.\n * @return {boolean} True if value matches one of the WebGL defined enums\n */\nfunction mightBeEnum(value) {\n  checkInit();\n  return (glEnums[value] !== undefined);\n}\n\n/**\n * Gets an string version of an WebGL enum.\n *\n * Example:\n *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\n *\n * @param {number} value Value to return an enum for\n * @return {string} The string version of the enum.\n */\nfunction glEnumToString(value) {\n  checkInit();\n  var name = glEnums[value];\n  return (name !== undefined) ? (\"gl.\" + name) :\n      (\"/*UNKNOWN WebGL ENUM*/ 0x\" + value.toString(16) + \"\");\n}\n\n/**\n * Returns the string version of a WebGL argument.\n * Attempts to convert enum arguments to strings.\n * @param {string} functionName the name of the WebGL function.\n * @param {number} numArgs the number of arguments passed to the function.\n * @param {number} argumentIndx the index of the argument.\n * @param {*} value The value of the argument.\n * @return {string} The value as a string.\n */\nfunction glFunctionArgToString(functionName, numArgs, argumentIndex, value) {\n  var funcInfo = glValidEnumContexts[functionName];\n  if (funcInfo !== undefined) {\n    var funcInfo = funcInfo[numArgs];\n    if (funcInfo !== undefined) {\n      if (funcInfo[argumentIndex]) {\n        if (typeof funcInfo[argumentIndex] === 'object' &&\n            funcInfo[argumentIndex]['enumBitwiseOr'] !== undefined) {\n          var enums = funcInfo[argumentIndex]['enumBitwiseOr'];\n          var orResult = 0;\n          var orEnums = [];\n          for (var i = 0; i < enums.length; ++i) {\n            var enumValue = enumStringToValue[enums[i]];\n            if ((value & enumValue) !== 0) {\n              orResult |= enumValue;\n              orEnums.push(glEnumToString(enumValue));\n            }\n          }\n          if (orResult === value) {\n            return orEnums.join(' | ');\n          } else {\n            return glEnumToString(value);\n          }\n        } else {\n          return glEnumToString(value);\n        }\n      }\n    }\n  }\n  if (value === null) {\n    return \"null\";\n  } else if (value === undefined) {\n    return \"undefined\";\n  } else {\n    return value.toString();\n  }\n}\n\n/**\n * Converts the arguments of a WebGL function to a string.\n * Attempts to convert enum arguments to strings.\n *\n * @param {string} functionName the name of the WebGL function.\n * @param {number} args The arguments.\n * @return {string} The arguments as a string.\n */\nfunction glFunctionArgsToString(functionName, args) {\n  // apparently we can't do args.join(\",\");\n  var argStr = \"\";\n  var numArgs = args.length;\n  for (var ii = 0; ii < numArgs; ++ii) {\n    argStr += ((ii == 0) ? '' : ', ') +\n        glFunctionArgToString(functionName, numArgs, ii, args[ii]);\n  }\n  return argStr;\n};\n\n\nfunction makePropertyWrapper(wrapper, original, propertyName) {\n  //log(\"wrap prop: \" + propertyName);\n  wrapper.__defineGetter__(propertyName, function() {\n    return original[propertyName];\n  });\n  // TODO(gmane): this needs to handle properties that take more than\n  // one value?\n  wrapper.__defineSetter__(propertyName, function(value) {\n    //log(\"set: \" + propertyName);\n    original[propertyName] = value;\n  });\n}\n\n// Makes a function that calls a function on another object.\nfunction makeFunctionWrapper(original, functionName) {\n  //log(\"wrap fn: \" + functionName);\n  var f = original[functionName];\n  return function() {\n    //log(\"call: \" + functionName);\n    var result = f.apply(original, arguments);\n    return result;\n  };\n}\n\n/**\n * Given a WebGL context returns a wrapped context that calls\n * gl.getError after every command and calls a function if the\n * result is not gl.NO_ERROR.\n *\n * @param {!WebGLRenderingContext} ctx The webgl context to\n *        wrap.\n * @param {!function(err, funcName, args): void} opt_onErrorFunc\n *        The function to call when gl.getError returns an\n *        error. If not specified the default function calls\n *        console.log with a message.\n * @param {!function(funcName, args): void} opt_onFunc The\n *        function to call when each webgl function is called.\n *        You can use this to log all calls for example.\n * @param {!WebGLRenderingContext} opt_err_ctx The webgl context\n *        to call getError on if different than ctx.\n */\nfunction makeDebugContext(ctx, opt_onErrorFunc, opt_onFunc, opt_err_ctx) {\n  opt_err_ctx = opt_err_ctx || ctx;\n  init(ctx);\n  opt_onErrorFunc = opt_onErrorFunc || function(err, functionName, args) {\n        // apparently we can't do args.join(\",\");\n        var argStr = \"\";\n        var numArgs = args.length;\n        for (var ii = 0; ii < numArgs; ++ii) {\n          argStr += ((ii == 0) ? '' : ', ') +\n              glFunctionArgToString(functionName, numArgs, ii, args[ii]);\n        }\n        error(\"WebGL error \"+ glEnumToString(err) + \" in \"+ functionName +\n              \"(\" + argStr + \")\");\n      };\n\n  // Holds booleans for each GL error so after we get the error ourselves\n  // we can still return it to the client app.\n  var glErrorShadow = { };\n\n  // Makes a function that calls a WebGL function and then calls getError.\n  function makeErrorWrapper(ctx, functionName) {\n    return function() {\n      if (opt_onFunc) {\n        opt_onFunc(functionName, arguments);\n      }\n      var result = ctx[functionName].apply(ctx, arguments);\n      var err = opt_err_ctx.getError();\n      if (err != 0) {\n        glErrorShadow[err] = true;\n        opt_onErrorFunc(err, functionName, arguments);\n      }\n      return result;\n    };\n  }\n\n  // Make a an object that has a copy of every property of the WebGL context\n  // but wraps all functions.\n  var wrapper = {};\n  for (var propertyName in ctx) {\n    if (typeof ctx[propertyName] == 'function') {\n      if (propertyName != 'getExtension') {\n        wrapper[propertyName] = makeErrorWrapper(ctx, propertyName);\n      } else {\n        var wrapped = makeErrorWrapper(ctx, propertyName);\n        wrapper[propertyName] = function () {\n          var result = wrapped.apply(ctx, arguments);\n          if (!result) {\n            return null;\n          }\n          return makeDebugContext(result, opt_onErrorFunc, opt_onFunc, opt_err_ctx);\n        };\n      }\n    } else {\n      makePropertyWrapper(wrapper, ctx, propertyName);\n    }\n  }\n\n  // Override the getError function with one that returns our saved results.\n  wrapper.getError = function() {\n    for (var err in glErrorShadow) {\n      if (glErrorShadow.hasOwnProperty(err)) {\n        if (glErrorShadow[err]) {\n          glErrorShadow[err] = false;\n          return err;\n        }\n      }\n    }\n    return ctx.NO_ERROR;\n  };\n\n  return wrapper;\n}\n\nfunction resetToInitialState(ctx) {\n  var isWebGL2RenderingContext = !!ctx.createTransformFeedback;\n\n  if (isWebGL2RenderingContext) {\n    ctx.bindVertexArray(null);\n  }\n\n  var numAttribs = ctx.getParameter(ctx.MAX_VERTEX_ATTRIBS);\n  var tmp = ctx.createBuffer();\n  ctx.bindBuffer(ctx.ARRAY_BUFFER, tmp);\n  for (var ii = 0; ii < numAttribs; ++ii) {\n    ctx.disableVertexAttribArray(ii);\n    ctx.vertexAttribPointer(ii, 4, ctx.FLOAT, false, 0, 0);\n    ctx.vertexAttrib1f(ii, 0);\n    if (isWebGL2RenderingContext) {\n      ctx.vertexAttribDivisor(ii, 0);\n    }\n  }\n  ctx.deleteBuffer(tmp);\n\n  var numTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);\n  for (var ii = 0; ii < numTextureUnits; ++ii) {\n    ctx.activeTexture(ctx.TEXTURE0 + ii);\n    ctx.bindTexture(ctx.TEXTURE_CUBE_MAP, null);\n    ctx.bindTexture(ctx.TEXTURE_2D, null);\n    if (isWebGL2RenderingContext) {\n      ctx.bindTexture(ctx.TEXTURE_2D_ARRAY, null);\n      ctx.bindTexture(ctx.TEXTURE_3D, null);\n      ctx.bindSampler(ii, null);\n    }\n  }\n\n  ctx.activeTexture(ctx.TEXTURE0);\n  ctx.useProgram(null);\n  ctx.bindBuffer(ctx.ARRAY_BUFFER, null);\n  ctx.bindBuffer(ctx.ELEMENT_ARRAY_BUFFER, null);\n  ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);\n  ctx.bindRenderbuffer(ctx.RENDERBUFFER, null);\n  ctx.disable(ctx.BLEND);\n  ctx.disable(ctx.CULL_FACE);\n  ctx.disable(ctx.DEPTH_TEST);\n  ctx.disable(ctx.DITHER);\n  ctx.disable(ctx.SCISSOR_TEST);\n  ctx.blendColor(0, 0, 0, 0);\n  ctx.blendEquation(ctx.FUNC_ADD);\n  ctx.blendFunc(ctx.ONE, ctx.ZERO);\n  ctx.clearColor(0, 0, 0, 0);\n  ctx.clearDepth(1);\n  ctx.clearStencil(-1);\n  ctx.colorMask(true, true, true, true);\n  ctx.cullFace(ctx.BACK);\n  ctx.depthFunc(ctx.LESS);\n  ctx.depthMask(true);\n  ctx.depthRange(0, 1);\n  ctx.frontFace(ctx.CCW);\n  ctx.hint(ctx.GENERATE_MIPMAP_HINT, ctx.DONT_CARE);\n  ctx.lineWidth(1);\n  ctx.pixelStorei(ctx.PACK_ALIGNMENT, 4);\n  ctx.pixelStorei(ctx.UNPACK_ALIGNMENT, 4);\n  ctx.pixelStorei(ctx.UNPACK_FLIP_Y_WEBGL, false);\n  ctx.pixelStorei(ctx.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n  // TODO: Delete this IF.\n  if (ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL) {\n    ctx.pixelStorei(ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL, ctx.BROWSER_DEFAULT_WEBGL);\n  }\n  ctx.polygonOffset(0, 0);\n  ctx.sampleCoverage(1, false);\n  ctx.scissor(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.stencilFunc(ctx.ALWAYS, 0, 0xFFFFFFFF);\n  ctx.stencilMask(0xFFFFFFFF);\n  ctx.stencilOp(ctx.KEEP, ctx.KEEP, ctx.KEEP);\n  ctx.viewport(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.clear(ctx.COLOR_BUFFER_BIT | ctx.DEPTH_BUFFER_BIT | ctx.STENCIL_BUFFER_BIT);\n\n  if (isWebGL2RenderingContext) {\n    ctx.drawBuffers([ctx.BACK]);\n    ctx.readBuffer(ctx.BACK);\n    ctx.bindBuffer(ctx.COPY_READ_BUFFER, null);\n    ctx.bindBuffer(ctx.COPY_WRITE_BUFFER, null);\n    ctx.bindBuffer(ctx.PIXEL_PACK_BUFFER, null);\n    ctx.bindBuffer(ctx.PIXEL_UNPACK_BUFFER, null);\n    var numTransformFeedbacks = ctx.getParameter(ctx.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS);\n    for (var ii = 0; ii < numTransformFeedbacks; ++ii) {\n      ctx.bindBufferBase(ctx.TRANSFORM_FEEDBACK_BUFFER, ii, null);\n    }\n    var numUBOs = ctx.getParameter(ctx.MAX_UNIFORM_BUFFER_BINDINGS);\n    for (var ii = 0; ii < numUBOs; ++ii) {\n      ctx.bindBufferBase(ctx.UNIFORM_BUFFER, ii, null);\n    }\n    ctx.disable(ctx.RASTERIZER_DISCARD);\n    ctx.pixelStorei(ctx.UNPACK_IMAGE_HEIGHT, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_IMAGES, 0);\n    ctx.pixelStorei(ctx.UNPACK_ROW_LENGTH, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_ROWS, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_PIXELS, 0);\n    ctx.pixelStorei(ctx.PACK_ROW_LENGTH, 0);\n    ctx.pixelStorei(ctx.PACK_SKIP_ROWS, 0);\n    ctx.pixelStorei(ctx.PACK_SKIP_PIXELS, 0);\n    ctx.hint(ctx.FRAGMENT_SHADER_DERIVATIVE_HINT, ctx.DONT_CARE);\n  }\n\n  // TODO: This should NOT be needed but Firefox fails with 'hint'\n  while(ctx.getError());\n}\n\nfunction makeLostContextSimulatingCanvas(canvas) {\n  var unwrappedContext_;\n  var wrappedContext_;\n  var onLost_ = [];\n  var onRestored_ = [];\n  var wrappedContext_ = {};\n  var contextId_ = 1;\n  var contextLost_ = false;\n  var resourceId_ = 0;\n  var resourceDb_ = [];\n  var numCallsToLoseContext_ = 0;\n  var numCalls_ = 0;\n  var canRestore_ = false;\n  var restoreTimeout_ = 0;\n  var isWebGL2RenderingContext;\n\n  // Holds booleans for each GL error so can simulate errors.\n  var glErrorShadow_ = { };\n\n  canvas.getContext = function(f) {\n    return function() {\n      var ctx = f.apply(canvas, arguments);\n      // Did we get a context and is it a WebGL context?\n      if ((ctx instanceof WebGLRenderingContext) || (window.WebGL2RenderingContext && (ctx instanceof WebGL2RenderingContext))) {\n        if (ctx != unwrappedContext_) {\n          if (unwrappedContext_) {\n            throw \"got different context\"\n          }\n          isWebGL2RenderingContext = window.WebGL2RenderingContext && (ctx instanceof WebGL2RenderingContext);\n          unwrappedContext_ = ctx;\n          wrappedContext_ = makeLostContextSimulatingContext(unwrappedContext_);\n        }\n        return wrappedContext_;\n      }\n      return ctx;\n    }\n  }(canvas.getContext);\n\n  function wrapEvent(listener) {\n    if (typeof(listener) == \"function\") {\n      return listener;\n    } else {\n      return function(info) {\n        listener.handleEvent(info);\n      }\n    }\n  }\n\n  var addOnContextLostListener = function(listener) {\n    onLost_.push(wrapEvent(listener));\n  };\n\n  var addOnContextRestoredListener = function(listener) {\n    onRestored_.push(wrapEvent(listener));\n  };\n\n\n  function wrapAddEventListener(canvas) {\n    var f = canvas.addEventListener;\n    canvas.addEventListener = function(type, listener, bubble) {\n      switch (type) {\n        case 'webglcontextlost':\n          addOnContextLostListener(listener);\n          break;\n        case 'webglcontextrestored':\n          addOnContextRestoredListener(listener);\n          break;\n        default:\n          f.apply(canvas, arguments);\n      }\n    };\n  }\n\n  wrapAddEventListener(canvas);\n\n  canvas.loseContext = function() {\n    if (!contextLost_) {\n      contextLost_ = true;\n      numCallsToLoseContext_ = 0;\n      ++contextId_;\n      while (unwrappedContext_.getError());\n      clearErrors();\n      glErrorShadow_[unwrappedContext_.CONTEXT_LOST_WEBGL] = true;\n      var event = makeWebGLContextEvent(\"context lost\");\n      var callbacks = onLost_.slice();\n      setTimeout(function() {\n          //log(\"numCallbacks:\" + callbacks.length);\n          for (var ii = 0; ii < callbacks.length; ++ii) {\n            //log(\"calling callback:\" + ii);\n            callbacks[ii](event);\n          }\n          if (restoreTimeout_ >= 0) {\n            setTimeout(function() {\n                canvas.restoreContext();\n              }, restoreTimeout_);\n          }\n        }, 0);\n    }\n  };\n\n  canvas.restoreContext = function() {\n    if (contextLost_) {\n      if (onRestored_.length) {\n        setTimeout(function() {\n            if (!canRestore_) {\n              throw \"can not restore. webglcontestlost listener did not call event.preventDefault\";\n            }\n            freeResources();\n            resetToInitialState(unwrappedContext_);\n            contextLost_ = false;\n            numCalls_ = 0;\n            canRestore_ = false;\n            var callbacks = onRestored_.slice();\n            var event = makeWebGLContextEvent(\"context restored\");\n            for (var ii = 0; ii < callbacks.length; ++ii) {\n              callbacks[ii](event);\n            }\n          }, 0);\n      }\n    }\n  };\n\n  canvas.loseContextInNCalls = function(numCalls) {\n    if (contextLost_) {\n      throw \"You can not ask a lost contet to be lost\";\n    }\n    numCallsToLoseContext_ = numCalls_ + numCalls;\n  };\n\n  canvas.getNumCalls = function() {\n    return numCalls_;\n  };\n\n  canvas.setRestoreTimeout = function(timeout) {\n    restoreTimeout_ = timeout;\n  };\n\n  function isWebGLObject(obj) {\n    //return false;\n    return (obj instanceof WebGLBuffer ||\n            obj instanceof WebGLFramebuffer ||\n            obj instanceof WebGLProgram ||\n            obj instanceof WebGLRenderbuffer ||\n            obj instanceof WebGLShader ||\n            obj instanceof WebGLTexture);\n  }\n\n  function checkResources(args) {\n    for (var ii = 0; ii < args.length; ++ii) {\n      var arg = args[ii];\n      if (isWebGLObject(arg)) {\n        return arg.__webglDebugContextLostId__ == contextId_;\n      }\n    }\n    return true;\n  }\n\n  function clearErrors() {\n    var k = Object.keys(glErrorShadow_);\n    for (var ii = 0; ii < k.length; ++ii) {\n      delete glErrorShadow_[k[ii]];\n    }\n  }\n\n  function loseContextIfTime() {\n    ++numCalls_;\n    if (!contextLost_) {\n      if (numCallsToLoseContext_ == numCalls_) {\n        canvas.loseContext();\n      }\n    }\n  }\n\n  // Makes a function that simulates WebGL when out of context.\n  function makeLostContextFunctionWrapper(ctx, functionName) {\n    var f = ctx[functionName];\n    return function() {\n      // log(\"calling:\" + functionName);\n      // Only call the functions if the context is not lost.\n      loseContextIfTime();\n      if (!contextLost_) {\n        //if (!checkResources(arguments)) {\n        //  glErrorShadow_[wrappedContext_.INVALID_OPERATION] = true;\n        //  return;\n        //}\n        var result = f.apply(ctx, arguments);\n        return result;\n      }\n    };\n  }\n\n  function freeResources() {\n    for (var ii = 0; ii < resourceDb_.length; ++ii) {\n      var resource = resourceDb_[ii];\n      if (resource instanceof WebGLBuffer) {\n        unwrappedContext_.deleteBuffer(resource);\n      } else if (resource instanceof WebGLFramebuffer) {\n        unwrappedContext_.deleteFramebuffer(resource);\n      } else if (resource instanceof WebGLProgram) {\n        unwrappedContext_.deleteProgram(resource);\n      } else if (resource instanceof WebGLRenderbuffer) {\n        unwrappedContext_.deleteRenderbuffer(resource);\n      } else if (resource instanceof WebGLShader) {\n        unwrappedContext_.deleteShader(resource);\n      } else if (resource instanceof WebGLTexture) {\n        unwrappedContext_.deleteTexture(resource);\n      }\n      else if (isWebGL2RenderingContext) {\n        if (resource instanceof WebGLQuery) {\n          unwrappedContext_.deleteQuery(resource);\n        } else if (resource instanceof WebGLSampler) {\n          unwrappedContext_.deleteSampler(resource);\n        } else if (resource instanceof WebGLSync) {\n          unwrappedContext_.deleteSync(resource);\n        } else if (resource instanceof WebGLTransformFeedback) {\n          unwrappedContext_.deleteTransformFeedback(resource);\n        } else if (resource instanceof WebGLVertexArrayObject) {\n          unwrappedContext_.deleteVertexArray(resource);\n        }\n      }\n    }\n  }\n\n  function makeWebGLContextEvent(statusMessage) {\n    return {\n      statusMessage: statusMessage,\n      preventDefault: function() {\n          canRestore_ = true;\n        }\n    };\n  }\n\n  return canvas;\n\n  function makeLostContextSimulatingContext(ctx) {\n    // copy all functions and properties to wrapper\n    for (var propertyName in ctx) {\n      if (typeof ctx[propertyName] == 'function') {\n         wrappedContext_[propertyName] = makeLostContextFunctionWrapper(\n             ctx, propertyName);\n       } else {\n         makePropertyWrapper(wrappedContext_, ctx, propertyName);\n       }\n    }\n\n    // Wrap a few functions specially.\n    wrappedContext_.getError = function() {\n      loseContextIfTime();\n      if (!contextLost_) {\n        var err;\n        while (err = unwrappedContext_.getError()) {\n          glErrorShadow_[err] = true;\n        }\n      }\n      for (var err in glErrorShadow_) {\n        if (glErrorShadow_[err]) {\n          delete glErrorShadow_[err];\n          return err;\n        }\n      }\n      return wrappedContext_.NO_ERROR;\n    };\n\n    var creationFunctions = [\n      \"createBuffer\",\n      \"createFramebuffer\",\n      \"createProgram\",\n      \"createRenderbuffer\",\n      \"createShader\",\n      \"createTexture\"\n    ];\n    if (isWebGL2RenderingContext) {\n      creationFunctions.push(\n        \"createQuery\",\n        \"createSampler\",\n        \"fenceSync\",\n        \"createTransformFeedback\",\n        \"createVertexArray\"\n      );\n    }\n    for (var ii = 0; ii < creationFunctions.length; ++ii) {\n      var functionName = creationFunctions[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return null;\n          }\n          var obj = f.apply(ctx, arguments);\n          obj.__webglDebugContextLostId__ = contextId_;\n          resourceDb_.push(obj);\n          return obj;\n        };\n      }(ctx[functionName]);\n    }\n\n    var functionsThatShouldReturnNull = [\n      \"getActiveAttrib\",\n      \"getActiveUniform\",\n      \"getBufferParameter\",\n      \"getContextAttributes\",\n      \"getAttachedShaders\",\n      \"getFramebufferAttachmentParameter\",\n      \"getParameter\",\n      \"getProgramParameter\",\n      \"getProgramInfoLog\",\n      \"getRenderbufferParameter\",\n      \"getShaderParameter\",\n      \"getShaderInfoLog\",\n      \"getShaderSource\",\n      \"getTexParameter\",\n      \"getUniform\",\n      \"getUniformLocation\",\n      \"getVertexAttrib\"\n    ];\n    if (isWebGL2RenderingContext) {\n      functionsThatShouldReturnNull.push(\n        \"getInternalformatParameter\",\n        \"getQuery\",\n        \"getQueryParameter\",\n        \"getSamplerParameter\",\n        \"getSyncParameter\",\n        \"getTransformFeedbackVarying\",\n        \"getIndexedParameter\",\n        \"getUniformIndices\",\n        \"getActiveUniforms\",\n        \"getActiveUniformBlockParameter\",\n        \"getActiveUniformBlockName\"\n      );\n    }\n    for (var ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {\n      var functionName = functionsThatShouldReturnNull[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return null;\n          }\n          return f.apply(ctx, arguments);\n        }\n      }(wrappedContext_[functionName]);\n    }\n\n    var isFunctions = [\n      \"isBuffer\",\n      \"isEnabled\",\n      \"isFramebuffer\",\n      \"isProgram\",\n      \"isRenderbuffer\",\n      \"isShader\",\n      \"isTexture\"\n    ];\n    if (isWebGL2RenderingContext) {\n      isFunctions.push(\n        \"isQuery\",\n        \"isSampler\",\n        \"isSync\",\n        \"isTransformFeedback\",\n        \"isVertexArray\"\n      );\n    }\n    for (var ii = 0; ii < isFunctions.length; ++ii) {\n      var functionName = isFunctions[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return false;\n          }\n          return f.apply(ctx, arguments);\n        }\n      }(wrappedContext_[functionName]);\n    }\n\n    wrappedContext_.checkFramebufferStatus = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return wrappedContext_.FRAMEBUFFER_UNSUPPORTED;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.checkFramebufferStatus);\n\n    wrappedContext_.getAttribLocation = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return -1;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.getAttribLocation);\n\n    wrappedContext_.getVertexAttribOffset = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return 0;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.getVertexAttribOffset);\n\n    wrappedContext_.isContextLost = function() {\n      return contextLost_;\n    };\n\n    if (isWebGL2RenderingContext) {\n      wrappedContext_.getFragDataLocation = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return -1;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.getFragDataLocation);\n\n      wrappedContext_.clientWaitSync = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return wrappedContext_.WAIT_FAILED;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.clientWaitSync);\n\n      wrappedContext_.getUniformBlockIndex = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return wrappedContext_.INVALID_INDEX;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.getUniformBlockIndex);\n    }\n\n    return wrappedContext_;\n  }\n}\n\nreturn {\n  /**\n   * Initializes this module. Safe to call more than once.\n   * @param {!WebGLRenderingContext} ctx A WebGL context. If\n   *    you have more than one context it doesn't matter which one\n   *    you pass in, it is only used to pull out constants.\n   */\n  'init': init,\n\n  /**\n   * Returns true or false if value matches any WebGL enum\n   * @param {*} value Value to check if it might be an enum.\n   * @return {boolean} True if value matches one of the WebGL defined enums\n   */\n  'mightBeEnum': mightBeEnum,\n\n  /**\n   * Gets an string version of an WebGL enum.\n   *\n   * Example:\n   *   WebGLDebugUtil.init(ctx);\n   *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\n   *\n   * @param {number} value Value to return an enum for\n   * @return {string} The string version of the enum.\n   */\n  'glEnumToString': glEnumToString,\n\n  /**\n   * Converts the argument of a WebGL function to a string.\n   * Attempts to convert enum arguments to strings.\n   *\n   * Example:\n   *   WebGLDebugUtil.init(ctx);\n   *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 2, 0, gl.TEXTURE_2D);\n   *\n   * would return 'TEXTURE_2D'\n   *\n   * @param {string} functionName the name of the WebGL function.\n   * @param {number} numArgs The number of arguments\n   * @param {number} argumentIndx the index of the argument.\n   * @param {*} value The value of the argument.\n   * @return {string} The value as a string.\n   */\n  'glFunctionArgToString': glFunctionArgToString,\n\n  /**\n   * Converts the arguments of a WebGL function to a string.\n   * Attempts to convert enum arguments to strings.\n   *\n   * @param {string} functionName the name of the WebGL function.\n   * @param {number} args The arguments.\n   * @return {string} The arguments as a string.\n   */\n  'glFunctionArgsToString': glFunctionArgsToString,\n\n  /**\n   * Given a WebGL context returns a wrapped context that calls\n   * gl.getError after every command and calls a function if the\n   * result is not NO_ERROR.\n   *\n   * You can supply your own function if you want. For example, if you'd like\n   * an exception thrown on any GL error you could do this\n   *\n   *    function throwOnGLError(err, funcName, args) {\n   *      throw WebGLDebugUtils.glEnumToString(err) +\n   *            \" was caused by call to \" + funcName;\n   *    };\n   *\n   *    ctx = WebGLDebugUtils.makeDebugContext(\n   *        canvas.getContext(\"webgl\"), throwOnGLError);\n   *\n   * @param {!WebGLRenderingContext} ctx The webgl context to wrap.\n   * @param {!function(err, funcName, args): void} opt_onErrorFunc The function\n   *     to call when gl.getError returns an error. If not specified the default\n   *     function calls console.log with a message.\n   * @param {!function(funcName, args): void} opt_onFunc The\n   *     function to call when each webgl function is called. You\n   *     can use this to log all calls for example.\n   */\n  'makeDebugContext': makeDebugContext,\n\n  /**\n   * Given a canvas element returns a wrapped canvas element that will\n   * simulate lost context. The canvas returned adds the following functions.\n   *\n   * loseContext:\n   *   simulates a lost context event.\n   *\n   * restoreContext:\n   *   simulates the context being restored.\n   *\n   * lostContextInNCalls:\n   *   loses the context after N gl calls.\n   *\n   * getNumCalls:\n   *   tells you how many gl calls there have been so far.\n   *\n   * setRestoreTimeout:\n   *   sets the number of milliseconds until the context is restored\n   *   after it has been lost. Defaults to 0. Pass -1 to prevent\n   *   automatic restoring.\n   *\n   * @param {!Canvas} canvas The canvas element to wrap.\n   */\n  'makeLostContextSimulatingCanvas': makeLostContextSimulatingCanvas,\n\n  /**\n   * Resets a context to the initial state.\n   * @param {!WebGLRenderingContext} ctx The webgl context to\n   *     reset.\n   */\n  'resetToInitialState': resetToInitialState\n};\n\n}();\n","/*!\n * @license twgl.js 4.4.0 Copyright (c) 2015, Gregg Tavares All Rights Reserved.\n * Available via the MIT license.\n * see: http://github.com/greggman/twgl.js for details\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"twgl\"] = factory();\n\telse\n\t\troot[\"twgl\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 9);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.copyExistingProperties = copyExistingProperties;\nexports.copyNamedProperties = copyNamedProperties;\nexports.isBuffer = isBuffer;\nexports.isRenderbuffer = isRenderbuffer;\nexports.isShader = isShader;\nexports.isTexture = isTexture;\nexports.isSampler = isSampler;\nexports.warn = exports.error = void 0;\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Copy named properties\n *\n * @param {string[]} names names of properties to copy\n * @param {object} src object to copy properties from\n * @param {object} dst object to copy properties to\n */\nfunction copyNamedProperties(names, src, dst) {\n  names.forEach(function (name) {\n    var value = src[name];\n\n    if (value !== undefined) {\n      dst[name] = value;\n    }\n  });\n}\n/**\n * Copies properties from source to dest only if a matching key is in dest\n *\n * @param {Object.<string, ?>} src the source\n * @param {Object.<string, ?>} dst the dest\n */\n\n\nfunction copyExistingProperties(src, dst) {\n  Object.keys(dst).forEach(function (key) {\n    if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {\n      dst[key] = src[key];\n    }\n  });\n}\n\nvar error = _globalObject.default.console && _globalObject.default.console.error && typeof _globalObject.default.console.error === \"function\" ? _globalObject.default.console.error.bind(_globalObject.default.console) : function () {};\nexports.error = error;\nvar warn = _globalObject.default.console && _globalObject.default.console.warn && typeof _globalObject.default.console.warn === \"function\" ? _globalObject.default.console.warn.bind(_globalObject.default.console) : function () {};\nexports.warn = warn;\nvar repBuffer;\n\nfunction isBuffer(gl, t) {\n  if (!repBuffer) {\n    repBuffer = gl.createBuffer();\n  }\n\n  return t instanceof repBuffer.constructor;\n}\n\nvar repRenderbuffer;\n\nfunction isRenderbuffer(gl, t) {\n  if (!repRenderbuffer) {\n    repRenderbuffer = gl.createRenderbuffer();\n  }\n\n  return t instanceof repRenderbuffer.constructor;\n}\n\nvar repShader;\n\nfunction isShader(gl, t) {\n  if (!repShader) {\n    repShader = gl.createShader(gl.VERTEX_SHADER);\n  }\n\n  return t instanceof repShader.constructor;\n}\n\nvar repTexture;\n\nfunction isTexture(gl, t) {\n  if (!repTexture) {\n    repTexture = gl.createTexture();\n  }\n\n  return t instanceof repTexture.constructor;\n}\n\nvar repSampler;\n\nfunction isSampler(gl, t) {\n  if (!repSampler) {\n    if (gl.createSampler) {\n      repSampler = gl.createSampler();\n    } else {\n      return false; // it can't be a sampler if this is not WebGL2\n    }\n  }\n\n  return t instanceof repSampler.constructor;\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.getGLTypeForTypedArray = getGLTypeForTypedArray;\nexports.getGLTypeForTypedArrayType = getGLTypeForTypedArrayType;\nexports.getTypedArrayTypeForGLType = getTypedArrayTypeForGLType;\nexports.isArrayBuffer = void 0;\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level shader typed array related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.typedArray` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/typedArray\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar glTypeToTypedArray = {};\n{\n  var tt = glTypeToTypedArray;\n  tt[BYTE] = Int8Array;\n  tt[UNSIGNED_BYTE] = Uint8Array;\n  tt[SHORT] = Int16Array;\n  tt[UNSIGNED_SHORT] = Uint16Array;\n  tt[INT] = Int32Array;\n  tt[UNSIGNED_INT] = Uint32Array;\n  tt[FLOAT] = Float32Array;\n  tt[UNSIGNED_SHORT_4_4_4_4] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_5_5_1] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_6_5] = Uint16Array;\n  tt[HALF_FLOAT] = Uint16Array;\n  tt[UNSIGNED_INT_2_10_10_10_REV] = Uint32Array;\n  tt[UNSIGNED_INT_10F_11F_11F_REV] = Uint32Array;\n  tt[UNSIGNED_INT_5_9_9_9_REV] = Uint32Array;\n  tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\n  tt[UNSIGNED_INT_24_8] = Uint32Array;\n}\n/**\n * Get the GL type for a typedArray\n * @param {ArrayBuffer|ArrayBufferView} typedArray a typedArray\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\nfunction getGLTypeForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw \"unsupported typed array type\";\n}\n/**\n * Get the GL type for a typedArray type\n * @param {ArrayBufferViewType} typedArrayType a typedArray constructor\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getGLTypeForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw \"unsupported typed array type\";\n}\n/**\n * Get the typed array constructor for a given GL type\n * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\n * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getTypedArrayTypeForGLType(type) {\n  var CTOR = glTypeToTypedArray[type];\n\n  if (!CTOR) {\n    throw \"unknown gl type\";\n  }\n\n  return CTOR;\n}\n\nvar isArrayBuffer = _globalObject.default.SharedArrayBuffer ? function isArrayBufferOrSharedArrayBuffer(a) {\n  return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof _globalObject.default.SharedArrayBuffer);\n} : function isArrayBuffer(a) {\n  return a && a.buffer && a.buffer instanceof ArrayBuffer;\n};\nexports.isArrayBuffer = isArrayBuffer;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.default = void 0;\nvar global = typeof global !== 'undefined' // eslint-disable-line\n? global // eslint-disable-line\n: typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {};\nexports.default = global;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.add = add;\nexports.copy = copy;\nexports.create = create;\nexports.cross = cross;\nexports.distance = distance;\nexports.distanceSq = distanceSq;\nexports.divide = divide;\nexports.divScalar = divScalar;\nexports.dot = dot;\nexports.lerp = lerp;\nexports.length = length;\nexports.lengthSq = lengthSq;\nexports.mulScalar = mulScalar;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.normalize = normalize;\nexports.setDefaultType = setDefaultType;\nexports.subtract = subtract;\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n *\n * Vec3 math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec3. In other words you can do this\n *\n *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     var v3 = v3.create();\n *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any vector as the destination. So for example\n *\n *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n * @module twgl/v3\n */\nvar VecType = Float32Array;\n/**\n * A JavaScript array with 3 values or a Float32Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/v3.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Vec3\n * @memberOf module:twgl/v3\n */\n\n/**\n * Sets the type this library creates for a Vec3\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Vec3\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @return {Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction create(x, y, z) {\n  var dst = new VecType(3);\n\n  if (x) {\n    dst[0] = x;\n  }\n\n  if (y) {\n    dst[1] = y;\n  }\n\n  if (z) {\n    dst[2] = z;\n  }\n\n  return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction add(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n  return dst;\n}\n/**\n * Subtracts two vectors.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction subtract(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n  return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * (1 - t) * a + t * b.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {number} t Interpolation coefficient.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction lerp(a, b, t, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = (1 - t) * a[0] + t * b[0];\n  dst[1] = (1 - t) * a[1] + t * b[1];\n  dst[2] = (1 - t) * a[2] + t * b[2];\n  return dst;\n}\n/**\n * Mutiplies a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction mulScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n  return dst;\n}\n/**\n * Divides a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n  return dst;\n}\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector a cross b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction cross(a, b, dst) {\n  dst = dst || new VecType(3);\n  var t1 = a[2] * b[0] - a[0] * b[2];\n  var t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n  return dst;\n}\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @return {number} dot product\n * @memberOf module:twgl/v3\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction length(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n/**\n * Computes the square of the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} square of the length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction lengthSq(v) {\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\n/**\n * Computes the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distance(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n/**\n * Computes the square of the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} square of the distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distanceSq(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param {module:twgl/v3.Vec3} a The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The normalized vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction normalize(a, dst) {\n  dst = dst || new VecType(3);\n  var lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n  var len = Math.sqrt(lenSq);\n\n  if (len > 0.00001) {\n    dst[0] = a[0] / len;\n    dst[1] = a[1] / len;\n    dst[2] = a[2] / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return dst;\n}\n/**\n * Negates a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} -v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction negate(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n  return dst;\n}\n/**\n * Copies a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} A copy of v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction copy(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n  return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n  return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divide(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n  return dst;\n}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.isWebGL1 = isWebGL1;\nexports.isWebGL2 = isWebGL2;\nexports.glEnumToString = void 0;\n\n/*\n * Copyright 2017, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Gets the gl version as a number\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {number} version of gl\n */\n//function getVersionAsNumber(gl) {\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\n//}\n\n/**\n * Check if context is WebGL 2.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 2.0\n * @memberOf module:twgl\n */\nfunction isWebGL2(gl) {\n  // This is the correct check but it's slow\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGL2RenderingContext;\n  return !!gl.texStorage2D;\n}\n/**\n * Check if context is WebGL 1.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 1.0\n * @memberOf module:twgl\n */\n\n\nfunction isWebGL1(gl) {\n  // This is the correct check but it's slow\n  // const version = getVersionAsNumber(gl);\n  // return version <= 1.0 && version > 0.0;  // because as of 2016/5 Edge returns 0.96\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGLRenderingContext;\n  return !gl.texStorage2D;\n}\n/**\n * Gets a string for WebGL enum\n *\n * Note: Several enums are the same. Without more\n * context (which function) it's impossible to always\n * give the correct enum. As it is, for matching values\n * it gives all enums. Checking the WebGL2RenderingContext\n * that means\n *\n *      0     = ZERO | POINT | NONE | NO_ERROR\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\n *\n * It's also not useful for bits really unless you pass in individual bits.\n * In other words\n *\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\n *     twgl.glEnumToString(gl, bits);  // not going to work\n *\n * Note that some enums only exist on extensions. If you\n * want them to show up you need to pass the extension at least\n * once. For example\n *\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc`);\n *     if (ext) {\n *        twgl.glEnumToString(ext, 0);  // just prime the function\n *\n *        ..later..\n *\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n *        console.log(twgl.glEnumToString(gl, internalFormat));\n *\n * Notice I didn't have to pass the extension the second time. This means\n * you can have place that generically gets an enum for texture formats for example.\n * and as long as you primed the function with the extensions\n *\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\n * then twgl will automatically get the extension's enums.\n *\n * @param {WebGLRenderingContext|Extension} gl A WebGLRenderingContext or any extension object\n * @param {number} value the value of the enum you want to look up.\n * @memberOf module:twgl\n */\n\n\nvar glEnumToString = function () {\n  var haveEnumsForType = {};\n  var enums = {};\n\n  function addEnums(gl) {\n    var type = gl.constructor.name;\n\n    if (!haveEnumsForType[type]) {\n      for (var key in gl) {\n        if (typeof gl[key] === 'number') {\n          var existing = enums[gl[key]];\n          enums[gl[key]] = existing ? \"\".concat(existing, \" | \").concat(key) : key;\n        }\n      }\n\n      haveEnumsForType[type] = true;\n    }\n  }\n\n  return function glEnumToString(gl, value) {\n    addEnums(gl);\n    return enums[value] || \"0x\" + value.toString(16);\n  };\n}();\n\nexports.glEnumToString = glEnumToString;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttributeSetters = createAttributeSetters;\nexports.createProgram = createProgram;\nexports.createProgramFromScripts = createProgramFromScripts;\nexports.createProgramFromSources = createProgramFromSources;\nexports.createProgramInfo = createProgramInfo;\nexports.createProgramInfoFromProgram = createProgramInfoFromProgram;\nexports.createUniformSetters = createUniformSetters;\nexports.createUniformBlockSpecFromProgram = createUniformBlockSpecFromProgram;\nexports.createUniformBlockInfoFromProgram = createUniformBlockInfoFromProgram;\nexports.createUniformBlockInfo = createUniformBlockInfo;\nexports.createTransformFeedback = createTransformFeedback;\nexports.createTransformFeedbackInfo = createTransformFeedbackInfo;\nexports.bindTransformFeedbackInfo = bindTransformFeedbackInfo;\nexports.setAttributes = setAttributes;\nexports.setBuffersAndAttributes = setBuffersAndAttributes;\nexports.setUniforms = setUniforms;\nexports.setUniformBlock = setUniformBlock;\nexports.setBlockUniforms = setBlockUniforms;\nexports.bindUniformBlock = bindUniformBlock;\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level shader program related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.programs` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/programs\n */\nvar error = helper.error;\nvar warn = helper.warn;\nvar getElementById = _globalObject.default && _globalObject.default.document && _globalObject.default.document.getElementById ? _globalObject.default.document.getElementById.bind(_globalObject.default.document) : function () {\n  return null;\n};\nvar FLOAT = 0x1406;\nvar FLOAT_VEC2 = 0x8B50;\nvar FLOAT_VEC3 = 0x8B51;\nvar FLOAT_VEC4 = 0x8B52;\nvar INT = 0x1404;\nvar INT_VEC2 = 0x8B53;\nvar INT_VEC3 = 0x8B54;\nvar INT_VEC4 = 0x8B55;\nvar BOOL = 0x8B56;\nvar BOOL_VEC2 = 0x8B57;\nvar BOOL_VEC3 = 0x8B58;\nvar BOOL_VEC4 = 0x8B59;\nvar FLOAT_MAT2 = 0x8B5A;\nvar FLOAT_MAT3 = 0x8B5B;\nvar FLOAT_MAT4 = 0x8B5C;\nvar SAMPLER_2D = 0x8B5E;\nvar SAMPLER_CUBE = 0x8B60;\nvar SAMPLER_3D = 0x8B5F;\nvar SAMPLER_2D_SHADOW = 0x8B62;\nvar FLOAT_MAT2x3 = 0x8B65;\nvar FLOAT_MAT2x4 = 0x8B66;\nvar FLOAT_MAT3x2 = 0x8B67;\nvar FLOAT_MAT3x4 = 0x8B68;\nvar FLOAT_MAT4x2 = 0x8B69;\nvar FLOAT_MAT4x3 = 0x8B6A;\nvar SAMPLER_2D_ARRAY = 0x8DC1;\nvar SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;\nvar SAMPLER_CUBE_SHADOW = 0x8DC5;\nvar UNSIGNED_INT = 0x1405;\nvar UNSIGNED_INT_VEC2 = 0x8DC6;\nvar UNSIGNED_INT_VEC3 = 0x8DC7;\nvar UNSIGNED_INT_VEC4 = 0x8DC8;\nvar INT_SAMPLER_2D = 0x8DCA;\nvar INT_SAMPLER_3D = 0x8DCB;\nvar INT_SAMPLER_CUBE = 0x8DCC;\nvar INT_SAMPLER_2D_ARRAY = 0x8DCF;\nvar UNSIGNED_INT_SAMPLER_2D = 0x8DD2;\nvar UNSIGNED_INT_SAMPLER_3D = 0x8DD3;\nvar UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;\nvar UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\nvar TEXTURE_2D = 0x0DE1;\nvar TEXTURE_CUBE_MAP = 0x8513;\nvar TEXTURE_3D = 0x806F;\nvar TEXTURE_2D_ARRAY = 0x8C1A;\nvar typeMap = {};\n/**\n * Returns the corresponding bind point for a given sampler type\n */\n\nfunction getBindPointForSamplerType(gl, type) {\n  return typeMap[type].bindPoint;\n} // This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n// this code could be a lot smaller but that is sadly really slow (T_T)\n\n\nfunction floatSetter(gl, location) {\n  return function (v) {\n    gl.uniform1f(location, v);\n  };\n}\n\nfunction floatArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1fv(location, v);\n  };\n}\n\nfunction floatVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2fv(location, v);\n  };\n}\n\nfunction floatVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3fv(location, v);\n  };\n}\n\nfunction floatVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4fv(location, v);\n  };\n}\n\nfunction intSetter(gl, location) {\n  return function (v) {\n    gl.uniform1i(location, v);\n  };\n}\n\nfunction intArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1iv(location, v);\n  };\n}\n\nfunction intVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2iv(location, v);\n  };\n}\n\nfunction intVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3iv(location, v);\n  };\n}\n\nfunction intVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4iv(location, v);\n  };\n}\n\nfunction uintSetter(gl, location) {\n  return function (v) {\n    gl.uniform1ui(location, v);\n  };\n}\n\nfunction uintArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1uiv(location, v);\n  };\n}\n\nfunction uintVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2uiv(location, v);\n  };\n}\n\nfunction uintVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3uiv(location, v);\n  };\n}\n\nfunction uintVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4uiv(location, v);\n  };\n}\n\nfunction floatMat2Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2fv(location, false, v);\n  };\n}\n\nfunction floatMat3Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3fv(location, false, v);\n  };\n}\n\nfunction floatMat4Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4fv(location, false, v);\n  };\n}\n\nfunction floatMat23Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x3fv(location, false, v);\n  };\n}\n\nfunction floatMat32Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x2fv(location, false, v);\n  };\n}\n\nfunction floatMat24Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x4fv(location, false, v);\n  };\n}\n\nfunction floatMat42Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x2fv(location, false, v);\n  };\n}\n\nfunction floatMat34Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x4fv(location, false, v);\n  };\n}\n\nfunction floatMat43Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x3fv(location, false, v);\n  };\n}\n\nfunction samplerSetter(gl, type, unit, location) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  return utils.isWebGL2(gl) ? function (textureOrPair) {\n    var texture;\n    var sampler;\n\n    if (helper.isTexture(gl, textureOrPair)) {\n      texture = textureOrPair;\n      sampler = null;\n    } else {\n      texture = textureOrPair.texture;\n      sampler = textureOrPair.sampler;\n    }\n\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n    gl.bindSampler(unit, sampler);\n  } : function (texture) {\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n  };\n}\n\nfunction samplerArraySetter(gl, type, unit, location, size) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  var units = new Int32Array(size);\n\n  for (var ii = 0; ii < size; ++ii) {\n    units[ii] = unit + ii;\n  }\n\n  return utils.isWebGL2(gl) ? function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (textureOrPair, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      var texture;\n      var sampler;\n\n      if (helper.isTexture(gl, textureOrPair)) {\n        texture = textureOrPair;\n        sampler = null;\n      } else {\n        texture = textureOrPair.texture;\n        sampler = textureOrPair.sampler;\n      }\n\n      gl.bindSampler(unit, sampler);\n      gl.bindTexture(bindPoint, texture);\n    });\n  } : function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (texture, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      gl.bindTexture(bindPoint, texture);\n    });\n  };\n}\n\ntypeMap[FLOAT] = {\n  Type: Float32Array,\n  size: 4,\n  setter: floatSetter,\n  arraySetter: floatArraySetter\n};\ntypeMap[FLOAT_VEC2] = {\n  Type: Float32Array,\n  size: 8,\n  setter: floatVec2Setter\n};\ntypeMap[FLOAT_VEC3] = {\n  Type: Float32Array,\n  size: 12,\n  setter: floatVec3Setter\n};\ntypeMap[FLOAT_VEC4] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatVec4Setter\n};\ntypeMap[INT] = {\n  Type: Int32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[INT_VEC2] = {\n  Type: Int32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[INT_VEC3] = {\n  Type: Int32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[INT_VEC4] = {\n  Type: Int32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[UNSIGNED_INT] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: uintSetter,\n  arraySetter: uintArraySetter\n};\ntypeMap[UNSIGNED_INT_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: uintVec2Setter\n};\ntypeMap[UNSIGNED_INT_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: uintVec3Setter\n};\ntypeMap[UNSIGNED_INT_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: uintVec4Setter\n};\ntypeMap[BOOL] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[BOOL_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[BOOL_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[BOOL_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[FLOAT_MAT2] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatMat2Setter\n};\ntypeMap[FLOAT_MAT3] = {\n  Type: Float32Array,\n  size: 36,\n  setter: floatMat3Setter\n};\ntypeMap[FLOAT_MAT4] = {\n  Type: Float32Array,\n  size: 64,\n  setter: floatMat4Setter\n};\ntypeMap[FLOAT_MAT2x3] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat23Setter\n};\ntypeMap[FLOAT_MAT2x4] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat24Setter\n};\ntypeMap[FLOAT_MAT3x2] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat32Setter\n};\ntypeMap[FLOAT_MAT3x4] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat34Setter\n};\ntypeMap[FLOAT_MAT4x2] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat42Setter\n};\ntypeMap[FLOAT_MAT4x3] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat43Setter\n};\ntypeMap[SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[SAMPLER_2D_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_2D_ARRAY_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_CUBE_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\n\nfunction floatAttribSetter(gl, index) {\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    gl.enableVertexAttribArray(index);\n    gl.vertexAttribPointer(index, b.numComponents || b.size, b.type || gl.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n\n    if (b.divisor !== undefined) {\n      gl.vertexAttribDivisor(index, b.divisor);\n    }\n  };\n}\n\nfunction intAttribSetter(gl, index) {\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    gl.enableVertexAttribArray(index);\n    gl.vertexAttribIPointer(index, b.numComponents || b.size, b.type || gl.INT, b.stride || 0, b.offset || 0);\n\n    if (b.divisor !== undefined) {\n      gl.vertexAttribDivisor(index, b.divisor);\n    }\n  };\n}\n\nfunction matAttribSetter(gl, index, typeInfo) {\n  var defaultSize = typeInfo.size;\n  var count = typeInfo.count;\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    var numComponents = b.size || b.numComponents || defaultSize;\n    var size = numComponents / count;\n    var type = b.type || gl.FLOAT;\n    var typeInfo = typeMap[type];\n    var stride = typeInfo.size * numComponents;\n    var normalize = b.normalize || false;\n    var offset = b.offset || 0;\n    var rowOffset = stride / count;\n\n    for (var i = 0; i < count; ++i) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(index + i, size, type, normalize, stride, offset + rowOffset * i);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index + i, b.divisor);\n      }\n    }\n  };\n}\n\nvar attrTypeMap = {};\nattrTypeMap[FLOAT] = {\n  size: 4,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC2] = {\n  size: 8,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC3] = {\n  size: 12,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC4] = {\n  size: 16,\n  setter: floatAttribSetter\n};\nattrTypeMap[INT] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[FLOAT_MAT2] = {\n  size: 4,\n  setter: matAttribSetter,\n  count: 2\n};\nattrTypeMap[FLOAT_MAT3] = {\n  size: 9,\n  setter: matAttribSetter,\n  count: 3\n};\nattrTypeMap[FLOAT_MAT4] = {\n  size: 16,\n  setter: matAttribSetter,\n  count: 4\n}; // make sure we don't see a global gl\n\nvar gl = undefined; // eslint-disable-line\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @param {number} [lineOffset] amount to add to line number\n * @memberOf module:twgl\n */\n\nfunction addLineNumbers(src, lineOffset) {\n  lineOffset = lineOffset || 0;\n  ++lineOffset;\n  return src.split(\"\\n\").map(function (line, ndx) {\n    return ndx + lineOffset + \": \" + line;\n  }).join(\"\\n\");\n}\n\nvar spaceRE = /^[ \\t]*\\n/;\n/**\n * Loads a shader.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} shaderSource The shader source.\n * @param {number} shaderType The type of shader.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors.\n * @return {WebGLShader} The created shader.\n */\n\nfunction loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\n  var errFn = opt_errorCallback || error; // Create the shader object\n\n  var shader = gl.createShader(shaderType); // Remove the first end of line because WebGL 2.0 requires\n  // #version 300 es\n  // as the first line. No whitespace allowed before that line\n  // so\n  //\n  // <script>\n  // #version 300 es\n  // </script>\n  //\n  // Has one line before it which is invalid according to GLSL ES 3.00\n  //\n\n  var lineOffset = 0;\n\n  if (spaceRE.test(shaderSource)) {\n    lineOffset = 1;\n    shaderSource = shaderSource.replace(spaceRE, '');\n  } // Load the shader source\n\n\n  gl.shaderSource(shader, shaderSource); // Compile the shader\n\n  gl.compileShader(shader); // Check the compile status\n\n  var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    var lastError = gl.getShaderInfoLog(shader);\n    errFn(addLineNumbers(shaderSource, lineOffset) + \"\\n*** Error compiling shader: \" + lastError);\n    gl.deleteShader(shader);\n    return null;\n  }\n\n  return shader;\n}\n/**\n * @typedef {Object} ProgramOptions\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>} [attribLocations] a attribute name to location map\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @memberOf module:twgl\n */\n\n/**\n * Gets the program options based on all these optional arguments\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments pased on\n */\n\n\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\n  var transformFeedbackVaryings;\n\n  if (typeof opt_locations === 'function') {\n    opt_errorCallback = opt_locations;\n    opt_locations = undefined;\n  }\n\n  if (typeof opt_attribs === 'function') {\n    opt_errorCallback = opt_attribs;\n    opt_attribs = undefined;\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\n    // If we have an errorCallback we can just return this object\n    // Otherwise we need to construct one with default errorCallback\n    if (opt_attribs.errorCallback) {\n      return opt_attribs;\n    }\n\n    var opt = opt_attribs;\n    opt_errorCallback = opt.errorCallback;\n    opt_attribs = opt.attribLocations;\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\n  }\n\n  var options = {\n    errorCallback: opt_errorCallback || error,\n    transformFeedbackVaryings: transformFeedbackVaryings\n  };\n\n  if (opt_attribs) {\n    var attribLocations = {};\n\n    if (Array.isArray(opt_attribs)) {\n      opt_attribs.forEach(function (attrib, ndx) {\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\n      });\n    } else {\n      attribLocations = opt_attribs;\n    }\n\n    options.attribLocations = attribLocations;\n  }\n\n  return options;\n}\n\nvar defaultShaderType = [\"VERTEX_SHADER\", \"FRAGMENT_SHADER\"];\n\nfunction getShaderTypeFromScriptType(scriptType) {\n  if (scriptType.indexOf(\"frag\") >= 0) {\n    return gl.FRAGMENT_SHADER;\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\n    return gl.VERTEX_SHADER;\n  }\n\n  return undefined;\n}\n\nfunction deleteShaders(gl, shaders) {\n  shaders.forEach(function (shader) {\n    gl.deleteShader(shader);\n  });\n}\n/**\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\n * program and calls useProgram.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgram(gl, [vs, fs], options);\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgram(gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var realShaders = [];\n  var newShaders = [];\n\n  for (var ndx = 0; ndx < shaders.length; ++ndx) {\n    var shader = shaders[ndx];\n\n    if (typeof shader === 'string') {\n      var elem = getElementById(shader);\n      var src = elem ? elem.text : shader;\n      var type = gl[defaultShaderType[ndx]];\n\n      if (elem && elem.type) {\n        type = getShaderTypeFromScriptType(elem.type) || type;\n      }\n\n      shader = loadShader(gl, src, type, progOptions.errorCallback);\n      newShaders.push(shader);\n    }\n\n    if (helper.isShader(gl, shader)) {\n      realShaders.push(shader);\n    }\n  }\n\n  if (realShaders.length !== shaders.length) {\n    progOptions.errorCallback(\"not enough shaders for program\");\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  var program = gl.createProgram();\n  realShaders.forEach(function (shader) {\n    gl.attachShader(program, shader);\n  });\n\n  if (progOptions.attribLocations) {\n    Object.keys(progOptions.attribLocations).forEach(function (attrib) {\n      gl.bindAttribLocation(program, progOptions.attribLocations[attrib], attrib);\n    });\n  }\n\n  var varyings = progOptions.transformFeedbackVaryings;\n\n  if (varyings) {\n    if (varyings.attribs) {\n      varyings = varyings.attribs;\n    }\n\n    if (!Array.isArray(varyings)) {\n      varyings = Object.keys(varyings);\n    }\n\n    gl.transformFeedbackVaryings(program, varyings, progOptions.transformFeedbackMode || gl.SEPARATE_ATTRIBS);\n  }\n\n  gl.linkProgram(program); // Check the link status\n\n  var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n  if (!linked) {\n    // something went wrong with the link\n    var lastError = gl.getProgramInfoLog(program);\n    progOptions.errorCallback(\"Error in program linking:\" + lastError);\n    gl.deleteProgram(program);\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  return program;\n}\n/**\n * Loads a shader from a script tag.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} scriptId The id of the script tag.\n * @param {number} [opt_shaderType] The type of shader. If not passed in it will\n *     be derived from the type of the script tag.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors.\n * @return {WebGLShader?} The created shader or null if error.\n */\n\n\nfunction createShaderFromScript(gl, scriptId, opt_shaderType, opt_errorCallback) {\n  var shaderSource = \"\";\n  var shaderScript = getElementById(scriptId);\n\n  if (!shaderScript) {\n    throw \"*** Error: unknown script element\" + scriptId;\n  }\n\n  shaderSource = shaderScript.text;\n  var shaderType = opt_shaderType || getShaderTypeFromScriptType(shaderScript.type);\n\n  if (!shaderType) {\n    throw \"*** Error: unknown shader type\";\n  }\n\n  return loadShader(gl, shaderSource, shaderType, opt_errorCallback);\n}\n/**\n * Creates a program from 2 script tags.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderScriptIds Array of ids of the script\n *        tags for the shaders. The first is assumed to be the\n *        vertex shader, the second the fragment shader.\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram} The created program.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromScripts(gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderScriptIds.length; ++ii) {\n    var shader = createShaderFromScript(gl, shaderScriptIds[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Creates a program from 2 sources.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram} The created program.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromSources(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderSources.length; ++ii) {\n    var shader = loadShader(gl, shaderSources[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Returns true if attribute/uniform is a reserved/built in\n *\n * It makes no sense to me why GL returns these because it's\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\n * with names that start with `gl_` (and `webgl_` in WebGL)\n *\n * I can only assume they are there because they might count\n * when computing the number of uniforms/attributes used when you want to\n * know if you are near the limit. That doesn't really make sense\n * to me but the fact that these get returned are in the spec.\n *\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\n *    `gl.getActiveAttrib`.\n * @return {bool} true if it's reserved\n */\n\n\nfunction isBuiltIn(info) {\n  var name = info.name;\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\n}\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:twgl.setUniforms}\n *\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformSetters(gl, program) {\n  var textureUnit = 0;\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n\n  function createUniformSetter(program, uniformInfo) {\n    var location = gl.getUniformLocation(program, uniformInfo.name);\n    var isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === \"[0]\";\n    var type = uniformInfo.type;\n    var typeInfo = typeMap[type];\n\n    if (!typeInfo) {\n      throw \"unknown type: 0x\" + type.toString(16); // we should never get here.\n    }\n\n    var setter;\n\n    if (typeInfo.bindPoint) {\n      // it's a sampler\n      var unit = textureUnit;\n      textureUnit += uniformInfo.size;\n\n      if (isArray) {\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n      } else {\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n      }\n    } else {\n      if (typeInfo.arraySetter && isArray) {\n        setter = typeInfo.arraySetter(gl, location);\n      } else {\n        setter = typeInfo.setter(gl, location);\n      }\n    }\n\n    setter.location = location;\n    return setter;\n  }\n\n  var uniformSetters = {};\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      continue;\n    }\n\n    var name = uniformInfo.name; // remove the array suffix.\n\n    if (name.substr(-3) === \"[0]\") {\n      name = name.substr(0, name.length - 3);\n    }\n\n    var setter = createUniformSetter(program, uniformInfo);\n    uniformSetters[name] = setter;\n  }\n\n  return uniformSetters;\n}\n/**\n * @typedef {Object} TransformFeedbackInfo\n * @property {number} index index of transform feedback\n * @property {number} type GL type\n * @property {number} size 1 - 4\n * @memberOf module:twgl\n */\n\n/**\n * Create TransformFeedbackInfo for passing to bind/unbindTransformFeedbackInfo.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedbackInfo(gl, program) {\n  var info = {};\n  var numVaryings = gl.getProgramParameter(program, gl.TRANSFORM_FEEDBACK_VARYINGS);\n\n  for (var ii = 0; ii < numVaryings; ++ii) {\n    var varying = gl.getTransformFeedbackVarying(program, ii);\n    info[varying.name] = {\n      index: ii,\n      type: varying.type,\n      size: varying.size\n    };\n  }\n\n  return info;\n}\n/**\n * Binds buffers for transform feedback.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @memberOf module:twgl\n */\n\n\nfunction bindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n\n  for (var name in bufferInfo) {\n    var varying = transformFeedbackInfo[name];\n\n    if (varying) {\n      var buf = bufferInfo[name];\n\n      if (buf.offset) {\n        gl.bindBufferRange(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size);\n      } else {\n        gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer);\n      }\n    }\n  }\n}\n/**\n * Unbinds buffers afetr transform feedback.\n *\n * Buffers can not be bound to 2 bind points so if you try to bind a buffer used\n * in a transform feedback as an ARRAY_BUFFER for an attribute it will fail.\n *\n * This function unbinds all buffers that were bound with {@link module:twgl.bindTransformFeedbackInfo}.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n */\n\n\nfunction unbindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n\n  for (var name in bufferInfo) {\n    var varying = transformFeedbackInfo[name];\n\n    if (varying) {\n      gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, null);\n    }\n  }\n}\n/**\n * Creates a transform feedback and sets the buffers\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @return {WebGLTransformFeedback} the created transform feedback\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedback(gl, programInfo, bufferInfo) {\n  var tf = gl.createTransformFeedback();\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, tf);\n  gl.useProgram(programInfo.program);\n  bindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null); // This is only needed because of a bug in Chrome 56. Will remove\n  // when chrome fixes it.\n\n  unbindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  return tf;\n}\n/**\n * @typedef {Object} UniformData\n * @property {number} type The WebGL type enum for this uniform\n * @property {number} size The number of elements for this uniform\n * @property {number} blockNdx The block index this uniform appears in\n * @property {number} offset The byte offset in the block for this uniform's value\n * @memberOf module:twgl\n */\n\n/**\n * The specification for one UniformBlockObject\n *\n * @typedef {Object} BlockSpec\n * @property {number} index The index of the block.\n * @property {number} size The size in bytes needed for the block\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n * @property {bool} usedByVertexShader Self explanitory\n * @property {bool} usedByFragmentShader Self explanitory\n * @property {bool} used Self explanitory\n * @memberOf module:twgl\n */\n\n/**\n * A `UniformBlockSpec` represents the data needed to create and bind\n * UniformBlockObjects for a given program\n *\n * @typedef {Object} UniformBlockSpec\n * @property {Object.<string, module:twgl.BlockSpec> blockSpecs The BlockSpec for each block by block name\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a UniformBlockSpec for the given program.\n *\n * A UniformBlockSpec represents the data needed to create and bind\n * UniformBlockObjects\n *\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockSpecFromProgram(gl, program) {\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  var uniformData = [];\n  var uniformIndices = [];\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    uniformIndices.push(ii);\n    uniformData.push({});\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      break;\n    } // REMOVE [0]?\n\n\n    uniformData[ii].name = uniformInfo.name;\n  }\n\n  [[\"UNIFORM_TYPE\", \"type\"], [\"UNIFORM_SIZE\", \"size\"], // num elements\n  [\"UNIFORM_BLOCK_INDEX\", \"blockNdx\"], [\"UNIFORM_OFFSET\", \"offset\"]].forEach(function (pair) {\n    var pname = pair[0];\n    var key = pair[1];\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function (value, ndx) {\n      uniformData[ndx][key] = value;\n    });\n  });\n  var blockSpecs = {};\n  var numUniformBlocks = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\n\n  for (var _ii = 0; _ii < numUniformBlocks; ++_ii) {\n    var name = gl.getActiveUniformBlockName(program, _ii);\n    var blockSpec = {\n      index: _ii,\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      size: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_DATA_SIZE),\n      uniformIndices: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES)\n    };\n    blockSpec.used = blockSpec.usedByVertexSahder || blockSpec.usedByFragmentShader;\n    blockSpecs[name] = blockSpec;\n  }\n\n  return {\n    blockSpecs: blockSpecs,\n    uniformData: uniformData\n  };\n}\n\nvar arraySuffixRE = /\\[\\d+\\]\\.$/; // better way to check?\n\n/**\n * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\n * and a corresponding WebGLBuffer to hold those values on the GPU\n *\n * @typedef {Object} UniformBlockInfo\n * @property {string} name The name of the block\n * @property {ArrayBuffer} array The array buffer that contains the uniform values\n * @property {Float32Array} asFloat A float view on the array buffer. This is useful\n *    inspecting the contents of the buffer in the debugger.\n * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\n * @property {number} [offset] offset into buffer\n * @property {Object.<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\n *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\n *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\n *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\n *   `Int32Array` view, etc.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {WebGLProgram} program A WebGLProgram\n * @param {module:twgl.UniformBlockSpec} uinformBlockSpec. A UniformBlockSpec as returned\n *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\nfunction createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName) {\n  var blockSpecs = uniformBlockSpec.blockSpecs;\n  var uniformData = uniformBlockSpec.uniformData;\n  var blockSpec = blockSpecs[blockName];\n\n  if (!blockSpec) {\n    warn(\"no uniform block object named:\", blockName);\n    return {\n      name: blockName,\n      uniforms: {}\n    };\n  }\n\n  var array = new ArrayBuffer(blockSpec.size);\n  var buffer = gl.createBuffer();\n  var uniformBufferIndex = blockSpec.index;\n  gl.bindBuffer(gl.UNIFORM_BUFFER, buffer);\n  gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\n  var prefix = blockName + \".\";\n\n  if (arraySuffixRE.test(prefix)) {\n    prefix = prefix.replace(arraySuffixRE, \".\");\n  }\n\n  var uniforms = {};\n  blockSpec.uniformIndices.forEach(function (uniformNdx) {\n    var data = uniformData[uniformNdx];\n    var typeInfo = typeMap[data.type];\n    var Type = typeInfo.Type;\n    var length = data.size * typeInfo.size;\n    var name = data.name;\n\n    if (name.substr(0, prefix.length) === prefix) {\n      name = name.substr(prefix.length);\n    }\n\n    uniforms[name] = new Type(array, data.offset, length / Type.BYTES_PER_ELEMENT);\n  });\n  return {\n    name: blockName,\n    array: array,\n    asFloat: new Float32Array(array),\n    // for debugging\n    buffer: buffer,\n    uniforms: uniforms\n  };\n}\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo}\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockInfo(gl, programInfo, blockName) {\n  return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName);\n}\n/**\n * Binds a unform block to the matching uniform block point.\n * Matches by blocks by name so blocks must have the same name not just the same\n * structure.\n *\n * If you have changed any values and you upload the valus into the corresponding WebGLBuffer\n * call {@link module:twgl.setUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\n *     no buffer is bound.\n * @memberOf module:twgl/programs\n */\n\n\nfunction bindUniformBlock(gl, programInfo, uniformBlockInfo) {\n  var uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\n  var blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\n\n  if (blockSpec) {\n    var bufferBindIndex = blockSpec.index;\n    gl.bindBufferRange(gl.UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, uniformBlockInfo.offset || 0, uniformBlockInfo.array.byteLength);\n    return true;\n  }\n\n  return false;\n}\n/**\n * Uploads the current uniform values to the corresponding WebGLBuffer\n * and binds that buffer to the program's corresponding bind point for the uniform block object.\n *\n * If you haven't changed any values and you only need to bind the uniform block object\n * call {@link module:twgl.bindUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniformBlock(gl, programInfo, uniformBlockInfo) {\n  if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\n    gl.bufferData(gl.UNIFORM_BUFFER, uniformBlockInfo.array, gl.DYNAMIC_DRAW);\n  }\n}\n/**\n * Sets values of a uniform block object\n *\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\n * @param {Object.<string, ?>} values A uniform name to value map where the value is correct for the given\n *    type of uniform. So for example given a block like\n *\n *       uniform SomeBlock {\n *         float someFloat;\n *         vec2 someVec2;\n *         vec3 someVec3Array[2];\n *         int someInt;\n *       }\n *\n *  You can set the values of the uniform block with\n *\n *       twgl.setBlockUniforms(someBlockInfo, {\n *          someFloat: 12.3,\n *          someVec2: [1, 2],\n *          someVec3Array: [1, 2, 3, 4, 5, 6],\n *          someInt: 5,\n *       }\n *\n *  Arrays can be JavaScript arrays or typed arrays\n *\n *  Any name that doesn't match will be ignored\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBlockUniforms(uniformBlockInfo, values) {\n  var uniforms = uniformBlockInfo.uniforms;\n\n  for (var name in values) {\n    var array = uniforms[name];\n\n    if (array) {\n      var value = values[name];\n\n      if (value.length) {\n        array.set(value);\n      } else {\n        array[0] = value;\n      }\n    }\n  }\n}\n/**\n * Set uniforms and binds related textures.\n *\n * example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     const tex1 = gl.createTexture();\n *     const tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     var texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     const moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *     twgl.setUniforms(programInfo, moreUniforms);\n *\n * You can also add WebGLSamplers to uniform samplers as in\n *\n *     const uniforms = {\n *       u_someSampler: {\n *         texture: someWebGLTexture,\n *         sampler: someWebGLSampler,\n *       },\n *     };\n *\n * In which case both the sampler and texture will be bound to the\n * same unit.\n *\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n *        uniforms.\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n *\n *     const sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     const localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, sharedUniforms);\n *     twgl.setUniforms(programInfo, localUniforms};\n *\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniforms(setters, values) {\n  // eslint-disable-line\n  var actualSetters = setters.uniformSetters || setters;\n  var numArgs = arguments.length;\n\n  for (var andx = 1; andx < numArgs; ++andx) {\n    var vals = arguments[andx];\n\n    if (Array.isArray(vals)) {\n      var numValues = vals.length;\n\n      for (var ii = 0; ii < numValues; ++ii) {\n        setUniforms(actualSetters, vals[ii]);\n      }\n    } else {\n      for (var name in vals) {\n        var setter = actualSetters[name];\n\n        if (setter) {\n          setter(vals[name]);\n        }\n      }\n    }\n  }\n}\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:twgl.setAttributes} for example\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createAttributeSetters(gl, program) {\n  var attribSetters = {};\n  var numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n  for (var ii = 0; ii < numAttribs; ++ii) {\n    var attribInfo = gl.getActiveAttrib(program, ii);\n\n    if (isBuiltIn(attribInfo)) {\n      continue;\n    }\n\n    var index = gl.getAttribLocation(program, attribInfo.name);\n    var typeInfo = attrTypeMap[attribInfo.type];\n    var setter = typeInfo.setter(gl, index, typeInfo);\n    setter.location = index;\n    attribSetters[attribInfo.name] = setter;\n  }\n\n  return attribSetters;\n}\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n *\n * Example:\n *\n *     const program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const attribSetters = createAttributeSetters(program);\n *\n *     const positionBuffer = gl.createBuffer();\n *     const texcoordBuffer = gl.createBuffer();\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n * *   divisor: the divisor for instances. Default = undefined\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n * @memberOf module:twgl/programs\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n */\n\n\nfunction setAttributes(setters, buffers) {\n  for (var name in buffers) {\n    var setter = setters[name];\n\n    if (setter) {\n      setter(buffers[name]);\n    }\n  }\n}\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n *\n * For the example above it is equivilent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgrmaInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n * @param {(module:twgl.BufferInfo|module:twgl.vertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\n  if (buffers.vertexArrayObject) {\n    gl.bindVertexArray(buffers.vertexArrayObject);\n  } else {\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n\n    if (buffers.indices) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\n    }\n  }\n}\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n * @propetty {module:twgl.UniformBlockSpec} [uniformBlockSpace] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\n * @memberOf module:twgl\n */\n\n/**\n * Creates a ProgramInfo from an existing program.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfoFromProgram(gl, program) {\n  var uniformSetters = createUniformSetters(gl, program);\n  var attribSetters = createAttributeSetters(gl, program);\n  var programInfo = {\n    program: program,\n    uniformSetters: uniformSetters,\n    attribSetters: attribSetters\n  };\n\n  if (utils.isWebGL2(gl)) {\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\n  }\n\n  return programInfo;\n}\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramInfo(gl, [vs, fs], options);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the attributes. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfo(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var good = true;\n  shaderSources = shaderSources.map(function (source) {\n    // Lets assume if there is no \\n it's an id\n    if (source.indexOf(\"\\n\") < 0) {\n      var script = getElementById(source);\n\n      if (!script) {\n        progOptions.errorCallback(\"no element with id: \" + source);\n        good = false;\n      } else {\n        source = script.text;\n      }\n    }\n\n    return source;\n  });\n\n  if (!good) {\n    return null;\n  }\n\n  var program = createProgramFromSources(gl, shaderSources, progOptions);\n\n  if (!program) {\n    return null;\n  }\n\n  return createProgramInfoFromProgram(gl, program);\n}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.axisRotate = axisRotate;\nexports.axisRotation = axisRotation;\nexports.copy = copy;\nexports.frustum = frustum;\nexports.getAxis = getAxis;\nexports.getTranslation = getTranslation;\nexports.identity = identity;\nexports.inverse = inverse;\nexports.lookAt = lookAt;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.ortho = ortho;\nexports.perspective = perspective;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.rotationX = rotationX;\nexports.rotationY = rotationY;\nexports.rotationZ = rotationZ;\nexports.scale = scale;\nexports.scaling = scaling;\nexports.setAxis = setAxis;\nexports.setDefaultType = setDefaultType;\nexports.setTranslation = setTranslation;\nexports.transformDirection = transformDirection;\nexports.transformNormal = transformNormal;\nexports.transformPoint = transformPoint;\nexports.translate = translate;\nexports.translation = translation;\nexports.transpose = transpose;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = m4.create();\n *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = m4.identity();\n *     const trans = m4.translation([1, 2, 3]);\n *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n * @module twgl/m4\n */\nvar MatType = Float32Array;\nvar tempV3a = v3.create();\nvar tempV3b = v3.create();\nvar tempV3c = v3.create();\n/**\n * A JavaScript array with 16 values or a Float32Array with 16 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/m4.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Mat4\n * @memberOf module:twgl/m4\n */\n\n/**\n * Sets the type this library creates for a Mat4\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Mat4\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n/**\n * Negates a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} -m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction negate(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = -m[0];\n  dst[1] = -m[1];\n  dst[2] = -m[2];\n  dst[3] = -m[3];\n  dst[4] = -m[4];\n  dst[5] = -m[5];\n  dst[6] = -m[6];\n  dst[7] = -m[7];\n  dst[8] = -m[8];\n  dst[9] = -m[9];\n  dst[10] = -m[10];\n  dst[11] = -m[11];\n  dst[12] = -m[12];\n  dst[13] = -m[13];\n  dst[14] = -m[14];\n  dst[15] = -m[15];\n  return dst;\n}\n/**\n * Copies a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] The matrix.\n * @return {module:twgl/m4.Mat4} A copy of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction copy(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = m[0];\n  dst[1] = m[1];\n  dst[2] = m[2];\n  dst[3] = m[3];\n  dst[4] = m[4];\n  dst[5] = m[5];\n  dst[6] = m[6];\n  dst[7] = m[7];\n  dst[8] = m[8];\n  dst[9] = m[9];\n  dst[10] = m[10];\n  dst[11] = m[11];\n  dst[12] = m[12];\n  dst[13] = m[13];\n  dst[14] = m[14];\n  dst[15] = m[15];\n  return dst;\n}\n/**\n * Creates an n-by-n identity matrix.\n *\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction identity(dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Takes the transpose of a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The transpose of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transpose(m, dst) {\n  dst = dst || new MatType(16);\n\n  if (dst === m) {\n    var t;\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  dst[0] = m00;\n  dst[1] = m10;\n  dst[2] = m20;\n  dst[3] = m30;\n  dst[4] = m01;\n  dst[5] = m11;\n  dst[6] = m21;\n  dst[7] = m31;\n  dst[8] = m02;\n  dst[9] = m12;\n  dst[10] = m22;\n  dst[11] = m32;\n  dst[12] = m03;\n  dst[13] = m13;\n  dst[14] = m23;\n  dst[15] = m33;\n  return dst;\n}\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The inverse of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction inverse(m, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  var tmp_0 = m22 * m33;\n  var tmp_1 = m32 * m23;\n  var tmp_2 = m12 * m33;\n  var tmp_3 = m32 * m13;\n  var tmp_4 = m12 * m23;\n  var tmp_5 = m22 * m13;\n  var tmp_6 = m02 * m33;\n  var tmp_7 = m32 * m03;\n  var tmp_8 = m02 * m23;\n  var tmp_9 = m22 * m03;\n  var tmp_10 = m02 * m13;\n  var tmp_11 = m12 * m03;\n  var tmp_12 = m20 * m31;\n  var tmp_13 = m30 * m21;\n  var tmp_14 = m10 * m31;\n  var tmp_15 = m30 * m11;\n  var tmp_16 = m10 * m21;\n  var tmp_17 = m20 * m11;\n  var tmp_18 = m00 * m31;\n  var tmp_19 = m30 * m01;\n  var tmp_20 = m00 * m21;\n  var tmp_21 = m20 * m01;\n  var tmp_22 = m00 * m11;\n  var tmp_23 = m10 * m01;\n  var t0 = tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31 - (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  var t1 = tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31 - (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  var t2 = tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31 - (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  var t3 = tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21 - (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n  var d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n  dst[0] = d * t0;\n  dst[1] = d * t1;\n  dst[2] = d * t2;\n  dst[3] = d * t3;\n  dst[4] = d * (tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30 - (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n  dst[5] = d * (tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30 - (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n  dst[6] = d * (tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30 - (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n  dst[7] = d * (tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20 - (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n  dst[8] = d * (tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33 - (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n  dst[9] = d * (tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33 - (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n  dst[10] = d * (tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33 - (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n  dst[11] = d * (tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23 - (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n  dst[12] = d * (tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12 - (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n  dst[13] = d * (tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22 - (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n  dst[14] = d * (tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02 - (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n  dst[15] = d * (tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12 - (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n  return dst;\n}\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param {module:twgl/m4.Mat4} a The matrix on the left.\n * @param {module:twgl/m4.Mat4} b The matrix on the right.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The matrix product of a and b.\n * @memberOf module:twgl/m4\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new MatType(16);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4 + 0];\n  var a11 = a[4 + 1];\n  var a12 = a[4 + 2];\n  var a13 = a[4 + 3];\n  var a20 = a[8 + 0];\n  var a21 = a[8 + 1];\n  var a22 = a[8 + 2];\n  var a23 = a[8 + 3];\n  var a30 = a[12 + 0];\n  var a31 = a[12 + 1];\n  var a32 = a[12 + 2];\n  var a33 = a[12 + 3];\n  var b00 = b[0];\n  var b01 = b[1];\n  var b02 = b[2];\n  var b03 = b[3];\n  var b10 = b[4 + 0];\n  var b11 = b[4 + 1];\n  var b12 = b[4 + 2];\n  var b13 = b[4 + 3];\n  var b20 = b[8 + 0];\n  var b21 = b[8 + 1];\n  var b22 = b[8 + 2];\n  var b23 = b[8 + 3];\n  var b30 = b[12 + 0];\n  var b31 = b[12 + 1];\n  var b32 = b[12 + 2];\n  var b33 = b[12 + 3];\n  dst[0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n  return dst;\n}\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param {module:twgl/m4.Mat4} a The matrix.\n * @param {Vec3} v The vector.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} a once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction setTranslation(a, v, dst) {\n  dst = dst || identity();\n\n  if (a !== dst) {\n    dst[0] = a[0];\n    dst[1] = a[1];\n    dst[2] = a[2];\n    dst[3] = a[3];\n    dst[4] = a[4];\n    dst[5] = a[5];\n    dst[6] = a[6];\n    dst[7] = a[7];\n    dst[8] = a[8];\n    dst[9] = a[9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} [dst] vector..\n * @return {Vec3} The translation component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getTranslation(m, dst) {\n  dst = dst || v3.create();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\n * @return {Vec3} [dst] vector.\n * @return {Vec3} The axis component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getAxis(m, axis, dst) {\n  dst = dst || v3.create();\n  var off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param {Vec3} v the axis vector\n * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\n * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If none a new one is created\n * @return {module:twgl/m4.Mat4} dst\n * @memberOf module:twgl/m4\n */\n\n\nfunction setAxis(a, v, axis, dst) {\n  if (dst !== a) {\n    dst = copy(a, dst);\n  }\n\n  var off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\n * @param {number} aspect The aspect ratio width / height.\n * @param {number} zNear The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} zFar The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n  dst = dst || new MatType(16);\n  var f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n  var rangeInv = 1.0 / (zNear - zFar);\n  dst[0] = f / aspect;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = f;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = (zNear + zFar) * rangeInv;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = zNear * zFar * rangeInv * 2;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 othogonal transformation matrix given the left, right,\n * bottom, and top dimensions of the near clipping plane as well as the\n * near and far clipping plane distances.\n * @param {number} left Left side of the near clipping plane viewport.\n * @param {number} right Right side of the near clipping plane viewport.\n * @param {number} top Top of the near clipping plane viewport.\n * @param {number} bottom Bottom of the near clipping plane viewport.\n * @param {number} near The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} far The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction ortho(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 2 / (right - left);\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 / (top - bottom);\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 2 / (near - far);\n  dst[11] = 0;\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = (far + near) / (near - far);\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective projection matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction frustum(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  var dx = right - left;\n  var dy = top - bottom;\n  var dz = near - far;\n  dst[0] = 2 * near / dx;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 * near / dy;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = (left + right) / dx;\n  dst[9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 look-at transformation.\n *\n * This is a matrix which positions the camera itself. If you want\n * a view matrix (a matrix which moves things in front of the camera)\n * take the inverse of this.\n *\n * @param {Vec3} eye The position of the eye.\n * @param {Vec3} target The position meant to be viewed.\n * @param {Vec3} up A vector pointing up.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The look-at matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction lookAt(eye, target, up, dst) {\n  dst = dst || new MatType(16);\n  var xAxis = tempV3a;\n  var yAxis = tempV3b;\n  var zAxis = tempV3c;\n  v3.normalize(v3.subtract(eye, target, zAxis), zAxis);\n  v3.normalize(v3.cross(up, zAxis, xAxis), xAxis);\n  v3.normalize(v3.cross(zAxis, xAxis, yAxis), yAxis);\n  dst[0] = xAxis[0];\n  dst[1] = xAxis[1];\n  dst[2] = xAxis[2];\n  dst[3] = 0;\n  dst[4] = yAxis[0];\n  dst[5] = yAxis[1];\n  dst[6] = yAxis[2];\n  dst[7] = 0;\n  dst[8] = zAxis[0];\n  dst[9] = zAxis[1];\n  dst[10] = zAxis[2];\n  dst[11] = 0;\n  dst[12] = eye[0];\n  dst[13] = eye[1];\n  dst[14] = eye[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param {Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The translation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translation(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by translation by the given vector v.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translate(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[0] = m00;\n    dst[1] = m01;\n    dst[2] = m02;\n    dst[3] = m03;\n    dst[4] = m10;\n    dst[5] = m11;\n    dst[6] = m12;\n    dst[7] = m13;\n    dst[8] = m20;\n    dst[9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationX(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = c;\n  dst[6] = s;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = -s;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the x-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateX(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[4] = c * m10 + s * m20;\n  dst[5] = c * m11 + s * m21;\n  dst[6] = c * m12 + s * m22;\n  dst[7] = c * m13 + s * m23;\n  dst[8] = c * m20 - s * m10;\n  dst[9] = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[3] = m[3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationY(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = 0;\n  dst[2] = -s;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = s;\n  dst[9] = 0;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the y-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateY(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 - s * m20;\n  dst[1] = c * m01 - s * m21;\n  dst[2] = c * m02 - s * m22;\n  dst[3] = c * m03 - s * m23;\n  dst[8] = c * m20 + s * m00;\n  dst[9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[4] = m[4];\n    dst[5] = m[5];\n    dst[6] = m[6];\n    dst[7] = m[7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationZ(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = s;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = -s;\n  dst[5] = c;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the z-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateZ(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 + s * m10;\n  dst[1] = c * m01 + s * m11;\n  dst[2] = c * m02 + s * m12;\n  dst[3] = c * m03 + s * m13;\n  dst[4] = c * m10 - s * m00;\n  dst[5] = c * m11 - s * m01;\n  dst[6] = c * m12 - s * m02;\n  dst[7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[8] = m[8];\n    dst[9] = m[9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param {Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\n *     around the axis.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotation(axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  dst[0] = xx + (1 - xx) * c;\n  dst[1] = x * y * oneMinusCosine + z * s;\n  dst[2] = x * z * oneMinusCosine - y * s;\n  dst[3] = 0;\n  dst[4] = x * y * oneMinusCosine - z * s;\n  dst[5] = yy + (1 - yy) * c;\n  dst[6] = y * z * oneMinusCosine + x * s;\n  dst[7] = 0;\n  dst[8] = x * z * oneMinusCosine + y * s;\n  dst[9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by rotation around the given axis by the\n * given angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotate(m, axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  var r00 = xx + (1 - xx) * c;\n  var r01 = x * y * oneMinusCosine + z * s;\n  var r02 = x * z * oneMinusCosine - y * s;\n  var r10 = x * y * oneMinusCosine - z * s;\n  var r11 = yy + (1 - yy) * c;\n  var r12 = y * z * oneMinusCosine + x * s;\n  var r20 = x * z * oneMinusCosine + y * s;\n  var r21 = y * z * oneMinusCosine - x * s;\n  var r22 = zz + (1 - zz) * c;\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  dst[0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param {Vec3} v A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The scaling matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scaling(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = v[0];\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = v[1];\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = v[2];\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix, scaling in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param {module:twgl/m4.Mat4} m The matrix to be modified.\n * @param {Vec3} v A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scale(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2];\n  dst[3] = v0 * m[0 * 4 + 3];\n  dst[4] = v1 * m[1 * 4 + 0];\n  dst[5] = v1 * m[1 * 4 + 1];\n  dst[6] = v1 * m[1 * 4 + 2];\n  dst[7] = v1 * m[1 * 4 + 3];\n  dst[8] = v2 * m[2 * 4 + 0];\n  dst[9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The point.\n * @param {Vec3} dst optional vec3 to store result\n * @return {Vec3} dst or new vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformPoint(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n  dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\n  dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\n  dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n * direction, transforms that direction by the matrix, and returns the result;\n * assumes the transformation of 3-dimensional space represented by the matrix\n * is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion. Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The direction.\n * @param {Vec3} dst optional Vec3 to store result\n * @return {Vec3} dst or new Vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformDirection(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n * as a normal to a surface, and computes a vector which is normal upon\n * transforming that surface by the matrix. The effect of this function is the\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\n * function assumes the transformation of 3-dimensional space represented by the\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion.  Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The normal.\n * @param {Vec3} [dst] The direction.\n * @return {Vec3} The transformed direction.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformNormal(m, v, dst) {\n  dst = dst || v3.create();\n  var mi = inverse(m);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttribsFromArrays = createAttribsFromArrays;\nexports.createBuffersFromArrays = createBuffersFromArrays;\nexports.createBufferFromArray = createBufferFromArray;\nexports.createBufferFromTypedArray = createBufferFromTypedArray;\nexports.createBufferInfoFromArrays = createBufferInfoFromArrays;\nexports.setAttribInfoBufferFromArray = setAttribInfoBufferFromArray;\nexports.setAttributePrefix = setAttributePrefix;\nexports.setAttributeDefaults_ = setDefaults;\nexports.getNumComponents_ = getNumComponents;\nexports.getArray_ = getArray;\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level attribute and buffer related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/attributes\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  attribPrefix: \"\"\n};\n/**\n * Sets the default attrib prefix\n *\n * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n * as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n *\n * In otherwords I'll create arrays of geometry like this\n *\n *     var arrays = {\n *       position: ...\n *       normal: ...\n *       texcoord: ...\n *     };\n *\n * But need those mapped to attributes and my attributes start with `a_`.\n *\n * @deprecated see {@link module:twgl.setDefaults}\n * @param {string} prefix prefix for attribs\n * @memberOf module:twgl/attributes\n */\n\nfunction setAttributePrefix(prefix) {\n  defaults.attribPrefix = prefix;\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n}\n\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || gl.STATIC_DRAW);\n}\n/**\n * Given typed array creates a WebGLBuffer and copies the typed array\n * into it.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n * @return {WebGLBuffer} the created WebGLBuffer\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\n  if (helper.isBuffer(gl, typedArray)) {\n    return typedArray;\n  }\n\n  type = type || gl.ARRAY_BUFFER;\n  var buffer = gl.createBuffer();\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n  return buffer;\n}\n\nfunction isIndices(name) {\n  return name === \"indices\";\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n}\n\nfunction getArray(array) {\n  return array.length ? array : array.data;\n}\n\nvar texcoordRE = /coord|texture/i;\nvar colorRE = /color|colour/i;\n\nfunction guessNumComponentsFromName(name, length) {\n  var numComponents;\n\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3; // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw \"Can not guess numComponents for attribute '\" + name + \"'. Tried \" + numComponents + \" but \" + length + \" values is not evenly divisible by \" + numComponents + \". You should specify it.\";\n  }\n\n  return numComponents;\n}\n\nfunction getNumComponents(array, arrayName) {\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\n}\n\nfunction makeTypedArray(array, name) {\n  if (typedArrays.isArrayBuffer(array)) {\n    return array;\n  }\n\n  if (typedArrays.isArrayBuffer(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array\n    };\n  }\n\n  var Type = array.type;\n\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint16Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n\n  return new Type(array.data);\n}\n/**\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n * for the attribute.\n *\n * @typedef {Object} AttribInfo\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] synonym for `numComponents`.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {number} [divisor] the divisor in instances. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * Use this type of array spec when TWGL can't guess the type or number of compoments of an array\n * @typedef {Object} FullArraySpec\n * @property {(number|number[]|ArrayBufferView)} data The data of the array. A number alone becomes the number of elements of type.\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n *    If `coord` is in the name assumes `numComponents = 2`.\n *    If `color` is in the name assumes `numComponents = 4`.\n *    otherwise assumes `numComponents = 3`\n * @property {constructor} type The type. This is only used if `data` is a JavaScript array. It is the constructor for the typedarray. (eg. `Uint8Array`).\n * For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: Uint8Array, data: [255,0,255,255, ...], }`.\n * @property {number} [size] synonym for `numComponents`.\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n * @property {string} [name] synonym for `attrib`.\n * @property {string} [attribName] synonym for `attrib`.\n * @memberOf module:twgl\n */\n\n/**\n * An individual array in {@link module:twgl.Arrays}\n *\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\n *\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\n * @memberOf module:twgl\n */\n\n/**\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n * @memberOf module:twgl\n */\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      var arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      var attribs = {\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * notes:\n *\n * *   Arrays can take various forms\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {module:twgl.Arrays} arrays The arrays\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createAttribsFromArrays(gl, arrays) {\n  var attribs = {};\n  Object.keys(arrays).forEach(function (arrayName) {\n    if (!isIndices(arrayName)) {\n      var array = arrays[arrayName];\n      var attribName = array.attrib || array.name || array.attribName || defaults.attribPrefix + arrayName;\n      var buffer;\n      var type;\n      var normalization;\n      var numComponents;\n      var numValues;\n\n      if (typeof array === \"number\" || typeof array.data === \"number\") {\n        numValues = array.data || array;\n        var arrayType = array.type || Float32Array;\n        var numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\n        type = typedArrays.getGLTypeForTypedArrayType(arrayType);\n        normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\n        numComponents = array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues);\n        buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, numBytes, array.drawType || gl.STATIC_DRAW);\n      } else {\n        var typedArray = makeTypedArray(array, arrayName);\n        buffer = createBufferFromTypedArray(gl, typedArray, undefined, array.drawType);\n        type = typedArrays.getGLTypeForTypedArray(typedArray);\n        normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArray(typedArray);\n        numComponents = getNumComponents(array, arrayName);\n        numValues = typedArray.length;\n      }\n\n      attribs[attribName] = {\n        buffer: buffer,\n        numComponents: numComponents,\n        type: type,\n        normalize: normalization,\n        stride: array.stride || 0,\n        offset: array.offset || 0,\n        divisor: array.divisor === undefined ? undefined : array.divisor,\n        drawType: array.drawType\n      };\n    }\n  });\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  return attribs;\n}\n/**\n * Sets the contents of a buffer attached to an attribInfo\n *\n * This is helper function to dynamically update a buffer.\n *\n * Let's say you make a bufferInfo\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n *  And you want to dynamically upate the positions. You could do this\n *\n *     // assuming arrays.position has already been updated with new data.\n *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\n *\n * @param {WebGLRenderingContext} gl\n * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\n *   the name of the attribute will include the prefix.\n * @param {ArraySpec} array Note: it is arguably ineffient to pass in anything but a typed array because anything\n *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\n *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\n * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\n *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\n *    for the portion of the array you want to use.\n *\n *        var someArray = new Float32Array(1000); // an array with 1000 floats\n *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\n *\n *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\n * @memberOf module:twgl/attributes\n */\n\n\nfunction setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\n  array = makeTypedArray(array);\n\n  if (offset !== undefined) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, attribInfo.buffer);\n    gl.bufferSubData(gl.ARRAY_BUFFER, offset, array);\n  } else {\n    setBufferFromTypedArray(gl, gl.ARRAY_BUFFER, attribInfo.buffer, array, attribInfo.drawType);\n  }\n}\n\nfunction getBytesPerValueForGLType(gl, type) {\n  if (type === gl.BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.INT) return 4; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_INT) return 4; // eslint-disable-line\n\n  if (type === gl.FLOAT) return 4; // eslint-disable-line\n\n  return 0;\n}\n/**\n * tries to get the number of elements from a set of arrays.\n */\n\n\nvar positionKeys = ['position', 'positions', 'a_position'];\n\nfunction getNumElementsFromNonIndexedArrays(arrays) {\n  var key;\n\n  for (var _ii = 0; _ii < positionKeys.length; ++_ii) {\n    key = positionKeys[_ii];\n\n    if (key in arrays) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(arrays)[0];\n  }\n\n  var array = arrays[key];\n  var length = getArray(array).length;\n  var numComponents = getNumComponents(array, key);\n  var numElements = length / numComponents;\n\n  if (length % numComponents > 0) {\n    throw \"numComponents \" + numComponents + \" not correct for length \" + length;\n  }\n\n  return numElements;\n}\n\nfunction getNumElementsFromAttributes(gl, attribs) {\n  var key;\n  var ii;\n\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n\n    if (key in attribs) {\n      break;\n    }\n\n    key = defaults.attribPrefix + key;\n\n    if (key in attribs) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(attribs)[0];\n  }\n\n  var attrib = attribs[key];\n  gl.bindBuffer(gl.ARRAY_BUFFER, attrib.buffer);\n  var numBytes = gl.getBufferParameter(gl.ARRAY_BUFFER, gl.BUFFER_SIZE);\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  var bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\n  var totalElements = numBytes / bytesPerValue;\n  var numComponents = attrib.numComponents || attrib.size; // TODO: check stride\n\n  var numElements = totalElements / numComponents;\n\n  if (numElements % 1 !== 0) {\n    throw \"numComponents \" + numComponents + \" not correct for length \" + length;\n  }\n\n  return numElements;\n}\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs approriate to call `setAttributes`\n * @memberOf module:twgl\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * Given an object like\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         a_position: { buffer: WebGLBuffer, numComponents: 3, },\n *         a_normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         a_texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     var arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also by TypedArrays\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or augmentedTypedArrays\n *\n *     var positions = createAugmentedTypedArray(3, 4);\n *     var texcoords = createAugmentedTypedArray(2, 4);\n *     var normals   = createAugmentedTypedArray(3, 4);\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     var arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     var bufferInfo = {\n *       attribs: {\n *         a_position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         a_texcoods: { numComponents: 2, buffer: gl.createBuffer(), },\n *         a_normals: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.Arrays} arrays Your data\n * @return {module:twgl.BufferInfo} A BufferInfo\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferInfoFromArrays(gl, arrays) {\n  var bufferInfo = {\n    attribs: createAttribsFromArrays(gl, arrays)\n  };\n  var indices = arrays.indices;\n\n  if (indices) {\n    var newIndices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, gl.ELEMENT_ARRAY_BUFFER);\n    bufferInfo.numElements = newIndices.length;\n    bufferInfo.elementType = typedArrays.getGLTypeForTypedArray(newIndices);\n  } else {\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\n  }\n\n  return bufferInfo;\n}\n/**\n * Creates a buffer from an array, typed array, or array spec\n *\n * Given something like this\n *\n *     [1, 2, 3],\n *\n * or\n *\n *     new Uint16Array([1,2,3]);\n *\n * or\n *\n *     {\n *        data: [1, 2, 3],\n *        type: Uint8Array,\n *     }\n *\n * returns a WebGLBuffer that constains the given data.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\n * @param {string} arrayName name of array. Used to guess the type if type can not be dervied other wise.\n * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromArray(gl, array, arrayName) {\n  var type = arrayName === \"indices\" ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;\n  var typedArray = makeTypedArray(array, arrayName);\n  return createBufferFromTypedArray(gl, typedArray, type);\n}\n/**\n * Creates buffers from arrays or typed arrays\n *\n * Given something like this\n *\n *     var arrays = {\n *        positions: [1, 2, 3],\n *        normals: [0, 0, 1],\n *     }\n *\n * returns something like\n *\n *     buffers = {\n *       positions: WebGLBuffer,\n *       normals: WebGLBuffer,\n *     }\n *\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.Arrays} arrays\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBuffersFromArrays(gl, arrays) {\n  var buffers = {};\n  Object.keys(arrays).forEach(function (key) {\n    buffers[key] = createBufferFromArray(gl, arrays[key], key);\n  }); // Ugh!\n\n  if (arrays.indices) {\n    buffers.numElements = arrays.indices.length;\n    buffers.elementType = typedArrays.getGLTypeForTypedArray(makeTypedArray(arrays.indices), 'indices');\n  } else {\n    buffers.numElements = getNumElementsFromNonIndexedArrays(arrays);\n  }\n\n  return buffers;\n}\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.setTextureDefaults_ = setDefaults;\nexports.createSampler = createSampler;\nexports.createSamplers = createSamplers;\nexports.setSamplerParameters = setSamplerParameters;\nexports.createTexture = createTexture;\nexports.setEmptyTexture = setEmptyTexture;\nexports.setTextureFromArray = setTextureFromArray;\nexports.loadTextureFromUrl = loadTextureFromUrl;\nexports.setTextureFromElement = setTextureFromElement;\nexports.setTextureFilteringForSize = setTextureFilteringForSize;\nexports.setTextureParameters = setTextureParameters;\nexports.setDefaultTextureColor = setDefaultTextureColor;\nexports.createTextures = createTextures;\nexports.resizeTexture = resizeTexture;\nexports.getNumComponentsForFormat = getNumComponentsForFormat;\nexports.getBytesPerElementForInternalFormat = getBytesPerElementForInternalFormat;\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level texture related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.textures` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/textures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  textureColor: new Uint8Array([128, 192, 255, 255]),\n  textureOptions: {},\n  crossOrigin: undefined\n};\nvar isArrayBuffer = typedArrays.isArrayBuffer; // Should we make this on demand?\n\nvar ctx = _globalObject.default.document && _globalObject.default.document.createElement ? _globalObject.default.document.createElement(\"canvas\").getContext(\"2d\") : null; // NOTE: Chrome supports 2D canvas in a Worker (behind flag as of v64 but\n//       not only does Firefox NOT support it but Firefox freezes immediately\n//       if you try to create one instead of just returning null and continuing.\n//  : (global.OffscreenCanvas && (new global.OffscreenCanvas(1, 1)).getContext(\"2d\"));  // OffscreenCanvas may not support 2d\n// NOTE: We can maybe remove some of the need for the 2d canvas. In WebGL2\n// we can use the various unpack settings. Otherwise we could try using\n// the ability of an imagebitmap to be cut. Unfortunately cutting an imagebitmap\n// is async and the current TWGL code expects a non-Async result though that\n// might not be a problem. ImageBitmap though is not available in Edge or Safari\n// as of 2018-01-02\n\n/* PixelFormat */\n\nvar ALPHA = 0x1906;\nvar RGB = 0x1907;\nvar RGBA = 0x1908;\nvar LUMINANCE = 0x1909;\nvar LUMINANCE_ALPHA = 0x190A;\nvar DEPTH_COMPONENT = 0x1902;\nvar DEPTH_STENCIL = 0x84F9;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\nvar R8 = 0x8229;\nvar R8_SNORM = 0x8F94;\nvar R16F = 0x822D;\nvar R32F = 0x822E;\nvar R8UI = 0x8232;\nvar R8I = 0x8231;\nvar RG16UI = 0x823A;\nvar RG16I = 0x8239;\nvar RG32UI = 0x823C;\nvar RG32I = 0x823B;\nvar RG8 = 0x822B;\nvar RG8_SNORM = 0x8F95;\nvar RG16F = 0x822F;\nvar RG32F = 0x8230;\nvar RG8UI = 0x8238;\nvar RG8I = 0x8237;\nvar R16UI = 0x8234;\nvar R16I = 0x8233;\nvar R32UI = 0x8236;\nvar R32I = 0x8235;\nvar RGB8 = 0x8051;\nvar SRGB8 = 0x8C41;\nvar RGB565 = 0x8D62;\nvar RGB8_SNORM = 0x8F96;\nvar R11F_G11F_B10F = 0x8C3A;\nvar RGB9_E5 = 0x8C3D;\nvar RGB16F = 0x881B;\nvar RGB32F = 0x8815;\nvar RGB8UI = 0x8D7D;\nvar RGB8I = 0x8D8F;\nvar RGB16UI = 0x8D77;\nvar RGB16I = 0x8D89;\nvar RGB32UI = 0x8D71;\nvar RGB32I = 0x8D83;\nvar RGBA8 = 0x8058;\nvar SRGB8_ALPHA8 = 0x8C43;\nvar RGBA8_SNORM = 0x8F97;\nvar RGB5_A1 = 0x8057;\nvar RGBA4 = 0x8056;\nvar RGB10_A2 = 0x8059;\nvar RGBA16F = 0x881A;\nvar RGBA32F = 0x8814;\nvar RGBA8UI = 0x8D7C;\nvar RGBA8I = 0x8D8E;\nvar RGB10_A2UI = 0x906F;\nvar RGBA16UI = 0x8D76;\nvar RGBA16I = 0x8D88;\nvar RGBA32I = 0x8D82;\nvar RGBA32UI = 0x8D70;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar DEPTH_COMPONENT24 = 0x81A6;\nvar DEPTH_COMPONENT32F = 0x8CAC;\nvar DEPTH32F_STENCIL8 = 0x8CAD;\nvar DEPTH24_STENCIL8 = 0x88F0;\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar HALF_FLOAT_OES = 0x8D61; // Thanks Khronos for making this different >:(\n\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar RG = 0x8227;\nvar RG_INTEGER = 0x8228;\nvar RED = 0x1903;\nvar RED_INTEGER = 0x8D94;\nvar RGB_INTEGER = 0x8D98;\nvar RGBA_INTEGER = 0x8D99;\nvar formatInfo = {};\n{\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\n  // the name.\n  var f = formatInfo;\n  f[ALPHA] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE_ALPHA] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RED] = {\n    numColorComponents: 1\n  };\n  f[RED_INTEGER] = {\n    numColorComponents: 1\n  };\n  f[RG] = {\n    numColorComponents: 2\n  };\n  f[RG_INTEGER] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGB_INTEGER] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RGBA_INTEGER] = {\n    numColorComponents: 4\n  };\n  f[DEPTH_COMPONENT] = {\n    numColorComponents: 1\n  };\n  f[DEPTH_STENCIL] = {\n    numColorComponents: 2\n  };\n}\nvar textureInternalFormatInfo = {};\n{\n  // NOTE: these properties need unique names so we can let Uglify mangle the name.\n  var t = textureInternalFormatInfo; // unsized formats\n\n  t[ALPHA] = {\n    textureFormat: ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE] = {\n    textureFormat: LUMINANCE,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE_ALPHA] = {\n    textureFormat: LUMINANCE_ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [2, 4, 4, 8],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[RGB] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 6, 6, 12, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGBA] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 8, 8, 16, 2, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1]\n  }; // sized formats\n\n  t[R8] = {\n    textureFormat: RED,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 1,\n    type: UNSIGNED_BYTE\n  };\n  t[R8_SNORM] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 1,\n    type: BYTE\n  };\n  t[R16F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[R32F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT\n  };\n  t[R8UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 1,\n    type: UNSIGNED_BYTE\n  };\n  t[R8I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 1,\n    type: BYTE\n  };\n  t[R16UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: UNSIGNED_SHORT\n  };\n  t[R16I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: SHORT\n  };\n  t[R32UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT\n  };\n  t[R32I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: INT\n  };\n  t[RG8] = {\n    textureFormat: RG,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 2,\n    type: UNSIGNED_BYTE\n  };\n  t[RG8_SNORM] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 2,\n    type: BYTE\n  };\n  t[RG16F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [8, 4],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RG32F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: FLOAT\n  };\n  t[RG8UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: UNSIGNED_BYTE\n  };\n  t[RG8I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: BYTE\n  };\n  t[RG16UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_SHORT\n  };\n  t[RG16I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: SHORT\n  };\n  t[RG32UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: UNSIGNED_INT\n  };\n  t[RG32I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: INT\n  };\n  t[RGB8] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[SRGB8] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[RGB565] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGB8_SNORM] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: BYTE\n  };\n  t[R11F_G11F_B10F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_10F_11F_11F_REV]\n  };\n  t[RGB9_E5] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_5_9_9_9_REV]\n  };\n  t[RGB16F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGB32F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: FLOAT\n  };\n  t[RGB8UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[RGB8I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 3,\n    type: BYTE\n  };\n  t[RGB16UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 6,\n    type: UNSIGNED_SHORT\n  };\n  t[RGB16I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 6,\n    type: SHORT\n  };\n  t[RGB32UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: UNSIGNED_INT\n  };\n  t[RGB32I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: INT\n  };\n  t[RGBA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[SRGB8_ALPHA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[RGBA8_SNORM] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: BYTE\n  };\n  t[RGB5_A1] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2, 4],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_5_5_1, UNSIGNED_INT_2_10_10_10_REV]\n  };\n  t[RGBA4] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_4_4_4_4]\n  };\n  t[RGB10_A2] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_2_10_10_10_REV\n  };\n  t[RGBA16F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [16, 8],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGBA32F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: FLOAT\n  };\n  t[RGBA8UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[RGBA8I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: BYTE\n  };\n  t[RGB10_A2UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_2_10_10_10_REV\n  };\n  t[RGBA16UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: UNSIGNED_SHORT\n  };\n  t[RGBA16I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: SHORT\n  };\n  t[RGBA32I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: INT\n  };\n  t[RGBA32UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: UNSIGNED_INT\n  }; // Sized Internal\n\n  t[DEPTH_COMPONENT16] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2, 4],\n    type: [UNSIGNED_SHORT, UNSIGNED_INT]\n  };\n  t[DEPTH_COMPONENT24] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT\n  };\n  t[DEPTH_COMPONENT32F] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT\n  };\n  t[DEPTH24_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_24_8\n  };\n  t[DEPTH32F_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT_32_UNSIGNED_INT_24_8_REV\n  };\n  Object.keys(t).forEach(function (internalFormat) {\n    var info = t[internalFormat];\n    info.bytesPerElementMap = {};\n\n    if (Array.isArray(info.bytesPerElement)) {\n      info.bytesPerElement.forEach(function (bytesPerElement, ndx) {\n        var type = info.type[ndx];\n        info.bytesPerElementMap[type] = bytesPerElement;\n      });\n    } else {\n      var type = info.type;\n      info.bytesPerElementMap[type] = info.bytesPerElement;\n    }\n  });\n}\n/**\n * Gets the number of bytes per element for a given internalFormat / type\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {number} the number of bytes per element for the given internalFormat, type combo\n * @memberOf module:twgl/textures\n */\n\nfunction getBytesPerElementForInternalFormat(internalFormat, type) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  var bytesPerElement = info.bytesPerElementMap[type];\n\n  if (bytesPerElement === undefined) {\n    throw \"unknown internal format\";\n  }\n\n  return bytesPerElement;\n}\n/**\n * Gets the format for a given internalFormat\n *\n * @param {number} internalFormat The internal format\n * @return {{format:number, type:number}} the corresponding format and type\n */\n\n\nfunction getFormatAndTypeForInternalFormat(internalFormat) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return {\n    format: info.textureFormat,\n    type: Array.isArray(info.type) ? info.type[0] : info.type\n  };\n}\n/**\n * Returns true if value is power of 2\n * @param {number} value number to check.\n * @return true if value is power of 2\n */\n\n\nfunction isPowerOf2(value) {\n  return (value & value - 1) === 0;\n}\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {boolean} true if we can generate mips\n */\n\n\nfunction canGenerateMipmap(gl, width, height, internalFormat\n/*, type */\n) {\n  if (!utils.isWebGL2(gl)) {\n    return isPowerOf2(width) && isPowerOf2(height);\n  }\n\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.colorRenderable && info.textureFilterable;\n}\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {boolean} true if we can generate mips\n */\n\n\nfunction canFilter(internalFormat\n/*, type */\n) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.textureFilterable;\n}\n/**\n * Gets the number of compontents for a given image format.\n * @param {number} format the format.\n * @return {number} the number of components for the format.\n * @memberOf module:twgl/textures\n */\n\n\nfunction getNumComponentsForFormat(format) {\n  var info = formatInfo[format];\n\n  if (!info) {\n    throw \"unknown format: \" + format;\n  }\n\n  return info.numColorComponents;\n}\n/**\n * Gets the texture type for a given array type.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @return {number} the gl texture type\n */\n\n\nfunction getTextureTypeForArrayType(gl, src, defaultType) {\n  if (isArrayBuffer(src)) {\n    return typedArrays.getGLTypeForTypedArray(src);\n  }\n\n  return defaultType || gl.UNSIGNED_BYTE;\n}\n\nfunction guessDimensions(gl, target, width, height, numElements) {\n  if (numElements % 1 !== 0) {\n    throw \"can't guess dimensions\";\n  }\n\n  if (!width && !height) {\n    var size = Math.sqrt(numElements / (target === gl.TEXTURE_CUBE_MAP ? 6 : 1));\n\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width;\n\n    if (height % 1) {\n      throw \"can't guess dimensions\";\n    }\n  } else if (!width) {\n    width = numElements / height;\n\n    if (width % 1) {\n      throw \"can't guess dimensions\";\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Sets the default texture color.\n *\n * The default texture color is used when loading textures from\n * urls. Because the URL will be loaded async we'd like to be\n * able to use the texture immediately. By putting a 1x1 pixel\n * color in the texture we can start using the texture before\n * the URL has loaded.\n *\n * @param {number[]} color Array of 4 values in the range 0 to 1\n * @deprecated see {@link module:twgl.setDefaults}\n * @memberOf module:twgl/textures\n */\n\n\nfunction setDefaultTextureColor(color) {\n  defaults.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n\n  if (newDefaults.textureColor) {\n    setDefaultTextureColor(newDefaults.textureColor);\n  }\n}\n/**\n * A function to generate the source for a texture.\n * @callback TextureFunc\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options the texture options\n * @return {*} Returns any of the things documentented for `src` for {@link module:twgl.TextureOptions}.\n * @memberOf module:twgl\n */\n\n/**\n * Texture options passed to most texture functions. Each function will use whatever options\n * are appropriate for its needs. This lets you pass the same options to all functions.\n *\n * Note: A `TexImageSource` is defined in the WebGL spec as a `HTMLImageElement`, `HTMLVideoElement`,\n * `HTMLCanvasElement`, `ImageBitmap`, or `ImageData`.\n *\n * @typedef {Object} TextureOptions\n * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\n * @property {number} [level] the mip level to affect. Defaults to 0. Note, if set auto will be considered false unless explicitly set to true.\n * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\n * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\n * @property {number} [depth] the depth of a texture. Only used if src is an array or type array or null and target is `TEXTURE_3D` .\n * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\n *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\n * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\n * @property {number} [minMag] both the min and mag filter settings.\n * @property {number} [internalFormat] internal format for texture. Defaults to `gl.RGBA`\n * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\n * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBufferView. If `src`\n *     is ArrayBufferView defaults to type that matches ArrayBufferView type.\n * @property {number} [wrap] Texture wrapping for both S and T (and R if TEXTURE_3D or WebGLSampler). Defaults to `gl.REPEAT` for 2D unless src is WebGL1 and src not npot and `gl.CLAMP_TO_EDGE` for cube\n * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapR] Texture wrapping for R. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [minLod] TEXTURE_MIN_LOD setting\n * @property {number} [maxLod] TEXTURE_MAX_LOD setting\n * @property {number} [baseLevel] TEXTURE_BASE_LEVEL setting\n * @property {number} [maxLevel] TEXTURE_MAX_LEVEL setting\n * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\n * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {(number[]|ArrayBufferView)} color color used as temporary 1x1 pixel color for textures loaded async when src is a string.\n *    If it's a JavaScript array assumes color is 0 to 1 like most GL colors as in `[1, 0, 0, 1] = red=1, green=0, blue=0, alpha=0`.\n *    Defaults to `[0.5, 0.75, 1, 1]`. See {@link module:twgl.setDefaultTextureColor}. If `false` texture is set. Can be used to re-load a texture\n * @property {boolean} [auto] If `undefined` or `true`, in WebGL1, texture filtering is set automatically for non-power of 2 images and\n *    mips are generated for power of 2 images. In WebGL2 mips are generated if they can be. Note: if `level` is set above\n *    then then `auto` is assumed to be `false` unless explicity set to `true`.\n * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\n *\n *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n *\n * @property {(number[]|ArrayBufferView|TexImageSource|TexImageSource[]|string|string[]|module:twgl.TextureFunc)} [src] source for texture\n *\n *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\n *    1x1 pixel texture will be returned immediatley. The texture will be updated once the image has downloaded.\n *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\n *    The pieces will be uploaded in `cubeFaceOrder`\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_CUBE_MAP` then it must have 6 entries, one for each face of a cube map.\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_2D_ARRAY` then eact entry is a slice of the a 2d array texture\n *    and will be scaled to the specified width and height OR to the size of the first image that loads.\n *\n *    If `TexImageSource` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\n *    `HTMLCanvasElement`, `HTMLVideoElement`.\n *\n *    If `number[]` or `ArrayBufferView` it's assumed to be data for a texture. If `width` or `height` is\n *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponents`\n *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\n *    by 6. Then\n *\n *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\n *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\n *\n *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\n *\n * If `number[]` will be converted to `type`.\n *\n * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\n * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\n * an array etc...\n *\n * If `src` is undefined then an empty texture will be created of size `width` by `height`.\n *\n * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\n *    default: undefined. Also see {@link module:twgl.setDefaults}.\n *\n * @memberOf module:twgl\n */\n// NOTE: While querying GL is considered slow it's not remotely as slow\n// as uploading a texture. On top of that you're unlikely to call this in\n// a perf critical loop. Even if upload a texture every frame that's unlikely\n// to be more than 1 or 2 textures a frame. In other words, the benefits of\n// making the API easy to use outweigh any supposed perf benefits\n//\n// Also note I get that having one global of these is bad practice.\n// As long as it's used correctly it means no garbage which probably\n// doesn't matter when dealing with textures but old habits die hard.\n\n\nvar lastPackState = {};\n/**\n * Saves any packing state that will be set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\nfunction savePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    lastPackState.colorspaceConversion = gl.getParameter(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL);\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    lastPackState.premultiplyAlpha = gl.getParameter(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    lastPackState.flipY = gl.getParameter(gl.UNPACK_FLIP_Y_WEBGL);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, options.flipY);\n  }\n}\n/**\n * Restores any packing state that was set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction restorePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, lastPackState.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, lastPackState.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, lastPackState.flipY);\n  }\n}\n/**\n * Saves state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction saveSkipState(gl) {\n  lastPackState.unpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n\n  if (utils.isWebGL2(gl)) {\n    lastPackState.unpackRowLength = gl.getParameter(gl.UNPACK_ROW_LENGTH);\n    lastPackState.unpackImageHeight = gl.getParameter(gl.UNPACK_IMAGE_HEIGHT);\n    lastPackState.unpackSkipPixels = gl.getParameter(gl.UNPACK_SKIP_PIXELS);\n    lastPackState.unpackSkipRows = gl.getParameter(gl.UNPACK_SKIP_ROWS);\n    lastPackState.unpackSkipImages = gl.getParameter(gl.UNPACK_SKIP_IMAGES);\n  }\n}\n/**\n * Restores state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction restoreSkipState(gl) {\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, lastPackState.unpackAlignment);\n\n  if (utils.isWebGL2(gl)) {\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, lastPackState.unpackRowLength);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, lastPackState.unpackImageHeight);\n    gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, lastPackState.unpackSkipPixels);\n    gl.pixelStorei(gl.UNPACK_SKIP_ROWS, lastPackState.unpackSkipRows);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, lastPackState.unpackSkipImages);\n  }\n}\n/**\n * Sets the parameters of a texture or sampler\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number|WebGLSampler} target texture target or sampler\n * @param {function()} parameteriFn texParamteri or samplerParameteri fn\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n */\n\n\nfunction setTextureSamplerParameters(gl, target, parameteriFn, options) {\n  if (options.minMag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.minMag);\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.minMag);\n  }\n\n  if (options.min) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.min);\n  }\n\n  if (options.mag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.mag);\n  }\n\n  if (options.wrap) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrap);\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrap);\n\n    if (target === gl.TEXTURE_3D || helper.isSampler(gl, target)) {\n      parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrap);\n    }\n  }\n\n  if (options.wrapR) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrapR);\n  }\n\n  if (options.wrapS) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrapS);\n  }\n\n  if (options.wrapT) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrapT);\n  }\n\n  if (options.minLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_LOD, options.minLod);\n  }\n\n  if (options.maxLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LOD, options.maxLod);\n  }\n\n  if (options.baseLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_BASE_LEVEL, options.baseLevel);\n  }\n\n  if (options.maxLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LEVEL, options.maxLevel);\n  }\n}\n/**\n * Sets the texture parameters of a texture.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureParameters(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  setTextureSamplerParameters(gl, target, gl.texParameteri, options);\n}\n/**\n * Sets the sampler parameters of a sampler.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLSampler} sampler the WebGLSampler to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setSamplerParameters(gl, sampler, options) {\n  setTextureSamplerParameters(gl, sampler, gl.samplerParameteri, options);\n}\n/**\n * Creates a new sampler object and sets parameters.\n *\n * Example:\n *\n *      const sampler = twgl.createSampler(gl, {\n *        minMag: gl.NEAREST,         // sets both TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER\n *        wrap: gl.CLAMP_TO_NEAREST,  // sets both TEXTURE_WRAP_S and TEXTURE_WRAP_T and TEXTURE_WRAP_R\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per sampler.\n * @return {Object.<string,WebGLSampler>} the created samplers by name\n */\n\n\nfunction createSampler(gl, options) {\n  var sampler = gl.createSampler();\n  setSamplerParameters(gl, sampler, options);\n  return sampler;\n}\n/**\n * Creates a multiple sampler objects and sets parameters on each.\n *\n * Example:\n *\n *      const samplers = twgl.createSamplers(gl, {\n *        nearest: {\n *          minMag: gl.NEAREST,\n *        },\n *        nearestClampS: {\n *          minMag: gl.NEAREST,\n *          wrapS: gl.CLAMP_TO_NEAREST,\n *        },\n *        linear: {\n *          minMag: gl.LINEAR,\n *        },\n *        nearestClamp: {\n *          minMag: gl.NEAREST,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClamp: {\n *          minMag: gl.LINEAR,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClampT: {\n *          minMag: gl.LINEAR,\n *          wrapT: gl.CLAMP_TO_EDGE,\n *        },\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set on the sampler\n */\n\n\nfunction createSamplers(gl, samplerOptions) {\n  var samplers = {};\n  Object.keys(samplerOptions).forEach(function (name) {\n    samplers[name] = createSampler(gl, samplerOptions[name]);\n  });\n  return samplers;\n}\n/**\n * Makes a 1x1 pixel\n * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\n * @param {(number[]|ArrayBufferView)} [color] The color using 0-1 values\n * @return {Uint8Array} Unit8Array with color.\n */\n\n\nfunction make1Pixel(color) {\n  color = color || defaults.textureColor;\n\n  if (isArrayBuffer(color)) {\n    return color;\n  }\n\n  return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n/**\n * Sets filtering or generates mips for texture based on width or height\n * If width or height is not passed in uses `options.width` and//or `options.height`\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @param {number} [width] width of texture\n * @param {number} [height] height of texture\n * @param {number} [internalFormat] The internalFormat parameter from texImage2D etc..\n * @param {number} [type] The type parameter for texImage2D etc..\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type) {\n  options = options || defaults.textureOptions;\n  internalFormat = internalFormat || gl.RGBA;\n  type = type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n  width = width || options.width;\n  height = height || options.height;\n  gl.bindTexture(target, tex);\n\n  if (canGenerateMipmap(gl, width, height, internalFormat, type)) {\n    gl.generateMipmap(target);\n  } else {\n    var filtering = canFilter(internalFormat, type) ? gl.LINEAR : gl.NEAREST;\n    gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n}\n\nfunction shouldAutomaticallySetTextureFilteringForSize(options) {\n  return options.auto === true || options.auto === undefined && options.level === undefined;\n}\n/**\n * Gets an array of cubemap face enums\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @return {number[]} cubemap face enums\n */\n\n\nfunction getCubeFaceOrder(gl, options) {\n  options = options || {};\n  return options.cubeFaceOrder || [gl.TEXTURE_CUBE_MAP_POSITIVE_X, gl.TEXTURE_CUBE_MAP_NEGATIVE_X, gl.TEXTURE_CUBE_MAP_POSITIVE_Y, gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, gl.TEXTURE_CUBE_MAP_POSITIVE_Z, gl.TEXTURE_CUBE_MAP_NEGATIVE_Z];\n}\n/**\n * @typedef {Object} FaceInfo\n * @property {number} face gl enum for texImage2D\n * @property {number} ndx face index (0 - 5) into source data\n * @ignore\n */\n\n/**\n * Gets an array of FaceInfos\n * There's a bug in some NVidia drivers that will crash the driver if\n * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\n * the user's desired order from his faces to WebGL and make sure we\n * do the faces in WebGL order\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundent but\n *    it's needed internally to sort the array of `ndx` properties by `face`.\n */\n\n\nfunction getCubeFacesWithNdx(gl, options) {\n  var faces = getCubeFaceOrder(gl, options); // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\n\n  var facesWithNdx = faces.map(function (face, ndx) {\n    return {\n      face: face,\n      ndx: ndx\n    };\n  });\n  facesWithNdx.sort(function (a, b) {\n    return a.face - b.face;\n  });\n  return facesWithNdx;\n}\n/**\n * Set a texture from the contents of an element. Will also set\n * texture filtering or generate mips based on the dimensions of the element\n * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\n * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {HTMLElement} element a canvas, img, or video element.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @kind function\n */\n\n\nfunction setTextureFromElement(gl, tex, element, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  var level = options.level || 0;\n  var width = element.width;\n  var height = element.height;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // guess the parts\n    var imgWidth = element.width;\n    var imgHeight = element.height;\n    var size;\n    var slices;\n\n    if (imgWidth / 6 === imgHeight) {\n      // It's 6x1\n      size = imgHeight;\n      slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\n    } else if (imgHeight / 6 === imgWidth) {\n      // It's 1x6\n      size = imgWidth;\n      slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\n    } else if (imgWidth / 3 === imgHeight / 2) {\n      // It's 3x2\n      size = imgWidth / 3;\n      slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\n    } else if (imgWidth / 2 === imgHeight / 3) {\n      // It's 2x3\n      size = imgWidth / 2;\n      slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\n    } else {\n      throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\n    }\n\n    if (ctx) {\n      ctx.canvas.width = size;\n      ctx.canvas.height = size;\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size;\n        ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\n        gl.texImage2D(f.face, level, internalFormat, format, type, ctx.canvas);\n      }); // Free up the canvas memory\n\n      ctx.canvas.width = 1;\n      ctx.canvas.height = 1;\n    } else if (_globalObject.default.createImageBitmap) {\n      // NOTE: It seems like we should prefer ImageBitmap because unlike canvas it's\n      // note lossy? (alpha is not premultiplied? although I'm not sure what\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size; // We can't easily use a default texture color here as it would have to match\n        // the type across all faces where as with a 2D one there's only one face\n        // so we're replacing everything all at once. It also has to be the correct size.\n        // On the other hand we need all faces to be the same size so as one face loads\n        // the rest match else the texture will be unrenderable.\n\n        gl.texImage2D(f.face, level, internalFormat, size, size, 0, format, type, null);\n\n        _globalObject.default.createImageBitmap(element, xOffset, yOffset, size, size, {\n          premultiplyAlpha: 'none',\n          colorSpaceConversion: 'none'\n        }).then(function (imageBitmap) {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex);\n          gl.texImage2D(f.face, level, internalFormat, format, type, imageBitmap);\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n          }\n        });\n      });\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    var smallest = Math.min(element.width, element.height);\n    var largest = Math.max(element.width, element.height);\n    var depth = largest / smallest;\n\n    if (depth % 1 !== 0) {\n      throw \"can not compute 3D dimensions of element\";\n    }\n\n    var xMult = element.width === largest ? 1 : 0;\n    var yMult = element.height === largest ? 1 : 0;\n    saveSkipState(gl);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, element.width);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, 0);\n    gl.texImage3D(target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null);\n\n    for (var d = 0; d < depth; ++d) {\n      var srcX = d * smallest * xMult;\n      var srcY = d * smallest * yMult;\n      gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, srcX);\n      gl.pixelStorei(gl.UNPACK_SKIP_ROWS, srcY);\n      gl.texSubImage3D(target, level, 0, 0, d, smallest, smallest, 1, format, type, element);\n    }\n\n    restoreSkipState(gl);\n  } else {\n    gl.texImage2D(target, level, internalFormat, format, type, element);\n  }\n\n  restorePackState(gl, options);\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n}\n\nfunction noop() {}\n/**\n * Loads an image\n * @param {string} url url to image\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @return {HTMLImageElement} the image being loaded.\n */\n\n\nfunction loadImage(url, crossOrigin, callback) {\n  callback = callback || noop;\n  var img;\n\n  if (_globalObject.default.Image) {\n    img = new _globalObject.default.Image();\n    crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults.crossOrigin;\n\n    if (crossOrigin !== undefined) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    var clearEventHandlers = function clearEventHandlers() {\n      img.removeEventListener('error', onError); // eslint-disable-line\n\n      img.removeEventListener('load', onLoad); // eslint-disable-line\n\n      img = null;\n    };\n\n    var onError = function onError() {\n      var msg = \"couldn't load image: \" + url;\n      helper.error(msg);\n      callback(msg, img);\n      clearEventHandlers();\n    };\n\n    var onLoad = function onLoad() {\n      callback(null, img);\n      clearEventHandlers();\n    };\n\n    img.addEventListener('error', onError);\n    img.addEventListener('load', onLoad);\n    img.src = url;\n    return img;\n  } else if (_globalObject.default.ImageBitmap) {\n    var err;\n    var bm;\n\n    var cb = function cb() {\n      callback(err, bm);\n    };\n\n    var options = {};\n\n    if (crossOrigin) {\n      options.mode = 'cors'; // TODO: not sure how to translate image.crossOrigin\n    }\n\n    fetch(url, options).then(function (response) {\n      if (!response.ok) {\n        throw response;\n      }\n\n      return response.blob();\n    }).then(function (blob) {\n      return _globalObject.default.createImageBitmap(blob, {\n        premultiplyAlpha: 'none',\n        colorSpaceConversion: 'none'\n      });\n    }).then(function (bitmap) {\n      // not sure if this works. We don't want\n      // to catch the user's error. So, call\n      // the callback in a timeout so we're\n      // not in this scope inside the promise.\n      bm = bitmap;\n      setTimeout(cb);\n    }).catch(function (e) {\n      err = e;\n      setTimeout(cb);\n    });\n    img = null;\n  }\n\n  return img;\n}\n/**\n * check if object is a TexImageSource\n *\n * @param {Object} obj Object to test\n * @return {boolean} true if object is a TexImageSource\n */\n\n\nfunction isTexImageSource(obj) {\n  return _globalObject.default.ImageBitmap && obj instanceof _globalObject.default.ImageBitmap || _globalObject.default.ImageData && obj instanceof _globalObject.default.ImageData || _globalObject.default.HTMLElement && obj instanceof _globalObject.default.HTMLElement;\n}\n/**\n * if obj is an TexImageSource then just\n * uses it otherwise if obj is a string\n * then load it first.\n *\n * @param {string|TexImageSource} obj\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n */\n\n\nfunction loadAndUseImage(obj, crossOrigin, callback) {\n  if (isTexImageSource(obj)) {\n    setTimeout(function () {\n      callback(null, obj);\n    });\n    return obj;\n  }\n\n  return loadImage(obj, crossOrigin, callback);\n}\n/**\n * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\n * the default texture color is used which can be set by calling `setDefaultTextureColor`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureTo1PixelColor(gl, tex, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n\n  if (options.color === false) {\n    return;\n  } // Assume it's a URL\n  // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\n\n\n  var color = make1Pixel(options.color);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, 0, gl.RGBA, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  } else {\n    gl.texImage2D(target, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  }\n}\n/**\n * The src image(s) used to create a texture.\n *\n * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\n * you can pass in urls for images to load into the textures. If it's a single url\n * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\n * this will be a corresponding array of images for the cubemap.\n *\n * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback TextureReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} texture the texture.\n * @param {module:twgl.TextureSrc} souce image(s) used to as the src for the texture\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when all images have finished downloading and been uploaded into their respective textures\n * @callback TexturesReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\n * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback CubemapReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each face.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback ThreeDReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each slice.\n * @memberOf module:twgl\n */\n\n/**\n * Loads a texture from an image from a Url as specified in `options.src`\n * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\n * immediately useable. It will be updated with the contents of the image once the image has finished\n * downloading. Filtering options will be set as approriate for image unless `options.auto === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\n *    be non null if there was an error.\n * @return {HTMLImageElement} the image being downloaded.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadTextureFromUrl(gl, tex, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var img = loadAndUseImage(options.src, options.crossOrigin, function (err, img) {\n    if (err) {\n      callback(err, tex, img);\n    } else {\n      setTextureFromElement(gl, tex, img, options);\n      callback(null, tex, img);\n    }\n  });\n  return img;\n}\n/**\n * Loads a cubemap from 6 urls or TexImageSources as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadCubemapFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n\n  if (urls.length !== 6) {\n    throw \"there must be 6 urls for a cubemap\";\n  }\n\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n\n  if (target !== gl.TEXTURE_CUBE_MAP) {\n    throw \"target must be TEXTURE_CUBE_MAP\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = 6;\n  var errors = [];\n  var faces = getCubeFaceOrder(gl, options);\n  var imgs; // eslint-disable-line\n\n  function uploadImg(faceTarget) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        if (img.width !== img.height) {\n          errors.push(\"cubemap face img is not a square: \" + img.src);\n        } else {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex); // So assuming this is the first image we now have one face that's img sized\n          // and 5 faces that are 1x1 pixel so size the other faces\n\n          if (numToLoad === 5) {\n            // use the default order\n            getCubeFaceOrder(gl).forEach(function (otherTarget) {\n              // Should we re-use the same face or a color?\n              gl.texImage2D(otherTarget, level, internalFormat, format, type, img);\n            });\n          } else {\n            gl.texImage2D(faceTarget, level, internalFormat, format, type, img);\n          }\n\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            gl.generateMipmap(target);\n          }\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(faces[ndx]));\n  });\n}\n/**\n * Loads a 2d array or 3d texture from urls OR TexImageSources as specified in `options.src`.\n * Will set the texture to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n *\n * If the width and height is not specified the width and height of the first\n * image loaded will be used. Note that since images are loaded async\n * which image downloads first is unknown.\n *\n * If an image is not the same size as the width and height it will be scaled\n * to that width and height.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.ThreeDReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadSlicesFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D_ARRAY;\n\n  if (target !== gl.TEXTURE_3D && target !== gl.TEXTURE_2D_ARRAY) {\n    throw \"target must be TEXTURE_3D or TEXTURE_2D_ARRAY\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = urls.length;\n  var errors = [];\n  var imgs; // eslint-disable-line\n\n  var level = options.level || 0;\n  var width = options.width;\n  var height = options.height;\n  var depth = urls.length;\n  var firstImage = true;\n\n  function uploadImg(slice) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        savePackState(gl, options);\n        gl.bindTexture(target, tex);\n\n        if (firstImage) {\n          firstImage = false;\n          width = options.width || img.width;\n          height = options.height || img.height;\n          gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null); // put it in every slice otherwise some slices will be 0,0,0,0\n\n          for (var s = 0; s < depth; ++s) {\n            gl.texSubImage3D(target, level, 0, 0, s, width, height, 1, format, type, img);\n          }\n        } else {\n          var src = img;\n\n          if (img.width !== width || img.height !== height) {\n            // Size the image to fix\n            src = ctx.canvas;\n            ctx.canvas.width = width;\n            ctx.canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n          }\n\n          gl.texSubImage3D(target, level, 0, 0, slice, width, height, 1, format, type, src); // free the canvas memory\n\n          if (src === ctx.canvas) {\n            ctx.canvas.width = 0;\n            ctx.canvas.height = 0;\n          }\n        }\n\n        restorePackState(gl, options);\n\n        if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n          gl.generateMipmap(target);\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(ndx));\n  });\n}\n/**\n * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\n * guess the size. See {@link module:twgl.TextureOptions}.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {(number[]|ArrayBufferView)} src An array or typed arry with texture data.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFromArray(gl, tex, src, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var width = options.width;\n  var height = options.height;\n  var depth = options.depth;\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n\n  if (!isArrayBuffer(src)) {\n    var Type = typedArrays.getTypedArrayTypeForGLType(type);\n    src = new Type(src);\n  } else if (src instanceof Uint8ClampedArray) {\n    src = new Uint8Array(src.buffer);\n  }\n\n  var bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\n  var numElements = src.byteLength / bytesPerElement; // TODO: check UNPACK_ALIGNMENT?\n\n  if (numElements % 1) {\n    throw \"length wrong size for format: \" + utils.glEnumToString(gl, format);\n  }\n\n  var dimensions;\n\n  if (target === gl.TEXTURE_3D) {\n    if (!width && !height && !depth) {\n      var size = Math.cbrt(numElements);\n\n      if (size % 1 !== 0) {\n        throw \"can't guess cube size of array of numElements: \" + numElements;\n      }\n\n      width = size;\n      height = size;\n      depth = size;\n    } else if (width && (!height || !depth)) {\n      dimensions = guessDimensions(gl, target, height, depth, numElements / width);\n      height = dimensions.width;\n      depth = dimensions.height;\n    } else if (height && (!width || !depth)) {\n      dimensions = guessDimensions(gl, target, width, depth, numElements / height);\n      width = dimensions.width;\n      depth = dimensions.height;\n    } else {\n      dimensions = guessDimensions(gl, target, width, height, numElements / depth);\n      width = dimensions.width;\n      height = dimensions.height;\n    }\n  } else {\n    dimensions = guessDimensions(gl, target, width, height, numElements);\n    width = dimensions.width;\n    height = dimensions.height;\n  }\n\n  saveSkipState(gl);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, options.unpackAlignment || 1);\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    var elementsPerElement = bytesPerElement / src.BYTES_PER_ELEMENT;\n    var faceSize = numElements / 6 * elementsPerElement;\n    getCubeFacesWithNdx(gl, options).forEach(function (f) {\n      var offset = faceSize * f.ndx;\n      var data = src.subarray(offset, offset + faceSize);\n      gl.texImage2D(f.face, level, internalFormat, width, height, 0, format, type, data);\n    });\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, src);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, src);\n  }\n\n  restorePackState(gl, options);\n  restoreSkipState(gl);\n  return {\n    width: width,\n    height: height,\n    depth: depth,\n    type: type\n  };\n}\n/**\n * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\n * You must set `options.width` and `options.height`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setEmptyTexture(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null);\n    }\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, options.width, options.height, 0, format, type, null);\n  }\n\n  restorePackState(gl, options);\n}\n/**\n * Creates a texture based on the options passed in.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\n * @return {WebGLTexture} the created texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTexture(gl, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  var tex = gl.createTexture();\n  var target = options.target || gl.TEXTURE_2D;\n  var width = options.width || 1;\n  var height = options.height || 1;\n  var internalFormat = options.internalFormat || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var type = options.type || formatType.type;\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // this should have been the default for CUBEMAPS :(\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  var src = options.src;\n\n  if (src) {\n    if (typeof src === \"function\") {\n      src = src(gl, options);\n    }\n\n    if (typeof src === \"string\") {\n      loadTextureFromUrl(gl, tex, options, callback);\n    } else if (isArrayBuffer(src) || Array.isArray(src) && (typeof src[0] === 'number' || Array.isArray(src[0]) || isArrayBuffer(src[0]))) {\n      var dimensions = setTextureFromArray(gl, tex, src, options);\n      width = dimensions.width;\n      height = dimensions.height;\n      type = dimensions.type;\n    } else if (Array.isArray(src) && (typeof src[0] === 'string' || isTexImageSource(src[0]))) {\n      if (target === gl.TEXTURE_CUBE_MAP) {\n        loadCubemapFromUrls(gl, tex, options, callback);\n      } else {\n        loadSlicesFromUrls(gl, tex, options, callback);\n      }\n    } else if (isTexImageSource(src)) {\n      setTextureFromElement(gl, tex, src, options);\n      width = src.width;\n      height = src.height;\n    } else {\n      throw \"unsupported src type\";\n    }\n  } else {\n    setEmptyTexture(gl, tex, options);\n  }\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n  return tex;\n}\n/**\n * Resizes a texture based on the options passed in.\n *\n * Note: This is not a generic resize anything function.\n * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\n * It will use `options.src` if it exists to try to determine a `type`\n * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\n * for the texture. Texture parameters will be set accordingly\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the texture to resize\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {number} [width] the new width. If not passed in will use `options.width`\n * @param {number} [height] the new height. If not passed in will use `options.height`\n * @memberOf module:twgl/textures\n */\n\n\nfunction resizeTexture(gl, tex, options, width, height) {\n  width = width || options.width;\n  height = height || options.height;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type;\n  var src = options.src;\n\n  if (!src) {\n    type = options.type || formatType.type;\n  } else if (isArrayBuffer(src) || Array.isArray(src) && typeof src[0] === 'number') {\n    type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  } else {\n    type = options.type || formatType.type;\n  }\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, width, height, 0, format, type, null);\n    }\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\n  }\n}\n/**\n * Check if a src is an async request.\n * if src is a string we're going to download an image\n * if src is an array of strings we're going to download cubemap images\n * @param {*} src The src from a TextureOptions\n * @returns {bool} true if src is async.\n */\n\n\nfunction isAsyncSrc(src) {\n  return typeof src === 'string' || Array.isArray(src) && typeof src[0] === 'string';\n}\n/**\n * Creates a bunch of textures based on the passed in options.\n *\n * Example:\n *\n *     const textures = twgl.createTextures(gl, {\n *       // a power of 2 image\n *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\n *       // a non-power of 2 image\n *       clover: { src: \"images/clover.jpg\" },\n *       // From a canvas\n *       fromCanvas: { src: ctx.canvas },\n *       // A cubemap from 6 images\n *       yokohama: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: [\n *           'images/yokohama/posx.jpg',\n *           'images/yokohama/negx.jpg',\n *           'images/yokohama/posy.jpg',\n *           'images/yokohama/negy.jpg',\n *           'images/yokohama/posz.jpg',\n *           'images/yokohama/negz.jpg',\n *         ],\n *       },\n *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\n *       goldengate: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: 'images/goldengate.jpg',\n *       },\n *       // A 2x2 pixel texture from a JavaScript array\n *       checker: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         src: [\n *           255,255,255,255,\n *           192,192,192,255,\n *           192,192,192,255,\n *           255,255,255,255,\n *         ],\n *       },\n *       // a 1x2 pixel texture from a typed array.\n *       stripe: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         format: gl.LUMINANCE,\n *         src: new Uint8Array([\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *         ]),\n *         width: 1,\n *       },\n *     });\n *\n * Now\n *\n * *   `textures.hftIcon` will be a 2d texture\n * *   `textures.clover` will be a 2d texture\n * *   `textures.fromCanvas` will be a 2d texture\n * *   `textures.yohohama` will be a cubemap texture\n * *   `textures.goldengate` will be a cubemap texture\n * *   `textures.checker` will be a 2d texture\n * *   `textures.stripe` will be a 2d texture\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\n * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\n * @return {Object.<string,WebGLTexture>} the created textures by name\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTextures(gl, textureOptions, callback) {\n  callback = callback || noop;\n  var numDownloading = 0;\n  var errors = [];\n  var textures = {};\n  var images = {};\n\n  function callCallbackIfReady() {\n    if (numDownloading === 0) {\n      setTimeout(function () {\n        callback(errors.length ? errors : undefined, textures, images);\n      }, 0);\n    }\n  }\n\n  Object.keys(textureOptions).forEach(function (name) {\n    var options = textureOptions[name];\n    var onLoadFn;\n\n    if (isAsyncSrc(options.src)) {\n      onLoadFn = function onLoadFn(err, tex, img) {\n        images[name] = img;\n        --numDownloading;\n\n        if (err) {\n          errors.push(err);\n        }\n\n        callCallbackIfReady();\n      };\n\n      ++numDownloading;\n    }\n\n    textures[name] = createTexture(gl, options, onLoadFn);\n  }); // queue the callback if there are no images to download.\n  // We do this because if your code is structured to wait for\n  // images to download but then you comment out all the async\n  // images your code would break.\n\n  callCallbackIfReady();\n  return textures;\n} // Using quotes prevents Uglify from changing the names.\n// No speed diff AFAICT.\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  m4: true,\n  v3: true,\n  primitives: true\n};\nexports.primitives = exports.v3 = exports.m4 = void 0;\n\nvar m4 = _interopRequireWildcard(__webpack_require__(6));\n\nexports.m4 = m4;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nexports.v3 = v3;\n\nvar primitives = _interopRequireWildcard(__webpack_require__(10));\n\nexports.primitives = primitives;\n\nvar _twgl = __webpack_require__(11);\n\nObject.keys(_twgl).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _twgl[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.create3DFVertices = create3DFVertices;\nexports.createAugmentedTypedArray = createAugmentedTypedArray;\nexports.createCubeVertices = createCubeVertices;\nexports.createPlaneVertices = createPlaneVertices;\nexports.createSphereVertices = createSphereVertices;\nexports.createTruncatedConeVertices = createTruncatedConeVertices;\nexports.createXYQuadVertices = createXYQuadVertices;\nexports.createCresentVertices = createCresentVertices;\nexports.createCylinderVertices = createCylinderVertices;\nexports.createTorusVertices = createTorusVertices;\nexports.createDiscVertices = createDiscVertices;\nexports.deindexVertices = deindexVertices;\nexports.flattenNormals = flattenNormals;\nexports.makeRandomVertexColors = makeRandomVertexColors;\nexports.reorientDirections = reorientDirections;\nexports.reorientNormals = reorientNormals;\nexports.reorientPositions = reorientPositions;\nexports.reorientVertices = reorientVertices;\nexports.concatVertices = concatVertices;\nexports.duplicateVertices = duplicateVertices;\nexports.createDiscBuffers = exports.createDiscBufferInfo = exports.createTorusBuffers = exports.createTorusBufferInfo = exports.createCylinderBuffers = exports.createCylinderBufferInfo = exports.createCresentBuffers = exports.createCresentBufferInfo = exports.createXYQuadBuffers = exports.createXYQuadBufferInfo = exports.createTruncatedConeBuffers = exports.createTruncatedConeBufferInfo = exports.createSphereBuffers = exports.createSphereBufferInfo = exports.createPlaneBuffers = exports.createPlaneBufferInfo = exports.createCubeBuffers = exports.createCubeBufferInfo = exports.create3DFBuffers = exports.create3DFBufferInfo = void 0;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(7));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar m4 = _interopRequireWildcard(__webpack_require__(6));\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Various functions to make simple primitives\n *\n * note: Most primitive functions come in 3 styles\n *\n * *  `createSomeShapeBufferInfo`\n *\n *    These functions are almost always the functions you want to call. They\n *    create vertices then make WebGLBuffers and create {@link module:twgl.AttribInfo}s\n *    returing a {@link module:twgl.BufferInfo} you can pass to {@link module:twgl.setBuffersAndAttributes}\n *    and {@link module:twgl.drawBufferInfo} etc...\n *\n * *  `createSomeShapeBuffers`\n *\n *    These create WebGLBuffers and put your data in them but nothing else.\n *    It's a shortcut to doing it yourself if you don't want to use\n *    the higher level functions.\n *\n * *  `createSomeShapeVertices`\n *\n *    These just create vertices, no buffers. This allows you to manipulate the vertices\n *    or add more data before generating a {@link module:twgl.BufferInfo}. Once you're finished\n *    manipulating the vertices call {@link module:twgl.createBufferInfoFromArrays}.\n *\n *    example:\n *\n *        const arrays = twgl.primitives.createPlaneArrays(1);\n *        twgl.primitives.reorientVertices(arrays, m4.rotationX(Math.PI * 0.5));\n *        const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n * @module twgl/primitives\n */\nvar getArray = attributes.getArray_; // eslint-disable-line\n\nvar getNumComponents = attributes.getNumComponents_; // eslint-disable-line\n\n/**\n * Add `push` to a typed array. It just keeps a 'cursor'\n * and allows use to `push` values into the array so we\n * don't have to manually compute offsets\n * @param {TypedArray} typedArray TypedArray to augment\n * @param {number} numComponents number of components.\n */\n\nfunction augmentTypedArray(typedArray, numComponents) {\n  var cursor = 0;\n\n  typedArray.push = function () {\n    for (var ii = 0; ii < arguments.length; ++ii) {\n      var value = arguments[ii];\n\n      if (value instanceof Array || typedArrays.isArrayBuffer(value)) {\n        for (var jj = 0; jj < value.length; ++jj) {\n          typedArray[cursor++] = value[jj];\n        }\n      } else {\n        typedArray[cursor++] = value;\n      }\n    }\n  };\n\n  typedArray.reset = function (opt_index) {\n    cursor = opt_index || 0;\n  };\n\n  typedArray.numComponents = numComponents;\n  Object.defineProperty(typedArray, 'numElements', {\n    get: function get() {\n      return this.length / this.numComponents | 0;\n    }\n  });\n  return typedArray;\n}\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param {number} numComponents number of components\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n * @return {ArrayBufferView} A typed array.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createAugmentedTypedArray(numComponents, numElements, opt_type) {\n  var Type = opt_type || Float32Array;\n  return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n}\n\nfunction allButIndices(name) {\n  return name !== \"indices\";\n}\n/**\n * Given indexed vertices creates a new set of vertices unindexed by expanding the indexed vertices.\n * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\n * @return {Object.<string, TypedArray>} The deindexed vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction deindexVertices(vertices) {\n  var indices = vertices.indices;\n  var newVertices = {};\n  var numElements = indices.length;\n\n  function expandToUnindexed(channel) {\n    var srcBuffer = vertices[channel];\n    var numComponents = srcBuffer.numComponents;\n    var dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\n\n    for (var ii = 0; ii < numElements; ++ii) {\n      var ndx = indices[ii];\n      var offset = ndx * numComponents;\n\n      for (var jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n\n    newVertices[channel] = dstBuffer;\n  }\n\n  Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\n  return newVertices;\n}\n/**\n * flattens the normals of deindexed vertices in place.\n * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\n * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\n * @memberOf module:twgl/primitives\n */\n\n\nfunction flattenNormals(vertices) {\n  if (vertices.indices) {\n    throw \"can't flatten normals of indexed vertices. deindex them first\";\n  }\n\n  var normals = vertices.normal;\n  var numNormals = normals.length;\n\n  for (var ii = 0; ii < numNormals; ii += 9) {\n    // pull out the 3 normals for this triangle\n    var nax = normals[ii + 0];\n    var nay = normals[ii + 1];\n    var naz = normals[ii + 2];\n    var nbx = normals[ii + 3];\n    var nby = normals[ii + 4];\n    var nbz = normals[ii + 5];\n    var ncx = normals[ii + 6];\n    var ncy = normals[ii + 7];\n    var ncz = normals[ii + 8]; // add them\n\n    var nx = nax + nbx + ncx;\n    var ny = nay + nby + ncy;\n    var nz = naz + nbz + ncz; // normalize them\n\n    var length = Math.sqrt(nx * nx + ny * ny + nz * nz);\n    nx /= length;\n    ny /= length;\n    nz /= length; // copy them back in\n\n    normals[ii + 0] = nx;\n    normals[ii + 1] = ny;\n    normals[ii + 2] = nz;\n    normals[ii + 3] = nx;\n    normals[ii + 4] = ny;\n    normals[ii + 5] = nz;\n    normals[ii + 6] = nx;\n    normals[ii + 7] = ny;\n    normals[ii + 8] = nz;\n  }\n\n  return vertices;\n}\n\nfunction applyFuncToV3Array(array, matrix, fn) {\n  var len = array.length;\n  var tmp = new Float32Array(3);\n\n  for (var ii = 0; ii < len; ii += 3) {\n    fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\n    array[ii] = tmp[0];\n    array[ii + 1] = tmp[1];\n    array[ii + 2] = tmp[2];\n  }\n}\n\nfunction transformNormal(mi, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n/**\n * Reorients directions by the given matrix..\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientDirections(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformDirection);\n  return array;\n}\n/**\n * Reorients normals by the inverse-transpose of the given\n * matrix..\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientNormals(array, matrix) {\n  applyFuncToV3Array(array, m4.inverse(matrix), transformNormal);\n  return array;\n}\n/**\n * Reorients positions by the given matrix. In other words, it\n * multiplies each vertex by the given matrix.\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientPositions(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformPoint);\n  return array;\n}\n/**\n * Reorients arrays by the given matrix. Assumes arrays have\n * names that contains 'pos' could be reoriented as positions,\n * 'binorm' or 'tan' as directions, and 'norm' as normals.\n *\n * @param {Object.<string, (number[]|TypedArray)>} arrays The vertices to reorient\n * @param {Matrix} matrix matrix to reorient by.\n * @return {Object.<string, (number[]|TypedArray)>} same arrays that were passed in.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientVertices(arrays, matrix) {\n  Object.keys(arrays).forEach(function (name) {\n    var array = arrays[name];\n\n    if (name.indexOf(\"pos\") >= 0) {\n      reorientPositions(array, matrix);\n    } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\n      reorientDirections(array, matrix);\n    } else if (name.indexOf(\"norm\") >= 0) {\n      reorientNormals(array, matrix);\n    }\n  });\n  return arrays;\n}\n/**\n * Creates XY quad BufferInfo\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\n * @memberOf module:twgl/primitives\n * @function createXYQuadBufferInfo\n */\n\n/**\n * Creates XY quad Buffers\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {module:twgl.BufferInfo} the created XY Quad buffers\n * @memberOf module:twgl/primitives\n * @function createXYQuadBuffers\n */\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, TypedArray> the created XY Quad vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createXYQuadVertices(size, xOffset, yOffset) {\n  size = size || 2;\n  xOffset = xOffset || 0;\n  yOffset = yOffset || 0;\n  size *= 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [xOffset + -1 * size, yOffset + -1 * size, xOffset + 1 * size, yOffset + -1 * size, xOffset + -1 * size, yOffset + 1 * size, xOffset + 1 * size, yOffset + 1 * size]\n    },\n    normal: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n    texcoord: [0, 0, 1, 0, 0, 1, 1, 1],\n    indices: [0, 1, 2, 2, 1, 3]\n  };\n}\n/**\n * Creates XZ plane BufferInfo.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {@module:twgl.BufferInfo} The created plane BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createPlaneBufferInfo\n */\n\n/**\n * Creates XZ plane buffers.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, WebGLBuffer>} The created plane buffers.\n * @memberOf module:twgl/primitives\n * @function createPlaneBuffers\n */\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, TypedArray>} The created plane vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createPlaneVertices(width, depth, subdivisionsWidth, subdivisionsDepth, matrix) {\n  width = width || 1;\n  depth = depth || 1;\n  subdivisionsWidth = subdivisionsWidth || 1;\n  subdivisionsDepth = subdivisionsDepth || 1;\n  matrix = matrix || m4.identity();\n  var numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  for (var z = 0; z <= subdivisionsDepth; z++) {\n    for (var x = 0; x <= subdivisionsWidth; x++) {\n      var u = x / subdivisionsWidth;\n      var v = z / subdivisionsDepth;\n      positions.push(width * u - width * 0.5, 0, depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  var numVertsAcross = subdivisionsWidth + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (var _z = 0; _z < subdivisionsDepth; _z++) {\n    // eslint-disable-line\n    for (var _x = 0; _x < subdivisionsWidth; _x++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_z + 0) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x, (_z + 0) * numVertsAcross + _x + 1); // Make triangle 2 of quad.\n\n      indices.push((_z + 1) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x + 1, (_z + 0) * numVertsAcross + _x + 1);\n    }\n  }\n\n  var arrays = reorientVertices({\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  }, matrix);\n  return arrays;\n}\n/**\n * Creates sphere BufferInfo.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createSphereBufferInfo\n */\n\n/**\n * Creates sphere buffers.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\n * @memberOf module:twgl/primitives\n * @function createSphereBuffers\n */\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, TypedArray>} The created sphere vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createSphereVertices(radius, subdivisionsAxis, subdivisionsHeight, opt_startLatitudeInRadians, opt_endLatitudeInRadians, opt_startLongitudeInRadians, opt_endLongitudeInRadians) {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || Math.PI * 2;\n  var latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n  var longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians; // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n\n  var numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices); // Generate the individual vertices in our vertex buffer.\n\n  for (var y = 0; y <= subdivisionsHeight; y++) {\n    for (var x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      var u = x / subdivisionsAxis;\n      var v = y / subdivisionsHeight;\n      var theta = longRange * u;\n      var phi = latRange * v;\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      var ux = cosTheta * sinPhi;\n      var uy = cosPhi;\n      var uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  var numVertsAround = subdivisionsAxis + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n\n  for (var _x2 = 0; _x2 < subdivisionsAxis; _x2++) {\n    // eslint-disable-line\n    for (var _y = 0; _y < subdivisionsHeight; _y++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_y + 0) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2); // Make triangle 2 of quad.\n\n      indices.push((_y + 1) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2 + 1);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Array of the indices of corners of each face of a cube.\n * @type {Array.<number[]>}\n */\n\n\nvar CUBE_FACE_INDICES = [[3, 7, 5, 1], // right\n[6, 2, 0, 4], // left\n[6, 7, 3, 2], // ??\n[0, 1, 5, 4], // ??\n[7, 6, 4, 5], // front\n[2, 3, 1, 0]];\n/**\n * Creates a BufferInfo for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCubeBufferInfo\n */\n\n/**\n * Creates the buffers and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCubeBuffers\n */\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\nfunction createCubeVertices(size) {\n  size = size || 1;\n  var k = size / 2;\n  var cornerVertices = [[-k, -k, -k], [+k, -k, -k], [-k, +k, -k], [+k, +k, -k], [-k, -k, +k], [+k, -k, +k], [-k, +k, +k], [+k, +k, +k]];\n  var faceNormals = [[+1, +0, +0], [-1, +0, +0], [+0, +1, +0], [+0, -1, +0], [+0, +0, +1], [+0, +0, -1]];\n  var uvCoords = [[1, 0], [0, 0], [0, 1], [1, 1]];\n  var numVertices = 6 * 4;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (var f = 0; f < 6; ++f) {\n    var faceIndices = CUBE_FACE_INDICES[f];\n\n    for (var v = 0; v < 4; ++v) {\n      var position = cornerVertices[faceIndices[v]];\n      var normal = faceNormals[f];\n      var uv = uvCoords[v]; // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n\n      positions.push(position);\n      normals.push(normal);\n      texcoords.push(uv);\n    } // Two triangles make a square face.\n\n\n    var offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a BufferInfo for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created cone BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBufferInfo\n */\n\n/**\n * Creates buffers for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created cone buffers.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBuffers\n */\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created cone vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTruncatedConeVertices(bottomRadius, topRadius, height, radialSubdivisions, verticalSubdivisions, opt_topCap, opt_bottomCap) {\n  if (radialSubdivisions < 3) {\n    throw Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  var topCap = opt_topCap === undefined ? true : opt_topCap;\n  var bottomCap = opt_bottomCap === undefined ? true : opt_bottomCap;\n  var extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n  var numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra) * 2, Uint16Array);\n  var vertsAroundEdge = radialSubdivisions + 1; // The slant of the cone is constant across its surface\n\n  var slant = Math.atan2(bottomRadius - topRadius, height);\n  var cosSlant = Math.cos(slant);\n  var sinSlant = Math.sin(slant);\n  var start = topCap ? -2 : 0;\n  var end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (var yy = start; yy <= end; ++yy) {\n    var v = yy / verticalSubdivisions;\n    var y = height * v;\n    var ringRadius = void 0;\n\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius + (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n\n    y -= height / 2;\n\n    for (var ii = 0; ii < vertsAroundEdge; ++ii) {\n      var sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      var cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      normals.push(yy < 0 || yy > verticalSubdivisions ? 0 : sin * cosSlant, yy < 0 ? -1 : yy > verticalSubdivisions ? 1 : sinSlant, yy < 0 || yy > verticalSubdivisions ? 0 : cos * cosSlant);\n      texcoords.push(ii / radialSubdivisions, 1 - v);\n    }\n  }\n\n  for (var _yy = 0; _yy < verticalSubdivisions + extra; ++_yy) {\n    // eslint-disable-line\n    for (var _ii = 0; _ii < radialSubdivisions; ++_ii) {\n      // eslint-disable-line\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 0) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii);\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 0 + _ii);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Expands RLE data\n * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param {number[]} [padding] value to add each entry with.\n * @return {number[]} the expanded rleData\n */\n\n\nfunction expandRLEData(rleData, padding) {\n  padding = padding || [];\n  var data = [];\n\n  for (var ii = 0; ii < rleData.length; ii += 4) {\n    var runLength = rleData[ii];\n    var element = rleData.slice(ii + 1, ii + 4);\n    element.push.apply(element, padding);\n\n    for (var jj = 0; jj < runLength; ++jj) {\n      data.push.apply(data, element);\n    }\n  }\n\n  return data;\n}\n/**\n * Creates 3D 'F' BufferInfo.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function create3DFBufferInfo\n */\n\n/**\n * Creates 3D 'F' buffers.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function create3DFBuffers\n */\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction create3DFVertices() {\n  var positions = [// left column front\n  0, 0, 0, 0, 150, 0, 30, 0, 0, 0, 150, 0, 30, 150, 0, 30, 0, 0, // top rung front\n  30, 0, 0, 30, 30, 0, 100, 0, 0, 30, 30, 0, 100, 30, 0, 100, 0, 0, // middle rung front\n  30, 60, 0, 30, 90, 0, 67, 60, 0, 30, 90, 0, 67, 90, 0, 67, 60, 0, // left column back\n  0, 0, 30, 30, 0, 30, 0, 150, 30, 0, 150, 30, 30, 0, 30, 30, 150, 30, // top rung back\n  30, 0, 30, 100, 0, 30, 30, 30, 30, 30, 30, 30, 100, 0, 30, 100, 30, 30, // middle rung back\n  30, 60, 30, 67, 60, 30, 30, 90, 30, 30, 90, 30, 67, 60, 30, 67, 90, 30, // top\n  0, 0, 0, 100, 0, 0, 100, 0, 30, 0, 0, 0, 100, 0, 30, 0, 0, 30, // top rung front\n  100, 0, 0, 100, 30, 0, 100, 30, 30, 100, 0, 0, 100, 30, 30, 100, 0, 30, // under top rung\n  30, 30, 0, 30, 30, 30, 100, 30, 30, 30, 30, 0, 100, 30, 30, 100, 30, 0, // between top rung and middle\n  30, 30, 0, 30, 60, 30, 30, 30, 30, 30, 30, 0, 30, 60, 0, 30, 60, 30, // top of middle rung\n  30, 60, 0, 67, 60, 30, 30, 60, 30, 30, 60, 0, 67, 60, 0, 67, 60, 30, // front of middle rung\n  67, 60, 0, 67, 90, 30, 67, 60, 30, 67, 60, 0, 67, 90, 0, 67, 90, 30, // bottom of middle rung.\n  30, 90, 0, 30, 90, 30, 67, 90, 30, 30, 90, 0, 67, 90, 30, 67, 90, 0, // front of bottom\n  30, 90, 0, 30, 150, 30, 30, 90, 30, 30, 90, 0, 30, 150, 0, 30, 150, 30, // bottom\n  0, 150, 0, 0, 150, 30, 30, 150, 30, 0, 150, 0, 30, 150, 30, 30, 150, 0, // left side\n  0, 0, 0, 0, 0, 30, 0, 150, 30, 0, 0, 0, 0, 150, 30, 0, 150, 0];\n  var texcoords = [// left column front\n  0.22, 0.19, 0.22, 0.79, 0.34, 0.19, 0.22, 0.79, 0.34, 0.79, 0.34, 0.19, // top rung front\n  0.34, 0.19, 0.34, 0.31, 0.62, 0.19, 0.34, 0.31, 0.62, 0.31, 0.62, 0.19, // middle rung front\n  0.34, 0.43, 0.34, 0.55, 0.49, 0.43, 0.34, 0.55, 0.49, 0.55, 0.49, 0.43, // left column back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // middle rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // top rung front\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // under top rung\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // between top rung and middle\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // top of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // front of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom of middle rung.\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // front of bottom\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // left side\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0];\n  var normals = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 0, 0, 1, // left column back\n  // top rung back\n  // middle rung back\n  18, 0, 0, -1, // top\n  6, 0, 1, 0, // top rung front\n  6, 1, 0, 0, // under top rung\n  6, 0, -1, 0, // between top rung and middle\n  6, 1, 0, 0, // top of middle rung\n  6, 0, 1, 0, // front of middle rung\n  6, 1, 0, 0, // bottom of middle rung.\n  6, 0, -1, 0, // front of bottom\n  6, 1, 0, 0, // bottom\n  6, 0, -1, 0, // left side\n  6, -1, 0, 0]);\n  var colors = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 200, 70, 120, // left column back\n  // top rung back\n  // middle rung back\n  18, 80, 70, 200, // top\n  6, 70, 200, 210, // top rung front\n  6, 200, 200, 70, // under top rung\n  6, 210, 100, 70, // between top rung and middle\n  6, 210, 160, 70, // top of middle rung\n  6, 70, 180, 210, // front of middle rung\n  6, 100, 70, 210, // bottom of middle rung.\n  6, 76, 210, 100, // front of bottom\n  6, 140, 210, 80, // bottom\n  6, 90, 130, 110, // left side\n  6, 160, 160, 220], [255]);\n  var numVerts = positions.length / 3;\n  var arrays = {\n    position: createAugmentedTypedArray(3, numVerts),\n    texcoord: createAugmentedTypedArray(2, numVerts),\n    normal: createAugmentedTypedArray(3, numVerts),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array)\n  };\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (var ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return arrays;\n}\n/**\n * Creates cresent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCresentBufferInfo\n */\n\n/**\n * Creates cresent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates cresent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCresentVertices(verticalRadius, outerRadius, innerRadius, thickness, subdivisionsDown, startOffset, endOffset) {\n  if (subdivisionsDown <= 0) {\n    throw Error('subdivisionDown must be > 0');\n  }\n\n  startOffset = startOffset || 0;\n  endOffset = endOffset || 1;\n  var subdivisionsThick = 2;\n  var offsetRange = endOffset - startOffset;\n  var numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  function lerp(a, b, s) {\n    return a + (b - a) * s;\n  }\n\n  function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\n    for (var z = 0; z <= subdivisionsDown; z++) {\n      var uBack = x / (subdivisionsThick - 1);\n      var v = z / subdivisionsDown;\n      var xBack = (uBack - 0.5) * 2;\n      var angle = (startOffset + v * offsetRange) * Math.PI;\n      var s = Math.sin(angle);\n      var c = Math.cos(angle);\n      var radius = lerp(verticalRadius, arcRadius, s);\n      var px = xBack * thickness;\n      var py = c * verticalRadius;\n      var pz = s * radius;\n      positions.push(px, py, pz);\n      var n = v3.add(v3.multiply([0, s, c], normalMult), normalAdd);\n      normals.push(n);\n      texcoords.push(uBack * uMult + uAdd, v);\n    }\n  } // Generate the individual vertices in our vertex buffer.\n\n\n  for (var x = 0; x < subdivisionsThick; x++) {\n    var uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\n    createArc(outerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\n    createArc(innerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\n  } // Do outer surface.\n\n\n  var indices = createAugmentedTypedArray(3, subdivisionsDown * 2 * (2 + subdivisionsThick), Uint16Array);\n\n  function createSurface(leftArcOffset, rightArcOffset) {\n    for (var z = 0; z < subdivisionsDown; ++z) {\n      // Make triangle 1 of quad.\n      indices.push(leftArcOffset + z + 0, leftArcOffset + z + 1, rightArcOffset + z + 0); // Make triangle 2 of quad.\n\n      indices.push(leftArcOffset + z + 1, rightArcOffset + z + 1, rightArcOffset + z + 0);\n    }\n  }\n\n  var numVerticesDown = subdivisionsDown + 1; // front\n\n  createSurface(numVerticesDown * 0, numVerticesDown * 4); // right\n\n  createSurface(numVerticesDown * 5, numVerticesDown * 7); // back\n\n  createSurface(numVerticesDown * 6, numVerticesDown * 2); // left\n\n  createSurface(numVerticesDown * 3, numVerticesDown * 1);\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates cylinder BufferInfo. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCylinderBufferInfo\n */\n\n/**\n * Creates cylinder buffers. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCylinderBuffers\n */\n\n/**\n * Creates cylinder vertices. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCylinderVertices(radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap) {\n  return createTruncatedConeVertices(radius, radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap);\n}\n/**\n * Creates BufferInfo for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTorusBufferInfo\n */\n\n/**\n * Creates buffers for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createTorusBuffers\n */\n\n/**\n * Creates vertices for a torus\n *\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTorusVertices(radius, thickness, radialSubdivisions, bodySubdivisions, startAngle, endAngle) {\n  if (radialSubdivisions < 3) {\n    throw Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw Error('verticalSubdivisions must be 3 or greater');\n  }\n\n  startAngle = startAngle || 0;\n  endAngle = endAngle || Math.PI * 2;\n  var range = endAngle - startAngle;\n  var radialParts = radialSubdivisions + 1;\n  var bodyParts = bodySubdivisions + 1;\n  var numVertices = radialParts * bodyParts;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * bodySubdivisions * 2, Uint16Array);\n\n  for (var slice = 0; slice < bodyParts; ++slice) {\n    var v = slice / bodySubdivisions;\n    var sliceAngle = v * Math.PI * 2;\n    var sliceSin = Math.sin(sliceAngle);\n    var ringRadius = radius + sliceSin * thickness;\n    var ny = Math.cos(sliceAngle);\n    var y = ny * thickness;\n\n    for (var ring = 0; ring < radialParts; ++ring) {\n      var u = ring / radialSubdivisions;\n      var ringAngle = startAngle + u * range;\n      var xSin = Math.sin(ringAngle);\n      var zCos = Math.cos(ringAngle);\n      var x = xSin * ringRadius;\n      var z = zCos * ringRadius;\n      var nx = xSin * sliceSin;\n      var nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (var _slice = 0; _slice < bodySubdivisions; ++_slice) {\n    // eslint-disable-line\n    for (var _ring = 0; _ring < radialSubdivisions; ++_ring) {\n      // eslint-disable-line\n      var nextRingIndex = 1 + _ring;\n      var nextSliceIndex = 1 + _slice;\n      indices.push(radialParts * _slice + _ring, radialParts * nextSliceIndex + _ring, radialParts * _slice + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + _ring, radialParts * nextSliceIndex + nextRingIndex, radialParts * _slice + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createDiscBufferInfo\n */\n\n/**\n * Creates disc buffers. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createDiscBuffers\n */\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createDiscVertices(radius, divisions, stacks, innerRadius, stackPower) {\n  if (divisions < 3) {\n    throw Error('divisions must be at least 3');\n  }\n\n  stacks = stacks ? stacks : 1;\n  stackPower = stackPower ? stackPower : 1;\n  innerRadius = innerRadius ? innerRadius : 0; // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n\n  var numVertices = (divisions + 1) * (stacks + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n  var firstIndex = 0;\n  var radiusSpan = radius - innerRadius;\n  var pointsPerStack = divisions + 1; // Build the disk one stack at a time.\n\n  for (var stack = 0; stack <= stacks; ++stack) {\n    var stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (var i = 0; i <= divisions; ++i) {\n      var theta = 2.0 * Math.PI * i / divisions;\n      var x = stackRadius * Math.cos(theta);\n      var z = stackRadius * Math.sin(theta);\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - i / divisions, stack / stacks);\n\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        var a = firstIndex + (i + 1);\n        var b = firstIndex + i;\n        var c = firstIndex + i - pointsPerStack;\n        var d = firstIndex + (i + 1) - pointsPerStack; // Make a quad of the vertices a, b, c, d.\n\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * creates a random integer between 0 and range - 1 inclusive.\n * @param {number} range\n * @return {number} random value between 0 and range - 1 inclusive.\n */\n\n\nfunction randInt(range) {\n  return Math.random() * range | 0;\n}\n/**\n * Used to supply random colors\n * @callback RandomColorFunc\n * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\n * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\n * @return {number} a number from 0 to 255\n * @memberOf module:twgl/primitives\n */\n\n/**\n * @typedef {Object} RandomVerticesOptions\n * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\n * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\n * @memberOf module:twgl/primitives\n */\n\n/**\n * Creates an augmentedTypedArray of random vertex colors.\n * If the vertices are indexed (have an indices array) then will\n * just make random colors. Otherwise assumes they are triangles\n * and makes one random color for every 3 vertices.\n * @param {Object.<string, augmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\n * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\n * @return {Object.<string, augmentedTypedArray>} same vertices as passed in with `color` added.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction makeRandomVertexColors(vertices, options) {\n  options = options || {};\n  var numElements = vertices.position.numElements;\n  var vcolors = createAugmentedTypedArray(4, numElements, Uint8Array);\n\n  var rand = options.rand || function (ndx, channel) {\n    return channel < 3 ? randInt(256) : 255;\n  };\n\n  vertices.color = vcolors;\n\n  if (vertices.indices) {\n    // just make random colors if index\n    for (var ii = 0; ii < numElements; ++ii) {\n      vcolors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\n    }\n  } else {\n    // make random colors per triangle\n    var numVertsPerColor = options.vertsPerColor || 3;\n    var numSets = numElements / numVertsPerColor;\n\n    for (var _ii2 = 0; _ii2 < numSets; ++_ii2) {\n      // eslint-disable-line\n      var color = [rand(_ii2, 0), rand(_ii2, 1), rand(_ii2, 2), rand(_ii2, 3)];\n\n      for (var jj = 0; jj < numVertsPerColor; ++jj) {\n        vcolors.push(color);\n      }\n    }\n  }\n\n  return vertices;\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a buffers for them\n */\n\n\nfunction createBufferFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBuffersFromArrays(gl, arrays);\n  };\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a bufferInfo object for them\n */\n\n\nfunction createBufferInfoFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(null, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBufferInfoFromArrays(gl, arrays);\n  };\n}\n\nvar arraySpecPropertyNames = [\"numComponents\", \"size\", \"type\", \"normalize\", \"stride\", \"offset\", \"attrib\", \"name\", \"attribName\"];\n/**\n * Copy elements from one array to another\n *\n * @param {Array|TypedArray} src source array\n * @param {Array|TypedArray} dst dest array\n * @param {number} dstNdx index in dest to copy src\n * @param {number} [offset] offset to add to copied values\n */\n\nfunction copyElements(src, dst, dstNdx, offset) {\n  offset = offset || 0;\n  var length = src.length;\n\n  for (var ii = 0; ii < length; ++ii) {\n    dst[dstNdx + ii] = src[ii] + offset;\n  }\n}\n/**\n * Creates an array of the same time\n *\n * @param {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} srcArray array who's type to copy\n * @param {number} length size of new array\n * @return {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} array with same type as srcArray\n */\n\n\nfunction createArrayOfSameType(srcArray, length) {\n  var arraySrc = getArray(srcArray);\n  var newArray = new arraySrc.constructor(length);\n  var newArraySpec = newArray; // If it appears to have been augmented make new one augemented\n\n  if (arraySrc.numComponents && arraySrc.numElements) {\n    augmentTypedArray(newArray, arraySrc.numComponents);\n  } // If it was a fullspec make new one a fullspec\n\n\n  if (srcArray.data) {\n    newArraySpec = {\n      data: newArray\n    };\n    helper.copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\n  }\n\n  return newArraySpec;\n}\n/**\n * Concatinates sets of vertices\n *\n * Assumes the vertices match in composition. For example\n * if one set of vertices has positions, normals, and indices\n * all sets of vertices must have positions, normals, and indices\n * and of the same type.\n *\n * Example:\n *\n *      const cubeVertices = twgl.primtiives.createCubeVertices(2);\n *      const sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\n *      // move the sphere 2 units up\n *      twgl.primitives.reorientVertices(\n *          sphereVertices, twgl.m4.translation([0, 2, 0]));\n *      // merge the sphere with the cube\n *      const cubeSphereVertices = twgl.primitives.concatVertices(\n *          [cubeVertices, sphereVertices]);\n *      // turn them into WebGL buffers and attrib data\n *      const bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\n *\n * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\n * @return {module:twgl.Arrays} The concatinated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction concatVertices(arrayOfArrays) {\n  var names = {};\n  var baseName; // get names of all arrays.\n  // and numElements for each set of vertices\n\n  var _loop = function _loop(ii) {\n    var arrays = arrayOfArrays[ii];\n    Object.keys(arrays).forEach(function (name) {\n      // eslint-disable-line\n      if (!names[name]) {\n        names[name] = [];\n      }\n\n      if (!baseName && name !== 'indices') {\n        baseName = name;\n      }\n\n      var arrayInfo = arrays[name];\n      var numComponents = getNumComponents(arrayInfo, name);\n      var array = getArray(arrayInfo);\n      var numElements = array.length / numComponents;\n      names[name].push(numElements);\n    });\n  };\n\n  for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n    _loop(ii);\n  } // compute length of combined array\n  // and return one for reference\n\n\n  function getLengthOfCombinedArrays(name) {\n    var length = 0;\n    var arraySpec;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n      length += array.length;\n\n      if (!arraySpec || arrayInfo.data) {\n        arraySpec = arrayInfo;\n      }\n    }\n\n    return {\n      length: length,\n      spec: arraySpec\n    };\n  }\n\n  function copyArraysToNewArray(name, base, newArray) {\n    var baseIndex = 0;\n    var offset = 0;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n\n      if (name === 'indices') {\n        copyElements(array, newArray, offset, baseIndex);\n        baseIndex += base[ii];\n      } else {\n        copyElements(array, newArray, offset);\n      }\n\n      offset += array.length;\n    }\n  }\n\n  var base = names[baseName];\n  var newArrays = {};\n  Object.keys(names).forEach(function (name) {\n    var info = getLengthOfCombinedArrays(name);\n    var newArraySpec = createArrayOfSameType(info.spec, info.length);\n    copyArraysToNewArray(name, base, getArray(newArraySpec));\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n/**\n * Creates a duplicate set of vertices\n *\n * This is useful for calling reorientVertices when you\n * also want to keep the original available\n *\n * @param {module:twgl.Arrays} arrays of vertices\n * @return {module:twgl.Arrays} The dupilicated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction duplicateVertices(arrays) {\n  var newArrays = {};\n  Object.keys(arrays).forEach(function (name) {\n    var arraySpec = arrays[name];\n    var srcArray = getArray(arraySpec);\n    var newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\n    copyElements(srcArray, getArray(newArraySpec), 0);\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\nvar create3DFBufferInfo = createBufferInfoFunc(create3DFVertices);\nexports.create3DFBufferInfo = create3DFBufferInfo;\nvar create3DFBuffers = createBufferFunc(create3DFVertices);\nexports.create3DFBuffers = create3DFBuffers;\nvar createCubeBufferInfo = createBufferInfoFunc(createCubeVertices);\nexports.createCubeBufferInfo = createCubeBufferInfo;\nvar createCubeBuffers = createBufferFunc(createCubeVertices);\nexports.createCubeBuffers = createCubeBuffers;\nvar createPlaneBufferInfo = createBufferInfoFunc(createPlaneVertices);\nexports.createPlaneBufferInfo = createPlaneBufferInfo;\nvar createPlaneBuffers = createBufferFunc(createPlaneVertices);\nexports.createPlaneBuffers = createPlaneBuffers;\nvar createSphereBufferInfo = createBufferInfoFunc(createSphereVertices);\nexports.createSphereBufferInfo = createSphereBufferInfo;\nvar createSphereBuffers = createBufferFunc(createSphereVertices);\nexports.createSphereBuffers = createSphereBuffers;\nvar createTruncatedConeBufferInfo = createBufferInfoFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBufferInfo = createTruncatedConeBufferInfo;\nvar createTruncatedConeBuffers = createBufferFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBuffers = createTruncatedConeBuffers;\nvar createXYQuadBufferInfo = createBufferInfoFunc(createXYQuadVertices);\nexports.createXYQuadBufferInfo = createXYQuadBufferInfo;\nvar createXYQuadBuffers = createBufferFunc(createXYQuadVertices);\nexports.createXYQuadBuffers = createXYQuadBuffers;\nvar createCresentBufferInfo = createBufferInfoFunc(createCresentVertices);\nexports.createCresentBufferInfo = createCresentBufferInfo;\nvar createCresentBuffers = createBufferFunc(createCresentVertices);\nexports.createCresentBuffers = createCresentBuffers;\nvar createCylinderBufferInfo = createBufferInfoFunc(createCylinderVertices);\nexports.createCylinderBufferInfo = createCylinderBufferInfo;\nvar createCylinderBuffers = createBufferFunc(createCylinderVertices);\nexports.createCylinderBuffers = createCylinderBuffers;\nvar createTorusBufferInfo = createBufferInfoFunc(createTorusVertices);\nexports.createTorusBufferInfo = createTorusBufferInfo;\nvar createTorusBuffers = createBufferFunc(createTorusVertices);\nexports.createTorusBuffers = createTorusBuffers;\nvar createDiscBufferInfo = createBufferInfoFunc(createDiscVertices);\nexports.createDiscBufferInfo = createDiscBufferInfo;\nvar createDiscBuffers = createBufferFunc(createDiscVertices);\nexports.createDiscBuffers = createDiscBuffers;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  addExtensionsToContext: true,\n  getContext: true,\n  getWebGLContext: true,\n  resizeCanvasToDisplaySize: true,\n  setDefaults: true\n};\nexports.addExtensionsToContext = addExtensionsToContext;\nexports.getContext = getContext;\nexports.getWebGLContext = getWebGLContext;\nexports.resizeCanvasToDisplaySize = resizeCanvasToDisplaySize;\nexports.setDefaults = setDefaults;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(7));\n\nObject.keys(attributes).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = attributes[key];\n});\n\nvar textures = _interopRequireWildcard(__webpack_require__(8));\n\nObject.keys(textures).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = textures[key];\n});\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nObject.keys(utils).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = utils[key];\n});\n\nvar _draw = __webpack_require__(12);\n\nObject.keys(_draw).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _draw[key];\n});\n\nvar _framebuffers = __webpack_require__(13);\n\nObject.keys(_framebuffers).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _framebuffers[key];\n});\n\nvar _programs = __webpack_require__(5);\n\nObject.keys(_programs).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _programs[key];\n});\n\nvar _typedarrays = __webpack_require__(1);\n\nObject.keys(_typedarrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _typedarrays[key];\n});\n\nvar _vertexArrays = __webpack_require__(14);\n\nObject.keys(_vertexArrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _vertexArrays[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * The main TWGL module.\n *\n * For most use cases you shouldn't need anything outside this module.\n * Exceptions between the stuff added to twgl-full (v3, m4, primitives)\n *\n * @module twgl\n * @borrows module:twgl/attributes.setAttribInfoBufferFromArray as setAttribInfoBufferFromArray\n * @borrows module:twgl/attributes.createBufferInfoFromArrays as createBufferInfoFromArrays\n * @borrows module:twgl/attributes.createVertexArrayInfo as createVertexArrayInfo\n * @borrows module:twgl/draw.drawBufferInfo as drawBufferInfo\n * @borrows module:twgl/draw.drawObjectList as drawObjectList\n * @borrows module:twgl/framebuffers.createFramebufferInfo as createFramebufferInfo\n * @borrows module:twgl/framebuffers.resizeFramebufferInfo as resizeFramebufferInfo\n * @borrows module:twgl/framebuffers.bindFramebufferInfo as bindFramebufferInfo\n * @borrows module:twgl/programs.createProgramInfo as createProgramInfo\n * @borrows module:twgl/programs.createUniformBlockInfo as createUniformBlockInfo\n * @borrows module:twgl/programs.bindUniformBlock as bindUniformBlock\n * @borrows module:twgl/programs.setUniformBlock as setUniformBlock\n * @borrows module:twgl/programs.setBlockUniforms as setBlockUniforms\n * @borrows module:twgl/programs.setUniforms as setUniforms\n * @borrows module:twgl/programs.setBuffersAndAttributes as setBuffersAndAttributes\n * @borrows module:twgl/textures.setTextureFromArray as setTextureFromArray\n * @borrows module:twgl/textures.createTexture as createTexture\n * @borrows module:twgl/textures.resizeTexture as resizeTexture\n * @borrows module:twgl/textures.createTextures as createTextures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  addExtensionsToContext: true\n};\n/**\n * Various default settings for twgl.\n *\n * Note: You can call this any number of times. Example:\n *\n *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\n *     twgl.setDefaults({ attribPrefix: 'a_' });\n *\n * is equivalent to\n *\n *     twgl.setDefaults({\n *       textureColor: [1, 0, 0, 1],\n *       attribPrefix: 'a_',\n *     });\n *\n * @typedef {Object} Defaults\n * @property {string} attribPrefix The prefix to stick on attributes\n *\n *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n *   as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n *\n *   In otherwords I'll create arrays of geometry like this\n *\n *       const arrays = {\n *         position: ...\n *         normal: ...\n *         texcoord: ...\n *       };\n *\n *   But need those mapped to attributes and my attributes start with `a_`.\n *\n *   Default: `\"\"`\n *\n * @property {number[]} textureColor Array of 4 values in the range 0 to 1\n *\n *   The default texture color is used when loading textures from\n *   urls. Because the URL will be loaded async we'd like to be\n *   able to use the texture immediately. By putting a 1x1 pixel\n *   color in the texture we can start using the texture before\n *   the URL has loaded.\n *\n *   Default: `[0.5, 0.75, 1, 1]`\n *\n * @property {string} crossOrigin\n *\n *   If not undefined sets the crossOrigin attribute on images\n *   that twgl creates when downloading images for textures.\n *\n *   Also see {@link module:twgl.TextureOptions}.\n *\n * @property {bool} addExtensionsToContext\n *\n *   If true, then, when twgl will try to add any supported WebGL extensions\n *   directly to the context under their normal GL names. For example\n *   if ANGLE_instances_arrays exists then twgl would enable it,\n *   add the functions `vertexAttribDivisor`, `drawArraysInstanced`,\n *   `drawElementsInstanced`, and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR`\n *   to the `WebGLRenderingContext`.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets various defaults for twgl.\n *\n * In the interest of terseness which is kind of the point\n * of twgl I've integrated a few of the older functions here\n *\n * @param {module:twgl.Defaults} newDefaults The default settings.\n * @memberOf module:twgl\n */\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n  attributes.setAttributeDefaults_(newDefaults); // eslint-disable-line\n\n  textures.setTextureDefaults_(newDefaults); // eslint-disable-line\n}\n\nvar prefixRE = /^(.*?)_/;\n\nfunction addExtensionToContext(gl, extensionName) {\n  utils.glEnumToString(gl, 0);\n  var ext = gl.getExtension(extensionName);\n\n  if (ext) {\n    var enums = {};\n    var fnSuffix = prefixRE.exec(extensionName)[1];\n    var enumSuffix = '_' + fnSuffix;\n\n    for (var key in ext) {\n      var value = ext[key];\n      var isFunc = typeof value === 'function';\n      var suffix = isFunc ? fnSuffix : enumSuffix;\n      var name = key; // examples of where this is not true are WEBGL_compressed_texture_s3tc\n      // and WEBGL_compressed_texture_pvrtc\n\n      if (key.endsWith(suffix)) {\n        name = key.substring(0, key.length - suffix.length);\n      }\n\n      if (gl[name] !== undefined) {\n        if (!isFunc && gl[name] !== value) {\n          helper.warn(name, gl[name], value, key);\n        }\n      } else {\n        if (isFunc) {\n          gl[name] = function (origFn) {\n            return function () {\n              return origFn.apply(ext, arguments);\n            };\n          }(value);\n        } else {\n          gl[name] = value;\n          enums[name] = value;\n        }\n      }\n    } // pass the modified enums to glEnumToString\n\n\n    enums.constructor = {\n      name: ext.constructor.name\n    };\n    utils.glEnumToString(enums, 0);\n  }\n\n  return ext;\n}\n/*\n * If you're wondering why the code doesn't just iterate\n * over all extensions using `gl.getExtensions` is that it's possible\n * some future extension is incompatible with this code. Rather than\n * have thing suddenly break it seems better to manually add to this\n * list.\n *\n */\n\n\nvar supportedExtensions = ['ANGLE_instanced_arrays', 'EXT_blend_minmax', 'EXT_color_buffer_float', 'EXT_color_buffer_half_float', 'EXT_disjoint_timer_query', 'EXT_disjoint_timer_query_webgl2', 'EXT_frag_depth', 'EXT_sRGB', 'EXT_shader_texture_lod', 'EXT_texture_filter_anisotropic', 'OES_element_index_uint', 'OES_standard_derivatives', 'OES_texture_float', 'OES_texture_float_linear', 'OES_texture_half_float', 'OES_texture_half_float_linear', 'OES_vertex_array_object', 'WEBGL_color_buffer_float', 'WEBGL_compressed_texture_atc', 'WEBGL_compressed_texture_etc1', 'WEBGL_compressed_texture_pvrtc', 'WEBGL_compressed_texture_s3tc', 'WEBGL_compressed_texture_s3tc_srgb', 'WEBGL_depth_texture', 'WEBGL_draw_buffers'];\n/**\n * Attempts to enable all of the following extensions\n * and add their functions and constants to the\n * `WebGLRenderingContext` using their normal non-extension like names.\n *\n *      ANGLE_instanced_arrays\n *      EXT_blend_minmax\n *      EXT_color_buffer_float\n *      EXT_color_buffer_half_float\n *      EXT_disjoint_timer_query\n *      EXT_disjoint_timer_query_webgl2\n *      EXT_frag_depth\n *      EXT_sRGB\n *      EXT_shader_texture_lod\n *      EXT_texture_filter_anisotropic\n *      OES_element_index_uint\n *      OES_standard_derivatives\n *      OES_texture_float\n *      OES_texture_float_linear\n *      OES_texture_half_float\n *      OES_texture_half_float_linear\n *      OES_vertex_array_object\n *      WEBGL_color_buffer_float\n *      WEBGL_compressed_texture_atc\n *      WEBGL_compressed_texture_etc1\n *      WEBGL_compressed_texture_pvrtc\n *      WEBGL_compressed_texture_s3tc\n *      WEBGL_compressed_texture_s3tc_srgb\n *      WEBGL_depth_texture\n *      WEBGL_draw_buffers\n *\n * For example if `ANGLE_instanced_arrays` exists then the functions\n * `drawArraysInstanced`, `drawElementsInstanced`, `vertexAttribDivisor`\n * and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR` are added to the\n * `WebGLRenderingContext`.\n *\n * Note that if you want to know if the extension exists you should\n * probably call `gl.getExtension` for each extension. Alternatively\n * you can check for the existance of the functions or constants that\n * are expected to be added. For example\n *\n *    if (gl.drawBuffers) {\n *      // Either WEBGL_draw_buffers was enabled OR you're running in WebGL2\n *      ....\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @memberOf module:twgl\n */\n\nfunction addExtensionsToContext(gl) {\n  for (var ii = 0; ii < supportedExtensions.length; ++ii) {\n    addExtensionToContext(gl, supportedExtensions[ii]);\n  }\n}\n/**\n * Creates a webgl context.\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\n\n\nfunction create3DContext(canvas, opt_attribs) {\n  var names = [\"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL1 context.\n *\n * Note: Will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextCreationAttirbutes} [opt_attribs] optional webgl context creation attributes\n * @memberOf module:twgl\n */\n\n\nfunction getWebGLContext(canvas, opt_attribs) {\n  var gl = create3DContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Creates a webgl context.\n *\n * Will return a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *     twgl.isWebGL2(gl);\n *\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\n\n\nfunction createContext(canvas, opt_attribs) {\n  var names = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL context.  Will create a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *    function isWebGL2(gl) {\n *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\n *    }\n *\n * Note: For a WebGL1 context will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextCreationAttirbutes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\n\n\nfunction getContext(canvas, opt_attribs) {\n  var gl = createContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Resize a canvas to match the size it's displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` or other scale value if you want to.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:twgl\n */\n\n\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  multiplier = Math.max(0, multiplier);\n  var width = canvas.clientWidth * multiplier | 0;\n  var height = canvas.clientHeight * multiplier | 0;\n\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n\n  return false;\n}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.drawBufferInfo = drawBufferInfo;\nexports.drawObjectList = drawObjectList;\n\nvar programs = _interopRequireWildcard(__webpack_require__(5));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Drawing related functions\n *\n * For backward compatibily they are available at both `twgl.draw` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/draw\n */\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @param {enum} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\n * @memberOf module:twgl/draw\n */\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\n  type = type === undefined ? gl.TRIANGLES : type;\n  var indices = bufferInfo.indices;\n  var elementType = bufferInfo.elementType;\n  var numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n\n  if (elementType || indices) {\n    if (instanceCount !== undefined) {\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset, instanceCount);\n    } else {\n      gl.drawElements(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n}\n/**\n * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\n *\n * You need either a `BufferInfo` or a `VertexArrayInfo`.\n *\n * @typedef {Object} DrawObject\n * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In otherwords `undefined` = `true`\n * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\n * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\n * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @property {Object<string, ?>} uniforms The values for the uniforms.\n *   You can pass multiple objects by putting them in an array. For example\n *\n *     var sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     var localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     var drawObj = {\n *       ...\n *       uniforms: [sharedUniforms, localUniforms],\n *     };\n *\n * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\n * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElemnts`. Defaults to bufferInfo.numElements.\n * @property {number} [instanceCount] the number of instances. Defaults to undefined.\n * @memberOf module:twgl\n */\n\n/**\n * Draws a list of objects\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n * @memberOf module:twgl/draw\n */\n\n\nfunction drawObjectList(gl, objectsToDraw) {\n  var lastUsedProgramInfo = null;\n  var lastUsedBufferInfo = null;\n  objectsToDraw.forEach(function (object) {\n    if (object.active === false) {\n      return;\n    }\n\n    var programInfo = object.programInfo;\n    var bufferInfo = object.vertexArrayInfo || object.bufferInfo;\n    var bindBuffers = false;\n    var type = object.type === undefined ? gl.TRIANGLES : object.type;\n\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program); // We have to rebind buffers when changing programs because we\n      // only bind buffers the program uses. So if 2 programs use the same\n      // bufferInfo but the 1st one uses only positions the when the\n      // we switch to the 2nd one some of the attributes will not be on.\n\n      bindBuffers = true;\n    } // Setup all the needed attributes.\n\n\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\n        gl.bindVertexArray(null);\n      }\n\n      lastUsedBufferInfo = bufferInfo;\n      programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    } // Set the uniforms.\n\n\n    programs.setUniforms(programInfo, object.uniforms); // Draw\n\n    drawBufferInfo(gl, bufferInfo, type, object.count, object.offset, object.instanceCount);\n  });\n\n  if (lastUsedBufferInfo.vertexArrayObject) {\n    gl.bindVertexArray(null);\n  }\n}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.bindFramebufferInfo = bindFramebufferInfo;\nexports.createFramebufferInfo = createFramebufferInfo;\nexports.resizeFramebufferInfo = resizeFramebufferInfo;\n\nvar textures = _interopRequireWildcard(__webpack_require__(8));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Framebuffer related functions\n *\n * For backward compatibily they are available at both `twgl.framebuffer` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/framebuffers\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar UNSIGNED_BYTE = 0x1401;\n/* PixelFormat */\n\nvar DEPTH_COMPONENT = 0x1902;\nvar RGBA = 0x1908;\n/* Framebuffer Object. */\n\nvar RGBA4 = 0x8056;\nvar RGB5_A1 = 0x8057;\nvar RGB565 = 0x8D62;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar STENCIL_INDEX = 0x1901;\nvar STENCIL_INDEX8 = 0x8D48;\nvar DEPTH_STENCIL = 0x84F9;\nvar COLOR_ATTACHMENT0 = 0x8CE0;\nvar DEPTH_ATTACHMENT = 0x8D00;\nvar STENCIL_ATTACHMENT = 0x8D20;\nvar DEPTH_STENCIL_ATTACHMENT = 0x821A;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar CLAMP_TO_EDGE = 0x812F;\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\nvar LINEAR = 0x2601;\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\n/**\n * The options for a framebuffer attachment.\n *\n * Note: For a `format` that is a texture include all the texture\n * options from {@link module:twgl.TextureOptions} for example\n * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\n * `auto` defaults to `false` for attachment textures but `min` and `mag` default\n * to `gl.LINEAR` and `wrap` defaults to `CLAMP_TO_EDGE`\n *\n * @typedef {Object} AttachmentOptions\n * @property {number} [attach] The attachment point. Defaults\n *   to `gl.COLOR_ATTACTMENT0 + ndx` unless type is a depth or stencil type\n *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\n *   on the format or attachment type.\n * @property {number} [format] The format. If one of `gl.RGBA4`,\n *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\n *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\n *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\n * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\n * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\n *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\n * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\n * @property {WebGLObject} [attachment] An existing renderbuffer or texture.\n *    If provided will attach this Object. This allows you to share\n *    attachemnts across framebuffers.\n * @memberOf module:twgl\n */\n\nvar defaultAttachments = [{\n  format: RGBA,\n  type: UNSIGNED_BYTE,\n  min: LINEAR,\n  wrap: CLAMP_TO_EDGE\n}, {\n  format: DEPTH_STENCIL\n}];\nvar attachmentsByFormat = {};\nattachmentsByFormat[DEPTH_STENCIL] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT16] = DEPTH_ATTACHMENT;\n\nfunction getAttachmentPointForFormat(format) {\n  return attachmentsByFormat[format];\n}\n\nvar renderbufferFormats = {};\nrenderbufferFormats[RGBA4] = true;\nrenderbufferFormats[RGB5_A1] = true;\nrenderbufferFormats[RGB565] = true;\nrenderbufferFormats[DEPTH_STENCIL] = true;\nrenderbufferFormats[DEPTH_COMPONENT16] = true;\nrenderbufferFormats[STENCIL_INDEX] = true;\nrenderbufferFormats[STENCIL_INDEX8] = true;\n\nfunction isRenderbufferFormat(format) {\n  return renderbufferFormats[format];\n}\n/**\n * @typedef {Object} FramebufferInfo\n * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\n * @property {WebGLObject[]} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a framebuffer and attachments.\n *\n * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n * Passing in a specific size\n *\n *     const width = 256;\n *     const height = 256;\n *     const fbi = twgl.createFramebufferInfo(gl, attachments, width, height);\n *\n * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\n * [WebGL only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\n *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction createFramebufferInfo(gl, attachments, width, height) {\n  var target = gl.FRAMEBUFFER;\n  var fb = gl.createFramebuffer();\n  gl.bindFramebuffer(target, fb);\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  attachments = attachments || defaultAttachments;\n  var colorAttachmentCount = 0;\n  var framebufferInfo = {\n    framebuffer: fb,\n    attachments: [],\n    width: width,\n    height: height\n  };\n  attachments.forEach(function (attachmentOptions) {\n    var attachment = attachmentOptions.attachment;\n    var format = attachmentOptions.format;\n    var attachmentPoint = getAttachmentPointForFormat(format);\n\n    if (!attachmentPoint) {\n      attachmentPoint = COLOR_ATTACHMENT0 + colorAttachmentCount++;\n    }\n\n    if (!attachment) {\n      if (isRenderbufferFormat(format)) {\n        attachment = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n        gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n      } else {\n        var textureOptions = Object.assign({}, attachmentOptions);\n        textureOptions.width = width;\n        textureOptions.height = height;\n\n        if (textureOptions.auto === undefined) {\n          textureOptions.auto = false;\n          textureOptions.min = textureOptions.min || textureOptions.minMag || gl.LINEAR;\n          textureOptions.mag = textureOptions.mag || textureOptions.minMag || gl.LINEAR;\n          textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n          textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n        }\n\n        attachment = textures.createTexture(gl, textureOptions);\n      }\n    }\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.framebufferRenderbuffer(target, attachmentPoint, gl.RENDERBUFFER, attachment);\n    } else if (helper.isTexture(gl, attachment)) {\n      gl.framebufferTexture2D(target, attachmentPoint, attachmentOptions.texTarget || gl.TEXTURE_2D, attachment, attachmentOptions.level || 0);\n    } else {\n      throw \"unknown attachment type\";\n    }\n\n    framebufferInfo.attachments.push(attachment);\n  });\n  return framebufferInfo;\n}\n/**\n * Resizes the attachments of a framebuffer.\n *\n * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebufferInfo}\n * because TWGL has no idea the format/type of each attachment.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments\n *         twgl.resizeFramebufferInfo(gl, fbi);\n *       }\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments to match\n *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\n *       }\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebufferInfo}.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  framebufferInfo.width = width;\n  framebufferInfo.height = height;\n  attachments = attachments || defaultAttachments;\n  attachments.forEach(function (attachmentOptions, ndx) {\n    var attachment = framebufferInfo.attachments[ndx];\n    var format = attachmentOptions.format;\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n      gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n    } else if (helper.isTexture(gl, attachment)) {\n      textures.resizeTexture(gl, attachment, attachmentOptions, width, height);\n    } else {\n      throw \"unknown attachment type\";\n    }\n  });\n}\n/**\n * Binds a framebuffer\n *\n * This function pretty much soley exists because I spent hours\n * trying to figure out why something I wrote wasn't working only\n * to realize I forget to set the viewport dimensions.\n * My hope is this function will fix that.\n *\n * It is effectively the same as\n *\n *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\n *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n *   If not passed will bind the canvas.\n * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction bindFramebufferInfo(gl, framebufferInfo, target) {\n  target = target || gl.FRAMEBUFFER;\n\n  if (framebufferInfo) {\n    gl.bindFramebuffer(target, framebufferInfo.framebuffer);\n    gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\n  } else {\n    gl.bindFramebuffer(target, null);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createVertexArrayInfo = createVertexArrayInfo;\nexports.createVAOAndSetAttributes = createVAOAndSetAttributes;\nexports.createVAOFromBufferInfo = createVAOFromBufferInfo;\n\nvar programs = _interopRequireWildcard(__webpack_require__(5));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * vertex array object related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/vertexArrays\n */\n\n/**\n * @typedef {Object} VertexArrayInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\n * @memberOf module:twgl\n */\n\n/**\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n *   who's attributes use the same attribute locations for the same purposes.\n *\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n *\n * also\n *\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n *   will affect the Vertex Array Object state.\n *\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n *\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n *    now attribute D's location.\n *\n *    So, you can pass in both shader 1 and shader 2's programInfo\n *\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n\n  if (!programInfos.length) {\n    programInfos = [programInfos];\n  }\n\n  programInfos.forEach(function (programInfo) {\n    programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  });\n  gl.bindVertexArray(null);\n  return {\n    numElements: bufferInfo.numElements,\n    elementType: bufferInfo.elementType,\n    vertexArrayObject: vao\n  };\n}\n/**\n * Creates a vertex array object and then sets the attributes on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOAndSetAttributes(gl, setters, attribs, indices) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  programs.setAttributes(setters, attribs);\n\n  if (indices) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indices);\n  } // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n  // like when creating buffers for other stuff will mess up this VAO's binding\n\n\n  gl.bindVertexArray(null);\n  return vao;\n}\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>| module:twgl.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n  return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n}\n\n/***/ })\n/******/ ]);\n});","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import {_} from 'underscore'\nimport twgl from './twgl';\nimport {gl} from './gl';\n\nfunction getGl() {\n    return gl;\n}\n\ngetGl();\n\nfunction createTextures(opts) {\n    return new Promise(function(resolve, reject) {\n        twgl.createTextures(gl, opts, function(errors, textures, images) {\n            resolve({errors, textures, images});\n        });\n    });\n}\n\nclass Loader {\n    constructor(opts) {\n        this.cache = new Map();\n        this.textureCache = new Map();\n        this.programCache = new Map();\n        this.errors = {\n            programs: new Map(),\n            textures: new Map(),\n            paths: new Map()\n        }\n        this.loading = null;\n        this.load(opts);\n    }\n\n    load(opts) {\n        let {basePath,\n            raiseOnFailure,\n            paths,\n            textures,\n            programs} = ({basePath: '', raiseOnFailure: true, ...opts});\n        // trim trailing slashes\n        basePath = basePath.replace(/\\/+$/, '');\n\n        const loadPromise = new Promise(async (resolve, reject) => {\n            if (paths) {\n                await this.loadPaths(paths, basePath, raiseOnFailure);\n            }\n\n            if (textures) {\n                let {errors, textures: tex, images} = await createTextures(textures);\n                if (errors) {\n                    console.log(errors);\n                }\n                Object.keys(tex).forEach((key) => {\n                    this.textureCache.set(key, tex[key]);\n                });\n            }\n\n            if (programs) {\n                for (let progOpts of programs) {\n                    let name = progOpts;\n                    let opts;\n\n                    if (_.isObject(progOpts)) {\n                        name = progOpts.name;\n                        opts = progOpts.opts;\n                    }\n\n                    if (this.programCache.has(name)) {\n                        console.log(`Warning: attempted to load already loaded program '${name}'`);\n                        continue;\n                    }\n\n                    const fp = _.compact([basePath, name.split('.').join('/')]).join('/');\n\n                    const vsName = `${fp}.vert`;\n                    const fsName = `${fp}.frag`;\n                    await this.loadPaths([vsName, fsName], '', raiseOnFailure);\n                    this.programCache.set(\n                        name,\n                        twgl.createProgramInfo(gl, [this.get(vsName), this.get(fsName)], opts)\n                    );\n                }\n            }\n\n            resolve(this);\n        });\n\n        this.loading = this.loading ? this.loading.then(res => loadPromise) : loadPromise;\n\n        return this.loading;\n    }\n\n    get(path) {\n        const ret = this.cache.get(path);\n        if (ret === undefined) {\n            raise `No value for key ${path}`;\n        }\n        return ret;\n    }\n\n    getTexture(name) {\n        const ret = this.textureCache.get(name);\n        if (ret === undefined) {\n            raise `No texture value for key ${path}`;\n        }\n        return ret;\n    }\n\n    getProgram(name) {\n        return this.programCache.get(name)\n    }\n\n    async loadPaths(paths, basePath, raiseOnFailure = true) {\n        for (let path of paths) {\n            if (this.cache.has(basePath + path)) {\n                console.log(`Warning: attempted to load already loaded path '${basePath + path}'`);\n                continue;\n            }\n            const contents = await this.fetch(basePath + path, raiseOnFailure);\n            if (contents) {\n                this.cache.set(basePath + path, contents);\n            }\n        }\n    }\n\n    async fetch(path, raiseOnFailure = true) {\n        const req = await fetch(path);\n\n        if (req.ok) {\n            return await req.text();\n        } else if (raiseOnFailure) {\n            throw `failed to fetch resource '${path}'; got status ${req.status} '${req.statusText}'`;\n        } else {\n            this.errors.paths.set(path, req.statusText);\n\n            return false;\n        }\n    }\n}\n\nexport {Loader};\n","import {Loader} from 'resource.js';\nimport {CoordinateConversions} from 'graphics.js';\nimport {mat3, mat4} from 'gl-matrix';\nimport {registerContext, gl} from 'gl.js';\nimport {attachFramebuffer} from 'util.js';\nimport 'vendor/webgl-debug.js'\nimport {Sprite} from './graphics/Sprite';\nimport {SpriteRenderer} from './graphics/SpriteRenderer'\nimport {Camera} from \"./graphics/Camera\";\n\n//import * as glMatrix from 'gl-matrix';\n\nfunction logGLCall(functionName, args) {\n    console.log(\"gl.\" + functionName + \"(\" +\n        WebGLDebugUtils.glFunctionArgsToString(functionName, args) + \")\");\n}\n\nfunction throwOnGLError(err, funcName, args) {\n    throw WebGLDebugUtils.glEnumToString(err) + \" was caused by call to: \" + funcName;\n}\n\nconst initCanvas = (containerId, canvasClass) => {\n    if (!containerId) {\n        throw new Error('argument containerId, id of containing element required');\n    }\n    const mountPoint = document.getElementById(containerId);\n    const canvas = document.createElement('canvas');\n    if (canvasClass) {\n        canvas.classList.add(canvasClass);\n    }\n    mountPoint.appendChild(canvas);\n\n    return canvas;\n};\n\n/**\n * options:\n * el\n * debug - default: false\n * clearColor - default: [0.4, 0.4, 0.4, 1]\n * resolution - default: { width: 352, height: 224 }\n * pixelMultiplier - default: 2\n */\nclass App {\n    constructor(options) {\n        this.clearColor = options.clearColor || [0.4, 0.4, 0.4, 1];\n        this.resolution = options.resolution || {width: 352, height: 224};\n        this.pixelMultiplier = options.pixelMultiplier || 2;\n        this.debug = options.debug;\n\n        if (typeof options.el === 'string') {\n            this.canvas = document.getElementById(options.el);\n        } else {\n            this.canvas = options.el;\n        }\n\n        // create rendering context\n        this.gl = this.canvas.getContext('webgl2');\n\n        if (this.debug) {\n            WebGLDebugUtils.init(this.gl);\n            this.gl = WebGLDebugUtils.makeDebugContext(this.gl, undefined, logGLCall);\n        }\n\n        registerContext(this.gl);\n\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n\n        this.framebuffer = attachFramebuffer(gl, this.resolution.width, this.resolution.height);\n        this.framebufferRenderer = new SpriteRenderer({\n            game: this,\n            textureInfo: {\n                texture: this.framebuffer.texture,\n                ...this.resolution\n            }\n        });\n        this.loader = new Loader();\n        this.projection = mat4.ortho(mat4.create(), 0, this.resolution.width, 0, this.resolution.height, -1, 1);\n        this.camera = new Camera(this.resolution);\n        this.cameraEnabled = true;\n        this.updateCanvasSize();\n        this.adjustViewport();\n    }\n\n    updateCanvasSize() {\n        const width = this.resolution.width * this.pixelMultiplier;\n        const height = this.resolution.height * this.pixelMultiplier;\n\n        this.canvas.style.width = `${width}px`;\n        this.canvas.style.height = `${height}px`;\n\n        this.canvas.width = width * (window.devicePixelRatio || 1);\n        this.canvas.height = height * (window.devicePixelRatio || 1);\n    }\n\n    adjustViewport() {\n        // Use device pixels rather than CSS pixels to set viewport\n        // This will handle devicePixelRatios different than 1\n        const canvas_width = this.canvas.width;\n        const canvas_height = this.canvas.height;\n\n        this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n\n        this._canvasToWorld = CoordinateConversions.canvasToWorldMatrix(\n            this.camera.matrix,\n            {width: canvas_width, height: canvas_height},\n            this.resolution\n        );\n    }\n\n    clear() {\n        this.gl.clearColor(...this.clearColor);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n    }\n\n    load(paths) {\n        return this.loader.load(paths);\n    }\n\n    getProgram(key) {\n        const ret = this.loader.getProgram(key);\n\n        if (!ret) {\n            throw `No program loaded for key '${key}'`;\n        }\n\n        return ret;\n    }\n\n    enableCamera() {\n        this.cameraEnabled = true;\n    }\n\n    disableCamera() {\n        this.cameraEnabled = false;\n    }\n\n    get canvasToWorld() {\n        return this._canvasToWorld;\n    }\n\n    get viewMatrix() {\n        let camera = mat4.create();\n        if (this.cameraEnabled) {\n            camera = this.camera.matrix;\n        }\n        return mat4.multiply(mat4.create(), this.projection, camera);\n    }\n\n    beginRenderToTexture() {\n        this.framebuffer.attach();\n        this.clear();\n    }\n\n    endRenderToTexture() {\n        this.framebuffer.detach();\n        this.adjustViewport();\n    }\n\n    start() {\n        let timestamp;\n\n        const update = time => {\n            if (!timestamp) {\n                timestamp = time;\n            }\n\n            let dt = time - timestamp;\n            timestamp = time;\n            //this.framebuffer.attach();\n\n            if (this.stage) {\n                this.stage.prerender(dt);\n\n                this.beginRenderToTexture();\n\n                this.stage.render(dt);\n\n                this.stage.postrender(dt);\n\n                this.endRenderToTexture();\n\n                this.clear();\n\n                this.framebufferRenderer.render(\n                    [new Sprite({\n                        position: [0, 0],\n                        size: [this.resolution.width, this.resolution.height]\n                    })],\n                    this.projection\n                );\n\n                // possible post fullscreen render hook here\n            }\n\n            if (this.running) {\n                requestAnimationFrame(update);\n            }\n        };\n\n        if (!this.running) {\n            requestAnimationFrame(update);\n            this.running = true;\n        }\n    }\n\n    setStage(stage) {\n        this.stage = stage;\n        stage.app = this;\n        stage.init(this);\n    }\n}\n\nexport default App;\n\nexport {\n    App,\n    initCanvas\n};\n","import * as twgl from '../../node_modules/twgl.js';\n\nexport {twgl};\n\nexport default twgl;\n","import twgl from '../twgl';\nimport {gl} from '../gl';\n\nimport vs from '../../shaders/grid.vert';\nimport fs from '../../shaders/grid.frag';\n\nexport {Grid};\n\nconst GRID_VERTICES = new Float32Array([\n    0, 0, // bottom left\n    1, 0, // bottom right\n    0, 1, // top left\n    1, 1  // top right\n]);\n\nfunction makeGridVertices({xcells, ycells}, {w, h}, {lineWidth}) {\n    const position = new Float32Array(2 * (xcells + ycells));\n    const size = new Float32Array(2 * (xcells + ycells));\n    const width = w * (xcells + 1);\n    const height = h * (ycells + 1);\n\n    for (let row = 0; row < ycells; ++row) {\n        position[2 * row] = 0;     // pos x\n        position[2 * row + 1] = row * h; // pos y\n        size[2 * row] = width;     // line length\n        size[2 * row + 1] = lineWidth; // line thickness\n    }\n\n    for (let col = 0; col < xcells; ++col) {\n        position[2 * ycells + 2 * col] = col * w; // pos x\n        position[2 * ycells + 2 * col + 1] = 0;     // pos y\n        size[2 * ycells + 2 * col] = lineWidth; // line length\n        size[2 * ycells + 2 * col + 1] = height;    // line thickness\n    }\n\n    return {\n        position,\n        size\n    }\n}\n\nlet sharedProgram = null;\n\nclass Grid {\n    constructor(options) {\n        this.resolution = options.resolution;\n\n        if (!sharedProgram) {\n            sharedProgram = twgl.createProgramInfo(gl, [vs, fs]);\n        }\n        this.programInfo = sharedProgram;\n\n        this.bufferInfo = twgl.createBufferInfoFromArrays(gl, {\n            vertex: {\n                data: GRID_VERTICES,\n                numComponents: 2,\n                divisor: 0,\n                drawType: gl.STATIC_DRAW\n            },\n            position: {\n                numComponents: 2,\n                divisor: 1,\n                drawType: gl.DYNAMIC_DRAW\n            },\n            size: {\n                numComponents: 2,\n                divisor: 1,\n                drawType: gl.DYNAMIC_DRAW\n            },\n            indices: {\n                data: [\n                    0,\n                    1,\n                    2,\n                    3\n                ]\n            }\n        });\n\n        this.vao = twgl.createVertexArrayInfo(gl, this.programInfo, this.bufferInfo);\n\n        this.grids = [];\n    }\n\n    addGrid(sx = 32, sy = 32, lineColor = [1, 1, 1, 1], lineWidth = 2) {\n        const xcells = Math.ceil(this.resolution.width / sx) + 1;\n        const ycells = Math.ceil(this.resolution.height / sy) + 1;\n        const instanceCount = xcells + ycells;\n\n        const {position, size} = makeGridVertices({xcells, ycells}, {w: sx, h: sy}, {lineWidth: lineWidth});\n\n        this.grids.push({\n            position,\n            size,\n            instanceCount,\n            lineColor,\n            sx,\n            sy\n        })\n    }\n\n    render(x, y, projection) {\n        gl.useProgram(this.programInfo.program);\n\n        twgl.setBuffersAndAttributes(gl, this.programInfo, this.vao);\n\n        const cameraPos = [x, y];\n\n        this.grids.forEach(gridInfo => {\n            const {position, size, instanceCount, lineColor, sx, sy} = gridInfo;\n\n            const offset = [cameraPos[0] % sx, cameraPos[1] % sy];\n            if (offset[0] > 0) {\n                offset[0] = offset[0] - sx;\n            }\n\n            if (offset[1] > 0) {\n                offset[1] = offset[1] - sy;\n            }\n\n            twgl.setAttribInfoBufferFromArray(\n                gl,\n                this.bufferInfo.attribs.position,\n                position\n            );\n\n            twgl.setAttribInfoBufferFromArray(\n                gl,\n                this.bufferInfo.attribs.size,\n                size\n            );\n\n            twgl.setUniforms(this.programInfo, {\n                line_color: lineColor,\n                projection: projection,\n                offset: offset\n            });\n\n            twgl.drawBufferInfo(gl, this.vao, gl.TRIANGLE_STRIP, undefined, undefined, instanceCount);\n        });\n    }\n}","module.exports = \"#version 300 es\\n\\nprecision mediump float;\\n\\nuniform vec4 line_color;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n    out_color = line_color;\\n}\\n\"","module.exports = \"#version 300 es\\n\\nlayout(location = 0) in vec2 vertex;\\nlayout(location = 1) in vec2 position;\\nlayout(location = 2) in vec2 size;\\n\\nuniform mat4 projection;\\nuniform vec2 offset;\\n\\nvoid main() {\\n    vec4 transformed_position = projection * vec4(position + size * vertex + offset, 0, 1);\\n    gl_Position = transformed_position;\\n}\\n\""],"sourceRoot":""}
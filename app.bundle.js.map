{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/gl.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/js/util.js","webpack:///./src/js/graphics/Sprite.js","webpack:///./src/js/graphics/SpriteRenderer.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/common.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2d.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat4.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec4.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/quat.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/quat2.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec2.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/js/graphics.js","webpack:///./node_modules/underscore/underscore.js","webpack:///./src/js/graphics/Camera.js","webpack:///./src/css/app.css","webpack:///./src/css/app.css?13d6","webpack:///./src/js/start.js","webpack:///./src/shaders/sprite.frag","webpack:///./src/shaders/sprite.vert","webpack:///./src/js/vendor/webgl-debug.js","webpack:///./node_modules/twgl.js/dist/4.x/twgl-full.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/js/resource.js","webpack:///./src/js/app.js","webpack:///./src/js/twgl.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_gl","gl","g","this","Function","eval","e","window","buffer","count","newElements","length","Error","set","h","b","x","isFinite","Math","max","min","abs","round","width","height","framebuffer","createFramebuffer","texture","createTexture","bindTexture","TEXTURE_2D","texStorage2D","RGBA8","texParameteri","TEXTURE_MIN_FILTER","NEAREST","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","attach","viewport","detach","src","Promise","resolve","reject","img","Image","removeListeners","removeEventListener","addEventListener","error","Sprite","options","_classCallCheck","position","size","angle","offset","backgroundColor","textureName","_twgl","_interopRequireDefault","_sprite","_sprite2","SPRITE_RECT_VERTICES","Float32Array","SpriteRenderer","_ref","game","textureInfo","loader","setup","programInfo","twgl","createProgramInfo","vs","fs","_arrays","vertex","data","numComponents","divisor","drawType","STATIC_DRAW","DYNAMIC_DRAW","texcoord","type","Int16Array","indices","bufferInfo","createBufferInfoFromArrays","vao","createVertexArrayInfo","sprites","projection","positions","sizes","offsets","forEach","sprite","spriteIndex","v","compIndex","setAttribInfoBufferFromArray","attribs","useProgram","program","setUniforms","setBuffersAndAttributes","drawBufferInfo","TRIANGLE_STRIP","undefined","EPSILON","ARRAY_TYPE","Array","RANDOM","random","setMatrixArrayType","degree","PI","toRadian","a","equals","out","clone","copy","identity","fromValues","m00","m01","m10","m11","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","sin","cos","mat2_scale","v0","v1","fromRotation","fromScaling","str","frob","sqrt","pow","LDU","L","D","U","add","subtract","exactEquals","mat2_equals","multiplyScalar","multiplyScalarAndAdd","scale","mul","sub","mat2d_create","mat2d_clone","mat2d_copy","mat2d_identity","mat2d_fromValues","tx","ty","mat2d_set","mat2d_invert","aa","ab","ac","ad","atx","aty","mat2d_determinant","mat2d_multiply","a4","a5","b4","b5","mat2d_rotate","mat2d_scale","translate","mat2d_fromRotation","mat2d_fromScaling","fromTranslation","mat2d_str","mat2d_frob","mat2d_add","mat2d_subtract","mat2d_multiplyScalar","mat2d_multiplyScalarAndAdd","mat2d_exactEquals","mat2d_equals","mat2d_mul","mat2d_sub","mat3_create","fromMat4","mat3_clone","mat3_copy","mat3_fromValues","m02","m12","m20","m21","m22","mat3_set","mat3_identity","mat3_transpose","a01","a02","a12","mat3_invert","a00","a10","a11","a20","a21","a22","b01","b11","b21","mat3_adjoint","mat3_determinant","mat3_multiply","b00","b02","b10","b12","b20","b22","mat3_translate","y","mat3_rotate","mat3_scale","mat3_fromTranslation","mat3_fromRotation","mat3_fromScaling","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","mat3_str","mat3_frob","mat3_add","mat3_subtract","mat3_multiplyScalar","mat3_multiplyScalarAndAdd","mat3_exactEquals","mat3_equals","a6","a7","a8","b6","b7","b8","mat3_mul","mat3_sub","mat4_create","mat4_clone","mat4_copy","mat4_fromValues","m03","m13","m23","m30","m31","m32","m33","mat4_set","mat4_identity","mat4_transpose","mat4_invert","mat4_adjoint","mat4_determinant","mat4_multiply","mat4_translate","mat4_scale","mat4_rotate","axis","len","rotateX","rotateY","rotateZ","mat4_fromTranslation","mat4_fromScaling","mat4_fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","mat4_fromQuat","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","mat4_str","mat4_frob","mat4_add","mat4_subtract","mat4_multiplyScalar","mat4_multiplyScalarAndAdd","mat4_exactEquals","mat4_equals","a9","a14","a15","b9","b13","b14","b15","mat4_mul","mat4_sub","vec3_create","vec3_clone","vec3_length","vec3_fromValues","vec3_copy","vec3_set","vec3_add","vec3_subtract","vec3_multiply","divide","ceil","floor","vec3_scale","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","vec3_dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","vec3_rotateX","vec3_rotateY","vec3_rotateZ","tempA","tempB","cosine","acos","vec3_str","vec3_exactEquals","vec3_equals","vec3_sub","vec3_mul","div","dist","sqrDist","vec3_len","sqrLen","vec","stride","fn","arg","vec4_create","vec4_clone","vec4_fromValues","vec4_copy","vec4_set","vec4_add","vec4_subtract","vec4_multiply","vec4_divide","vec4_ceil","vec4_floor","vec4_min","vec4_max","vec4_round","vec4_scale","vec4_scaleAndAdd","vec4_distance","vec4_squaredDistance","vec4_length","vec4_squaredLength","vec4_negate","vec4_inverse","vec4_normalize","vec4_dot","vec4_lerp","vec4_random","vectorScale","v2","v3","v4","s1","s2","vec4_transformMat4","vec4_transformQuat","ix","iy","iz","iw","vec4_str","vec4_exactEquals","vec4_equals","vec4_sub","vec4_mul","vec4_div","vec4_dist","vec4_sqrDist","vec4_len","vec4_sqrLen","vec4_forEach","quat_create","quat_identity","setAxisAngle","getAxisAngle","out_axis","quat_multiply","quat_rotateX","quat_rotateY","quat_rotateZ","calculateW","slerp","omega","cosom","sinom","scale0","scale1","quat_invert","dot","invDot","conjugate","fromMat3","fRoot","fTrace","j","k","fromEuler","halfToRad","cx","cy","cz","quat_str","quat_clone","quat_fromValues","quat_copy","quat_set","quat_add","quat_mul","quat_scale","quat_dot","quat_lerp","quat_length","quat_len","quat_squaredLength","quat_sqrLen","quat_normalize","quat_exactEquals","quat_equals","rotationTo","tmpvec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","view","quat2_create","dq","quat2_clone","quat2_fromValues","w1","fromRotationTranslationValues","quat2_fromRotationTranslation","quat2_fromTranslation","quat2_fromRotation","quat2_fromMat4","outer","quat2_copy","quat2_identity","quat2_set","getReal","getDual","setReal","setDual","quat2_getTranslation","quat2_translate","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","quat2_rotateX","quat2_rotateY","quat2_rotateZ","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","quat2_add","quat2_multiply","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","quat2_mul","quat2_scale","quat2_dot","quat2_lerp","mt","quat2_invert","sqlen","quat2_squaredLength","quat2_conjugate","quat2_length","quat2_len","quat2_sqrLen","quat2_normalize","quat2_str","quat2_exactEquals","quat2_equals","vec2_create","vec2_clone","vec2_fromValues","vec2_copy","vec2_set","vec2_add","vec2_subtract","vec2_multiply","vec2_divide","vec2_ceil","vec2_floor","vec2_min","vec2_max","vec2_round","vec2_scale","vec2_scaleAndAdd","vec2_distance","vec2_squaredDistance","vec2_length","vec2_squaredLength","vec2_negate","vec2_inverse","vec2_normalize","vec2_dot","vec2_cross","vec2_lerp","vec2_random","transformMat2","transformMat2d","vec2_transformMat3","vec2_transformMat4","vec2_rotate","p0","p1","sinC","cosC","vec2_angle","len1","len2","vec2_str","vec2_exactEquals","vec2_equals","vec2_len","vec2_sub","vec2_mul","vec2_div","vec2_dist","vec2_sqrDist","vec2_sqrLen","vec2_forEach","stylesInDom","isOldIE","memo","apply","arguments","memoize","document","all","atob","getElement","selector","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","item","domStyle","id","refs","parts","push","addStyle","listToStyles","list","newStyles","base","part","css","media","sourceMap","insertStyleElement","style","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","attrs","addAttrs","el","keys","setAttribute","obj","update","remove","result","transform","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","index","replacement","filter","Boolean","join","cssNode","childNodes","useSourceMap","toString","map","content","cssMapping","sourceMapping","toComment","sourceURLs","sources","source","sourceRoot","concat","cssWithMappingToString","mediaQuery","alreadyImportedModules","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","_glMatrix","TilemapTextureBuilder","opts","assign","_objectSpread","tileWidth","tileHeight","layers","copyIndex","TEXTURE_2D_ARRAY","texStorage3D","_this","tileWide","detectWidthInTiles","tileHigh","detectHeightInTiles","canvas","ctx","getContext","drawImage","copyTile","tileX","tileY","imageData","getImageData","_this$tileCoordinates","tileCoordinates","texSubImage3D","RGBA","UNSIGNED_BYTE","pixelStorei","UNPACK_FLIP_Y_WEBGL","isFull","maxIndex","Uint8Array","layerWidth","layerHeight","fb","READ_FRAMEBUFFER","layer","framebufferTextureLayer","readPixels","ImageData","Uint8ClampedArray","CoordinateConversions","canvasToWorldMatrix","viewMatrix","displaySize","virtualSize","acc","mat4","temp","__WEBPACK_AMD_DEFINE_RESULT__","root","self","global","previousUnderscore","_","ArrayProto","ObjProto","SymbolProto","slice","nativeIsArray","isArray","nativeKeys","nativeCreate","Ctor","_wrapped","nodeType","VERSION","builtinIteratee","optimizeCb","func","context","argCount","collection","accumulator","cb","iteratee","isFunction","isObject","matcher","Infinity","restArguments","startIndex","rest","args","baseCreate","shallowProperty","has","path","deepGet","MAX_ARRAY_INDEX","getLength","isArrayLike","each","collect","results","currentKey","createReduce","dir","initial","reducer","reduce","foldl","inject","reduceRight","foldr","find","detect","predicate","findIndex","findKey","select","every","some","any","contains","includes","include","fromIndex","guard","values","invoke","contextPath","method","pluck","where","findWhere","computed","lastComputed","shuffle","sample","last","rand","sortBy","criteria","sort","group","behavior","partition","groupBy","indexBy","countBy","reStrSymbol","toArray","isString","match","pass","first","take","array","tail","drop","compact","flatten","input","shallow","strict","output","isArguments","without","otherArrays","difference","uniq","unique","isSorted","isBoolean","seen","union","arrays","intersection","argsLength","unzip","zip","createPredicateIndexFinder","findLastIndex","sortedIndex","low","high","mid","createIndexFinder","predicateFind","isNaN","lastIndexOf","range","start","stop","step","chunk","executeBound","sourceFunc","boundFunc","callingContext","TypeError","bound","callArgs","partial","boundArgs","placeholder","bindAll","hasher","cache","address","delay","wait","setTimeout","defer","throttle","timeout","previous","later","leading","now","throttled","remaining","clearTimeout","trailing","cancel","debounce","immediate","debounced","callNow","wrap","wrapper","compose","after","times","once","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","collectNonEnumProps","nonEnumIdx","constructor","proto","prop","allKeys","mapObject","pairs","functions","methods","names","createAssigner","keysFunc","defaults","extend","extendOwn","eq","deepEq","keyInObj","pick","omit","String","props","tap","interceptor","isMatch","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isElement","nodelist","Int8Array","isSymbol","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","RegExp","replaceRegexp","string","escape","fallback","idCounter","uniqueId","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeRegExp","escapeChar","template","text","settings","oldSettings","render","variable","argument","chain","instance","_chain","chainResult","mixin","toJSON","Camera","bounds","_translation","vec2","_bounds","vec4","_toConsumableArray","hmr","locals","_app","mountPoint","getElementById","App","WebGLDebugUtils","msg","console","log","glValidEnumContexts","enable","1","0","disable","getParameter","drawArrays","3","drawElements","4","2","createShader","getShaderParameter","getProgramParameter","getShaderPrecisionFormat","getVertexAttrib","vertexAttribPointer","6","activeTexture","getTexParameter","texParameterf","copyTexImage2D","8","copyTexSubImage2D","generateMipmap","bindBuffer","getBufferParameter","bindRenderbuffer","checkFramebufferStatus","framebufferRenderbuffer","5","getFramebufferAttachmentParameter","getRenderbufferParameter","renderbufferStorage","clear","enumBitwiseOr","depthFunc","blendFunc","blendFuncSeparate","blendEquation","blendEquationSeparate","stencilFunc","stencilFuncSeparate","stencilMaskSeparate","stencilOp","stencilOpSeparate","cullFace","frontFace","drawArraysInstancedANGLE","drawElementsInstancedANGLE","blendEquationEXT","bufferData","bufferSubData","copyBufferSubData","getBufferSubData","blitFramebuffer","10","9","invalidateFramebuffer","invalidateSubFramebuffer","readBuffer","getInternalformatParameter","renderbufferStorageMultisample","texImage2D","7","texImage3D","11","texSubImage2D","12","copyTexSubImage3D","compressedTexImage2D","compressedTexImage3D","compressedTexSubImage2D","compressedTexSubImage3D","vertexAttribIPointer","drawArraysInstanced","drawElementsInstanced","drawRangeElements","clearBufferfv","clearBufferiv","clearBufferuiv","clearBufferfi","beginQuery","endQuery","getQuery","getQueryParameter","samplerParameteri","samplerParameterf","getSamplerParameter","fenceSync","clientWaitSync","waitSync","getSyncParameter","bindTransformFeedback","beginTransformFeedback","transformFeedbackVaryings","bindBufferBase","bindBufferRange","getIndexedParameter","getActiveUniforms","getActiveUniformBlockParameter","glEnums","enumStringToValue","init","propertyName","checkInit","glEnumToString","glFunctionArgToString","functionName","numArgs","argumentIndex","funcInfo","enums","orResult","orEnums","enumValue","makePropertyWrapper","original","__defineGetter__","__defineSetter__","resetToInitialState","isWebGL2RenderingContext","createTransformFeedback","bindVertexArray","numAttribs","MAX_VERTEX_ATTRIBS","tmp","createBuffer","ARRAY_BUFFER","ii","disableVertexAttribArray","FLOAT","vertexAttrib1f","vertexAttribDivisor","deleteBuffer","numTextureUnits","MAX_TEXTURE_IMAGE_UNITS","TEXTURE0","TEXTURE_CUBE_MAP","TEXTURE_3D","bindSampler","ELEMENT_ARRAY_BUFFER","RENDERBUFFER","BLEND","CULL_FACE","DEPTH_TEST","DITHER","SCISSOR_TEST","blendColor","FUNC_ADD","ONE","ZERO","clearColor","clearDepth","clearStencil","colorMask","BACK","LESS","depthMask","depthRange","CCW","hint","GENERATE_MIPMAP_HINT","DONT_CARE","lineWidth","PACK_ALIGNMENT","UNPACK_ALIGNMENT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","BROWSER_DEFAULT_WEBGL","polygonOffset","sampleCoverage","scissor","ALWAYS","stencilMask","KEEP","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","drawBuffers","COPY_READ_BUFFER","COPY_WRITE_BUFFER","PIXEL_PACK_BUFFER","PIXEL_UNPACK_BUFFER","numTransformFeedbacks","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","TRANSFORM_FEEDBACK_BUFFER","numUBOs","MAX_UNIFORM_BUFFER_BINDINGS","UNIFORM_BUFFER","RASTERIZER_DISCARD","UNPACK_IMAGE_HEIGHT","UNPACK_SKIP_IMAGES","UNPACK_ROW_LENGTH","UNPACK_SKIP_ROWS","UNPACK_SKIP_PIXELS","PACK_ROW_LENGTH","PACK_SKIP_ROWS","PACK_SKIP_PIXELS","FRAGMENT_SHADER_DERIVATIVE_HINT","getError","mightBeEnum","glFunctionArgsToString","argStr","makeDebugContext","opt_onErrorFunc","opt_onFunc","opt_err_ctx","err","glErrorShadow","makeErrorWrapper","wrapped","NO_ERROR","makeLostContextSimulatingCanvas","unwrappedContext_","onLost_","onRestored_","wrappedContext_","contextId_","contextLost_","resourceDb_","numCallsToLoseContext_","numCalls_","canRestore_","restoreTimeout_","glErrorShadow_","wrapEvent","listener","info","handleEvent","WebGLRenderingContext","WebGL2RenderingContext","makeLostContextFunctionWrapper","loseContextIfTime","creationFunctions","__webglDebugContextLostId__","functionsThatShouldReturnNull","isFunctions","FRAMEBUFFER_UNSUPPORTED","getAttribLocation","getVertexAttribOffset","isContextLost","getFragDataLocation","WAIT_FAILED","getUniformBlockIndex","INVALID_INDEX","makeLostContextSimulatingContext","addOnContextLostListener","addOnContextRestoredListener","loseContext","makeWebGLContextEvent","statusMessage","preventDefault","bubble","wrapAddEventListener","clearErrors","CONTEXT_LOST_WEBGL","event","callbacks","restoreContext","resource","WebGLBuffer","WebGLFramebuffer","deleteFramebuffer","WebGLProgram","deleteProgram","WebGLRenderbuffer","deleteRenderbuffer","WebGLShader","deleteShader","WebGLTexture","deleteTexture","WebGLQuery","deleteQuery","WebGLSampler","deleteSampler","WebGLSync","deleteSync","WebGLTransformFeedback","deleteTransformFeedback","WebGLVertexArrayObject","deleteVertexArray","freeResources","loseContextInNCalls","numCalls","getNumCalls","setRestoreTimeout","factory","configurable","copyExistingProperties","dst","copyNamedProperties","isBuffer","repBuffer","isRenderbuffer","repRenderbuffer","createRenderbuffer","isShader","repShader","VERTEX_SHADER","isTexture","repTexture","isSampler","repSampler","createSampler","warn","_globalObject","default","getGLTypeForTypedArray","typedArray","BYTE","SHORT","Uint16Array","UNSIGNED_SHORT","Int32Array","INT","Uint32Array","UNSIGNED_INT","getGLTypeForTypedArrayType","typedArrayType","getTypedArrayTypeForGLType","CTOR","glTypeToTypedArray","isArrayBuffer","tt","SharedArrayBuffer","ArrayBuffer","VecType","t1","t2","dx","dy","dz","distanceSq","divScalar","lengthSq","mulScalar","lenSq","setDefaultType","ctor","oldType","isWebGL1","isWebGL2","haveEnumsForType","existing","addEnums","createAttributeSetters","createProgram","createProgramFromScripts","shaderScriptIds","opt_attribs","opt_locations","opt_errorCallback","progOptions","getProgramOptions","shaders","shader","createShaderFromScript","defaultShaderType","errorCallback","createProgramFromSources","shaderSources","good","script","createProgramInfoFromProgram","createUniformSetters","createUniformBlockSpecFromProgram","createUniformBlockInfoFromProgram","createUniformBlockInfo","blockName","uniformBlockSpec","tf","TRANSFORM_FEEDBACK","bindTransformFeedbackInfo","transformFeedbackInfo","varying","unbindTransformFeedbackInfo","createTransformFeedbackInfo","setAttributes","buffers","vertexArrayObject","attribSetters","setters","actualSetters","uniformSetters","andx","vals","numValues","setter","setUniformBlock","uniformBlockInfo","bindUniformBlock","setBlockUniforms","uniforms","utils","_interopRequireWildcard","helper","desc","getOwnPropertyDescriptor","typeMap","getBindPointForSamplerType","bindPoint","intSetter","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","textureOrPair","sampler","samplerArraySetter","units","textures","floatAttribSetter","enableVertexAttribArray","intAttribSetter","matAttribSetter","typeInfo","defaultSize","rowOffset","Type","uniform1f","arraySetter","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","attrTypeMap","spaceRE","loadShader","shaderSource","shaderType","errFn","lineOffset","compileShader","COMPILE_STATUS","lastError","getShaderInfoLog","split","line","ndx","addLineNumbers","opt","attribLocations","attrib","getShaderTypeFromScriptType","scriptType","FRAGMENT_SHADER","deleteShaders","realShaders","newShaders","elem","attachShader","bindAttribLocation","varyings","transformFeedbackMode","SEPARATE_ATTRIBS","linkProgram","LINK_STATUS","getProgramInfoLog","scriptId","opt_shaderType","shaderScript","isBuiltIn","startsWith","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","substr","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","numVaryings","TRANSFORM_FEEDBACK_VARYINGS","getTransformFeedbackVarying","buf","uniformData","uniformIndices","pair","pname","blockSpecs","numUniformBlocks","ACTIVE_UNIFORM_BLOCKS","_ii","getActiveUniformBlockName","blockSpec","usedByVertexShader","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","usedByFragmentShader","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","used","usedByVertexSahder","arraySuffixRE","uniformBufferIndex","uniformBlockBinding","uniformNdx","BYTES_PER_ELEMENT","asFloat","bufferBindIndex","byteLength","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","axisRotate","angleInRadians","MatType","oneMinusCosine","r00","r01","r02","r10","r11","r12","r20","r21","r22","axisRotation","getAxis","off","xAxis","tempV3a","yAxis","tempV3b","zAxis","tempV3c","b23","b30","b31","b32","b33","fieldOfViewYInRadians","zNear","zFar","rangeInv","rotationX","rotationY","rotationZ","scaling","setAxis","setTranslation","transformDirection","transformNormal","mi","transformPoint","tmp_0","tmp_1","tmp_2","tmp_3","tmp_4","tmp_5","tmp_6","tmp_7","tmp_8","tmp_9","tmp_10","tmp_11","tmp_12","tmp_13","tmp_14","tmp_15","tmp_16","tmp_17","tmp_18","tmp_19","tmp_20","tmp_21","tmp_22","tmp_23","t0","t3","createAttribsFromArrays","createBuffersFromArrays","createBufferFromArray","numElements","elementType","typedArrays","makeTypedArray","positionKeys","getArray","getNumComponents","getNumElementsFromNonIndexedArrays","createBufferFromTypedArray","newIndices","attribPrefix","numBytes","BUFFER_SIZE","bytesPerValue","getBytesPerValueForGLType","totalElements","getNumElementsFromAttributes","setBufferFromTypedArray","setAttributePrefix","setAttributeDefaults_","newDefaults","getNumComponents_","getArray_","isIndices","texcoordRE","colorRE","guessNumComponentsFromName","arrayName","normalization","attribName","arrayType","getNormalizationForTypedArrayType","getNormalizationForTypedArray","setTextureDefaults_","textureColor","setDefaultTextureColor","createSamplers","samplerOptions","samplers","setSamplerParameters","setEmptyTexture","setTextureFromArray","loadTextureFromUrl","setTextureFromElement","setTextureFilteringForSize","setTextureParameters","createTextures","textureOptions","callback","numDownloading","errors","images","callCallbackIfReady","onLoadFn","isAsyncSrc","tex","resizeTexture","level","internalFormat","format","formatType","getFormatAndTypeForInternalFormat","getTextureTypeForArrayType","TEXTURE_CUBE_MAP_POSITIVE_X","getNumComponentsForFormat","formatInfo","numColorComponents","getBytesPerElementForInternalFormat","crossOrigin","RGB","RG","textureInternalFormatInfo","bytesPerElement","bytesPerElementMap","textureFormat","isPowerOf2","defaultType","guessDimensions","color","colorRenderable","textureFilterable","lastPackState","savePackState","colorspaceConversion","premultiplyAlpha","flipY","restorePackState","saveSkipState","unpackAlignment","unpackRowLength","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","restoreSkipState","setTextureSamplerParameters","parameteriFn","minMag","TEXTURE_MAG_FILTER","mag","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","wrapR","wrapS","wrapT","minLod","TEXTURE_MIN_LOD","maxLod","TEXTURE_MAX_LOD","baseLevel","TEXTURE_BASE_LEVEL","maxLevel","TEXTURE_MAX_LEVEL","canGenerateMipmap","filtering","canFilter","LINEAR","CLAMP_TO_EDGE","shouldAutomaticallySetTextureFilteringForSize","auto","getCubeFaceOrder","cubeFaceOrder","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","getCubeFacesWithNdx","facesWithNdx","face","element","slices","imgWidth","imgHeight","nodeName","xOffset","yOffset","createImageBitmap","colorSpaceConversion","then","imageBitmap","smallest","largest","depth","xMult","yMult","srcX","srcY","isTexImageSource","ImageBitmap","HTMLElement","loadAndUseImage","url","clearEventHandlers","onError","onLoad","bm","fetch","response","ok","bitmap","catch","loadImage","setTextureTo1PixelColor","make1Pixel","loadCubemapFromUrls","urls","imgs","numToLoad","faces","faceTarget","otherTarget","uploadImg","loadSlicesFromUrls","firstImage","dimensions","cbrt","faceSize","subarray","_exportNames","m4","primitives","create3DFVertices","createAugmentedTypedArray","createCubeVertices","createPlaneVertices","createSphereVertices","createTruncatedConeVertices","createXYQuadVertices","createCresentVertices","createCylinderVertices","createTorusVertices","createDiscVertices","deindexVertices","vertices","newVertices","allButIndices","channel","srcBuffer","dstBuffer","jj","flattenNormals","normals","normal","numNormals","nax","nay","naz","nbx","nby","nbz","ncx","ncy","ncz","nx","ny","nz","makeRandomVertexColors","vcolors","randInt","numVertsPerColor","vertsPerColor","numSets","_ii2","reorientDirections","reorientNormals","reorientPositions","reorientVertices","concatVertices","arrayOfArrays","baseName","_loop","arrayInfo","newArrays","arraySpec","spec","getLengthOfCombinedArrays","newArraySpec","createArrayOfSameType","newArray","baseIndex","copyElements","copyArraysToNewArray","duplicateVertices","srcArray","createDiscBuffers","createDiscBufferInfo","createTorusBuffers","createTorusBufferInfo","createCylinderBuffers","createCylinderBufferInfo","createCresentBuffers","createCresentBufferInfo","createXYQuadBuffers","createXYQuadBufferInfo","createTruncatedConeBuffers","createTruncatedConeBufferInfo","createSphereBuffers","createSphereBufferInfo","createPlaneBuffers","createPlaneBufferInfo","createCubeBuffers","createCubeBufferInfo","create3DFBuffers","create3DFBufferInfo","attributes","augmentTypedArray","cursor","reset","opt_index","opt_type","applyFuncToV3Array","matrix","subdivisionsWidth","subdivisionsDepth","numVertices","texcoords","u","numVertsAcross","_z","_x","radius","subdivisionsAxis","subdivisionsHeight","opt_startLatitudeInRadians","opt_endLatitudeInRadians","opt_startLongitudeInRadians","opt_endLongitudeInRadians","latRange","longRange","theta","phi","sinTheta","cosTheta","sinPhi","ux","uy","uz","numVertsAround","_x2","_y","CUBE_FACE_INDICES","cornerVertices","faceNormals","uvCoords","faceIndices","uv","bottomRadius","topRadius","radialSubdivisions","verticalSubdivisions","opt_topCap","opt_bottomCap","topCap","bottomCap","extra","vertsAroundEdge","slant","atan2","cosSlant","sinSlant","end","ringRadius","_yy","expandRLEData","rleData","padding","runLength","colors","numVerts","verticalRadius","outerRadius","innerRadius","thickness","subdivisionsDown","startOffset","endOffset","subdivisionsThick","offsetRange","createArc","arcRadius","normalMult","normalAdd","uMult","uAdd","uBack","xBack","px","py","pz","createSurface","leftArcOffset","rightArcOffset","numVerticesDown","bodySubdivisions","startAngle","endAngle","radialParts","bodyParts","sliceAngle","sliceSin","ring","ringAngle","xSin","zCos","_slice","_ring","nextRingIndex","nextSliceIndex","divisions","stacks","stackPower","firstIndex","radiusSpan","pointsPerStack","stack","stackRadius","createBufferFunc","createBufferInfoFunc","arraySpecPropertyNames","dstNdx","arraySrc","addExtensionsToContext","getWebGLContext","resizeCanvasToDisplaySize","setDefaults","createContext","create3DContext","multiplier","clientWidth","clientHeight","_draw","_framebuffers","_programs","_typedarrays","_vertexArrays","prefixRE","addExtensionToContext","extensionName","ext","getExtension","fnSuffix","exec","enumSuffix","isFunc","suffix","endsWith","substring","origFn","supportedExtensions","drawObjectList","objectsToDraw","lastUsedProgramInfo","lastUsedBufferInfo","active","vertexArrayInfo","bindBuffers","TRIANGLES","programs","instanceCount","bindFramebufferInfo","framebufferInfo","drawingBufferWidth","drawingBufferHeight","createFramebufferInfo","attachments","colorAttachmentCount","defaultAttachments","attachmentOptions","attachment","attachmentPoint","attachmentsByFormat","getAttachmentPointForFormat","renderbufferFormats","isRenderbufferFormat","texTarget","resizeFramebufferInfo","programInfos","createVertexArray","createVAOAndSetAttributes","createVAOFromBufferInfo","webpackPolyfill","deprecate","paths","children","_underscore","Loader","Map","textureCache","programCache","loading","load","_basePath$raiseOnFail","basePath","raiseOnFailure","loadPromise","_asyncToGenerator","regeneratorRuntime","mark","_callee","_ref2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","progOpts","_opts","fp","vsName","fsName","_context","prev","next","loadPaths","sent","iterator","done","abrupt","return","finish","_x3","res","ret","raise","contents","req","status","statusText","_resource","_graphics","_util","_Sprite","_SpriteRenderer","_Camera","logGLCall","containerId","canvasClass","classList","resolution","pixelMultiplier","debug","registerContext","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","attachFramebuffer","framebufferRenderer","camera","cameraEnabled","updateCanvasSize","adjustViewport","devicePixelRatio","canvas_width","canvas_height","_canvasToWorld","_this$gl","getProgram","timestamp","running","requestAnimationFrame","time","dt","stage","prerender","beginRenderToTexture","postrender","endRenderToTexture","app"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 328);\n","let gl = {};\n\nfunction registerContext(_gl) {\n    gl = _gl;\n}\n\nexport {registerContext, gl};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function arraySetter(buffer) {\n    let count = 0;\n    return function (newElements) {\n        if (!newElements.length) {\n            newElements = [newElements];\n            if (count + newElements.length > buffer.length) {\n                throw new Error('attempting to append beyond buffer length');\n            }\n        }\n        buffer.set(newElements, count);\n        count += newElements.length;\n    }\n}\n\nfunction hsl2rgb (h, s, l) {\n\n    var r, g, b, m, c, x\n\n    if (!isFinite(h)) h = 0\n    if (!isFinite(s)) s = 0\n    if (!isFinite(l)) l = 0\n\n    h /= 60\n    if (h < 0) h = 6 - (-h % 6)\n    h %= 6\n\n    s = Math.max(0, Math.min(1, s / 100))\n    l = Math.max(0, Math.min(1, l / 100))\n\n    c = (1 - Math.abs((2 * l) - 1)) * s\n    x = c * (1 - Math.abs((h % 2) - 1))\n\n    if (h < 1) {\n        r = c\n        g = x\n        b = 0\n    } else if (h < 2) {\n        r = x\n        g = c\n        b = 0\n    } else if (h < 3) {\n        r = 0\n        g = c\n        b = x\n    } else if (h < 4) {\n        r = 0\n        g = x\n        b = c\n    } else if (h < 5) {\n        r = x\n        g = 0\n        b = c\n    } else {\n        r = c\n        g = 0\n        b = x\n    }\n\n    m = l - c / 2\n    r = Math.round((r + m) * 255)\n    g = Math.round((g + m) * 255)\n    b = Math.round((b + m) * 255)\n\n    return [r, g, b];\n}\n\nfunction attachFramebuffer(gl, width, height) {\n    const framebuffer = gl.createFramebuffer();\n    const texture = gl.createTexture();\n\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA8, width, height);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    return {\n        width,\n        height,\n        attach() {\n            gl.viewport(0, 0, width, height);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        },\n        detach() {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        },\n        texture,\n        framebuffer\n    }\n}\n\nfunction loadImage(src) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n\n        function removeListeners() {\n            img.removeEventListener('load', null);\n            img.removeEventListener('error', null);\n        }\n\n        img.addEventListener('load', () => {\n            removeListeners();\n            resolve(img);\n        });\n\n        img.addEventListener('error', (error) => {\n            removeListeners();\n            reject(error);\n        });\n\n        img.src = src;\n    });\n}\n\nexport {arraySetter, hsl2rgb, attachFramebuffer, loadImage};\n","export {Sprite};\n\nclass Sprite {\n    constructor(options) {\n        this.position = options.position || [0, 0];\n        this.size = options.size;// || [8, 8];\n        // default angle is 0 radians\n        this.angle = 0;\n        // default is offset sets the sprite's bottom left corner at position\n        this.offset = options.offset || [0, 0];\n        // default backgroundColor is transparent black\n        this.backgroundColor = options.backgroundColor || [0, 0, 0, 0];\n        this.textureName = options.textureName || null;\n    }\n}\n","import twgl from '../twgl';\n\nimport vs from '../../shaders/sprite.vert';\nimport fs from '../../shaders/sprite.frag';\n\nconst SPRITE_RECT_VERTICES = new Float32Array([\n    0, 0, // bottom left\n    1, 0, // bottom right\n    0, 1, // top left\n    1, 1  // top right\n]);\n\nclass SpriteRenderer {\n    constructor({game, textureInfo}) {\n        this.gl = game.gl;\n        this.loader = game.loader;\n        this.game = game;\n\n        this.textureInfo = textureInfo;\n\n        this.setup();\n    }\n\n    setup() {\n        this.programInfo = twgl.createProgramInfo(this.gl, [vs, fs]);\n\n        this._arrays = {\n            vertex: {\n                data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 0,\n                drawType: this.gl.STATIC_DRAW\n            },\n            position: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            offset: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            size: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            texcoord: {\n                data: [\n                    // 0, 0,\n                    // this.textureInfo.width, 0,\n                    // 0, this.textureInfo.height,\n                    // this.textureInfo.width, this.textureInfo.height\n                    0, 0,\n                    1, 0,\n                    0, 1,\n                    1, 1\n                ],\n                numComponents: 2,\n                divisor: 0,\n                type: Int16Array\n            },\n            indices: {\n                data: [\n                    0,\n                    1,\n                    2,\n                    3\n                ]\n            }\n        };\n\n        this.bufferInfo = twgl.createBufferInfoFromArrays(this.gl, this._arrays);\n        this.vao = twgl.createVertexArrayInfo(this.gl, this.programInfo, this.bufferInfo);\n    }\n\n    render(sprites, projection) {\n        const positions = new Float32Array(2 * sprites.length);\n        const sizes = new Float32Array(2 * sprites.length);\n        const offsets = new Float32Array(2 * sprites.length);\n\n        sprites.forEach((sprite, spriteIndex) => {\n            sprite.position.forEach((v, compIndex) => {\n                positions[spriteIndex * 2 + compIndex] = v;\n            });\n\n            sprite.size.forEach((v, compIndex) => {\n                sizes[spriteIndex * 2 + compIndex] = v;\n            });\n\n            sprite.offset.forEach((v, compIndex) => {\n                offsets[spriteIndex * 2 + compIndex] = v;\n            });\n        });\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.position,\n            positions\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.size,\n            sizes\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.offset,\n            offsets\n        );\n\n        this.gl.useProgram(this.programInfo.program);\n\n        twgl.setUniforms(this.programInfo, {\n            projection: projection,\n            texture: this.textureInfo.texture\n        });\n\n        twgl.setBuffersAndAttributes(this.gl, this.programInfo, this.vao);\n        twgl.drawBufferInfo(this.gl, this.vao, this.gl.TRIANGLE_STRIP, undefined, undefined, sprites.length);\n    }\n}\n\nexport {SpriteRenderer};\n","/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nexport const RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\n\nconst degree = Math.PI / 180;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n","import * as glMatrix from \"./common.js\"\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nexport function fromValues(m00, m01, m10, m11) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    let a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\n  // Calculate the determinant\n  let det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] =  a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] =  a0 * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  let a0 = a[0];\n  out[0] =  a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] =  a0;\n\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n}\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix\n * @param {mat2} D the diagonal matrix\n * @param {mat2} U the upper triangular matrix\n * @param {mat2} a the input matrix to factorize\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2]/a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 2x3 Matrix\n * @module mat2d\n *\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nexport function fromValues(a, b, c, d, tx, ty) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function invert(out, a) {\n  let aa = a[0], ab = a[1], ac = a[2], ad = a[3];\n  let atx = a[4], aty = a[5];\n\n  let det = aa * ad - ab * ac;\n  if(!det){\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nexport function translate(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}\n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));\n}\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b01 = a22 * a11 - a12 * a21;\n  let b11 = -a22 * a10 + a12 * a20;\n  let b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  out[0] = (a11 * a22 - a12 * a21);\n  out[1] = (a02 * a21 - a01 * a22);\n  out[2] = (a01 * a12 - a02 * a11);\n  out[3] = (a12 * a20 - a10 * a22);\n  out[4] = (a00 * a22 - a02 * a20);\n  out[5] = (a02 * a10 - a00 * a12);\n  out[6] = (a10 * a21 - a11 * a20);\n  out[7] = (a01 * a20 - a00 * a21);\n  out[8] = (a00 * a11 - a01 * a10);\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b00 = b[0], b01 = b[1], b02 = b[2];\n  let b10 = b[3], b11 = b[4], b12 = b[5];\n  let b20 = b[6], b21 = b[7], b22 = b[8];\n\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n    x = v[0], y = v[1];\n\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n\n    s = Math.sin(rad),\n    c = Math.cos(rad);\n\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1];\n\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n\n  return out;\n}\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nexport function normalFromMat4(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ', ' +\n          a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] &&\n         a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\n         a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a03 = a[3];\n    let a12 = a[6], a13 = a[7];\n    let a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n  out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n  out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n  out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n  out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n  out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  let b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n  out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n  out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n  out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n    out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n    out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n  let b00, b01, b02;\n  let b10, b11, b12;\n  let b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n  a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n  a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[0]  = a[0];\n    out[1]  = a[1];\n    out[2]  = a[2];\n    out[3]  = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[4]  = a[4];\n    out[5]  = a[5];\n    out[6]  = a[6];\n    out[7]  = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[8]  = a[8];\n    out[9]  = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function fromRotation(out, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n\n  if (len < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromXRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = 1;\n  out[1]  = 0;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromYRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = 0;\n  out[2]  = -s;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromZRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = s;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {quat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\nexport function fromQuat2(out, a) {\n  let translation = new glMatrix.ARRAY_TYPE(3);\n  let bx = -a[0], by = -a[1], bz = -a[2], bw = a[3],\n  ax = a[4], ay = a[5], az = a[6], aw = a[7];\n\n  let magnitude = bx * bx + by * by + bz * bz + bw * bw;\n  //Only scale if it makes sense\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n  let m11 = mat[0];\n  let m12 = mat[1];\n  let m13 = mat[2];\n  let m21 = mat[4];\n  let m22 = mat[5];\n  let m23 = mat[6];\n  let m31 = mat[8];\n  let m32 = mat[9];\n  let m33 = mat[10];\n\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport function getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  let trace = mat[0] + mat[5] + mat[10];\n  let S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if ((mat[0] > mat[5]) && (mat[0] > mat[10])) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  let ox = o[0];\n  let oy = o[1];\n  let oz = o[2];\n\n  let out0 = (1 - (yy + zz)) * sx;\n  let out1 = (xy + wz) * sx;\n  let out2 = (xz - wy) * sx;\n  let out4 = (xy - wz) * sy;\n  let out5 = (1 - (xx + zz)) * sy;\n  let out6 = (yz + wx) * sy;\n  let out8 = (xz + wy) * sz;\n  let out9 = (yz - wx) * sz;\n  let out10 = (1 - (xx + yy)) * sz;\n\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function frustum(out, left, right, bottom, top, near, far) {\n  let rl = 1 / (right - left);\n  let tb = 1 / (top - bottom);\n  let nf = 1 / (near - far);\n  out[0] = (near * 2) * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = (near * 2) * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (far * near * 2) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n  let f = 1.0 / Math.tan(fovy / 2);\n  let nf = 1 / (near - far);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (2 * far * near) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  let upTan = Math.tan(fov.upDegrees * Math.PI/180.0);\n  let downTan = Math.tan(fov.downDegrees * Math.PI/180.0);\n  let leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0);\n  let rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0);\n  let xScale = 2.0 / (leftTan + rightTan);\n  let yScale = 2.0 / (upTan + downTan);\n\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = ((upTan - downTan) * yScale * 0.5);\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = (far * near) / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n  let lr = 1 / (left - right);\n  let bt = 1 / (bottom - top);\n  let nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  let x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  let eyex = eye[0];\n  let eyey = eye[1];\n  let eyez = eye[2];\n  let upx = up[0];\n  let upy = up[1];\n  let upz = up[2];\n  let centerx = center[0];\n  let centery = center[1];\n  let centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n      Math.abs(eyey - centery) < glMatrix.EPSILON &&\n      Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n  let eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n\n  let z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n\n  let len = z0*z0 + z1*z1 + z2*z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  let x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n\n  len = x0*x0 + x1*x1 + x2*x2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n          a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n          a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\n          a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  out[9] = a[9] + (b[9] * scale);\n  out[10] = a[10] + (b[10] * scale);\n  out[11] = a[11] + (b[11] * scale);\n  out[12] = a[12] + (b[12] * scale);\n  out[13] = a[13] + (b[13] * scale);\n  out[14] = a[14] + (b[14] * scale);\n  out[15] = a[15] + (b[15] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n         a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] &&\n         a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n         a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3];\n  let a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7];\n  let a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11];\n  let a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\n\n  let b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3];\n  let b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7];\n  let b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11];\n  let b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n          Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n          Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n          Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n          Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n          Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n          Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n          Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let len = x*x + y*y + z*z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2];\n  let bx = b[0], by = b[1], bz = b[2];\n\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  let factorTimes2 = t * t;\n  let factor1 = factorTimes2 * (2 * t - 3) + 1;\n  let factor2 = factorTimes2 * (t - 2) + t;\n  let factor3 = factorTimes2 * (t - 1);\n  let factor4 = factorTimes2 * (3 - 2 * t);\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  let inverseFactor = 1 - t;\n  let inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  let factorTimes2 = t * t;\n  let factor1 = inverseFactorTimesTwo * inverseFactor;\n  let factor2 = 3 * t * inverseFactorTimesTwo;\n  let factor3 = 3 * factorTimes2 * inverseFactor;\n  let factor4 = factorTimes2 * t;\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n\n  let r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  let z = (glMatrix.RANDOM() * 2.0) - 1.0;\n  let zScale = Math.sqrt(1.0-z*z) * scale;\n\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n    let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n    let x = a[0], y = a[1], z = a[2];\n    // var qvec = [qx, qy, qz];\n    // var uv = vec3.cross([], qvec, a);\n    let uvx = qy * z - qz * y,\n        uvy = qz * x - qx * z,\n        uvz = qx * y - qy * x;\n    // var uuv = vec3.cross([], qvec, uv);\n    let uuvx = qy * uvz - qz * uvy,\n        uuvy = qz * uvx - qx * uvz,\n        uuvz = qx * uvy - qy * uvx;\n    // vec3.scale(uv, uv, 2 * w);\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n    // vec3.scale(uuv, uuv, 2);\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n    // return vec3.add(out, a, vec3.add(out, uv, uuv));\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let tempA = fromValues(a[0], a[1], a[2]);\n  let tempB = fromValues(b[0], b[1], b[2]);\n\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n\n  let cosine = dot(tempA, tempB);\n\n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2];\n  let b0 = b[0], b1 = b[1], b2 = b[2];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 3;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n    }\n\n    return a;\n  };\n})();\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  let len = x*x + y*y + z*z + w*w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  let aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, vectorScale) {\n  vectorScale = vectorScale || 1.0;\n\n  // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n  var v1, v2, v3, v4;\n  var s1, s2;\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2], w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  let x = a[0], y = a[1], z = a[2];\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n\n  // calculate quat * vec\n  let ix = qw * x + qy * z - qz * y;\n  let iy = qw * y + qz * x - qx * z;\n  let iz = qw * z + qx * y - qy * x;\n  let iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 4;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n    }\n\n    return a;\n  };\n})();\n","import * as glMatrix from \"./common.js\"\nimport * as mat3 from \"./mat3.js\"\nimport * as vec3 from \"./vec3.js\"\nimport * as vec4 from \"./vec4.js\"\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nexport function getAxisAngle(out_axis, q) {\n  let rad = Math.acos(q[3]) * 2.0;\n  let s = Math.sin(rad / 2.0);\n  if (s != 0.0) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let by = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bz = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nexport function calculateW(out, a) {\n  let x = a[0], y = a[1], z = a[2];\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  let omega, cosom, sinom, scale0, scale1;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if ( cosom < 0.0 ) {\n    cosom = -cosom;\n    bx = - bx;\n    by = - by;\n    bz = - bz;\n    bw = - bw;\n  }\n  // calculate coefficients\n  if ( (1.0 - cosom) > 0.000001 ) {\n    // standard case (slerp)\n    omega  = Math.acos(cosom);\n    sinom  = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let dot = a0*a0 + a1*a1 + a2*a2 + a3*a3;\n  let invDot = dot ? 1.0/dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0*invDot;\n  out[1] = -a1*invDot;\n  out[2] = -a2*invDot;\n  out[3] = a3*invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  let fTrace = m[0] + m[4] + m[8];\n  let fRoot;\n\n  if ( fTrace > 0.0 ) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5/fRoot;  // 1/(4w)\n    out[0] = (m[5]-m[7])*fRoot;\n    out[1] = (m[6]-m[2])*fRoot;\n    out[2] = (m[1]-m[3])*fRoot;\n  } else {\n    // |w| <= 1/2\n    let i = 0;\n    if ( m[4] > m[0] )\n      i = 1;\n    if ( m[8] > m[i*3+i] )\n      i = 2;\n    let j = (i+1)%3;\n    let k = (i+2)%3;\n\n    fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n    out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n    out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n  }\n\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, x, y, z) {\n    let halfToRad = 0.5 * Math.PI / 180.0;\n    x *= halfToRad;\n    y *= halfToRad;\n    z *= halfToRad;\n\n    let sx = Math.sin(x);\n    let cx = Math.cos(x);\n    let sy = Math.sin(y);\n    let cy = Math.cos(y);\n    let sz = Math.sin(z);\n    let cz = Math.cos(z);\n\n    out[0] = sx * cy * cz - cx * sy * sz;\n    out[1] = cx * sy * cz + sx * cy * sz;\n    out[2] = cx * cy * sz - sx * sy * cz;\n    out[3] = cx * cy * cz + sx * sy * sz;\n\n    return out;\n}\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nexport const clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nexport const fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const equals = vec4.equals;\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nexport const rotationTo = (function() {\n  let tmpvec3 = vec3.create();\n  let xUnitVec3 = vec3.fromValues(1,0,0);\n  let yUnitVec3 = vec3.fromValues(0,1,0);\n\n  return function(out, a, b) {\n    let dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001)\n        vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n})();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport const sqlerp = (function () {\n  let temp1 = create();\n  let temp2 = create();\n\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\n    return out;\n  };\n}());\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nexport const setAxes = (function() {\n  let matr = mat3.create();\n\n  return function(out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n\n    return normalize(out, fromMat3(out, matr));\n  };\n})();\n","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\nexport function create() {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = 0;\n  dq[1] = 0;\n  dq[2] = 0;\n  dq[3] = 1;\n  dq[4] = 0;\n  dq[5] = 0;\n  dq[6] = 0;\n  dq[7] = 0;\n  return dq;\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function clone(a) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  let ax = x2 * 0.5,\n    ay = y2 * 0.5,\n    az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {quat} q quaternion\n * @param {vec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromRotationTranslation(out, q, t) {\n  let ax = t[0] * 0.5,\n    ay = t[1] * 0.5,\n    az = t[2] * 0.5,\n    bx = q[0],\n    by = q[1],\n    bz = q[2],\n    bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Creates a dual quat from a translation\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {vec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {quat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {mat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  let outer = quat.create();\n  mat4.getRotation(outer, a);\n  let t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {quat2} a Dual Quaternion\n * @return {quat} real part\n */\nexport const getReal = quat.copy;\n\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {quat2} a Dual Quaternion\n * @return {quat} dual part\n */\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\nexport const setReal = quat.copy;\n\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {quat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\nexport function getTranslation(out, a) {\n  let ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to translate\n * @param {vec3} v vector to translate by\n * @returns {quat2} out\n */\nexport function translate(out, a, v) {\n  let ax1 = a[0],\n    ay1 = a[1],\n    az1 = a[2],\n    aw1 = a[3],\n    bx1 = v[0] * 0.5,\n    by1 = v[1] * 0.5,\n    bz1 = v[2] * 0.5,\n    ax2 = a[4],\n    ay2 = a[5],\n    az2 = a[6],\n    aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateX(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateY(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateZ(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {quat} q quaternion to rotate by\n * @returns {quat2} out\n */\nexport function rotateByQuatAppend(out, a, q) {\n  let qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3],\n    ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat} q quaternion to rotate by\n * @param {quat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\nexport function rotateByQuatPrepend(out, q, a) {\n  let qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3],\n    bx = a[0],\n    by = a[1],\n    bz = a[2],\n    bw = a[3];\n\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {vec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n  let axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  let bx = s * axis[0] / axisLength;\n  let by = s * axis[1] / axisLength;\n  let bz = s * axis[2] / axisLength;\n  let bw = Math.cos(rad);\n\n  let ax1 = a[0],\n    ay1 = a[1],\n    az1 = a[2],\n    aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n\n  let ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n\n  return out;\n}\n\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {quat2} out\n * @function\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {quat2} out\n */\nexport function multiply(out, a, b) {\n  let ax0 = a[0],\n    ay0 = a[1],\n    az0 = a[2],\n    aw0 = a[3],\n    bx1 = b[4],\n    by1 = b[5],\n    bz1 = b[6],\n    bw1 = b[7],\n    ax1 = a[4],\n    ay1 = a[5],\n    az1 = a[6],\n    aw1 = a[7],\n    bx0 = b[0],\n    by0 = b[1],\n    bz0 = b[2],\n    bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {quat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = quat.dot;\n\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\nexport function lerp(out, a, b, t) {\n  let mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\nexport function invert(out, a) {\n  let sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n\n/**\n * Calculates the length of a dual quat\n *\n * @param {quat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\nexport const length = quat.length;\n\n/**\n * Alias for {@link quat2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {quat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = quat.squaredLength;\n\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\nexport function normalize(out, a) {\n  let magnitude = squaredLength(a);\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    out[0] = a[0] / magnitude;\n    out[1] = a[1] / magnitude;\n    out[2] = a[2] / magnitude;\n    out[3] = a[3] / magnitude;\n    out[4] = a[4] / magnitude;\n    out[5] = a[5] / magnitude;\n    out[6] = a[6] / magnitude;\n    out[7] = a[7] / magnitude;\n  }\n  return out;\n}\n\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {quat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\nexport function str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat2} a the first dual quaternion.\n * @param {quat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n    a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {quat2} a the first dual quat.\n * @param {quat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5],\n    a6 = a[6],\n    a7 = a[7];\n  let b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n    Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n    Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n    Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n    Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n    Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n    Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n    Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)));\n}\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = 0;\n  out[1] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nexport function fromValues(x, y) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nexport function round (out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return Math.sqrt(x*x + y*y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return x*x + y*y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0],\n    y = a[1];\n  return Math.sqrt(x*x + y*y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength (a) {\n  var x = a[0],\n    y = a[1];\n  return x*x + y*y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n  var x = a[0],\n    y = a[1];\n  var len = x*x + y*y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n    ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0];\n  let y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {vec2} a The vec2 point to rotate\n * @param {vec2} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec2} out\n */\nexport function rotate(out, a, b, c) {\n  //Translate point to the origin\n  let p0 = a[0] - b[0],\n  p1 = a[1] - b[1],\n  sinC = Math.sin(c),\n  cosC = Math.cos(c);\n  \n  //perform rotation and translate to correct position\n  out[0] = p0*cosC - p1*sinC + b[0];\n  out[1] = p0*sinC + p1*cosC + b[1];\n\n  return out;\n}\n\n/**\n * Get the angle between two 2D vectors\n * @param {vec2} a The first operand\n * @param {vec2} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let x1 = a[0],\n    y1 = a[1],\n    x2 = b[0],\n    y2 = b[1];\n  \n  let len1 = x1*x1 + y1*y1;\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n  \n  let len2 = x2*x2 + y2*y2;\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n  \n  let cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n  \n  \n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1];\n  let b0 = b[0], b1 = b[1];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 2;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1];\n    }\n\n    return a;\n  };\n})();\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tvar styleTarget = fn.call(this, selector);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[selector] = styleTarget;\n\t\t}\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","import {mat3, mat4, vec2, vec3, vec4} from 'gl-matrix';\n\nimport {gl} from 'gl.js';\n\nconst POSITION_COMPONENTS = 2;\nconst SIZE_COMPONENTS = 2;\n\nclass TilemapTextureBuilder {\n    constructor(opts) {\n        Object.assign(this, {\n            tileWidth: 8,\n            tileHeight: 8,\n            width: 256,\n            height: 1,\n            layers: 2,\n            ...opts\n        });\n\n        this.copyIndex = 0;\n\n        this.texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n        gl.texStorage3D(gl.TEXTURE_2D_ARRAY, 1, gl.RGBA8, this.width * this.tileWidth, this.height * this.tileHeight, this.layers);\n        gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, null);\n\n    }\n\n    tileCoordinates() {\n        return {\n            x: this.copyIndex % this.width,\n            y: Math.floor(this.copyIndex / (this.width)) % this.height,\n            z: Math.floor(this.copyIndex / (this.width * this.height)) % this.layers\n        }\n    }\n\n    addTiles(src) {\n        const tileWide = this.detectWidthInTiles(src);\n        const tileHigh = this.detectHeightInTiles(src);\n\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        canvas.width = src.width;\n        canvas.height = src.height;\n\n        ctx.drawImage(src, 0, 0);\n\n        /**\n         *  Copies pixels in src from the tile starting at (tileX, tileY) to the current\n         * tile and advances the copy index\n         */\n        const copyTile = (tileX, tileY) => {\n            const imageData = ctx.getImageData(\n                tileX * this.tileWidth,\n                tileY * this.tileHeight,\n                this.tileWidth,\n                this.tileHeight\n            );\n\n            const {x, y, z} = this.tileCoordinates();\n\n            gl.texSubImage3D(\n                gl.TEXTURE_2D_ARRAY, // target\n                0,                   // mipmap level, always zero\n                x * this.tileWidth,  // xoffset\n                y * this.tileHeight, // yoffset\n                z,                   // zoffset\n                this.tileWidth,      // width\n                this.tileHeight,     // height\n                1,                   // depth\n                gl.RGBA,             // format, guaranteed by ImageData to be RGBA\n                gl.UNSIGNED_BYTE,    // type, guaranteed by ImageData to be Uint8ClampedArray, i.e. UNSIGNED_BYTE\n                imageData            // pixel data\n            );\n\n            this.copyIndex++;\n        };\n\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n\n        for (let y = 0; y < tileHigh; y++) {\n            for (let x = 0; x < tileWide; x++) {\n                if (this.isFull()) {\n                    break;\n                }\n                copyTile(x, y);\n            }\n        }\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, null);\n    }\n\n    detectWidthInTiles(src) {\n        return Math.floor(src.width / this.tileWidth);\n    }\n\n    detectHeightInTiles(src) {\n        return Math.floor(src.height / this.tileHeight);\n    }\n\n    get layerWidth() {\n        return this.tileWidth * this.width;\n    }\n\n    get layerHeight() {\n        return this.tileHeight * this.height;\n    }\n\n    get maxIndex() {\n        return this.width * this.height * this.layers;\n    }\n\n    isFull() {\n        return this.copyIndex >= this.maxIndex;\n    }\n\n    /**\n     * Reads texture from GL memory returns it as Array of ImageData\n     */\n    readback() {\n        // Uint8Array long enough to hold pixel data for one layer\n        const buffer = new Uint8Array(this.layerWidth * this.layerHeight * 4);\n        const fb = gl.createFramebuffer();\n        const layers = [];\n\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, fb);\n\n        for (let layer = 0; layer < this.layers; layer++) {\n            gl.framebufferTextureLayer(gl.READ_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, this.texture, 0, layer);\n            gl.readPixels(0, 0, this.layerWidth, this.layerHeight, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n            layers.push(new ImageData(new Uint8ClampedArray(buffer), this.layerWidth, this.layerHeight));\n        }\n\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n\n        return layers;\n    }\n}\n\n\nconst CoordinateConversions = {\n    canvasToWorldMatrix(viewMatrix, displaySize, virtualSize) {\n        const acc = mat4.create();\n        const temp = mat4.create();\n\n        // (scale to virtualSize) * (project viewport) * (subtract offset) * point\n\n        // (inverse viewMatrix) * (scale virtualSize / displaySize) * (flip y) * point\n\n        // flip y\n        mat4.multiply(\n            acc,\n            mat4.fromValues(\n                1,  0, 0, 0,\n                0, -1, 0, 0,\n                0,  0, 1, 0,\n                0, displaySize.height, 1, 1\n            ),\n            acc\n        );\n\n        // scale\n        mat4.fromScaling(\n            temp,\n            [virtualSize.width / displaySize.width, virtualSize.height / displaySize.height, 1]\n        );\n        mat4.multiply(acc, temp, acc);\n\n        // invert view\n        mat4.invert(temp, viewMatrix);\n        mat4.multiply(acc, temp, acc);\n\n        return acc;\n    }\n};\n\n\nexport {\n    TilemapTextureBuilder,\n    CoordinateConversions};\n","//     Underscore.js 1.9.1\n//     http://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global ||\n            this ||\n            {};\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n  if (typeof exports != 'undefined' && !exports.nodeType) {\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.9.1';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      // The 2-argument case is omitted because we’re not using it.\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee;\n\n  // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  };\n\n  // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n  _.iteratee = builtinIteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n  var restArguments = function(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n      switch (startIndex) {\n        case 0: return func.call(this, rest);\n        case 1: return func.call(this, arguments[0], rest);\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\n      }\n      var args = Array(startIndex + 1);\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function(obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  }\n\n  var deepGet = function(obj, path) {\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n    return length ? obj : void 0;\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  var createReduce = function(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    };\n\n    return function(obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  };\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = restArguments(function(obj, path, args) {\n    var contextPath, func;\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n    return _.map(obj, function(context) {\n      var method = func;\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n        if (context == null) return void 0;\n        method = context[path];\n      }\n      return method == null ? method : method.apply(context, args);\n    });\n  });\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection.\n  _.shuffle = function(obj) {\n    return _.sample(obj, Infinity);\n  };\n\n  // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n    return sample.slice(0, n);\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior, partition) {\n    return function(obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = group(function(result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true);\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, Boolean);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0, len = value.length;\n          while (j < len) output[idx++] = value[j++];\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = restArguments(function(array, otherArrays) {\n    return _.difference(array, otherArrays);\n  });\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = restArguments(function(arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  });\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = restArguments(function(array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  });\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = restArguments(_.unzip);\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions.\n  var createPredicateIndexFinder = function(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  };\n\n  // Returns the first index on an array-like that passes a predicate test.\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions.\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n  _.chunk = function(array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0, length = array.length;\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n    return result;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = restArguments(function(func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function(callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  });\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n  _.partial = restArguments(function(func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  });\n\n  _.partial.placeholder = _;\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = restArguments(function(obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  });\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = restArguments(function(func, wait, args) {\n    return setTimeout(function() {\n      return func.apply(null, args);\n    }, wait);\n  });\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function() {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n\n    var later = function(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function(args) {\n      if (timeout) clearTimeout(timeout);\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function() {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  _.restArguments = restArguments;\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  };\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, defaults) {\n    return function(obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test.\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Internal pick helper function to determine if `obj` has key `key`.\n  var keyInObj = function(value, key, obj) {\n    return key in obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = restArguments(function(obj, keys) {\n    var result = {}, iteratee = keys[0];\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  });\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = restArguments(function(obj, keys) {\n    var iteratee = keys[0], context;\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  });\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq, deepEq;\n  eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  deepEq = function(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n  var nodelist = root.document && root.document.childNodes;\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`?\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n      obj = obj[key];\n    }\n    return !!length;\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n  _.property = function(path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n    return function(obj) {\n      return deepGet(obj, path);\n    };\n  };\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    if (obj == null) {\n      return function(){};\n    }\n    return function(path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n  // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped.\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n  _.result = function(obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n    return obj;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offset.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    var render;\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var chainResult = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n    return _;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return String(this._wrapped);\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define == 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}());\n","import {mat3, mat4, vec2, vec3, vec4} from 'gl-matrix';\n\nexport {Camera};\n\nclass Camera {\n    constructor(bounds) {\n        this._translation = vec2.create();\n        this._bounds = bounds;\n    }\n\n    centerAt(x, y) {\n        this._translation.set([\n            -(x - this._bounds.width / 2),\n            -(y - this._bounds.height / 2)\n        ]);\n\n        return this;\n    }\n\n    translate(x, y) {\n        vec2.sub(this._translation, this._translation, [x, y]);\n\n        return this;\n    }\n\n    get position() {\n        return vec2.clone(this._translation);\n    }\n\n    get translation() {\n        return this.position;\n    }\n\n    get matrix() {\n        return mat4.fromTranslation(mat4.create(), vec4.fromValues(...this._translation, 0, 1));\n    }\n}\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html {\\n    height: 100%;\\n    background-color: #555;\\n    color: #eee;\\n    font-family: monospace;\\n}\\n\\nbody {\\n    padding: 0;\\n    margin: 0;\\n    height: 100%;\\n}\\n\\n#content {\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    flex-direction: column;\\n}\\n\\ncanvas.game {\\n    width: 100vw;\\n    height: 100vh;\\n}\\n\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!./app.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./app.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./app.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","import App from './app.js';\nimport '../css/app.css'\n\nconst mountPoint = document.getElementById('content');\nconst canvas = document.createElement('canvas');\nmountPoint.appendChild(canvas);\nconst app = new App({el: canvas});\napp.start();\n","module.exports = \"#version 300 es\\n\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nin vec2 v_tex_coord;\\n\\nuniform sampler2D texture;\\n\\nvoid main() {\\n    float line = v_tex_coord.y - floor(v_tex_coord.y);\\n\\n    vec4 texel = texelFetch(texture, ivec2(v_tex_coord), 0).xyzw;\\n    out_color = texel; //vec4(texel.xyz * (line >= 0.5 ? 1. : .25), texel.w);\\n}\\n\"","module.exports = \"#version 300 es\\n\\nlayout(location = 0) in vec2 vertex;\\nlayout(location = 1) in vec2 position;\\nlayout(location = 2) in vec2 size;\\nlayout(location = 3) in ivec2 texcoord;\\nlayout(location = 4) in vec2 offset;\\n\\nout vec2 v_tex_coord;\\n\\nuniform mat4 projection;\\n\\n/*\\n\\nConvert coordinates from world space to clip space\\n\\n 1. Scale [0, dim] -> [-1, 1] where dim is screen width or height\\n    dim pixels = 2 clip\\n    clip / pixels = 2 / dim\\n    x' = 2 * x / width - 1\\n    y' = 2 * y / height - 1\\n\\n    2/w  0   0   -1\\n     0  2/h  0   -1\\n     0   0   1    0\\n     0   0   0    1\\n*/\\n\\nvoid main() {\\n    vec4 transformed_position = projection * vec4(position + size * (vertex - offset), 0, 1);\\n    gl_Position = transformed_position;\\n    v_tex_coord = vec2(texcoord * ivec2(size));\\n}\\n\"","/*\n** Copyright (c) 2012 The Khronos Group Inc.\n**\n** Permission is hereby granted, free of charge, to any person obtaining a\n** copy of this software and/or associated documentation files (the\n** \"Materials\"), to deal in the Materials without restriction, including\n** without limitation the rights to use, copy, modify, merge, publish,\n** distribute, sublicense, and/or sell copies of the Materials, and to\n** permit persons to whom the Materials are furnished to do so, subject to\n** the following conditions:\n**\n** The above copyright notice and this permission notice shall be included\n** in all copies or substantial portions of the Materials.\n**\n** THE MATERIALS ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\n*/\n\n// Various functions for helping debug WebGL apps.\n\nWebGLDebugUtils = function() {\n\n/**\n * Wrapped logging function.\n * @param {string} msg Message to log.\n */\nvar log = function(msg) {\n  if (window.console && window.console.log) {\n    window.console.log(msg);\n  }\n};\n\n/**\n * Wrapped error logging function.\n * @param {string} msg Message to log.\n */\nvar error = function(msg) {\n  if (window.console && window.console.error) {\n    window.console.error(msg);\n  } else {\n    log(msg);\n  }\n};\n\n\n/**\n * Which arguments are enums based on the number of arguments to the function.\n * So\n *    'texImage2D': {\n *       9: { 0:true, 2:true, 6:true, 7:true },\n *       6: { 0:true, 2:true, 3:true, 4:true },\n *    },\n *\n * means if there are 9 arguments then 6 and 7 are enums, if there are 6\n * arguments 3 and 4 are enums\n *\n * @type {!Object.<number, !Object.<number, string>}\n */\nvar glValidEnumContexts = {\n  // Generic setters and getters\n\n  'enable': {1: { 0:true }},\n  'disable': {1: { 0:true }},\n  'getParameter': {1: { 0:true }},\n\n  // Rendering\n\n  'drawArrays': {3:{ 0:true }},\n  'drawElements': {4:{ 0:true, 2:true }},\n\n  // Shaders\n\n  'createShader': {1: { 0:true }},\n  'getShaderParameter': {2: { 1:true }},\n  'getProgramParameter': {2: { 1:true }},\n  'getShaderPrecisionFormat': {2: { 0: true, 1:true }},\n\n  // Vertex attributes\n\n  'getVertexAttrib': {2: { 1:true }},\n  'vertexAttribPointer': {6: { 2:true }},\n\n  // Textures\n\n  'bindTexture': {2: { 0:true }},\n  'activeTexture': {1: { 0:true }},\n  'getTexParameter': {2: { 0:true, 1:true }},\n  'texParameterf': {3: { 0:true, 1:true }},\n  'texParameteri': {3: { 0:true, 1:true, 2:true }},\n  // texImage2D and texSubImage2D are defined below with WebGL 2 entrypoints\n  'copyTexImage2D': {8: { 0:true, 2:true }},\n  'copyTexSubImage2D': {8: { 0:true }},\n  'generateMipmap': {1: { 0:true }},\n  // compressedTexImage2D and compressedTexSubImage2D are defined below with WebGL 2 entrypoints\n\n  // Buffer objects\n\n  'bindBuffer': {2: { 0:true }},\n  // bufferData and bufferSubData are defined below with WebGL 2 entrypoints\n  'getBufferParameter': {2: { 0:true, 1:true }},\n\n  // Renderbuffers and framebuffers\n\n  'pixelStorei': {2: { 0:true, 1:true }},\n  // readPixels is defined below with WebGL 2 entrypoints\n  'bindRenderbuffer': {2: { 0:true }},\n  'bindFramebuffer': {2: { 0:true }},\n  'checkFramebufferStatus': {1: { 0:true }},\n  'framebufferRenderbuffer': {4: { 0:true, 1:true, 2:true }},\n  'framebufferTexture2D': {5: { 0:true, 1:true, 2:true }},\n  'getFramebufferAttachmentParameter': {3: { 0:true, 1:true, 2:true }},\n  'getRenderbufferParameter': {2: { 0:true, 1:true }},\n  'renderbufferStorage': {4: { 0:true, 1:true }},\n\n  // Frame buffer operations (clear, blend, depth test, stencil)\n\n  'clear': {1: { 0: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }}},\n  'depthFunc': {1: { 0:true }},\n  'blendFunc': {2: { 0:true, 1:true }},\n  'blendFuncSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},\n  'blendEquation': {1: { 0:true }},\n  'blendEquationSeparate': {2: { 0:true, 1:true }},\n  'stencilFunc': {3: { 0:true }},\n  'stencilFuncSeparate': {4: { 0:true, 1:true }},\n  'stencilMaskSeparate': {2: { 0:true }},\n  'stencilOp': {3: { 0:true, 1:true, 2:true }},\n  'stencilOpSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},\n\n  // Culling\n\n  'cullFace': {1: { 0:true }},\n  'frontFace': {1: { 0:true }},\n\n  // ANGLE_instanced_arrays extension\n\n  'drawArraysInstancedANGLE': {4: { 0:true }},\n  'drawElementsInstancedANGLE': {5: { 0:true, 2:true }},\n\n  // EXT_blend_minmax extension\n\n  'blendEquationEXT': {1: { 0:true }},\n\n  // WebGL 2 Buffer objects\n\n  'bufferData': {\n    3: { 0:true, 2:true }, // WebGL 1\n    4: { 0:true, 2:true }, // WebGL 2\n    5: { 0:true, 2:true }  // WebGL 2\n  },\n  'bufferSubData': {\n    3: { 0:true }, // WebGL 1\n    4: { 0:true }, // WebGL 2\n    5: { 0:true }  // WebGL 2\n  },\n  'copyBufferSubData': {5: { 0:true, 1:true }},\n  'getBufferSubData': {3: { 0:true }, 4: { 0:true }, 5: { 0:true }},\n\n  // WebGL 2 Framebuffer objects\n\n  'blitFramebuffer': {10: { 8: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }, 9:true }},\n  'framebufferTextureLayer': {5: { 0:true, 1:true }},\n  'invalidateFramebuffer': {2: { 0:true }},\n  'invalidateSubFramebuffer': {6: { 0:true }},\n  'readBuffer': {1: { 0:true }},\n\n  // WebGL 2 Renderbuffer objects\n\n  'getInternalformatParameter': {3: { 0:true, 1:true, 2:true }},\n  'renderbufferStorageMultisample': {5: { 0:true, 2:true }},\n\n  // WebGL 2 Texture objects\n\n  'texStorage2D': {5: { 0:true, 2:true }},\n  'texStorage3D': {6: { 0:true, 2:true }},\n  'texImage2D': {\n    9: { 0:true, 2:true, 6:true, 7:true }, // WebGL 1 & 2\n    6: { 0:true, 2:true, 3:true, 4:true }, // WebGL 1\n    10: { 0:true, 2:true, 6:true, 7:true } // WebGL 2\n  },\n  'texImage3D': {\n    10: { 0:true, 2:true, 7:true, 8:true },\n    11: { 0:true, 2:true, 7:true, 8:true }\n  },\n  'texSubImage2D': {\n    9: { 0:true, 6:true, 7:true }, // WebGL 1 & 2\n    7: { 0:true, 4:true, 5:true }, // WebGL 1\n    10: { 0:true, 6:true, 7:true } // WebGL 2\n  },\n  'texSubImage3D': {\n    11: { 0:true, 8:true, 9:true },\n    12: { 0:true, 8:true, 9:true }\n  },\n  'copyTexSubImage3D': {9: { 0:true }},\n  'compressedTexImage2D': {\n    7: { 0: true, 2:true }, // WebGL 1 & 2\n    8: { 0: true, 2:true }, // WebGL 2\n    9: { 0: true, 2:true }  // WebGL 2\n  },\n  'compressedTexImage3D': {\n    8: { 0: true, 2:true },\n    9: { 0: true, 2:true },\n    10: { 0: true, 2:true }\n  },\n  'compressedTexSubImage2D': {\n    8: { 0: true, 6:true }, // WebGL 1 & 2\n    9: { 0: true, 6:true }, // WebGL 2\n    10: { 0: true, 6:true } // WebGL 2\n  },\n  'compressedTexSubImage3D': {\n    10: { 0: true, 8:true },\n    11: { 0: true, 8:true },\n    12: { 0: true, 8:true }\n  },\n\n  // WebGL 2 Vertex attribs\n\n  'vertexAttribIPointer': {5: { 2:true }},\n\n  // WebGL 2 Writing to the isDrawing buffer\n\n  'drawArraysInstanced': {4: { 0:true }},\n  'drawElementsInstanced': {5: { 0:true, 2:true }},\n  'drawRangeElements': {6: { 0:true, 4:true }},\n\n  // WebGL 2 Reading back pixels\n\n  'readPixels': {\n    7: { 4:true, 5:true }, // WebGL 1 & 2\n    8: { 4:true, 5:true }  // WebGL 2\n  },\n\n  // WebGL 2 Multiple Render Targets\n\n  'clearBufferfv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferiv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferuiv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferfi': {4: { 0:true }},\n\n  // WebGL 2 Query objects\n\n  'beginQuery': {2: { 0:true }},\n  'endQuery': {1: { 0:true }},\n  'getQuery': {2: { 0:true, 1:true }},\n  'getQueryParameter': {2: { 1:true }},\n\n  // WebGL 2 Sampler objects\n\n  'samplerParameteri': {3: { 1:true, 2:true }},\n  'samplerParameterf': {3: { 1:true }},\n  'getSamplerParameter': {2: { 1:true }},\n\n  // WebGL 2 Sync objects\n\n  'fenceSync': {2: { 0:true, 1: { 'enumBitwiseOr': [] } }},\n  'clientWaitSync': {3: { 1: { 'enumBitwiseOr': ['SYNC_FLUSH_COMMANDS_BIT'] } }},\n  'waitSync': {3: { 1: { 'enumBitwiseOr': [] } }},\n  'getSyncParameter': {2: { 1:true }},\n\n  // WebGL 2 Transform Feedback\n\n  'bindTransformFeedback': {2: { 0:true }},\n  'beginTransformFeedback': {1: { 0:true }},\n  'transformFeedbackVaryings': {3: { 2:true }},\n\n  // WebGL2 Uniform Buffer Objects and Transform Feedback Buffers\n\n  'bindBufferBase': {3: { 0:true }},\n  'bindBufferRange': {5: { 0:true }},\n  'getIndexedParameter': {2: { 0:true }},\n  'getActiveUniforms': {3: { 2:true }},\n  'getActiveUniformBlockParameter': {3: { 2:true }}\n};\n\n/**\n * Map of numbers to names.\n * @type {Object}\n */\nvar glEnums = null;\n\n/**\n * Map of names to numbers.\n * @type {Object}\n */\nvar enumStringToValue = null;\n\n/**\n * Initializes this module. Safe to call more than once.\n * @param {!WebGLRenderingContext} ctx A WebGL context. If\n *    you have more than one context it doesn't matter which one\n *    you pass in, it is only used to pull out constants.\n */\nfunction init(ctx) {\n  if (glEnums == null) {\n    glEnums = { };\n    enumStringToValue = { };\n    for (var propertyName in ctx) {\n      if (typeof ctx[propertyName] == 'number') {\n        glEnums[ctx[propertyName]] = propertyName;\n        enumStringToValue[propertyName] = ctx[propertyName];\n      }\n    }\n  }\n}\n\n/**\n * Checks the utils have been initialized.\n */\nfunction checkInit() {\n  if (glEnums == null) {\n    throw 'WebGLDebugUtils.init(ctx) not called';\n  }\n}\n\n/**\n * Returns true or false if value matches any WebGL enum\n * @param {*} value Value to check if it might be an enum.\n * @return {boolean} True if value matches one of the WebGL defined enums\n */\nfunction mightBeEnum(value) {\n  checkInit();\n  return (glEnums[value] !== undefined);\n}\n\n/**\n * Gets an string version of an WebGL enum.\n *\n * Example:\n *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\n *\n * @param {number} value Value to return an enum for\n * @return {string} The string version of the enum.\n */\nfunction glEnumToString(value) {\n  checkInit();\n  var name = glEnums[value];\n  return (name !== undefined) ? (\"gl.\" + name) :\n      (\"/*UNKNOWN WebGL ENUM*/ 0x\" + value.toString(16) + \"\");\n}\n\n/**\n * Returns the string version of a WebGL argument.\n * Attempts to convert enum arguments to strings.\n * @param {string} functionName the name of the WebGL function.\n * @param {number} numArgs the number of arguments passed to the function.\n * @param {number} argumentIndx the index of the argument.\n * @param {*} value The value of the argument.\n * @return {string} The value as a string.\n */\nfunction glFunctionArgToString(functionName, numArgs, argumentIndex, value) {\n  var funcInfo = glValidEnumContexts[functionName];\n  if (funcInfo !== undefined) {\n    var funcInfo = funcInfo[numArgs];\n    if (funcInfo !== undefined) {\n      if (funcInfo[argumentIndex]) {\n        if (typeof funcInfo[argumentIndex] === 'object' &&\n            funcInfo[argumentIndex]['enumBitwiseOr'] !== undefined) {\n          var enums = funcInfo[argumentIndex]['enumBitwiseOr'];\n          var orResult = 0;\n          var orEnums = [];\n          for (var i = 0; i < enums.length; ++i) {\n            var enumValue = enumStringToValue[enums[i]];\n            if ((value & enumValue) !== 0) {\n              orResult |= enumValue;\n              orEnums.push(glEnumToString(enumValue));\n            }\n          }\n          if (orResult === value) {\n            return orEnums.join(' | ');\n          } else {\n            return glEnumToString(value);\n          }\n        } else {\n          return glEnumToString(value);\n        }\n      }\n    }\n  }\n  if (value === null) {\n    return \"null\";\n  } else if (value === undefined) {\n    return \"undefined\";\n  } else {\n    return value.toString();\n  }\n}\n\n/**\n * Converts the arguments of a WebGL function to a string.\n * Attempts to convert enum arguments to strings.\n *\n * @param {string} functionName the name of the WebGL function.\n * @param {number} args The arguments.\n * @return {string} The arguments as a string.\n */\nfunction glFunctionArgsToString(functionName, args) {\n  // apparently we can't do args.join(\",\");\n  var argStr = \"\";\n  var numArgs = args.length;\n  for (var ii = 0; ii < numArgs; ++ii) {\n    argStr += ((ii == 0) ? '' : ', ') +\n        glFunctionArgToString(functionName, numArgs, ii, args[ii]);\n  }\n  return argStr;\n};\n\n\nfunction makePropertyWrapper(wrapper, original, propertyName) {\n  //log(\"wrap prop: \" + propertyName);\n  wrapper.__defineGetter__(propertyName, function() {\n    return original[propertyName];\n  });\n  // TODO(gmane): this needs to handle properties that take more than\n  // one value?\n  wrapper.__defineSetter__(propertyName, function(value) {\n    //log(\"set: \" + propertyName);\n    original[propertyName] = value;\n  });\n}\n\n// Makes a function that calls a function on another object.\nfunction makeFunctionWrapper(original, functionName) {\n  //log(\"wrap fn: \" + functionName);\n  var f = original[functionName];\n  return function() {\n    //log(\"call: \" + functionName);\n    var result = f.apply(original, arguments);\n    return result;\n  };\n}\n\n/**\n * Given a WebGL context returns a wrapped context that calls\n * gl.getError after every command and calls a function if the\n * result is not gl.NO_ERROR.\n *\n * @param {!WebGLRenderingContext} ctx The webgl context to\n *        wrap.\n * @param {!function(err, funcName, args): void} opt_onErrorFunc\n *        The function to call when gl.getError returns an\n *        error. If not specified the default function calls\n *        console.log with a message.\n * @param {!function(funcName, args): void} opt_onFunc The\n *        function to call when each webgl function is called.\n *        You can use this to log all calls for example.\n * @param {!WebGLRenderingContext} opt_err_ctx The webgl context\n *        to call getError on if different than ctx.\n */\nfunction makeDebugContext(ctx, opt_onErrorFunc, opt_onFunc, opt_err_ctx) {\n  opt_err_ctx = opt_err_ctx || ctx;\n  init(ctx);\n  opt_onErrorFunc = opt_onErrorFunc || function(err, functionName, args) {\n        // apparently we can't do args.join(\",\");\n        var argStr = \"\";\n        var numArgs = args.length;\n        for (var ii = 0; ii < numArgs; ++ii) {\n          argStr += ((ii == 0) ? '' : ', ') +\n              glFunctionArgToString(functionName, numArgs, ii, args[ii]);\n        }\n        error(\"WebGL error \"+ glEnumToString(err) + \" in \"+ functionName +\n              \"(\" + argStr + \")\");\n      };\n\n  // Holds booleans for each GL error so after we get the error ourselves\n  // we can still return it to the client app.\n  var glErrorShadow = { };\n\n  // Makes a function that calls a WebGL function and then calls getError.\n  function makeErrorWrapper(ctx, functionName) {\n    return function() {\n      if (opt_onFunc) {\n        opt_onFunc(functionName, arguments);\n      }\n      var result = ctx[functionName].apply(ctx, arguments);\n      var err = opt_err_ctx.getError();\n      if (err != 0) {\n        glErrorShadow[err] = true;\n        opt_onErrorFunc(err, functionName, arguments);\n      }\n      return result;\n    };\n  }\n\n  // Make a an object that has a copy of every property of the WebGL context\n  // but wraps all functions.\n  var wrapper = {};\n  for (var propertyName in ctx) {\n    if (typeof ctx[propertyName] == 'function') {\n      if (propertyName != 'getExtension') {\n        wrapper[propertyName] = makeErrorWrapper(ctx, propertyName);\n      } else {\n        var wrapped = makeErrorWrapper(ctx, propertyName);\n        wrapper[propertyName] = function () {\n          var result = wrapped.apply(ctx, arguments);\n          if (!result) {\n            return null;\n          }\n          return makeDebugContext(result, opt_onErrorFunc, opt_onFunc, opt_err_ctx);\n        };\n      }\n    } else {\n      makePropertyWrapper(wrapper, ctx, propertyName);\n    }\n  }\n\n  // Override the getError function with one that returns our saved results.\n  wrapper.getError = function() {\n    for (var err in glErrorShadow) {\n      if (glErrorShadow.hasOwnProperty(err)) {\n        if (glErrorShadow[err]) {\n          glErrorShadow[err] = false;\n          return err;\n        }\n      }\n    }\n    return ctx.NO_ERROR;\n  };\n\n  return wrapper;\n}\n\nfunction resetToInitialState(ctx) {\n  var isWebGL2RenderingContext = !!ctx.createTransformFeedback;\n\n  if (isWebGL2RenderingContext) {\n    ctx.bindVertexArray(null);\n  }\n\n  var numAttribs = ctx.getParameter(ctx.MAX_VERTEX_ATTRIBS);\n  var tmp = ctx.createBuffer();\n  ctx.bindBuffer(ctx.ARRAY_BUFFER, tmp);\n  for (var ii = 0; ii < numAttribs; ++ii) {\n    ctx.disableVertexAttribArray(ii);\n    ctx.vertexAttribPointer(ii, 4, ctx.FLOAT, false, 0, 0);\n    ctx.vertexAttrib1f(ii, 0);\n    if (isWebGL2RenderingContext) {\n      ctx.vertexAttribDivisor(ii, 0);\n    }\n  }\n  ctx.deleteBuffer(tmp);\n\n  var numTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);\n  for (var ii = 0; ii < numTextureUnits; ++ii) {\n    ctx.activeTexture(ctx.TEXTURE0 + ii);\n    ctx.bindTexture(ctx.TEXTURE_CUBE_MAP, null);\n    ctx.bindTexture(ctx.TEXTURE_2D, null);\n    if (isWebGL2RenderingContext) {\n      ctx.bindTexture(ctx.TEXTURE_2D_ARRAY, null);\n      ctx.bindTexture(ctx.TEXTURE_3D, null);\n      ctx.bindSampler(ii, null);\n    }\n  }\n\n  ctx.activeTexture(ctx.TEXTURE0);\n  ctx.useProgram(null);\n  ctx.bindBuffer(ctx.ARRAY_BUFFER, null);\n  ctx.bindBuffer(ctx.ELEMENT_ARRAY_BUFFER, null);\n  ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);\n  ctx.bindRenderbuffer(ctx.RENDERBUFFER, null);\n  ctx.disable(ctx.BLEND);\n  ctx.disable(ctx.CULL_FACE);\n  ctx.disable(ctx.DEPTH_TEST);\n  ctx.disable(ctx.DITHER);\n  ctx.disable(ctx.SCISSOR_TEST);\n  ctx.blendColor(0, 0, 0, 0);\n  ctx.blendEquation(ctx.FUNC_ADD);\n  ctx.blendFunc(ctx.ONE, ctx.ZERO);\n  ctx.clearColor(0, 0, 0, 0);\n  ctx.clearDepth(1);\n  ctx.clearStencil(-1);\n  ctx.colorMask(true, true, true, true);\n  ctx.cullFace(ctx.BACK);\n  ctx.depthFunc(ctx.LESS);\n  ctx.depthMask(true);\n  ctx.depthRange(0, 1);\n  ctx.frontFace(ctx.CCW);\n  ctx.hint(ctx.GENERATE_MIPMAP_HINT, ctx.DONT_CARE);\n  ctx.lineWidth(1);\n  ctx.pixelStorei(ctx.PACK_ALIGNMENT, 4);\n  ctx.pixelStorei(ctx.UNPACK_ALIGNMENT, 4);\n  ctx.pixelStorei(ctx.UNPACK_FLIP_Y_WEBGL, false);\n  ctx.pixelStorei(ctx.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n  // TODO: Delete this IF.\n  if (ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL) {\n    ctx.pixelStorei(ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL, ctx.BROWSER_DEFAULT_WEBGL);\n  }\n  ctx.polygonOffset(0, 0);\n  ctx.sampleCoverage(1, false);\n  ctx.scissor(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.stencilFunc(ctx.ALWAYS, 0, 0xFFFFFFFF);\n  ctx.stencilMask(0xFFFFFFFF);\n  ctx.stencilOp(ctx.KEEP, ctx.KEEP, ctx.KEEP);\n  ctx.viewport(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.clear(ctx.COLOR_BUFFER_BIT | ctx.DEPTH_BUFFER_BIT | ctx.STENCIL_BUFFER_BIT);\n\n  if (isWebGL2RenderingContext) {\n    ctx.drawBuffers([ctx.BACK]);\n    ctx.readBuffer(ctx.BACK);\n    ctx.bindBuffer(ctx.COPY_READ_BUFFER, null);\n    ctx.bindBuffer(ctx.COPY_WRITE_BUFFER, null);\n    ctx.bindBuffer(ctx.PIXEL_PACK_BUFFER, null);\n    ctx.bindBuffer(ctx.PIXEL_UNPACK_BUFFER, null);\n    var numTransformFeedbacks = ctx.getParameter(ctx.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS);\n    for (var ii = 0; ii < numTransformFeedbacks; ++ii) {\n      ctx.bindBufferBase(ctx.TRANSFORM_FEEDBACK_BUFFER, ii, null);\n    }\n    var numUBOs = ctx.getParameter(ctx.MAX_UNIFORM_BUFFER_BINDINGS);\n    for (var ii = 0; ii < numUBOs; ++ii) {\n      ctx.bindBufferBase(ctx.UNIFORM_BUFFER, ii, null);\n    }\n    ctx.disable(ctx.RASTERIZER_DISCARD);\n    ctx.pixelStorei(ctx.UNPACK_IMAGE_HEIGHT, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_IMAGES, 0);\n    ctx.pixelStorei(ctx.UNPACK_ROW_LENGTH, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_ROWS, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_PIXELS, 0);\n    ctx.pixelStorei(ctx.PACK_ROW_LENGTH, 0);\n    ctx.pixelStorei(ctx.PACK_SKIP_ROWS, 0);\n    ctx.pixelStorei(ctx.PACK_SKIP_PIXELS, 0);\n    ctx.hint(ctx.FRAGMENT_SHADER_DERIVATIVE_HINT, ctx.DONT_CARE);\n  }\n\n  // TODO: This should NOT be needed but Firefox fails with 'hint'\n  while(ctx.getError());\n}\n\nfunction makeLostContextSimulatingCanvas(canvas) {\n  var unwrappedContext_;\n  var wrappedContext_;\n  var onLost_ = [];\n  var onRestored_ = [];\n  var wrappedContext_ = {};\n  var contextId_ = 1;\n  var contextLost_ = false;\n  var resourceId_ = 0;\n  var resourceDb_ = [];\n  var numCallsToLoseContext_ = 0;\n  var numCalls_ = 0;\n  var canRestore_ = false;\n  var restoreTimeout_ = 0;\n  var isWebGL2RenderingContext;\n\n  // Holds booleans for each GL error so can simulate errors.\n  var glErrorShadow_ = { };\n\n  canvas.getContext = function(f) {\n    return function() {\n      var ctx = f.apply(canvas, arguments);\n      // Did we get a context and is it a WebGL context?\n      if ((ctx instanceof WebGLRenderingContext) || (window.WebGL2RenderingContext && (ctx instanceof WebGL2RenderingContext))) {\n        if (ctx != unwrappedContext_) {\n          if (unwrappedContext_) {\n            throw \"got different context\"\n          }\n          isWebGL2RenderingContext = window.WebGL2RenderingContext && (ctx instanceof WebGL2RenderingContext);\n          unwrappedContext_ = ctx;\n          wrappedContext_ = makeLostContextSimulatingContext(unwrappedContext_);\n        }\n        return wrappedContext_;\n      }\n      return ctx;\n    }\n  }(canvas.getContext);\n\n  function wrapEvent(listener) {\n    if (typeof(listener) == \"function\") {\n      return listener;\n    } else {\n      return function(info) {\n        listener.handleEvent(info);\n      }\n    }\n  }\n\n  var addOnContextLostListener = function(listener) {\n    onLost_.push(wrapEvent(listener));\n  };\n\n  var addOnContextRestoredListener = function(listener) {\n    onRestored_.push(wrapEvent(listener));\n  };\n\n\n  function wrapAddEventListener(canvas) {\n    var f = canvas.addEventListener;\n    canvas.addEventListener = function(type, listener, bubble) {\n      switch (type) {\n        case 'webglcontextlost':\n          addOnContextLostListener(listener);\n          break;\n        case 'webglcontextrestored':\n          addOnContextRestoredListener(listener);\n          break;\n        default:\n          f.apply(canvas, arguments);\n      }\n    };\n  }\n\n  wrapAddEventListener(canvas);\n\n  canvas.loseContext = function() {\n    if (!contextLost_) {\n      contextLost_ = true;\n      numCallsToLoseContext_ = 0;\n      ++contextId_;\n      while (unwrappedContext_.getError());\n      clearErrors();\n      glErrorShadow_[unwrappedContext_.CONTEXT_LOST_WEBGL] = true;\n      var event = makeWebGLContextEvent(\"context lost\");\n      var callbacks = onLost_.slice();\n      setTimeout(function() {\n          //log(\"numCallbacks:\" + callbacks.length);\n          for (var ii = 0; ii < callbacks.length; ++ii) {\n            //log(\"calling callback:\" + ii);\n            callbacks[ii](event);\n          }\n          if (restoreTimeout_ >= 0) {\n            setTimeout(function() {\n                canvas.restoreContext();\n              }, restoreTimeout_);\n          }\n        }, 0);\n    }\n  };\n\n  canvas.restoreContext = function() {\n    if (contextLost_) {\n      if (onRestored_.length) {\n        setTimeout(function() {\n            if (!canRestore_) {\n              throw \"can not restore. webglcontestlost listener did not call event.preventDefault\";\n            }\n            freeResources();\n            resetToInitialState(unwrappedContext_);\n            contextLost_ = false;\n            numCalls_ = 0;\n            canRestore_ = false;\n            var callbacks = onRestored_.slice();\n            var event = makeWebGLContextEvent(\"context restored\");\n            for (var ii = 0; ii < callbacks.length; ++ii) {\n              callbacks[ii](event);\n            }\n          }, 0);\n      }\n    }\n  };\n\n  canvas.loseContextInNCalls = function(numCalls) {\n    if (contextLost_) {\n      throw \"You can not ask a lost contet to be lost\";\n    }\n    numCallsToLoseContext_ = numCalls_ + numCalls;\n  };\n\n  canvas.getNumCalls = function() {\n    return numCalls_;\n  };\n\n  canvas.setRestoreTimeout = function(timeout) {\n    restoreTimeout_ = timeout;\n  };\n\n  function isWebGLObject(obj) {\n    //return false;\n    return (obj instanceof WebGLBuffer ||\n            obj instanceof WebGLFramebuffer ||\n            obj instanceof WebGLProgram ||\n            obj instanceof WebGLRenderbuffer ||\n            obj instanceof WebGLShader ||\n            obj instanceof WebGLTexture);\n  }\n\n  function checkResources(args) {\n    for (var ii = 0; ii < args.length; ++ii) {\n      var arg = args[ii];\n      if (isWebGLObject(arg)) {\n        return arg.__webglDebugContextLostId__ == contextId_;\n      }\n    }\n    return true;\n  }\n\n  function clearErrors() {\n    var k = Object.keys(glErrorShadow_);\n    for (var ii = 0; ii < k.length; ++ii) {\n      delete glErrorShadow_[k[ii]];\n    }\n  }\n\n  function loseContextIfTime() {\n    ++numCalls_;\n    if (!contextLost_) {\n      if (numCallsToLoseContext_ == numCalls_) {\n        canvas.loseContext();\n      }\n    }\n  }\n\n  // Makes a function that simulates WebGL when out of context.\n  function makeLostContextFunctionWrapper(ctx, functionName) {\n    var f = ctx[functionName];\n    return function() {\n      // log(\"calling:\" + functionName);\n      // Only call the functions if the context is not lost.\n      loseContextIfTime();\n      if (!contextLost_) {\n        //if (!checkResources(arguments)) {\n        //  glErrorShadow_[wrappedContext_.INVALID_OPERATION] = true;\n        //  return;\n        //}\n        var result = f.apply(ctx, arguments);\n        return result;\n      }\n    };\n  }\n\n  function freeResources() {\n    for (var ii = 0; ii < resourceDb_.length; ++ii) {\n      var resource = resourceDb_[ii];\n      if (resource instanceof WebGLBuffer) {\n        unwrappedContext_.deleteBuffer(resource);\n      } else if (resource instanceof WebGLFramebuffer) {\n        unwrappedContext_.deleteFramebuffer(resource);\n      } else if (resource instanceof WebGLProgram) {\n        unwrappedContext_.deleteProgram(resource);\n      } else if (resource instanceof WebGLRenderbuffer) {\n        unwrappedContext_.deleteRenderbuffer(resource);\n      } else if (resource instanceof WebGLShader) {\n        unwrappedContext_.deleteShader(resource);\n      } else if (resource instanceof WebGLTexture) {\n        unwrappedContext_.deleteTexture(resource);\n      }\n      else if (isWebGL2RenderingContext) {\n        if (resource instanceof WebGLQuery) {\n          unwrappedContext_.deleteQuery(resource);\n        } else if (resource instanceof WebGLSampler) {\n          unwrappedContext_.deleteSampler(resource);\n        } else if (resource instanceof WebGLSync) {\n          unwrappedContext_.deleteSync(resource);\n        } else if (resource instanceof WebGLTransformFeedback) {\n          unwrappedContext_.deleteTransformFeedback(resource);\n        } else if (resource instanceof WebGLVertexArrayObject) {\n          unwrappedContext_.deleteVertexArray(resource);\n        }\n      }\n    }\n  }\n\n  function makeWebGLContextEvent(statusMessage) {\n    return {\n      statusMessage: statusMessage,\n      preventDefault: function() {\n          canRestore_ = true;\n        }\n    };\n  }\n\n  return canvas;\n\n  function makeLostContextSimulatingContext(ctx) {\n    // copy all functions and properties to wrapper\n    for (var propertyName in ctx) {\n      if (typeof ctx[propertyName] == 'function') {\n         wrappedContext_[propertyName] = makeLostContextFunctionWrapper(\n             ctx, propertyName);\n       } else {\n         makePropertyWrapper(wrappedContext_, ctx, propertyName);\n       }\n    }\n\n    // Wrap a few functions specially.\n    wrappedContext_.getError = function() {\n      loseContextIfTime();\n      if (!contextLost_) {\n        var err;\n        while (err = unwrappedContext_.getError()) {\n          glErrorShadow_[err] = true;\n        }\n      }\n      for (var err in glErrorShadow_) {\n        if (glErrorShadow_[err]) {\n          delete glErrorShadow_[err];\n          return err;\n        }\n      }\n      return wrappedContext_.NO_ERROR;\n    };\n\n    var creationFunctions = [\n      \"createBuffer\",\n      \"createFramebuffer\",\n      \"createProgram\",\n      \"createRenderbuffer\",\n      \"createShader\",\n      \"createTexture\"\n    ];\n    if (isWebGL2RenderingContext) {\n      creationFunctions.push(\n        \"createQuery\",\n        \"createSampler\",\n        \"fenceSync\",\n        \"createTransformFeedback\",\n        \"createVertexArray\"\n      );\n    }\n    for (var ii = 0; ii < creationFunctions.length; ++ii) {\n      var functionName = creationFunctions[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return null;\n          }\n          var obj = f.apply(ctx, arguments);\n          obj.__webglDebugContextLostId__ = contextId_;\n          resourceDb_.push(obj);\n          return obj;\n        };\n      }(ctx[functionName]);\n    }\n\n    var functionsThatShouldReturnNull = [\n      \"getActiveAttrib\",\n      \"getActiveUniform\",\n      \"getBufferParameter\",\n      \"getContextAttributes\",\n      \"getAttachedShaders\",\n      \"getFramebufferAttachmentParameter\",\n      \"getParameter\",\n      \"getProgramParameter\",\n      \"getProgramInfoLog\",\n      \"getRenderbufferParameter\",\n      \"getShaderParameter\",\n      \"getShaderInfoLog\",\n      \"getShaderSource\",\n      \"getTexParameter\",\n      \"getUniform\",\n      \"getUniformLocation\",\n      \"getVertexAttrib\"\n    ];\n    if (isWebGL2RenderingContext) {\n      functionsThatShouldReturnNull.push(\n        \"getInternalformatParameter\",\n        \"getQuery\",\n        \"getQueryParameter\",\n        \"getSamplerParameter\",\n        \"getSyncParameter\",\n        \"getTransformFeedbackVarying\",\n        \"getIndexedParameter\",\n        \"getUniformIndices\",\n        \"getActiveUniforms\",\n        \"getActiveUniformBlockParameter\",\n        \"getActiveUniformBlockName\"\n      );\n    }\n    for (var ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {\n      var functionName = functionsThatShouldReturnNull[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return null;\n          }\n          return f.apply(ctx, arguments);\n        }\n      }(wrappedContext_[functionName]);\n    }\n\n    var isFunctions = [\n      \"isBuffer\",\n      \"isEnabled\",\n      \"isFramebuffer\",\n      \"isProgram\",\n      \"isRenderbuffer\",\n      \"isShader\",\n      \"isTexture\"\n    ];\n    if (isWebGL2RenderingContext) {\n      isFunctions.push(\n        \"isQuery\",\n        \"isSampler\",\n        \"isSync\",\n        \"isTransformFeedback\",\n        \"isVertexArray\"\n      );\n    }\n    for (var ii = 0; ii < isFunctions.length; ++ii) {\n      var functionName = isFunctions[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return false;\n          }\n          return f.apply(ctx, arguments);\n        }\n      }(wrappedContext_[functionName]);\n    }\n\n    wrappedContext_.checkFramebufferStatus = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return wrappedContext_.FRAMEBUFFER_UNSUPPORTED;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.checkFramebufferStatus);\n\n    wrappedContext_.getAttribLocation = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return -1;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.getAttribLocation);\n\n    wrappedContext_.getVertexAttribOffset = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return 0;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.getVertexAttribOffset);\n\n    wrappedContext_.isContextLost = function() {\n      return contextLost_;\n    };\n\n    if (isWebGL2RenderingContext) {\n      wrappedContext_.getFragDataLocation = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return -1;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.getFragDataLocation);\n\n      wrappedContext_.clientWaitSync = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return wrappedContext_.WAIT_FAILED;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.clientWaitSync);\n\n      wrappedContext_.getUniformBlockIndex = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return wrappedContext_.INVALID_INDEX;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.getUniformBlockIndex);\n    }\n\n    return wrappedContext_;\n  }\n}\n\nreturn {\n  /**\n   * Initializes this module. Safe to call more than once.\n   * @param {!WebGLRenderingContext} ctx A WebGL context. If\n   *    you have more than one context it doesn't matter which one\n   *    you pass in, it is only used to pull out constants.\n   */\n  'init': init,\n\n  /**\n   * Returns true or false if value matches any WebGL enum\n   * @param {*} value Value to check if it might be an enum.\n   * @return {boolean} True if value matches one of the WebGL defined enums\n   */\n  'mightBeEnum': mightBeEnum,\n\n  /**\n   * Gets an string version of an WebGL enum.\n   *\n   * Example:\n   *   WebGLDebugUtil.init(ctx);\n   *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\n   *\n   * @param {number} value Value to return an enum for\n   * @return {string} The string version of the enum.\n   */\n  'glEnumToString': glEnumToString,\n\n  /**\n   * Converts the argument of a WebGL function to a string.\n   * Attempts to convert enum arguments to strings.\n   *\n   * Example:\n   *   WebGLDebugUtil.init(ctx);\n   *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 2, 0, gl.TEXTURE_2D);\n   *\n   * would return 'TEXTURE_2D'\n   *\n   * @param {string} functionName the name of the WebGL function.\n   * @param {number} numArgs The number of arguments\n   * @param {number} argumentIndx the index of the argument.\n   * @param {*} value The value of the argument.\n   * @return {string} The value as a string.\n   */\n  'glFunctionArgToString': glFunctionArgToString,\n\n  /**\n   * Converts the arguments of a WebGL function to a string.\n   * Attempts to convert enum arguments to strings.\n   *\n   * @param {string} functionName the name of the WebGL function.\n   * @param {number} args The arguments.\n   * @return {string} The arguments as a string.\n   */\n  'glFunctionArgsToString': glFunctionArgsToString,\n\n  /**\n   * Given a WebGL context returns a wrapped context that calls\n   * gl.getError after every command and calls a function if the\n   * result is not NO_ERROR.\n   *\n   * You can supply your own function if you want. For example, if you'd like\n   * an exception thrown on any GL error you could do this\n   *\n   *    function throwOnGLError(err, funcName, args) {\n   *      throw WebGLDebugUtils.glEnumToString(err) +\n   *            \" was caused by call to \" + funcName;\n   *    };\n   *\n   *    ctx = WebGLDebugUtils.makeDebugContext(\n   *        canvas.getContext(\"webgl\"), throwOnGLError);\n   *\n   * @param {!WebGLRenderingContext} ctx The webgl context to wrap.\n   * @param {!function(err, funcName, args): void} opt_onErrorFunc The function\n   *     to call when gl.getError returns an error. If not specified the default\n   *     function calls console.log with a message.\n   * @param {!function(funcName, args): void} opt_onFunc The\n   *     function to call when each webgl function is called. You\n   *     can use this to log all calls for example.\n   */\n  'makeDebugContext': makeDebugContext,\n\n  /**\n   * Given a canvas element returns a wrapped canvas element that will\n   * simulate lost context. The canvas returned adds the following functions.\n   *\n   * loseContext:\n   *   simulates a lost context event.\n   *\n   * restoreContext:\n   *   simulates the context being restored.\n   *\n   * lostContextInNCalls:\n   *   loses the context after N gl calls.\n   *\n   * getNumCalls:\n   *   tells you how many gl calls there have been so far.\n   *\n   * setRestoreTimeout:\n   *   sets the number of milliseconds until the context is restored\n   *   after it has been lost. Defaults to 0. Pass -1 to prevent\n   *   automatic restoring.\n   *\n   * @param {!Canvas} canvas The canvas element to wrap.\n   */\n  'makeLostContextSimulatingCanvas': makeLostContextSimulatingCanvas,\n\n  /**\n   * Resets a context to the initial state.\n   * @param {!WebGLRenderingContext} ctx The webgl context to\n   *     reset.\n   */\n  'resetToInitialState': resetToInitialState\n};\n\n}();\n","/*!\n * @license twgl.js 4.4.0 Copyright (c) 2015, Gregg Tavares All Rights Reserved.\n * Available via the MIT license.\n * see: http://github.com/greggman/twgl.js for details\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"twgl\"] = factory();\n\telse\n\t\troot[\"twgl\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 9);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.copyExistingProperties = copyExistingProperties;\nexports.copyNamedProperties = copyNamedProperties;\nexports.isBuffer = isBuffer;\nexports.isRenderbuffer = isRenderbuffer;\nexports.isShader = isShader;\nexports.isTexture = isTexture;\nexports.isSampler = isSampler;\nexports.warn = exports.error = void 0;\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Copy named properties\n *\n * @param {string[]} names names of properties to copy\n * @param {object} src object to copy properties from\n * @param {object} dst object to copy properties to\n */\nfunction copyNamedProperties(names, src, dst) {\n  names.forEach(function (name) {\n    var value = src[name];\n\n    if (value !== undefined) {\n      dst[name] = value;\n    }\n  });\n}\n/**\n * Copies properties from source to dest only if a matching key is in dest\n *\n * @param {Object.<string, ?>} src the source\n * @param {Object.<string, ?>} dst the dest\n */\n\n\nfunction copyExistingProperties(src, dst) {\n  Object.keys(dst).forEach(function (key) {\n    if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {\n      dst[key] = src[key];\n    }\n  });\n}\n\nvar error = _globalObject.default.console && _globalObject.default.console.error && typeof _globalObject.default.console.error === \"function\" ? _globalObject.default.console.error.bind(_globalObject.default.console) : function () {};\nexports.error = error;\nvar warn = _globalObject.default.console && _globalObject.default.console.warn && typeof _globalObject.default.console.warn === \"function\" ? _globalObject.default.console.warn.bind(_globalObject.default.console) : function () {};\nexports.warn = warn;\nvar repBuffer;\n\nfunction isBuffer(gl, t) {\n  if (!repBuffer) {\n    repBuffer = gl.createBuffer();\n  }\n\n  return t instanceof repBuffer.constructor;\n}\n\nvar repRenderbuffer;\n\nfunction isRenderbuffer(gl, t) {\n  if (!repRenderbuffer) {\n    repRenderbuffer = gl.createRenderbuffer();\n  }\n\n  return t instanceof repRenderbuffer.constructor;\n}\n\nvar repShader;\n\nfunction isShader(gl, t) {\n  if (!repShader) {\n    repShader = gl.createShader(gl.VERTEX_SHADER);\n  }\n\n  return t instanceof repShader.constructor;\n}\n\nvar repTexture;\n\nfunction isTexture(gl, t) {\n  if (!repTexture) {\n    repTexture = gl.createTexture();\n  }\n\n  return t instanceof repTexture.constructor;\n}\n\nvar repSampler;\n\nfunction isSampler(gl, t) {\n  if (!repSampler) {\n    if (gl.createSampler) {\n      repSampler = gl.createSampler();\n    } else {\n      return false; // it can't be a sampler if this is not WebGL2\n    }\n  }\n\n  return t instanceof repSampler.constructor;\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.getGLTypeForTypedArray = getGLTypeForTypedArray;\nexports.getGLTypeForTypedArrayType = getGLTypeForTypedArrayType;\nexports.getTypedArrayTypeForGLType = getTypedArrayTypeForGLType;\nexports.isArrayBuffer = void 0;\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level shader typed array related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.typedArray` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/typedArray\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar glTypeToTypedArray = {};\n{\n  var tt = glTypeToTypedArray;\n  tt[BYTE] = Int8Array;\n  tt[UNSIGNED_BYTE] = Uint8Array;\n  tt[SHORT] = Int16Array;\n  tt[UNSIGNED_SHORT] = Uint16Array;\n  tt[INT] = Int32Array;\n  tt[UNSIGNED_INT] = Uint32Array;\n  tt[FLOAT] = Float32Array;\n  tt[UNSIGNED_SHORT_4_4_4_4] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_5_5_1] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_6_5] = Uint16Array;\n  tt[HALF_FLOAT] = Uint16Array;\n  tt[UNSIGNED_INT_2_10_10_10_REV] = Uint32Array;\n  tt[UNSIGNED_INT_10F_11F_11F_REV] = Uint32Array;\n  tt[UNSIGNED_INT_5_9_9_9_REV] = Uint32Array;\n  tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\n  tt[UNSIGNED_INT_24_8] = Uint32Array;\n}\n/**\n * Get the GL type for a typedArray\n * @param {ArrayBuffer|ArrayBufferView} typedArray a typedArray\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\nfunction getGLTypeForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw \"unsupported typed array type\";\n}\n/**\n * Get the GL type for a typedArray type\n * @param {ArrayBufferViewType} typedArrayType a typedArray constructor\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getGLTypeForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw \"unsupported typed array type\";\n}\n/**\n * Get the typed array constructor for a given GL type\n * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\n * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getTypedArrayTypeForGLType(type) {\n  var CTOR = glTypeToTypedArray[type];\n\n  if (!CTOR) {\n    throw \"unknown gl type\";\n  }\n\n  return CTOR;\n}\n\nvar isArrayBuffer = _globalObject.default.SharedArrayBuffer ? function isArrayBufferOrSharedArrayBuffer(a) {\n  return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof _globalObject.default.SharedArrayBuffer);\n} : function isArrayBuffer(a) {\n  return a && a.buffer && a.buffer instanceof ArrayBuffer;\n};\nexports.isArrayBuffer = isArrayBuffer;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.default = void 0;\nvar global = typeof global !== 'undefined' // eslint-disable-line\n? global // eslint-disable-line\n: typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {};\nexports.default = global;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.add = add;\nexports.copy = copy;\nexports.create = create;\nexports.cross = cross;\nexports.distance = distance;\nexports.distanceSq = distanceSq;\nexports.divide = divide;\nexports.divScalar = divScalar;\nexports.dot = dot;\nexports.lerp = lerp;\nexports.length = length;\nexports.lengthSq = lengthSq;\nexports.mulScalar = mulScalar;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.normalize = normalize;\nexports.setDefaultType = setDefaultType;\nexports.subtract = subtract;\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n *\n * Vec3 math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec3. In other words you can do this\n *\n *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     var v3 = v3.create();\n *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any vector as the destination. So for example\n *\n *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n * @module twgl/v3\n */\nvar VecType = Float32Array;\n/**\n * A JavaScript array with 3 values or a Float32Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/v3.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Vec3\n * @memberOf module:twgl/v3\n */\n\n/**\n * Sets the type this library creates for a Vec3\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Vec3\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @return {Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction create(x, y, z) {\n  var dst = new VecType(3);\n\n  if (x) {\n    dst[0] = x;\n  }\n\n  if (y) {\n    dst[1] = y;\n  }\n\n  if (z) {\n    dst[2] = z;\n  }\n\n  return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction add(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n  return dst;\n}\n/**\n * Subtracts two vectors.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction subtract(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n  return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * (1 - t) * a + t * b.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {number} t Interpolation coefficient.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction lerp(a, b, t, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = (1 - t) * a[0] + t * b[0];\n  dst[1] = (1 - t) * a[1] + t * b[1];\n  dst[2] = (1 - t) * a[2] + t * b[2];\n  return dst;\n}\n/**\n * Mutiplies a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction mulScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n  return dst;\n}\n/**\n * Divides a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n  return dst;\n}\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector a cross b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction cross(a, b, dst) {\n  dst = dst || new VecType(3);\n  var t1 = a[2] * b[0] - a[0] * b[2];\n  var t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n  return dst;\n}\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @return {number} dot product\n * @memberOf module:twgl/v3\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction length(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n/**\n * Computes the square of the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} square of the length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction lengthSq(v) {\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\n/**\n * Computes the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distance(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n/**\n * Computes the square of the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} square of the distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distanceSq(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param {module:twgl/v3.Vec3} a The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The normalized vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction normalize(a, dst) {\n  dst = dst || new VecType(3);\n  var lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n  var len = Math.sqrt(lenSq);\n\n  if (len > 0.00001) {\n    dst[0] = a[0] / len;\n    dst[1] = a[1] / len;\n    dst[2] = a[2] / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return dst;\n}\n/**\n * Negates a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} -v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction negate(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n  return dst;\n}\n/**\n * Copies a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} A copy of v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction copy(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n  return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n  return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divide(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n  return dst;\n}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.isWebGL1 = isWebGL1;\nexports.isWebGL2 = isWebGL2;\nexports.glEnumToString = void 0;\n\n/*\n * Copyright 2017, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Gets the gl version as a number\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {number} version of gl\n */\n//function getVersionAsNumber(gl) {\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\n//}\n\n/**\n * Check if context is WebGL 2.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 2.0\n * @memberOf module:twgl\n */\nfunction isWebGL2(gl) {\n  // This is the correct check but it's slow\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGL2RenderingContext;\n  return !!gl.texStorage2D;\n}\n/**\n * Check if context is WebGL 1.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 1.0\n * @memberOf module:twgl\n */\n\n\nfunction isWebGL1(gl) {\n  // This is the correct check but it's slow\n  // const version = getVersionAsNumber(gl);\n  // return version <= 1.0 && version > 0.0;  // because as of 2016/5 Edge returns 0.96\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGLRenderingContext;\n  return !gl.texStorage2D;\n}\n/**\n * Gets a string for WebGL enum\n *\n * Note: Several enums are the same. Without more\n * context (which function) it's impossible to always\n * give the correct enum. As it is, for matching values\n * it gives all enums. Checking the WebGL2RenderingContext\n * that means\n *\n *      0     = ZERO | POINT | NONE | NO_ERROR\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\n *\n * It's also not useful for bits really unless you pass in individual bits.\n * In other words\n *\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\n *     twgl.glEnumToString(gl, bits);  // not going to work\n *\n * Note that some enums only exist on extensions. If you\n * want them to show up you need to pass the extension at least\n * once. For example\n *\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc`);\n *     if (ext) {\n *        twgl.glEnumToString(ext, 0);  // just prime the function\n *\n *        ..later..\n *\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n *        console.log(twgl.glEnumToString(gl, internalFormat));\n *\n * Notice I didn't have to pass the extension the second time. This means\n * you can have place that generically gets an enum for texture formats for example.\n * and as long as you primed the function with the extensions\n *\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\n * then twgl will automatically get the extension's enums.\n *\n * @param {WebGLRenderingContext|Extension} gl A WebGLRenderingContext or any extension object\n * @param {number} value the value of the enum you want to look up.\n * @memberOf module:twgl\n */\n\n\nvar glEnumToString = function () {\n  var haveEnumsForType = {};\n  var enums = {};\n\n  function addEnums(gl) {\n    var type = gl.constructor.name;\n\n    if (!haveEnumsForType[type]) {\n      for (var key in gl) {\n        if (typeof gl[key] === 'number') {\n          var existing = enums[gl[key]];\n          enums[gl[key]] = existing ? \"\".concat(existing, \" | \").concat(key) : key;\n        }\n      }\n\n      haveEnumsForType[type] = true;\n    }\n  }\n\n  return function glEnumToString(gl, value) {\n    addEnums(gl);\n    return enums[value] || \"0x\" + value.toString(16);\n  };\n}();\n\nexports.glEnumToString = glEnumToString;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttributeSetters = createAttributeSetters;\nexports.createProgram = createProgram;\nexports.createProgramFromScripts = createProgramFromScripts;\nexports.createProgramFromSources = createProgramFromSources;\nexports.createProgramInfo = createProgramInfo;\nexports.createProgramInfoFromProgram = createProgramInfoFromProgram;\nexports.createUniformSetters = createUniformSetters;\nexports.createUniformBlockSpecFromProgram = createUniformBlockSpecFromProgram;\nexports.createUniformBlockInfoFromProgram = createUniformBlockInfoFromProgram;\nexports.createUniformBlockInfo = createUniformBlockInfo;\nexports.createTransformFeedback = createTransformFeedback;\nexports.createTransformFeedbackInfo = createTransformFeedbackInfo;\nexports.bindTransformFeedbackInfo = bindTransformFeedbackInfo;\nexports.setAttributes = setAttributes;\nexports.setBuffersAndAttributes = setBuffersAndAttributes;\nexports.setUniforms = setUniforms;\nexports.setUniformBlock = setUniformBlock;\nexports.setBlockUniforms = setBlockUniforms;\nexports.bindUniformBlock = bindUniformBlock;\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level shader program related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.programs` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/programs\n */\nvar error = helper.error;\nvar warn = helper.warn;\nvar getElementById = _globalObject.default && _globalObject.default.document && _globalObject.default.document.getElementById ? _globalObject.default.document.getElementById.bind(_globalObject.default.document) : function () {\n  return null;\n};\nvar FLOAT = 0x1406;\nvar FLOAT_VEC2 = 0x8B50;\nvar FLOAT_VEC3 = 0x8B51;\nvar FLOAT_VEC4 = 0x8B52;\nvar INT = 0x1404;\nvar INT_VEC2 = 0x8B53;\nvar INT_VEC3 = 0x8B54;\nvar INT_VEC4 = 0x8B55;\nvar BOOL = 0x8B56;\nvar BOOL_VEC2 = 0x8B57;\nvar BOOL_VEC3 = 0x8B58;\nvar BOOL_VEC4 = 0x8B59;\nvar FLOAT_MAT2 = 0x8B5A;\nvar FLOAT_MAT3 = 0x8B5B;\nvar FLOAT_MAT4 = 0x8B5C;\nvar SAMPLER_2D = 0x8B5E;\nvar SAMPLER_CUBE = 0x8B60;\nvar SAMPLER_3D = 0x8B5F;\nvar SAMPLER_2D_SHADOW = 0x8B62;\nvar FLOAT_MAT2x3 = 0x8B65;\nvar FLOAT_MAT2x4 = 0x8B66;\nvar FLOAT_MAT3x2 = 0x8B67;\nvar FLOAT_MAT3x4 = 0x8B68;\nvar FLOAT_MAT4x2 = 0x8B69;\nvar FLOAT_MAT4x3 = 0x8B6A;\nvar SAMPLER_2D_ARRAY = 0x8DC1;\nvar SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;\nvar SAMPLER_CUBE_SHADOW = 0x8DC5;\nvar UNSIGNED_INT = 0x1405;\nvar UNSIGNED_INT_VEC2 = 0x8DC6;\nvar UNSIGNED_INT_VEC3 = 0x8DC7;\nvar UNSIGNED_INT_VEC4 = 0x8DC8;\nvar INT_SAMPLER_2D = 0x8DCA;\nvar INT_SAMPLER_3D = 0x8DCB;\nvar INT_SAMPLER_CUBE = 0x8DCC;\nvar INT_SAMPLER_2D_ARRAY = 0x8DCF;\nvar UNSIGNED_INT_SAMPLER_2D = 0x8DD2;\nvar UNSIGNED_INT_SAMPLER_3D = 0x8DD3;\nvar UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;\nvar UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\nvar TEXTURE_2D = 0x0DE1;\nvar TEXTURE_CUBE_MAP = 0x8513;\nvar TEXTURE_3D = 0x806F;\nvar TEXTURE_2D_ARRAY = 0x8C1A;\nvar typeMap = {};\n/**\n * Returns the corresponding bind point for a given sampler type\n */\n\nfunction getBindPointForSamplerType(gl, type) {\n  return typeMap[type].bindPoint;\n} // This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n// this code could be a lot smaller but that is sadly really slow (T_T)\n\n\nfunction floatSetter(gl, location) {\n  return function (v) {\n    gl.uniform1f(location, v);\n  };\n}\n\nfunction floatArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1fv(location, v);\n  };\n}\n\nfunction floatVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2fv(location, v);\n  };\n}\n\nfunction floatVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3fv(location, v);\n  };\n}\n\nfunction floatVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4fv(location, v);\n  };\n}\n\nfunction intSetter(gl, location) {\n  return function (v) {\n    gl.uniform1i(location, v);\n  };\n}\n\nfunction intArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1iv(location, v);\n  };\n}\n\nfunction intVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2iv(location, v);\n  };\n}\n\nfunction intVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3iv(location, v);\n  };\n}\n\nfunction intVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4iv(location, v);\n  };\n}\n\nfunction uintSetter(gl, location) {\n  return function (v) {\n    gl.uniform1ui(location, v);\n  };\n}\n\nfunction uintArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1uiv(location, v);\n  };\n}\n\nfunction uintVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2uiv(location, v);\n  };\n}\n\nfunction uintVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3uiv(location, v);\n  };\n}\n\nfunction uintVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4uiv(location, v);\n  };\n}\n\nfunction floatMat2Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2fv(location, false, v);\n  };\n}\n\nfunction floatMat3Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3fv(location, false, v);\n  };\n}\n\nfunction floatMat4Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4fv(location, false, v);\n  };\n}\n\nfunction floatMat23Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x3fv(location, false, v);\n  };\n}\n\nfunction floatMat32Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x2fv(location, false, v);\n  };\n}\n\nfunction floatMat24Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x4fv(location, false, v);\n  };\n}\n\nfunction floatMat42Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x2fv(location, false, v);\n  };\n}\n\nfunction floatMat34Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x4fv(location, false, v);\n  };\n}\n\nfunction floatMat43Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x3fv(location, false, v);\n  };\n}\n\nfunction samplerSetter(gl, type, unit, location) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  return utils.isWebGL2(gl) ? function (textureOrPair) {\n    var texture;\n    var sampler;\n\n    if (helper.isTexture(gl, textureOrPair)) {\n      texture = textureOrPair;\n      sampler = null;\n    } else {\n      texture = textureOrPair.texture;\n      sampler = textureOrPair.sampler;\n    }\n\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n    gl.bindSampler(unit, sampler);\n  } : function (texture) {\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n  };\n}\n\nfunction samplerArraySetter(gl, type, unit, location, size) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  var units = new Int32Array(size);\n\n  for (var ii = 0; ii < size; ++ii) {\n    units[ii] = unit + ii;\n  }\n\n  return utils.isWebGL2(gl) ? function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (textureOrPair, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      var texture;\n      var sampler;\n\n      if (helper.isTexture(gl, textureOrPair)) {\n        texture = textureOrPair;\n        sampler = null;\n      } else {\n        texture = textureOrPair.texture;\n        sampler = textureOrPair.sampler;\n      }\n\n      gl.bindSampler(unit, sampler);\n      gl.bindTexture(bindPoint, texture);\n    });\n  } : function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (texture, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      gl.bindTexture(bindPoint, texture);\n    });\n  };\n}\n\ntypeMap[FLOAT] = {\n  Type: Float32Array,\n  size: 4,\n  setter: floatSetter,\n  arraySetter: floatArraySetter\n};\ntypeMap[FLOAT_VEC2] = {\n  Type: Float32Array,\n  size: 8,\n  setter: floatVec2Setter\n};\ntypeMap[FLOAT_VEC3] = {\n  Type: Float32Array,\n  size: 12,\n  setter: floatVec3Setter\n};\ntypeMap[FLOAT_VEC4] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatVec4Setter\n};\ntypeMap[INT] = {\n  Type: Int32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[INT_VEC2] = {\n  Type: Int32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[INT_VEC3] = {\n  Type: Int32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[INT_VEC4] = {\n  Type: Int32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[UNSIGNED_INT] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: uintSetter,\n  arraySetter: uintArraySetter\n};\ntypeMap[UNSIGNED_INT_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: uintVec2Setter\n};\ntypeMap[UNSIGNED_INT_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: uintVec3Setter\n};\ntypeMap[UNSIGNED_INT_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: uintVec4Setter\n};\ntypeMap[BOOL] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[BOOL_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[BOOL_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[BOOL_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[FLOAT_MAT2] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatMat2Setter\n};\ntypeMap[FLOAT_MAT3] = {\n  Type: Float32Array,\n  size: 36,\n  setter: floatMat3Setter\n};\ntypeMap[FLOAT_MAT4] = {\n  Type: Float32Array,\n  size: 64,\n  setter: floatMat4Setter\n};\ntypeMap[FLOAT_MAT2x3] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat23Setter\n};\ntypeMap[FLOAT_MAT2x4] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat24Setter\n};\ntypeMap[FLOAT_MAT3x2] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat32Setter\n};\ntypeMap[FLOAT_MAT3x4] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat34Setter\n};\ntypeMap[FLOAT_MAT4x2] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat42Setter\n};\ntypeMap[FLOAT_MAT4x3] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat43Setter\n};\ntypeMap[SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[SAMPLER_2D_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_2D_ARRAY_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_CUBE_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\n\nfunction floatAttribSetter(gl, index) {\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    gl.enableVertexAttribArray(index);\n    gl.vertexAttribPointer(index, b.numComponents || b.size, b.type || gl.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n\n    if (b.divisor !== undefined) {\n      gl.vertexAttribDivisor(index, b.divisor);\n    }\n  };\n}\n\nfunction intAttribSetter(gl, index) {\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    gl.enableVertexAttribArray(index);\n    gl.vertexAttribIPointer(index, b.numComponents || b.size, b.type || gl.INT, b.stride || 0, b.offset || 0);\n\n    if (b.divisor !== undefined) {\n      gl.vertexAttribDivisor(index, b.divisor);\n    }\n  };\n}\n\nfunction matAttribSetter(gl, index, typeInfo) {\n  var defaultSize = typeInfo.size;\n  var count = typeInfo.count;\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    var numComponents = b.size || b.numComponents || defaultSize;\n    var size = numComponents / count;\n    var type = b.type || gl.FLOAT;\n    var typeInfo = typeMap[type];\n    var stride = typeInfo.size * numComponents;\n    var normalize = b.normalize || false;\n    var offset = b.offset || 0;\n    var rowOffset = stride / count;\n\n    for (var i = 0; i < count; ++i) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(index + i, size, type, normalize, stride, offset + rowOffset * i);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index + i, b.divisor);\n      }\n    }\n  };\n}\n\nvar attrTypeMap = {};\nattrTypeMap[FLOAT] = {\n  size: 4,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC2] = {\n  size: 8,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC3] = {\n  size: 12,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC4] = {\n  size: 16,\n  setter: floatAttribSetter\n};\nattrTypeMap[INT] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[FLOAT_MAT2] = {\n  size: 4,\n  setter: matAttribSetter,\n  count: 2\n};\nattrTypeMap[FLOAT_MAT3] = {\n  size: 9,\n  setter: matAttribSetter,\n  count: 3\n};\nattrTypeMap[FLOAT_MAT4] = {\n  size: 16,\n  setter: matAttribSetter,\n  count: 4\n}; // make sure we don't see a global gl\n\nvar gl = undefined; // eslint-disable-line\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @param {number} [lineOffset] amount to add to line number\n * @memberOf module:twgl\n */\n\nfunction addLineNumbers(src, lineOffset) {\n  lineOffset = lineOffset || 0;\n  ++lineOffset;\n  return src.split(\"\\n\").map(function (line, ndx) {\n    return ndx + lineOffset + \": \" + line;\n  }).join(\"\\n\");\n}\n\nvar spaceRE = /^[ \\t]*\\n/;\n/**\n * Loads a shader.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} shaderSource The shader source.\n * @param {number} shaderType The type of shader.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors.\n * @return {WebGLShader} The created shader.\n */\n\nfunction loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\n  var errFn = opt_errorCallback || error; // Create the shader object\n\n  var shader = gl.createShader(shaderType); // Remove the first end of line because WebGL 2.0 requires\n  // #version 300 es\n  // as the first line. No whitespace allowed before that line\n  // so\n  //\n  // <script>\n  // #version 300 es\n  // </script>\n  //\n  // Has one line before it which is invalid according to GLSL ES 3.00\n  //\n\n  var lineOffset = 0;\n\n  if (spaceRE.test(shaderSource)) {\n    lineOffset = 1;\n    shaderSource = shaderSource.replace(spaceRE, '');\n  } // Load the shader source\n\n\n  gl.shaderSource(shader, shaderSource); // Compile the shader\n\n  gl.compileShader(shader); // Check the compile status\n\n  var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    var lastError = gl.getShaderInfoLog(shader);\n    errFn(addLineNumbers(shaderSource, lineOffset) + \"\\n*** Error compiling shader: \" + lastError);\n    gl.deleteShader(shader);\n    return null;\n  }\n\n  return shader;\n}\n/**\n * @typedef {Object} ProgramOptions\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>} [attribLocations] a attribute name to location map\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @memberOf module:twgl\n */\n\n/**\n * Gets the program options based on all these optional arguments\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments pased on\n */\n\n\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\n  var transformFeedbackVaryings;\n\n  if (typeof opt_locations === 'function') {\n    opt_errorCallback = opt_locations;\n    opt_locations = undefined;\n  }\n\n  if (typeof opt_attribs === 'function') {\n    opt_errorCallback = opt_attribs;\n    opt_attribs = undefined;\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\n    // If we have an errorCallback we can just return this object\n    // Otherwise we need to construct one with default errorCallback\n    if (opt_attribs.errorCallback) {\n      return opt_attribs;\n    }\n\n    var opt = opt_attribs;\n    opt_errorCallback = opt.errorCallback;\n    opt_attribs = opt.attribLocations;\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\n  }\n\n  var options = {\n    errorCallback: opt_errorCallback || error,\n    transformFeedbackVaryings: transformFeedbackVaryings\n  };\n\n  if (opt_attribs) {\n    var attribLocations = {};\n\n    if (Array.isArray(opt_attribs)) {\n      opt_attribs.forEach(function (attrib, ndx) {\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\n      });\n    } else {\n      attribLocations = opt_attribs;\n    }\n\n    options.attribLocations = attribLocations;\n  }\n\n  return options;\n}\n\nvar defaultShaderType = [\"VERTEX_SHADER\", \"FRAGMENT_SHADER\"];\n\nfunction getShaderTypeFromScriptType(scriptType) {\n  if (scriptType.indexOf(\"frag\") >= 0) {\n    return gl.FRAGMENT_SHADER;\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\n    return gl.VERTEX_SHADER;\n  }\n\n  return undefined;\n}\n\nfunction deleteShaders(gl, shaders) {\n  shaders.forEach(function (shader) {\n    gl.deleteShader(shader);\n  });\n}\n/**\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\n * program and calls useProgram.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgram(gl, [vs, fs], options);\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgram(gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var realShaders = [];\n  var newShaders = [];\n\n  for (var ndx = 0; ndx < shaders.length; ++ndx) {\n    var shader = shaders[ndx];\n\n    if (typeof shader === 'string') {\n      var elem = getElementById(shader);\n      var src = elem ? elem.text : shader;\n      var type = gl[defaultShaderType[ndx]];\n\n      if (elem && elem.type) {\n        type = getShaderTypeFromScriptType(elem.type) || type;\n      }\n\n      shader = loadShader(gl, src, type, progOptions.errorCallback);\n      newShaders.push(shader);\n    }\n\n    if (helper.isShader(gl, shader)) {\n      realShaders.push(shader);\n    }\n  }\n\n  if (realShaders.length !== shaders.length) {\n    progOptions.errorCallback(\"not enough shaders for program\");\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  var program = gl.createProgram();\n  realShaders.forEach(function (shader) {\n    gl.attachShader(program, shader);\n  });\n\n  if (progOptions.attribLocations) {\n    Object.keys(progOptions.attribLocations).forEach(function (attrib) {\n      gl.bindAttribLocation(program, progOptions.attribLocations[attrib], attrib);\n    });\n  }\n\n  var varyings = progOptions.transformFeedbackVaryings;\n\n  if (varyings) {\n    if (varyings.attribs) {\n      varyings = varyings.attribs;\n    }\n\n    if (!Array.isArray(varyings)) {\n      varyings = Object.keys(varyings);\n    }\n\n    gl.transformFeedbackVaryings(program, varyings, progOptions.transformFeedbackMode || gl.SEPARATE_ATTRIBS);\n  }\n\n  gl.linkProgram(program); // Check the link status\n\n  var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n  if (!linked) {\n    // something went wrong with the link\n    var lastError = gl.getProgramInfoLog(program);\n    progOptions.errorCallback(\"Error in program linking:\" + lastError);\n    gl.deleteProgram(program);\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  return program;\n}\n/**\n * Loads a shader from a script tag.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} scriptId The id of the script tag.\n * @param {number} [opt_shaderType] The type of shader. If not passed in it will\n *     be derived from the type of the script tag.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors.\n * @return {WebGLShader?} The created shader or null if error.\n */\n\n\nfunction createShaderFromScript(gl, scriptId, opt_shaderType, opt_errorCallback) {\n  var shaderSource = \"\";\n  var shaderScript = getElementById(scriptId);\n\n  if (!shaderScript) {\n    throw \"*** Error: unknown script element\" + scriptId;\n  }\n\n  shaderSource = shaderScript.text;\n  var shaderType = opt_shaderType || getShaderTypeFromScriptType(shaderScript.type);\n\n  if (!shaderType) {\n    throw \"*** Error: unknown shader type\";\n  }\n\n  return loadShader(gl, shaderSource, shaderType, opt_errorCallback);\n}\n/**\n * Creates a program from 2 script tags.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderScriptIds Array of ids of the script\n *        tags for the shaders. The first is assumed to be the\n *        vertex shader, the second the fragment shader.\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram} The created program.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromScripts(gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderScriptIds.length; ++ii) {\n    var shader = createShaderFromScript(gl, shaderScriptIds[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Creates a program from 2 sources.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram} The created program.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromSources(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderSources.length; ++ii) {\n    var shader = loadShader(gl, shaderSources[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Returns true if attribute/uniform is a reserved/built in\n *\n * It makes no sense to me why GL returns these because it's\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\n * with names that start with `gl_` (and `webgl_` in WebGL)\n *\n * I can only assume they are there because they might count\n * when computing the number of uniforms/attributes used when you want to\n * know if you are near the limit. That doesn't really make sense\n * to me but the fact that these get returned are in the spec.\n *\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\n *    `gl.getActiveAttrib`.\n * @return {bool} true if it's reserved\n */\n\n\nfunction isBuiltIn(info) {\n  var name = info.name;\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\n}\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:twgl.setUniforms}\n *\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformSetters(gl, program) {\n  var textureUnit = 0;\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n\n  function createUniformSetter(program, uniformInfo) {\n    var location = gl.getUniformLocation(program, uniformInfo.name);\n    var isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === \"[0]\";\n    var type = uniformInfo.type;\n    var typeInfo = typeMap[type];\n\n    if (!typeInfo) {\n      throw \"unknown type: 0x\" + type.toString(16); // we should never get here.\n    }\n\n    var setter;\n\n    if (typeInfo.bindPoint) {\n      // it's a sampler\n      var unit = textureUnit;\n      textureUnit += uniformInfo.size;\n\n      if (isArray) {\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n      } else {\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n      }\n    } else {\n      if (typeInfo.arraySetter && isArray) {\n        setter = typeInfo.arraySetter(gl, location);\n      } else {\n        setter = typeInfo.setter(gl, location);\n      }\n    }\n\n    setter.location = location;\n    return setter;\n  }\n\n  var uniformSetters = {};\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      continue;\n    }\n\n    var name = uniformInfo.name; // remove the array suffix.\n\n    if (name.substr(-3) === \"[0]\") {\n      name = name.substr(0, name.length - 3);\n    }\n\n    var setter = createUniformSetter(program, uniformInfo);\n    uniformSetters[name] = setter;\n  }\n\n  return uniformSetters;\n}\n/**\n * @typedef {Object} TransformFeedbackInfo\n * @property {number} index index of transform feedback\n * @property {number} type GL type\n * @property {number} size 1 - 4\n * @memberOf module:twgl\n */\n\n/**\n * Create TransformFeedbackInfo for passing to bind/unbindTransformFeedbackInfo.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedbackInfo(gl, program) {\n  var info = {};\n  var numVaryings = gl.getProgramParameter(program, gl.TRANSFORM_FEEDBACK_VARYINGS);\n\n  for (var ii = 0; ii < numVaryings; ++ii) {\n    var varying = gl.getTransformFeedbackVarying(program, ii);\n    info[varying.name] = {\n      index: ii,\n      type: varying.type,\n      size: varying.size\n    };\n  }\n\n  return info;\n}\n/**\n * Binds buffers for transform feedback.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @memberOf module:twgl\n */\n\n\nfunction bindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n\n  for (var name in bufferInfo) {\n    var varying = transformFeedbackInfo[name];\n\n    if (varying) {\n      var buf = bufferInfo[name];\n\n      if (buf.offset) {\n        gl.bindBufferRange(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size);\n      } else {\n        gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer);\n      }\n    }\n  }\n}\n/**\n * Unbinds buffers afetr transform feedback.\n *\n * Buffers can not be bound to 2 bind points so if you try to bind a buffer used\n * in a transform feedback as an ARRAY_BUFFER for an attribute it will fail.\n *\n * This function unbinds all buffers that were bound with {@link module:twgl.bindTransformFeedbackInfo}.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n */\n\n\nfunction unbindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n\n  for (var name in bufferInfo) {\n    var varying = transformFeedbackInfo[name];\n\n    if (varying) {\n      gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, null);\n    }\n  }\n}\n/**\n * Creates a transform feedback and sets the buffers\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @return {WebGLTransformFeedback} the created transform feedback\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedback(gl, programInfo, bufferInfo) {\n  var tf = gl.createTransformFeedback();\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, tf);\n  gl.useProgram(programInfo.program);\n  bindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null); // This is only needed because of a bug in Chrome 56. Will remove\n  // when chrome fixes it.\n\n  unbindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  return tf;\n}\n/**\n * @typedef {Object} UniformData\n * @property {number} type The WebGL type enum for this uniform\n * @property {number} size The number of elements for this uniform\n * @property {number} blockNdx The block index this uniform appears in\n * @property {number} offset The byte offset in the block for this uniform's value\n * @memberOf module:twgl\n */\n\n/**\n * The specification for one UniformBlockObject\n *\n * @typedef {Object} BlockSpec\n * @property {number} index The index of the block.\n * @property {number} size The size in bytes needed for the block\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n * @property {bool} usedByVertexShader Self explanitory\n * @property {bool} usedByFragmentShader Self explanitory\n * @property {bool} used Self explanitory\n * @memberOf module:twgl\n */\n\n/**\n * A `UniformBlockSpec` represents the data needed to create and bind\n * UniformBlockObjects for a given program\n *\n * @typedef {Object} UniformBlockSpec\n * @property {Object.<string, module:twgl.BlockSpec> blockSpecs The BlockSpec for each block by block name\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a UniformBlockSpec for the given program.\n *\n * A UniformBlockSpec represents the data needed to create and bind\n * UniformBlockObjects\n *\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockSpecFromProgram(gl, program) {\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  var uniformData = [];\n  var uniformIndices = [];\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    uniformIndices.push(ii);\n    uniformData.push({});\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      break;\n    } // REMOVE [0]?\n\n\n    uniformData[ii].name = uniformInfo.name;\n  }\n\n  [[\"UNIFORM_TYPE\", \"type\"], [\"UNIFORM_SIZE\", \"size\"], // num elements\n  [\"UNIFORM_BLOCK_INDEX\", \"blockNdx\"], [\"UNIFORM_OFFSET\", \"offset\"]].forEach(function (pair) {\n    var pname = pair[0];\n    var key = pair[1];\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function (value, ndx) {\n      uniformData[ndx][key] = value;\n    });\n  });\n  var blockSpecs = {};\n  var numUniformBlocks = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\n\n  for (var _ii = 0; _ii < numUniformBlocks; ++_ii) {\n    var name = gl.getActiveUniformBlockName(program, _ii);\n    var blockSpec = {\n      index: _ii,\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      size: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_DATA_SIZE),\n      uniformIndices: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES)\n    };\n    blockSpec.used = blockSpec.usedByVertexSahder || blockSpec.usedByFragmentShader;\n    blockSpecs[name] = blockSpec;\n  }\n\n  return {\n    blockSpecs: blockSpecs,\n    uniformData: uniformData\n  };\n}\n\nvar arraySuffixRE = /\\[\\d+\\]\\.$/; // better way to check?\n\n/**\n * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\n * and a corresponding WebGLBuffer to hold those values on the GPU\n *\n * @typedef {Object} UniformBlockInfo\n * @property {string} name The name of the block\n * @property {ArrayBuffer} array The array buffer that contains the uniform values\n * @property {Float32Array} asFloat A float view on the array buffer. This is useful\n *    inspecting the contents of the buffer in the debugger.\n * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\n * @property {number} [offset] offset into buffer\n * @property {Object.<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\n *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\n *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\n *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\n *   `Int32Array` view, etc.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {WebGLProgram} program A WebGLProgram\n * @param {module:twgl.UniformBlockSpec} uinformBlockSpec. A UniformBlockSpec as returned\n *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\nfunction createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName) {\n  var blockSpecs = uniformBlockSpec.blockSpecs;\n  var uniformData = uniformBlockSpec.uniformData;\n  var blockSpec = blockSpecs[blockName];\n\n  if (!blockSpec) {\n    warn(\"no uniform block object named:\", blockName);\n    return {\n      name: blockName,\n      uniforms: {}\n    };\n  }\n\n  var array = new ArrayBuffer(blockSpec.size);\n  var buffer = gl.createBuffer();\n  var uniformBufferIndex = blockSpec.index;\n  gl.bindBuffer(gl.UNIFORM_BUFFER, buffer);\n  gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\n  var prefix = blockName + \".\";\n\n  if (arraySuffixRE.test(prefix)) {\n    prefix = prefix.replace(arraySuffixRE, \".\");\n  }\n\n  var uniforms = {};\n  blockSpec.uniformIndices.forEach(function (uniformNdx) {\n    var data = uniformData[uniformNdx];\n    var typeInfo = typeMap[data.type];\n    var Type = typeInfo.Type;\n    var length = data.size * typeInfo.size;\n    var name = data.name;\n\n    if (name.substr(0, prefix.length) === prefix) {\n      name = name.substr(prefix.length);\n    }\n\n    uniforms[name] = new Type(array, data.offset, length / Type.BYTES_PER_ELEMENT);\n  });\n  return {\n    name: blockName,\n    array: array,\n    asFloat: new Float32Array(array),\n    // for debugging\n    buffer: buffer,\n    uniforms: uniforms\n  };\n}\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo}\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockInfo(gl, programInfo, blockName) {\n  return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName);\n}\n/**\n * Binds a unform block to the matching uniform block point.\n * Matches by blocks by name so blocks must have the same name not just the same\n * structure.\n *\n * If you have changed any values and you upload the valus into the corresponding WebGLBuffer\n * call {@link module:twgl.setUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\n *     no buffer is bound.\n * @memberOf module:twgl/programs\n */\n\n\nfunction bindUniformBlock(gl, programInfo, uniformBlockInfo) {\n  var uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\n  var blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\n\n  if (blockSpec) {\n    var bufferBindIndex = blockSpec.index;\n    gl.bindBufferRange(gl.UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, uniformBlockInfo.offset || 0, uniformBlockInfo.array.byteLength);\n    return true;\n  }\n\n  return false;\n}\n/**\n * Uploads the current uniform values to the corresponding WebGLBuffer\n * and binds that buffer to the program's corresponding bind point for the uniform block object.\n *\n * If you haven't changed any values and you only need to bind the uniform block object\n * call {@link module:twgl.bindUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniformBlock(gl, programInfo, uniformBlockInfo) {\n  if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\n    gl.bufferData(gl.UNIFORM_BUFFER, uniformBlockInfo.array, gl.DYNAMIC_DRAW);\n  }\n}\n/**\n * Sets values of a uniform block object\n *\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\n * @param {Object.<string, ?>} values A uniform name to value map where the value is correct for the given\n *    type of uniform. So for example given a block like\n *\n *       uniform SomeBlock {\n *         float someFloat;\n *         vec2 someVec2;\n *         vec3 someVec3Array[2];\n *         int someInt;\n *       }\n *\n *  You can set the values of the uniform block with\n *\n *       twgl.setBlockUniforms(someBlockInfo, {\n *          someFloat: 12.3,\n *          someVec2: [1, 2],\n *          someVec3Array: [1, 2, 3, 4, 5, 6],\n *          someInt: 5,\n *       }\n *\n *  Arrays can be JavaScript arrays or typed arrays\n *\n *  Any name that doesn't match will be ignored\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBlockUniforms(uniformBlockInfo, values) {\n  var uniforms = uniformBlockInfo.uniforms;\n\n  for (var name in values) {\n    var array = uniforms[name];\n\n    if (array) {\n      var value = values[name];\n\n      if (value.length) {\n        array.set(value);\n      } else {\n        array[0] = value;\n      }\n    }\n  }\n}\n/**\n * Set uniforms and binds related textures.\n *\n * example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     const tex1 = gl.createTexture();\n *     const tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     var texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     const moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *     twgl.setUniforms(programInfo, moreUniforms);\n *\n * You can also add WebGLSamplers to uniform samplers as in\n *\n *     const uniforms = {\n *       u_someSampler: {\n *         texture: someWebGLTexture,\n *         sampler: someWebGLSampler,\n *       },\n *     };\n *\n * In which case both the sampler and texture will be bound to the\n * same unit.\n *\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n *        uniforms.\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n *\n *     const sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     const localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, sharedUniforms);\n *     twgl.setUniforms(programInfo, localUniforms};\n *\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniforms(setters, values) {\n  // eslint-disable-line\n  var actualSetters = setters.uniformSetters || setters;\n  var numArgs = arguments.length;\n\n  for (var andx = 1; andx < numArgs; ++andx) {\n    var vals = arguments[andx];\n\n    if (Array.isArray(vals)) {\n      var numValues = vals.length;\n\n      for (var ii = 0; ii < numValues; ++ii) {\n        setUniforms(actualSetters, vals[ii]);\n      }\n    } else {\n      for (var name in vals) {\n        var setter = actualSetters[name];\n\n        if (setter) {\n          setter(vals[name]);\n        }\n      }\n    }\n  }\n}\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:twgl.setAttributes} for example\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createAttributeSetters(gl, program) {\n  var attribSetters = {};\n  var numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n  for (var ii = 0; ii < numAttribs; ++ii) {\n    var attribInfo = gl.getActiveAttrib(program, ii);\n\n    if (isBuiltIn(attribInfo)) {\n      continue;\n    }\n\n    var index = gl.getAttribLocation(program, attribInfo.name);\n    var typeInfo = attrTypeMap[attribInfo.type];\n    var setter = typeInfo.setter(gl, index, typeInfo);\n    setter.location = index;\n    attribSetters[attribInfo.name] = setter;\n  }\n\n  return attribSetters;\n}\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n *\n * Example:\n *\n *     const program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const attribSetters = createAttributeSetters(program);\n *\n *     const positionBuffer = gl.createBuffer();\n *     const texcoordBuffer = gl.createBuffer();\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n * *   divisor: the divisor for instances. Default = undefined\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n * @memberOf module:twgl/programs\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n */\n\n\nfunction setAttributes(setters, buffers) {\n  for (var name in buffers) {\n    var setter = setters[name];\n\n    if (setter) {\n      setter(buffers[name]);\n    }\n  }\n}\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n *\n * For the example above it is equivilent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgrmaInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n * @param {(module:twgl.BufferInfo|module:twgl.vertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\n  if (buffers.vertexArrayObject) {\n    gl.bindVertexArray(buffers.vertexArrayObject);\n  } else {\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n\n    if (buffers.indices) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\n    }\n  }\n}\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n * @propetty {module:twgl.UniformBlockSpec} [uniformBlockSpace] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\n * @memberOf module:twgl\n */\n\n/**\n * Creates a ProgramInfo from an existing program.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfoFromProgram(gl, program) {\n  var uniformSetters = createUniformSetters(gl, program);\n  var attribSetters = createAttributeSetters(gl, program);\n  var programInfo = {\n    program: program,\n    uniformSetters: uniformSetters,\n    attribSetters: attribSetters\n  };\n\n  if (utils.isWebGL2(gl)) {\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\n  }\n\n  return programInfo;\n}\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramInfo(gl, [vs, fs], options);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the attributes. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfo(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var good = true;\n  shaderSources = shaderSources.map(function (source) {\n    // Lets assume if there is no \\n it's an id\n    if (source.indexOf(\"\\n\") < 0) {\n      var script = getElementById(source);\n\n      if (!script) {\n        progOptions.errorCallback(\"no element with id: \" + source);\n        good = false;\n      } else {\n        source = script.text;\n      }\n    }\n\n    return source;\n  });\n\n  if (!good) {\n    return null;\n  }\n\n  var program = createProgramFromSources(gl, shaderSources, progOptions);\n\n  if (!program) {\n    return null;\n  }\n\n  return createProgramInfoFromProgram(gl, program);\n}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.axisRotate = axisRotate;\nexports.axisRotation = axisRotation;\nexports.copy = copy;\nexports.frustum = frustum;\nexports.getAxis = getAxis;\nexports.getTranslation = getTranslation;\nexports.identity = identity;\nexports.inverse = inverse;\nexports.lookAt = lookAt;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.ortho = ortho;\nexports.perspective = perspective;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.rotationX = rotationX;\nexports.rotationY = rotationY;\nexports.rotationZ = rotationZ;\nexports.scale = scale;\nexports.scaling = scaling;\nexports.setAxis = setAxis;\nexports.setDefaultType = setDefaultType;\nexports.setTranslation = setTranslation;\nexports.transformDirection = transformDirection;\nexports.transformNormal = transformNormal;\nexports.transformPoint = transformPoint;\nexports.translate = translate;\nexports.translation = translation;\nexports.transpose = transpose;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = m4.create();\n *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = m4.identity();\n *     const trans = m4.translation([1, 2, 3]);\n *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n * @module twgl/m4\n */\nvar MatType = Float32Array;\nvar tempV3a = v3.create();\nvar tempV3b = v3.create();\nvar tempV3c = v3.create();\n/**\n * A JavaScript array with 16 values or a Float32Array with 16 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/m4.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Mat4\n * @memberOf module:twgl/m4\n */\n\n/**\n * Sets the type this library creates for a Mat4\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Mat4\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n/**\n * Negates a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} -m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction negate(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = -m[0];\n  dst[1] = -m[1];\n  dst[2] = -m[2];\n  dst[3] = -m[3];\n  dst[4] = -m[4];\n  dst[5] = -m[5];\n  dst[6] = -m[6];\n  dst[7] = -m[7];\n  dst[8] = -m[8];\n  dst[9] = -m[9];\n  dst[10] = -m[10];\n  dst[11] = -m[11];\n  dst[12] = -m[12];\n  dst[13] = -m[13];\n  dst[14] = -m[14];\n  dst[15] = -m[15];\n  return dst;\n}\n/**\n * Copies a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] The matrix.\n * @return {module:twgl/m4.Mat4} A copy of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction copy(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = m[0];\n  dst[1] = m[1];\n  dst[2] = m[2];\n  dst[3] = m[3];\n  dst[4] = m[4];\n  dst[5] = m[5];\n  dst[6] = m[6];\n  dst[7] = m[7];\n  dst[8] = m[8];\n  dst[9] = m[9];\n  dst[10] = m[10];\n  dst[11] = m[11];\n  dst[12] = m[12];\n  dst[13] = m[13];\n  dst[14] = m[14];\n  dst[15] = m[15];\n  return dst;\n}\n/**\n * Creates an n-by-n identity matrix.\n *\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction identity(dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Takes the transpose of a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The transpose of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transpose(m, dst) {\n  dst = dst || new MatType(16);\n\n  if (dst === m) {\n    var t;\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  dst[0] = m00;\n  dst[1] = m10;\n  dst[2] = m20;\n  dst[3] = m30;\n  dst[4] = m01;\n  dst[5] = m11;\n  dst[6] = m21;\n  dst[7] = m31;\n  dst[8] = m02;\n  dst[9] = m12;\n  dst[10] = m22;\n  dst[11] = m32;\n  dst[12] = m03;\n  dst[13] = m13;\n  dst[14] = m23;\n  dst[15] = m33;\n  return dst;\n}\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The inverse of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction inverse(m, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  var tmp_0 = m22 * m33;\n  var tmp_1 = m32 * m23;\n  var tmp_2 = m12 * m33;\n  var tmp_3 = m32 * m13;\n  var tmp_4 = m12 * m23;\n  var tmp_5 = m22 * m13;\n  var tmp_6 = m02 * m33;\n  var tmp_7 = m32 * m03;\n  var tmp_8 = m02 * m23;\n  var tmp_9 = m22 * m03;\n  var tmp_10 = m02 * m13;\n  var tmp_11 = m12 * m03;\n  var tmp_12 = m20 * m31;\n  var tmp_13 = m30 * m21;\n  var tmp_14 = m10 * m31;\n  var tmp_15 = m30 * m11;\n  var tmp_16 = m10 * m21;\n  var tmp_17 = m20 * m11;\n  var tmp_18 = m00 * m31;\n  var tmp_19 = m30 * m01;\n  var tmp_20 = m00 * m21;\n  var tmp_21 = m20 * m01;\n  var tmp_22 = m00 * m11;\n  var tmp_23 = m10 * m01;\n  var t0 = tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31 - (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  var t1 = tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31 - (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  var t2 = tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31 - (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  var t3 = tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21 - (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n  var d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n  dst[0] = d * t0;\n  dst[1] = d * t1;\n  dst[2] = d * t2;\n  dst[3] = d * t3;\n  dst[4] = d * (tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30 - (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n  dst[5] = d * (tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30 - (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n  dst[6] = d * (tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30 - (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n  dst[7] = d * (tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20 - (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n  dst[8] = d * (tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33 - (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n  dst[9] = d * (tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33 - (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n  dst[10] = d * (tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33 - (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n  dst[11] = d * (tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23 - (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n  dst[12] = d * (tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12 - (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n  dst[13] = d * (tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22 - (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n  dst[14] = d * (tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02 - (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n  dst[15] = d * (tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12 - (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n  return dst;\n}\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param {module:twgl/m4.Mat4} a The matrix on the left.\n * @param {module:twgl/m4.Mat4} b The matrix on the right.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The matrix product of a and b.\n * @memberOf module:twgl/m4\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new MatType(16);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4 + 0];\n  var a11 = a[4 + 1];\n  var a12 = a[4 + 2];\n  var a13 = a[4 + 3];\n  var a20 = a[8 + 0];\n  var a21 = a[8 + 1];\n  var a22 = a[8 + 2];\n  var a23 = a[8 + 3];\n  var a30 = a[12 + 0];\n  var a31 = a[12 + 1];\n  var a32 = a[12 + 2];\n  var a33 = a[12 + 3];\n  var b00 = b[0];\n  var b01 = b[1];\n  var b02 = b[2];\n  var b03 = b[3];\n  var b10 = b[4 + 0];\n  var b11 = b[4 + 1];\n  var b12 = b[4 + 2];\n  var b13 = b[4 + 3];\n  var b20 = b[8 + 0];\n  var b21 = b[8 + 1];\n  var b22 = b[8 + 2];\n  var b23 = b[8 + 3];\n  var b30 = b[12 + 0];\n  var b31 = b[12 + 1];\n  var b32 = b[12 + 2];\n  var b33 = b[12 + 3];\n  dst[0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n  return dst;\n}\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param {module:twgl/m4.Mat4} a The matrix.\n * @param {Vec3} v The vector.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} a once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction setTranslation(a, v, dst) {\n  dst = dst || identity();\n\n  if (a !== dst) {\n    dst[0] = a[0];\n    dst[1] = a[1];\n    dst[2] = a[2];\n    dst[3] = a[3];\n    dst[4] = a[4];\n    dst[5] = a[5];\n    dst[6] = a[6];\n    dst[7] = a[7];\n    dst[8] = a[8];\n    dst[9] = a[9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} [dst] vector..\n * @return {Vec3} The translation component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getTranslation(m, dst) {\n  dst = dst || v3.create();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\n * @return {Vec3} [dst] vector.\n * @return {Vec3} The axis component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getAxis(m, axis, dst) {\n  dst = dst || v3.create();\n  var off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param {Vec3} v the axis vector\n * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\n * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If none a new one is created\n * @return {module:twgl/m4.Mat4} dst\n * @memberOf module:twgl/m4\n */\n\n\nfunction setAxis(a, v, axis, dst) {\n  if (dst !== a) {\n    dst = copy(a, dst);\n  }\n\n  var off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\n * @param {number} aspect The aspect ratio width / height.\n * @param {number} zNear The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} zFar The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n  dst = dst || new MatType(16);\n  var f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n  var rangeInv = 1.0 / (zNear - zFar);\n  dst[0] = f / aspect;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = f;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = (zNear + zFar) * rangeInv;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = zNear * zFar * rangeInv * 2;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 othogonal transformation matrix given the left, right,\n * bottom, and top dimensions of the near clipping plane as well as the\n * near and far clipping plane distances.\n * @param {number} left Left side of the near clipping plane viewport.\n * @param {number} right Right side of the near clipping plane viewport.\n * @param {number} top Top of the near clipping plane viewport.\n * @param {number} bottom Bottom of the near clipping plane viewport.\n * @param {number} near The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} far The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction ortho(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 2 / (right - left);\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 / (top - bottom);\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 2 / (near - far);\n  dst[11] = 0;\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = (far + near) / (near - far);\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective projection matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction frustum(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  var dx = right - left;\n  var dy = top - bottom;\n  var dz = near - far;\n  dst[0] = 2 * near / dx;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 * near / dy;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = (left + right) / dx;\n  dst[9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 look-at transformation.\n *\n * This is a matrix which positions the camera itself. If you want\n * a view matrix (a matrix which moves things in front of the camera)\n * take the inverse of this.\n *\n * @param {Vec3} eye The position of the eye.\n * @param {Vec3} target The position meant to be viewed.\n * @param {Vec3} up A vector pointing up.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The look-at matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction lookAt(eye, target, up, dst) {\n  dst = dst || new MatType(16);\n  var xAxis = tempV3a;\n  var yAxis = tempV3b;\n  var zAxis = tempV3c;\n  v3.normalize(v3.subtract(eye, target, zAxis), zAxis);\n  v3.normalize(v3.cross(up, zAxis, xAxis), xAxis);\n  v3.normalize(v3.cross(zAxis, xAxis, yAxis), yAxis);\n  dst[0] = xAxis[0];\n  dst[1] = xAxis[1];\n  dst[2] = xAxis[2];\n  dst[3] = 0;\n  dst[4] = yAxis[0];\n  dst[5] = yAxis[1];\n  dst[6] = yAxis[2];\n  dst[7] = 0;\n  dst[8] = zAxis[0];\n  dst[9] = zAxis[1];\n  dst[10] = zAxis[2];\n  dst[11] = 0;\n  dst[12] = eye[0];\n  dst[13] = eye[1];\n  dst[14] = eye[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param {Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The translation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translation(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by translation by the given vector v.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translate(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[0] = m00;\n    dst[1] = m01;\n    dst[2] = m02;\n    dst[3] = m03;\n    dst[4] = m10;\n    dst[5] = m11;\n    dst[6] = m12;\n    dst[7] = m13;\n    dst[8] = m20;\n    dst[9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationX(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = c;\n  dst[6] = s;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = -s;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the x-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateX(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[4] = c * m10 + s * m20;\n  dst[5] = c * m11 + s * m21;\n  dst[6] = c * m12 + s * m22;\n  dst[7] = c * m13 + s * m23;\n  dst[8] = c * m20 - s * m10;\n  dst[9] = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[3] = m[3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationY(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = 0;\n  dst[2] = -s;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = s;\n  dst[9] = 0;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the y-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateY(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 - s * m20;\n  dst[1] = c * m01 - s * m21;\n  dst[2] = c * m02 - s * m22;\n  dst[3] = c * m03 - s * m23;\n  dst[8] = c * m20 + s * m00;\n  dst[9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[4] = m[4];\n    dst[5] = m[5];\n    dst[6] = m[6];\n    dst[7] = m[7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationZ(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = s;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = -s;\n  dst[5] = c;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the z-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateZ(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 + s * m10;\n  dst[1] = c * m01 + s * m11;\n  dst[2] = c * m02 + s * m12;\n  dst[3] = c * m03 + s * m13;\n  dst[4] = c * m10 - s * m00;\n  dst[5] = c * m11 - s * m01;\n  dst[6] = c * m12 - s * m02;\n  dst[7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[8] = m[8];\n    dst[9] = m[9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param {Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\n *     around the axis.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotation(axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  dst[0] = xx + (1 - xx) * c;\n  dst[1] = x * y * oneMinusCosine + z * s;\n  dst[2] = x * z * oneMinusCosine - y * s;\n  dst[3] = 0;\n  dst[4] = x * y * oneMinusCosine - z * s;\n  dst[5] = yy + (1 - yy) * c;\n  dst[6] = y * z * oneMinusCosine + x * s;\n  dst[7] = 0;\n  dst[8] = x * z * oneMinusCosine + y * s;\n  dst[9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by rotation around the given axis by the\n * given angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotate(m, axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  var r00 = xx + (1 - xx) * c;\n  var r01 = x * y * oneMinusCosine + z * s;\n  var r02 = x * z * oneMinusCosine - y * s;\n  var r10 = x * y * oneMinusCosine - z * s;\n  var r11 = yy + (1 - yy) * c;\n  var r12 = y * z * oneMinusCosine + x * s;\n  var r20 = x * z * oneMinusCosine + y * s;\n  var r21 = y * z * oneMinusCosine - x * s;\n  var r22 = zz + (1 - zz) * c;\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  dst[0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param {Vec3} v A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The scaling matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scaling(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = v[0];\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = v[1];\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = v[2];\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix, scaling in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param {module:twgl/m4.Mat4} m The matrix to be modified.\n * @param {Vec3} v A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scale(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2];\n  dst[3] = v0 * m[0 * 4 + 3];\n  dst[4] = v1 * m[1 * 4 + 0];\n  dst[5] = v1 * m[1 * 4 + 1];\n  dst[6] = v1 * m[1 * 4 + 2];\n  dst[7] = v1 * m[1 * 4 + 3];\n  dst[8] = v2 * m[2 * 4 + 0];\n  dst[9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The point.\n * @param {Vec3} dst optional vec3 to store result\n * @return {Vec3} dst or new vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformPoint(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n  dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\n  dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\n  dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n * direction, transforms that direction by the matrix, and returns the result;\n * assumes the transformation of 3-dimensional space represented by the matrix\n * is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion. Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The direction.\n * @param {Vec3} dst optional Vec3 to store result\n * @return {Vec3} dst or new Vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformDirection(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n * as a normal to a surface, and computes a vector which is normal upon\n * transforming that surface by the matrix. The effect of this function is the\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\n * function assumes the transformation of 3-dimensional space represented by the\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion.  Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The normal.\n * @param {Vec3} [dst] The direction.\n * @return {Vec3} The transformed direction.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformNormal(m, v, dst) {\n  dst = dst || v3.create();\n  var mi = inverse(m);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttribsFromArrays = createAttribsFromArrays;\nexports.createBuffersFromArrays = createBuffersFromArrays;\nexports.createBufferFromArray = createBufferFromArray;\nexports.createBufferFromTypedArray = createBufferFromTypedArray;\nexports.createBufferInfoFromArrays = createBufferInfoFromArrays;\nexports.setAttribInfoBufferFromArray = setAttribInfoBufferFromArray;\nexports.setAttributePrefix = setAttributePrefix;\nexports.setAttributeDefaults_ = setDefaults;\nexports.getNumComponents_ = getNumComponents;\nexports.getArray_ = getArray;\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level attribute and buffer related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/attributes\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  attribPrefix: \"\"\n};\n/**\n * Sets the default attrib prefix\n *\n * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n * as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n *\n * In otherwords I'll create arrays of geometry like this\n *\n *     var arrays = {\n *       position: ...\n *       normal: ...\n *       texcoord: ...\n *     };\n *\n * But need those mapped to attributes and my attributes start with `a_`.\n *\n * @deprecated see {@link module:twgl.setDefaults}\n * @param {string} prefix prefix for attribs\n * @memberOf module:twgl/attributes\n */\n\nfunction setAttributePrefix(prefix) {\n  defaults.attribPrefix = prefix;\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n}\n\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || gl.STATIC_DRAW);\n}\n/**\n * Given typed array creates a WebGLBuffer and copies the typed array\n * into it.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n * @return {WebGLBuffer} the created WebGLBuffer\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\n  if (helper.isBuffer(gl, typedArray)) {\n    return typedArray;\n  }\n\n  type = type || gl.ARRAY_BUFFER;\n  var buffer = gl.createBuffer();\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n  return buffer;\n}\n\nfunction isIndices(name) {\n  return name === \"indices\";\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n}\n\nfunction getArray(array) {\n  return array.length ? array : array.data;\n}\n\nvar texcoordRE = /coord|texture/i;\nvar colorRE = /color|colour/i;\n\nfunction guessNumComponentsFromName(name, length) {\n  var numComponents;\n\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3; // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw \"Can not guess numComponents for attribute '\" + name + \"'. Tried \" + numComponents + \" but \" + length + \" values is not evenly divisible by \" + numComponents + \". You should specify it.\";\n  }\n\n  return numComponents;\n}\n\nfunction getNumComponents(array, arrayName) {\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\n}\n\nfunction makeTypedArray(array, name) {\n  if (typedArrays.isArrayBuffer(array)) {\n    return array;\n  }\n\n  if (typedArrays.isArrayBuffer(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array\n    };\n  }\n\n  var Type = array.type;\n\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint16Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n\n  return new Type(array.data);\n}\n/**\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n * for the attribute.\n *\n * @typedef {Object} AttribInfo\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] synonym for `numComponents`.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {number} [divisor] the divisor in instances. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * Use this type of array spec when TWGL can't guess the type or number of compoments of an array\n * @typedef {Object} FullArraySpec\n * @property {(number|number[]|ArrayBufferView)} data The data of the array. A number alone becomes the number of elements of type.\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n *    If `coord` is in the name assumes `numComponents = 2`.\n *    If `color` is in the name assumes `numComponents = 4`.\n *    otherwise assumes `numComponents = 3`\n * @property {constructor} type The type. This is only used if `data` is a JavaScript array. It is the constructor for the typedarray. (eg. `Uint8Array`).\n * For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: Uint8Array, data: [255,0,255,255, ...], }`.\n * @property {number} [size] synonym for `numComponents`.\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n * @property {string} [name] synonym for `attrib`.\n * @property {string} [attribName] synonym for `attrib`.\n * @memberOf module:twgl\n */\n\n/**\n * An individual array in {@link module:twgl.Arrays}\n *\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\n *\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\n * @memberOf module:twgl\n */\n\n/**\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n * @memberOf module:twgl\n */\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      var arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      var attribs = {\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * notes:\n *\n * *   Arrays can take various forms\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {module:twgl.Arrays} arrays The arrays\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createAttribsFromArrays(gl, arrays) {\n  var attribs = {};\n  Object.keys(arrays).forEach(function (arrayName) {\n    if (!isIndices(arrayName)) {\n      var array = arrays[arrayName];\n      var attribName = array.attrib || array.name || array.attribName || defaults.attribPrefix + arrayName;\n      var buffer;\n      var type;\n      var normalization;\n      var numComponents;\n      var numValues;\n\n      if (typeof array === \"number\" || typeof array.data === \"number\") {\n        numValues = array.data || array;\n        var arrayType = array.type || Float32Array;\n        var numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\n        type = typedArrays.getGLTypeForTypedArrayType(arrayType);\n        normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\n        numComponents = array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues);\n        buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, numBytes, array.drawType || gl.STATIC_DRAW);\n      } else {\n        var typedArray = makeTypedArray(array, arrayName);\n        buffer = createBufferFromTypedArray(gl, typedArray, undefined, array.drawType);\n        type = typedArrays.getGLTypeForTypedArray(typedArray);\n        normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArray(typedArray);\n        numComponents = getNumComponents(array, arrayName);\n        numValues = typedArray.length;\n      }\n\n      attribs[attribName] = {\n        buffer: buffer,\n        numComponents: numComponents,\n        type: type,\n        normalize: normalization,\n        stride: array.stride || 0,\n        offset: array.offset || 0,\n        divisor: array.divisor === undefined ? undefined : array.divisor,\n        drawType: array.drawType\n      };\n    }\n  });\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  return attribs;\n}\n/**\n * Sets the contents of a buffer attached to an attribInfo\n *\n * This is helper function to dynamically update a buffer.\n *\n * Let's say you make a bufferInfo\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n *  And you want to dynamically upate the positions. You could do this\n *\n *     // assuming arrays.position has already been updated with new data.\n *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\n *\n * @param {WebGLRenderingContext} gl\n * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\n *   the name of the attribute will include the prefix.\n * @param {ArraySpec} array Note: it is arguably ineffient to pass in anything but a typed array because anything\n *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\n *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\n * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\n *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\n *    for the portion of the array you want to use.\n *\n *        var someArray = new Float32Array(1000); // an array with 1000 floats\n *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\n *\n *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\n * @memberOf module:twgl/attributes\n */\n\n\nfunction setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\n  array = makeTypedArray(array);\n\n  if (offset !== undefined) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, attribInfo.buffer);\n    gl.bufferSubData(gl.ARRAY_BUFFER, offset, array);\n  } else {\n    setBufferFromTypedArray(gl, gl.ARRAY_BUFFER, attribInfo.buffer, array, attribInfo.drawType);\n  }\n}\n\nfunction getBytesPerValueForGLType(gl, type) {\n  if (type === gl.BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.INT) return 4; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_INT) return 4; // eslint-disable-line\n\n  if (type === gl.FLOAT) return 4; // eslint-disable-line\n\n  return 0;\n}\n/**\n * tries to get the number of elements from a set of arrays.\n */\n\n\nvar positionKeys = ['position', 'positions', 'a_position'];\n\nfunction getNumElementsFromNonIndexedArrays(arrays) {\n  var key;\n\n  for (var _ii = 0; _ii < positionKeys.length; ++_ii) {\n    key = positionKeys[_ii];\n\n    if (key in arrays) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(arrays)[0];\n  }\n\n  var array = arrays[key];\n  var length = getArray(array).length;\n  var numComponents = getNumComponents(array, key);\n  var numElements = length / numComponents;\n\n  if (length % numComponents > 0) {\n    throw \"numComponents \" + numComponents + \" not correct for length \" + length;\n  }\n\n  return numElements;\n}\n\nfunction getNumElementsFromAttributes(gl, attribs) {\n  var key;\n  var ii;\n\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n\n    if (key in attribs) {\n      break;\n    }\n\n    key = defaults.attribPrefix + key;\n\n    if (key in attribs) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(attribs)[0];\n  }\n\n  var attrib = attribs[key];\n  gl.bindBuffer(gl.ARRAY_BUFFER, attrib.buffer);\n  var numBytes = gl.getBufferParameter(gl.ARRAY_BUFFER, gl.BUFFER_SIZE);\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  var bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\n  var totalElements = numBytes / bytesPerValue;\n  var numComponents = attrib.numComponents || attrib.size; // TODO: check stride\n\n  var numElements = totalElements / numComponents;\n\n  if (numElements % 1 !== 0) {\n    throw \"numComponents \" + numComponents + \" not correct for length \" + length;\n  }\n\n  return numElements;\n}\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs approriate to call `setAttributes`\n * @memberOf module:twgl\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * Given an object like\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         a_position: { buffer: WebGLBuffer, numComponents: 3, },\n *         a_normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         a_texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     var arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also by TypedArrays\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or augmentedTypedArrays\n *\n *     var positions = createAugmentedTypedArray(3, 4);\n *     var texcoords = createAugmentedTypedArray(2, 4);\n *     var normals   = createAugmentedTypedArray(3, 4);\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     var arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     var bufferInfo = {\n *       attribs: {\n *         a_position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         a_texcoods: { numComponents: 2, buffer: gl.createBuffer(), },\n *         a_normals: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.Arrays} arrays Your data\n * @return {module:twgl.BufferInfo} A BufferInfo\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferInfoFromArrays(gl, arrays) {\n  var bufferInfo = {\n    attribs: createAttribsFromArrays(gl, arrays)\n  };\n  var indices = arrays.indices;\n\n  if (indices) {\n    var newIndices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, gl.ELEMENT_ARRAY_BUFFER);\n    bufferInfo.numElements = newIndices.length;\n    bufferInfo.elementType = typedArrays.getGLTypeForTypedArray(newIndices);\n  } else {\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\n  }\n\n  return bufferInfo;\n}\n/**\n * Creates a buffer from an array, typed array, or array spec\n *\n * Given something like this\n *\n *     [1, 2, 3],\n *\n * or\n *\n *     new Uint16Array([1,2,3]);\n *\n * or\n *\n *     {\n *        data: [1, 2, 3],\n *        type: Uint8Array,\n *     }\n *\n * returns a WebGLBuffer that constains the given data.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\n * @param {string} arrayName name of array. Used to guess the type if type can not be dervied other wise.\n * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromArray(gl, array, arrayName) {\n  var type = arrayName === \"indices\" ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;\n  var typedArray = makeTypedArray(array, arrayName);\n  return createBufferFromTypedArray(gl, typedArray, type);\n}\n/**\n * Creates buffers from arrays or typed arrays\n *\n * Given something like this\n *\n *     var arrays = {\n *        positions: [1, 2, 3],\n *        normals: [0, 0, 1],\n *     }\n *\n * returns something like\n *\n *     buffers = {\n *       positions: WebGLBuffer,\n *       normals: WebGLBuffer,\n *     }\n *\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.Arrays} arrays\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBuffersFromArrays(gl, arrays) {\n  var buffers = {};\n  Object.keys(arrays).forEach(function (key) {\n    buffers[key] = createBufferFromArray(gl, arrays[key], key);\n  }); // Ugh!\n\n  if (arrays.indices) {\n    buffers.numElements = arrays.indices.length;\n    buffers.elementType = typedArrays.getGLTypeForTypedArray(makeTypedArray(arrays.indices), 'indices');\n  } else {\n    buffers.numElements = getNumElementsFromNonIndexedArrays(arrays);\n  }\n\n  return buffers;\n}\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.setTextureDefaults_ = setDefaults;\nexports.createSampler = createSampler;\nexports.createSamplers = createSamplers;\nexports.setSamplerParameters = setSamplerParameters;\nexports.createTexture = createTexture;\nexports.setEmptyTexture = setEmptyTexture;\nexports.setTextureFromArray = setTextureFromArray;\nexports.loadTextureFromUrl = loadTextureFromUrl;\nexports.setTextureFromElement = setTextureFromElement;\nexports.setTextureFilteringForSize = setTextureFilteringForSize;\nexports.setTextureParameters = setTextureParameters;\nexports.setDefaultTextureColor = setDefaultTextureColor;\nexports.createTextures = createTextures;\nexports.resizeTexture = resizeTexture;\nexports.getNumComponentsForFormat = getNumComponentsForFormat;\nexports.getBytesPerElementForInternalFormat = getBytesPerElementForInternalFormat;\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level texture related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.textures` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/textures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  textureColor: new Uint8Array([128, 192, 255, 255]),\n  textureOptions: {},\n  crossOrigin: undefined\n};\nvar isArrayBuffer = typedArrays.isArrayBuffer; // Should we make this on demand?\n\nvar ctx = _globalObject.default.document && _globalObject.default.document.createElement ? _globalObject.default.document.createElement(\"canvas\").getContext(\"2d\") : null; // NOTE: Chrome supports 2D canvas in a Worker (behind flag as of v64 but\n//       not only does Firefox NOT support it but Firefox freezes immediately\n//       if you try to create one instead of just returning null and continuing.\n//  : (global.OffscreenCanvas && (new global.OffscreenCanvas(1, 1)).getContext(\"2d\"));  // OffscreenCanvas may not support 2d\n// NOTE: We can maybe remove some of the need for the 2d canvas. In WebGL2\n// we can use the various unpack settings. Otherwise we could try using\n// the ability of an imagebitmap to be cut. Unfortunately cutting an imagebitmap\n// is async and the current TWGL code expects a non-Async result though that\n// might not be a problem. ImageBitmap though is not available in Edge or Safari\n// as of 2018-01-02\n\n/* PixelFormat */\n\nvar ALPHA = 0x1906;\nvar RGB = 0x1907;\nvar RGBA = 0x1908;\nvar LUMINANCE = 0x1909;\nvar LUMINANCE_ALPHA = 0x190A;\nvar DEPTH_COMPONENT = 0x1902;\nvar DEPTH_STENCIL = 0x84F9;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\nvar R8 = 0x8229;\nvar R8_SNORM = 0x8F94;\nvar R16F = 0x822D;\nvar R32F = 0x822E;\nvar R8UI = 0x8232;\nvar R8I = 0x8231;\nvar RG16UI = 0x823A;\nvar RG16I = 0x8239;\nvar RG32UI = 0x823C;\nvar RG32I = 0x823B;\nvar RG8 = 0x822B;\nvar RG8_SNORM = 0x8F95;\nvar RG16F = 0x822F;\nvar RG32F = 0x8230;\nvar RG8UI = 0x8238;\nvar RG8I = 0x8237;\nvar R16UI = 0x8234;\nvar R16I = 0x8233;\nvar R32UI = 0x8236;\nvar R32I = 0x8235;\nvar RGB8 = 0x8051;\nvar SRGB8 = 0x8C41;\nvar RGB565 = 0x8D62;\nvar RGB8_SNORM = 0x8F96;\nvar R11F_G11F_B10F = 0x8C3A;\nvar RGB9_E5 = 0x8C3D;\nvar RGB16F = 0x881B;\nvar RGB32F = 0x8815;\nvar RGB8UI = 0x8D7D;\nvar RGB8I = 0x8D8F;\nvar RGB16UI = 0x8D77;\nvar RGB16I = 0x8D89;\nvar RGB32UI = 0x8D71;\nvar RGB32I = 0x8D83;\nvar RGBA8 = 0x8058;\nvar SRGB8_ALPHA8 = 0x8C43;\nvar RGBA8_SNORM = 0x8F97;\nvar RGB5_A1 = 0x8057;\nvar RGBA4 = 0x8056;\nvar RGB10_A2 = 0x8059;\nvar RGBA16F = 0x881A;\nvar RGBA32F = 0x8814;\nvar RGBA8UI = 0x8D7C;\nvar RGBA8I = 0x8D8E;\nvar RGB10_A2UI = 0x906F;\nvar RGBA16UI = 0x8D76;\nvar RGBA16I = 0x8D88;\nvar RGBA32I = 0x8D82;\nvar RGBA32UI = 0x8D70;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar DEPTH_COMPONENT24 = 0x81A6;\nvar DEPTH_COMPONENT32F = 0x8CAC;\nvar DEPTH32F_STENCIL8 = 0x8CAD;\nvar DEPTH24_STENCIL8 = 0x88F0;\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar HALF_FLOAT_OES = 0x8D61; // Thanks Khronos for making this different >:(\n\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar RG = 0x8227;\nvar RG_INTEGER = 0x8228;\nvar RED = 0x1903;\nvar RED_INTEGER = 0x8D94;\nvar RGB_INTEGER = 0x8D98;\nvar RGBA_INTEGER = 0x8D99;\nvar formatInfo = {};\n{\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\n  // the name.\n  var f = formatInfo;\n  f[ALPHA] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE_ALPHA] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RED] = {\n    numColorComponents: 1\n  };\n  f[RED_INTEGER] = {\n    numColorComponents: 1\n  };\n  f[RG] = {\n    numColorComponents: 2\n  };\n  f[RG_INTEGER] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGB_INTEGER] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RGBA_INTEGER] = {\n    numColorComponents: 4\n  };\n  f[DEPTH_COMPONENT] = {\n    numColorComponents: 1\n  };\n  f[DEPTH_STENCIL] = {\n    numColorComponents: 2\n  };\n}\nvar textureInternalFormatInfo = {};\n{\n  // NOTE: these properties need unique names so we can let Uglify mangle the name.\n  var t = textureInternalFormatInfo; // unsized formats\n\n  t[ALPHA] = {\n    textureFormat: ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE] = {\n    textureFormat: LUMINANCE,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE_ALPHA] = {\n    textureFormat: LUMINANCE_ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [2, 4, 4, 8],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[RGB] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 6, 6, 12, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGBA] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 8, 8, 16, 2, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1]\n  }; // sized formats\n\n  t[R8] = {\n    textureFormat: RED,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 1,\n    type: UNSIGNED_BYTE\n  };\n  t[R8_SNORM] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 1,\n    type: BYTE\n  };\n  t[R16F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[R32F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT\n  };\n  t[R8UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 1,\n    type: UNSIGNED_BYTE\n  };\n  t[R8I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 1,\n    type: BYTE\n  };\n  t[R16UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: UNSIGNED_SHORT\n  };\n  t[R16I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: SHORT\n  };\n  t[R32UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT\n  };\n  t[R32I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: INT\n  };\n  t[RG8] = {\n    textureFormat: RG,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 2,\n    type: UNSIGNED_BYTE\n  };\n  t[RG8_SNORM] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 2,\n    type: BYTE\n  };\n  t[RG16F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [8, 4],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RG32F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: FLOAT\n  };\n  t[RG8UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: UNSIGNED_BYTE\n  };\n  t[RG8I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: BYTE\n  };\n  t[RG16UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_SHORT\n  };\n  t[RG16I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: SHORT\n  };\n  t[RG32UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: UNSIGNED_INT\n  };\n  t[RG32I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: INT\n  };\n  t[RGB8] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[SRGB8] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[RGB565] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGB8_SNORM] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: BYTE\n  };\n  t[R11F_G11F_B10F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_10F_11F_11F_REV]\n  };\n  t[RGB9_E5] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_5_9_9_9_REV]\n  };\n  t[RGB16F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGB32F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: FLOAT\n  };\n  t[RGB8UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[RGB8I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 3,\n    type: BYTE\n  };\n  t[RGB16UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 6,\n    type: UNSIGNED_SHORT\n  };\n  t[RGB16I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 6,\n    type: SHORT\n  };\n  t[RGB32UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: UNSIGNED_INT\n  };\n  t[RGB32I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: INT\n  };\n  t[RGBA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[SRGB8_ALPHA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[RGBA8_SNORM] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: BYTE\n  };\n  t[RGB5_A1] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2, 4],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_5_5_1, UNSIGNED_INT_2_10_10_10_REV]\n  };\n  t[RGBA4] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_4_4_4_4]\n  };\n  t[RGB10_A2] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_2_10_10_10_REV\n  };\n  t[RGBA16F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [16, 8],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGBA32F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: FLOAT\n  };\n  t[RGBA8UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[RGBA8I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: BYTE\n  };\n  t[RGB10_A2UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_2_10_10_10_REV\n  };\n  t[RGBA16UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: UNSIGNED_SHORT\n  };\n  t[RGBA16I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: SHORT\n  };\n  t[RGBA32I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: INT\n  };\n  t[RGBA32UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: UNSIGNED_INT\n  }; // Sized Internal\n\n  t[DEPTH_COMPONENT16] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2, 4],\n    type: [UNSIGNED_SHORT, UNSIGNED_INT]\n  };\n  t[DEPTH_COMPONENT24] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT\n  };\n  t[DEPTH_COMPONENT32F] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT\n  };\n  t[DEPTH24_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_24_8\n  };\n  t[DEPTH32F_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT_32_UNSIGNED_INT_24_8_REV\n  };\n  Object.keys(t).forEach(function (internalFormat) {\n    var info = t[internalFormat];\n    info.bytesPerElementMap = {};\n\n    if (Array.isArray(info.bytesPerElement)) {\n      info.bytesPerElement.forEach(function (bytesPerElement, ndx) {\n        var type = info.type[ndx];\n        info.bytesPerElementMap[type] = bytesPerElement;\n      });\n    } else {\n      var type = info.type;\n      info.bytesPerElementMap[type] = info.bytesPerElement;\n    }\n  });\n}\n/**\n * Gets the number of bytes per element for a given internalFormat / type\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {number} the number of bytes per element for the given internalFormat, type combo\n * @memberOf module:twgl/textures\n */\n\nfunction getBytesPerElementForInternalFormat(internalFormat, type) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  var bytesPerElement = info.bytesPerElementMap[type];\n\n  if (bytesPerElement === undefined) {\n    throw \"unknown internal format\";\n  }\n\n  return bytesPerElement;\n}\n/**\n * Gets the format for a given internalFormat\n *\n * @param {number} internalFormat The internal format\n * @return {{format:number, type:number}} the corresponding format and type\n */\n\n\nfunction getFormatAndTypeForInternalFormat(internalFormat) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return {\n    format: info.textureFormat,\n    type: Array.isArray(info.type) ? info.type[0] : info.type\n  };\n}\n/**\n * Returns true if value is power of 2\n * @param {number} value number to check.\n * @return true if value is power of 2\n */\n\n\nfunction isPowerOf2(value) {\n  return (value & value - 1) === 0;\n}\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {boolean} true if we can generate mips\n */\n\n\nfunction canGenerateMipmap(gl, width, height, internalFormat\n/*, type */\n) {\n  if (!utils.isWebGL2(gl)) {\n    return isPowerOf2(width) && isPowerOf2(height);\n  }\n\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.colorRenderable && info.textureFilterable;\n}\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {boolean} true if we can generate mips\n */\n\n\nfunction canFilter(internalFormat\n/*, type */\n) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.textureFilterable;\n}\n/**\n * Gets the number of compontents for a given image format.\n * @param {number} format the format.\n * @return {number} the number of components for the format.\n * @memberOf module:twgl/textures\n */\n\n\nfunction getNumComponentsForFormat(format) {\n  var info = formatInfo[format];\n\n  if (!info) {\n    throw \"unknown format: \" + format;\n  }\n\n  return info.numColorComponents;\n}\n/**\n * Gets the texture type for a given array type.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @return {number} the gl texture type\n */\n\n\nfunction getTextureTypeForArrayType(gl, src, defaultType) {\n  if (isArrayBuffer(src)) {\n    return typedArrays.getGLTypeForTypedArray(src);\n  }\n\n  return defaultType || gl.UNSIGNED_BYTE;\n}\n\nfunction guessDimensions(gl, target, width, height, numElements) {\n  if (numElements % 1 !== 0) {\n    throw \"can't guess dimensions\";\n  }\n\n  if (!width && !height) {\n    var size = Math.sqrt(numElements / (target === gl.TEXTURE_CUBE_MAP ? 6 : 1));\n\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width;\n\n    if (height % 1) {\n      throw \"can't guess dimensions\";\n    }\n  } else if (!width) {\n    width = numElements / height;\n\n    if (width % 1) {\n      throw \"can't guess dimensions\";\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Sets the default texture color.\n *\n * The default texture color is used when loading textures from\n * urls. Because the URL will be loaded async we'd like to be\n * able to use the texture immediately. By putting a 1x1 pixel\n * color in the texture we can start using the texture before\n * the URL has loaded.\n *\n * @param {number[]} color Array of 4 values in the range 0 to 1\n * @deprecated see {@link module:twgl.setDefaults}\n * @memberOf module:twgl/textures\n */\n\n\nfunction setDefaultTextureColor(color) {\n  defaults.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n\n  if (newDefaults.textureColor) {\n    setDefaultTextureColor(newDefaults.textureColor);\n  }\n}\n/**\n * A function to generate the source for a texture.\n * @callback TextureFunc\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options the texture options\n * @return {*} Returns any of the things documentented for `src` for {@link module:twgl.TextureOptions}.\n * @memberOf module:twgl\n */\n\n/**\n * Texture options passed to most texture functions. Each function will use whatever options\n * are appropriate for its needs. This lets you pass the same options to all functions.\n *\n * Note: A `TexImageSource` is defined in the WebGL spec as a `HTMLImageElement`, `HTMLVideoElement`,\n * `HTMLCanvasElement`, `ImageBitmap`, or `ImageData`.\n *\n * @typedef {Object} TextureOptions\n * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\n * @property {number} [level] the mip level to affect. Defaults to 0. Note, if set auto will be considered false unless explicitly set to true.\n * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\n * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\n * @property {number} [depth] the depth of a texture. Only used if src is an array or type array or null and target is `TEXTURE_3D` .\n * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\n *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\n * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\n * @property {number} [minMag] both the min and mag filter settings.\n * @property {number} [internalFormat] internal format for texture. Defaults to `gl.RGBA`\n * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\n * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBufferView. If `src`\n *     is ArrayBufferView defaults to type that matches ArrayBufferView type.\n * @property {number} [wrap] Texture wrapping for both S and T (and R if TEXTURE_3D or WebGLSampler). Defaults to `gl.REPEAT` for 2D unless src is WebGL1 and src not npot and `gl.CLAMP_TO_EDGE` for cube\n * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapR] Texture wrapping for R. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [minLod] TEXTURE_MIN_LOD setting\n * @property {number} [maxLod] TEXTURE_MAX_LOD setting\n * @property {number} [baseLevel] TEXTURE_BASE_LEVEL setting\n * @property {number} [maxLevel] TEXTURE_MAX_LEVEL setting\n * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\n * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {(number[]|ArrayBufferView)} color color used as temporary 1x1 pixel color for textures loaded async when src is a string.\n *    If it's a JavaScript array assumes color is 0 to 1 like most GL colors as in `[1, 0, 0, 1] = red=1, green=0, blue=0, alpha=0`.\n *    Defaults to `[0.5, 0.75, 1, 1]`. See {@link module:twgl.setDefaultTextureColor}. If `false` texture is set. Can be used to re-load a texture\n * @property {boolean} [auto] If `undefined` or `true`, in WebGL1, texture filtering is set automatically for non-power of 2 images and\n *    mips are generated for power of 2 images. In WebGL2 mips are generated if they can be. Note: if `level` is set above\n *    then then `auto` is assumed to be `false` unless explicity set to `true`.\n * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\n *\n *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n *\n * @property {(number[]|ArrayBufferView|TexImageSource|TexImageSource[]|string|string[]|module:twgl.TextureFunc)} [src] source for texture\n *\n *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\n *    1x1 pixel texture will be returned immediatley. The texture will be updated once the image has downloaded.\n *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\n *    The pieces will be uploaded in `cubeFaceOrder`\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_CUBE_MAP` then it must have 6 entries, one for each face of a cube map.\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_2D_ARRAY` then eact entry is a slice of the a 2d array texture\n *    and will be scaled to the specified width and height OR to the size of the first image that loads.\n *\n *    If `TexImageSource` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\n *    `HTMLCanvasElement`, `HTMLVideoElement`.\n *\n *    If `number[]` or `ArrayBufferView` it's assumed to be data for a texture. If `width` or `height` is\n *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponents`\n *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\n *    by 6. Then\n *\n *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\n *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\n *\n *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\n *\n * If `number[]` will be converted to `type`.\n *\n * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\n * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\n * an array etc...\n *\n * If `src` is undefined then an empty texture will be created of size `width` by `height`.\n *\n * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\n *    default: undefined. Also see {@link module:twgl.setDefaults}.\n *\n * @memberOf module:twgl\n */\n// NOTE: While querying GL is considered slow it's not remotely as slow\n// as uploading a texture. On top of that you're unlikely to call this in\n// a perf critical loop. Even if upload a texture every frame that's unlikely\n// to be more than 1 or 2 textures a frame. In other words, the benefits of\n// making the API easy to use outweigh any supposed perf benefits\n//\n// Also note I get that having one global of these is bad practice.\n// As long as it's used correctly it means no garbage which probably\n// doesn't matter when dealing with textures but old habits die hard.\n\n\nvar lastPackState = {};\n/**\n * Saves any packing state that will be set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\nfunction savePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    lastPackState.colorspaceConversion = gl.getParameter(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL);\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    lastPackState.premultiplyAlpha = gl.getParameter(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    lastPackState.flipY = gl.getParameter(gl.UNPACK_FLIP_Y_WEBGL);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, options.flipY);\n  }\n}\n/**\n * Restores any packing state that was set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction restorePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, lastPackState.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, lastPackState.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, lastPackState.flipY);\n  }\n}\n/**\n * Saves state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction saveSkipState(gl) {\n  lastPackState.unpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n\n  if (utils.isWebGL2(gl)) {\n    lastPackState.unpackRowLength = gl.getParameter(gl.UNPACK_ROW_LENGTH);\n    lastPackState.unpackImageHeight = gl.getParameter(gl.UNPACK_IMAGE_HEIGHT);\n    lastPackState.unpackSkipPixels = gl.getParameter(gl.UNPACK_SKIP_PIXELS);\n    lastPackState.unpackSkipRows = gl.getParameter(gl.UNPACK_SKIP_ROWS);\n    lastPackState.unpackSkipImages = gl.getParameter(gl.UNPACK_SKIP_IMAGES);\n  }\n}\n/**\n * Restores state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction restoreSkipState(gl) {\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, lastPackState.unpackAlignment);\n\n  if (utils.isWebGL2(gl)) {\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, lastPackState.unpackRowLength);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, lastPackState.unpackImageHeight);\n    gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, lastPackState.unpackSkipPixels);\n    gl.pixelStorei(gl.UNPACK_SKIP_ROWS, lastPackState.unpackSkipRows);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, lastPackState.unpackSkipImages);\n  }\n}\n/**\n * Sets the parameters of a texture or sampler\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number|WebGLSampler} target texture target or sampler\n * @param {function()} parameteriFn texParamteri or samplerParameteri fn\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n */\n\n\nfunction setTextureSamplerParameters(gl, target, parameteriFn, options) {\n  if (options.minMag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.minMag);\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.minMag);\n  }\n\n  if (options.min) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.min);\n  }\n\n  if (options.mag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.mag);\n  }\n\n  if (options.wrap) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrap);\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrap);\n\n    if (target === gl.TEXTURE_3D || helper.isSampler(gl, target)) {\n      parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrap);\n    }\n  }\n\n  if (options.wrapR) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrapR);\n  }\n\n  if (options.wrapS) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrapS);\n  }\n\n  if (options.wrapT) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrapT);\n  }\n\n  if (options.minLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_LOD, options.minLod);\n  }\n\n  if (options.maxLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LOD, options.maxLod);\n  }\n\n  if (options.baseLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_BASE_LEVEL, options.baseLevel);\n  }\n\n  if (options.maxLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LEVEL, options.maxLevel);\n  }\n}\n/**\n * Sets the texture parameters of a texture.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureParameters(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  setTextureSamplerParameters(gl, target, gl.texParameteri, options);\n}\n/**\n * Sets the sampler parameters of a sampler.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLSampler} sampler the WebGLSampler to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setSamplerParameters(gl, sampler, options) {\n  setTextureSamplerParameters(gl, sampler, gl.samplerParameteri, options);\n}\n/**\n * Creates a new sampler object and sets parameters.\n *\n * Example:\n *\n *      const sampler = twgl.createSampler(gl, {\n *        minMag: gl.NEAREST,         // sets both TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER\n *        wrap: gl.CLAMP_TO_NEAREST,  // sets both TEXTURE_WRAP_S and TEXTURE_WRAP_T and TEXTURE_WRAP_R\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per sampler.\n * @return {Object.<string,WebGLSampler>} the created samplers by name\n */\n\n\nfunction createSampler(gl, options) {\n  var sampler = gl.createSampler();\n  setSamplerParameters(gl, sampler, options);\n  return sampler;\n}\n/**\n * Creates a multiple sampler objects and sets parameters on each.\n *\n * Example:\n *\n *      const samplers = twgl.createSamplers(gl, {\n *        nearest: {\n *          minMag: gl.NEAREST,\n *        },\n *        nearestClampS: {\n *          minMag: gl.NEAREST,\n *          wrapS: gl.CLAMP_TO_NEAREST,\n *        },\n *        linear: {\n *          minMag: gl.LINEAR,\n *        },\n *        nearestClamp: {\n *          minMag: gl.NEAREST,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClamp: {\n *          minMag: gl.LINEAR,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClampT: {\n *          minMag: gl.LINEAR,\n *          wrapT: gl.CLAMP_TO_EDGE,\n *        },\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set on the sampler\n */\n\n\nfunction createSamplers(gl, samplerOptions) {\n  var samplers = {};\n  Object.keys(samplerOptions).forEach(function (name) {\n    samplers[name] = createSampler(gl, samplerOptions[name]);\n  });\n  return samplers;\n}\n/**\n * Makes a 1x1 pixel\n * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\n * @param {(number[]|ArrayBufferView)} [color] The color using 0-1 values\n * @return {Uint8Array} Unit8Array with color.\n */\n\n\nfunction make1Pixel(color) {\n  color = color || defaults.textureColor;\n\n  if (isArrayBuffer(color)) {\n    return color;\n  }\n\n  return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n/**\n * Sets filtering or generates mips for texture based on width or height\n * If width or height is not passed in uses `options.width` and//or `options.height`\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @param {number} [width] width of texture\n * @param {number} [height] height of texture\n * @param {number} [internalFormat] The internalFormat parameter from texImage2D etc..\n * @param {number} [type] The type parameter for texImage2D etc..\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type) {\n  options = options || defaults.textureOptions;\n  internalFormat = internalFormat || gl.RGBA;\n  type = type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n  width = width || options.width;\n  height = height || options.height;\n  gl.bindTexture(target, tex);\n\n  if (canGenerateMipmap(gl, width, height, internalFormat, type)) {\n    gl.generateMipmap(target);\n  } else {\n    var filtering = canFilter(internalFormat, type) ? gl.LINEAR : gl.NEAREST;\n    gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n}\n\nfunction shouldAutomaticallySetTextureFilteringForSize(options) {\n  return options.auto === true || options.auto === undefined && options.level === undefined;\n}\n/**\n * Gets an array of cubemap face enums\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @return {number[]} cubemap face enums\n */\n\n\nfunction getCubeFaceOrder(gl, options) {\n  options = options || {};\n  return options.cubeFaceOrder || [gl.TEXTURE_CUBE_MAP_POSITIVE_X, gl.TEXTURE_CUBE_MAP_NEGATIVE_X, gl.TEXTURE_CUBE_MAP_POSITIVE_Y, gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, gl.TEXTURE_CUBE_MAP_POSITIVE_Z, gl.TEXTURE_CUBE_MAP_NEGATIVE_Z];\n}\n/**\n * @typedef {Object} FaceInfo\n * @property {number} face gl enum for texImage2D\n * @property {number} ndx face index (0 - 5) into source data\n * @ignore\n */\n\n/**\n * Gets an array of FaceInfos\n * There's a bug in some NVidia drivers that will crash the driver if\n * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\n * the user's desired order from his faces to WebGL and make sure we\n * do the faces in WebGL order\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundent but\n *    it's needed internally to sort the array of `ndx` properties by `face`.\n */\n\n\nfunction getCubeFacesWithNdx(gl, options) {\n  var faces = getCubeFaceOrder(gl, options); // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\n\n  var facesWithNdx = faces.map(function (face, ndx) {\n    return {\n      face: face,\n      ndx: ndx\n    };\n  });\n  facesWithNdx.sort(function (a, b) {\n    return a.face - b.face;\n  });\n  return facesWithNdx;\n}\n/**\n * Set a texture from the contents of an element. Will also set\n * texture filtering or generate mips based on the dimensions of the element\n * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\n * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {HTMLElement} element a canvas, img, or video element.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @kind function\n */\n\n\nfunction setTextureFromElement(gl, tex, element, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  var level = options.level || 0;\n  var width = element.width;\n  var height = element.height;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // guess the parts\n    var imgWidth = element.width;\n    var imgHeight = element.height;\n    var size;\n    var slices;\n\n    if (imgWidth / 6 === imgHeight) {\n      // It's 6x1\n      size = imgHeight;\n      slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\n    } else if (imgHeight / 6 === imgWidth) {\n      // It's 1x6\n      size = imgWidth;\n      slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\n    } else if (imgWidth / 3 === imgHeight / 2) {\n      // It's 3x2\n      size = imgWidth / 3;\n      slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\n    } else if (imgWidth / 2 === imgHeight / 3) {\n      // It's 2x3\n      size = imgWidth / 2;\n      slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\n    } else {\n      throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\n    }\n\n    if (ctx) {\n      ctx.canvas.width = size;\n      ctx.canvas.height = size;\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size;\n        ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\n        gl.texImage2D(f.face, level, internalFormat, format, type, ctx.canvas);\n      }); // Free up the canvas memory\n\n      ctx.canvas.width = 1;\n      ctx.canvas.height = 1;\n    } else if (_globalObject.default.createImageBitmap) {\n      // NOTE: It seems like we should prefer ImageBitmap because unlike canvas it's\n      // note lossy? (alpha is not premultiplied? although I'm not sure what\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size; // We can't easily use a default texture color here as it would have to match\n        // the type across all faces where as with a 2D one there's only one face\n        // so we're replacing everything all at once. It also has to be the correct size.\n        // On the other hand we need all faces to be the same size so as one face loads\n        // the rest match else the texture will be unrenderable.\n\n        gl.texImage2D(f.face, level, internalFormat, size, size, 0, format, type, null);\n\n        _globalObject.default.createImageBitmap(element, xOffset, yOffset, size, size, {\n          premultiplyAlpha: 'none',\n          colorSpaceConversion: 'none'\n        }).then(function (imageBitmap) {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex);\n          gl.texImage2D(f.face, level, internalFormat, format, type, imageBitmap);\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n          }\n        });\n      });\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    var smallest = Math.min(element.width, element.height);\n    var largest = Math.max(element.width, element.height);\n    var depth = largest / smallest;\n\n    if (depth % 1 !== 0) {\n      throw \"can not compute 3D dimensions of element\";\n    }\n\n    var xMult = element.width === largest ? 1 : 0;\n    var yMult = element.height === largest ? 1 : 0;\n    saveSkipState(gl);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, element.width);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, 0);\n    gl.texImage3D(target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null);\n\n    for (var d = 0; d < depth; ++d) {\n      var srcX = d * smallest * xMult;\n      var srcY = d * smallest * yMult;\n      gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, srcX);\n      gl.pixelStorei(gl.UNPACK_SKIP_ROWS, srcY);\n      gl.texSubImage3D(target, level, 0, 0, d, smallest, smallest, 1, format, type, element);\n    }\n\n    restoreSkipState(gl);\n  } else {\n    gl.texImage2D(target, level, internalFormat, format, type, element);\n  }\n\n  restorePackState(gl, options);\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n}\n\nfunction noop() {}\n/**\n * Loads an image\n * @param {string} url url to image\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @return {HTMLImageElement} the image being loaded.\n */\n\n\nfunction loadImage(url, crossOrigin, callback) {\n  callback = callback || noop;\n  var img;\n\n  if (_globalObject.default.Image) {\n    img = new _globalObject.default.Image();\n    crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults.crossOrigin;\n\n    if (crossOrigin !== undefined) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    var clearEventHandlers = function clearEventHandlers() {\n      img.removeEventListener('error', onError); // eslint-disable-line\n\n      img.removeEventListener('load', onLoad); // eslint-disable-line\n\n      img = null;\n    };\n\n    var onError = function onError() {\n      var msg = \"couldn't load image: \" + url;\n      helper.error(msg);\n      callback(msg, img);\n      clearEventHandlers();\n    };\n\n    var onLoad = function onLoad() {\n      callback(null, img);\n      clearEventHandlers();\n    };\n\n    img.addEventListener('error', onError);\n    img.addEventListener('load', onLoad);\n    img.src = url;\n    return img;\n  } else if (_globalObject.default.ImageBitmap) {\n    var err;\n    var bm;\n\n    var cb = function cb() {\n      callback(err, bm);\n    };\n\n    var options = {};\n\n    if (crossOrigin) {\n      options.mode = 'cors'; // TODO: not sure how to translate image.crossOrigin\n    }\n\n    fetch(url, options).then(function (response) {\n      if (!response.ok) {\n        throw response;\n      }\n\n      return response.blob();\n    }).then(function (blob) {\n      return _globalObject.default.createImageBitmap(blob, {\n        premultiplyAlpha: 'none',\n        colorSpaceConversion: 'none'\n      });\n    }).then(function (bitmap) {\n      // not sure if this works. We don't want\n      // to catch the user's error. So, call\n      // the callback in a timeout so we're\n      // not in this scope inside the promise.\n      bm = bitmap;\n      setTimeout(cb);\n    }).catch(function (e) {\n      err = e;\n      setTimeout(cb);\n    });\n    img = null;\n  }\n\n  return img;\n}\n/**\n * check if object is a TexImageSource\n *\n * @param {Object} obj Object to test\n * @return {boolean} true if object is a TexImageSource\n */\n\n\nfunction isTexImageSource(obj) {\n  return _globalObject.default.ImageBitmap && obj instanceof _globalObject.default.ImageBitmap || _globalObject.default.ImageData && obj instanceof _globalObject.default.ImageData || _globalObject.default.HTMLElement && obj instanceof _globalObject.default.HTMLElement;\n}\n/**\n * if obj is an TexImageSource then just\n * uses it otherwise if obj is a string\n * then load it first.\n *\n * @param {string|TexImageSource} obj\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n */\n\n\nfunction loadAndUseImage(obj, crossOrigin, callback) {\n  if (isTexImageSource(obj)) {\n    setTimeout(function () {\n      callback(null, obj);\n    });\n    return obj;\n  }\n\n  return loadImage(obj, crossOrigin, callback);\n}\n/**\n * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\n * the default texture color is used which can be set by calling `setDefaultTextureColor`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureTo1PixelColor(gl, tex, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n\n  if (options.color === false) {\n    return;\n  } // Assume it's a URL\n  // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\n\n\n  var color = make1Pixel(options.color);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, 0, gl.RGBA, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  } else {\n    gl.texImage2D(target, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  }\n}\n/**\n * The src image(s) used to create a texture.\n *\n * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\n * you can pass in urls for images to load into the textures. If it's a single url\n * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\n * this will be a corresponding array of images for the cubemap.\n *\n * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback TextureReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} texture the texture.\n * @param {module:twgl.TextureSrc} souce image(s) used to as the src for the texture\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when all images have finished downloading and been uploaded into their respective textures\n * @callback TexturesReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\n * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback CubemapReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each face.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback ThreeDReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each slice.\n * @memberOf module:twgl\n */\n\n/**\n * Loads a texture from an image from a Url as specified in `options.src`\n * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\n * immediately useable. It will be updated with the contents of the image once the image has finished\n * downloading. Filtering options will be set as approriate for image unless `options.auto === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\n *    be non null if there was an error.\n * @return {HTMLImageElement} the image being downloaded.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadTextureFromUrl(gl, tex, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var img = loadAndUseImage(options.src, options.crossOrigin, function (err, img) {\n    if (err) {\n      callback(err, tex, img);\n    } else {\n      setTextureFromElement(gl, tex, img, options);\n      callback(null, tex, img);\n    }\n  });\n  return img;\n}\n/**\n * Loads a cubemap from 6 urls or TexImageSources as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadCubemapFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n\n  if (urls.length !== 6) {\n    throw \"there must be 6 urls for a cubemap\";\n  }\n\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n\n  if (target !== gl.TEXTURE_CUBE_MAP) {\n    throw \"target must be TEXTURE_CUBE_MAP\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = 6;\n  var errors = [];\n  var faces = getCubeFaceOrder(gl, options);\n  var imgs; // eslint-disable-line\n\n  function uploadImg(faceTarget) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        if (img.width !== img.height) {\n          errors.push(\"cubemap face img is not a square: \" + img.src);\n        } else {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex); // So assuming this is the first image we now have one face that's img sized\n          // and 5 faces that are 1x1 pixel so size the other faces\n\n          if (numToLoad === 5) {\n            // use the default order\n            getCubeFaceOrder(gl).forEach(function (otherTarget) {\n              // Should we re-use the same face or a color?\n              gl.texImage2D(otherTarget, level, internalFormat, format, type, img);\n            });\n          } else {\n            gl.texImage2D(faceTarget, level, internalFormat, format, type, img);\n          }\n\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            gl.generateMipmap(target);\n          }\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(faces[ndx]));\n  });\n}\n/**\n * Loads a 2d array or 3d texture from urls OR TexImageSources as specified in `options.src`.\n * Will set the texture to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n *\n * If the width and height is not specified the width and height of the first\n * image loaded will be used. Note that since images are loaded async\n * which image downloads first is unknown.\n *\n * If an image is not the same size as the width and height it will be scaled\n * to that width and height.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.ThreeDReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadSlicesFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D_ARRAY;\n\n  if (target !== gl.TEXTURE_3D && target !== gl.TEXTURE_2D_ARRAY) {\n    throw \"target must be TEXTURE_3D or TEXTURE_2D_ARRAY\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = urls.length;\n  var errors = [];\n  var imgs; // eslint-disable-line\n\n  var level = options.level || 0;\n  var width = options.width;\n  var height = options.height;\n  var depth = urls.length;\n  var firstImage = true;\n\n  function uploadImg(slice) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        savePackState(gl, options);\n        gl.bindTexture(target, tex);\n\n        if (firstImage) {\n          firstImage = false;\n          width = options.width || img.width;\n          height = options.height || img.height;\n          gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null); // put it in every slice otherwise some slices will be 0,0,0,0\n\n          for (var s = 0; s < depth; ++s) {\n            gl.texSubImage3D(target, level, 0, 0, s, width, height, 1, format, type, img);\n          }\n        } else {\n          var src = img;\n\n          if (img.width !== width || img.height !== height) {\n            // Size the image to fix\n            src = ctx.canvas;\n            ctx.canvas.width = width;\n            ctx.canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n          }\n\n          gl.texSubImage3D(target, level, 0, 0, slice, width, height, 1, format, type, src); // free the canvas memory\n\n          if (src === ctx.canvas) {\n            ctx.canvas.width = 0;\n            ctx.canvas.height = 0;\n          }\n        }\n\n        restorePackState(gl, options);\n\n        if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n          gl.generateMipmap(target);\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(ndx));\n  });\n}\n/**\n * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\n * guess the size. See {@link module:twgl.TextureOptions}.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {(number[]|ArrayBufferView)} src An array or typed arry with texture data.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFromArray(gl, tex, src, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var width = options.width;\n  var height = options.height;\n  var depth = options.depth;\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n\n  if (!isArrayBuffer(src)) {\n    var Type = typedArrays.getTypedArrayTypeForGLType(type);\n    src = new Type(src);\n  } else if (src instanceof Uint8ClampedArray) {\n    src = new Uint8Array(src.buffer);\n  }\n\n  var bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\n  var numElements = src.byteLength / bytesPerElement; // TODO: check UNPACK_ALIGNMENT?\n\n  if (numElements % 1) {\n    throw \"length wrong size for format: \" + utils.glEnumToString(gl, format);\n  }\n\n  var dimensions;\n\n  if (target === gl.TEXTURE_3D) {\n    if (!width && !height && !depth) {\n      var size = Math.cbrt(numElements);\n\n      if (size % 1 !== 0) {\n        throw \"can't guess cube size of array of numElements: \" + numElements;\n      }\n\n      width = size;\n      height = size;\n      depth = size;\n    } else if (width && (!height || !depth)) {\n      dimensions = guessDimensions(gl, target, height, depth, numElements / width);\n      height = dimensions.width;\n      depth = dimensions.height;\n    } else if (height && (!width || !depth)) {\n      dimensions = guessDimensions(gl, target, width, depth, numElements / height);\n      width = dimensions.width;\n      depth = dimensions.height;\n    } else {\n      dimensions = guessDimensions(gl, target, width, height, numElements / depth);\n      width = dimensions.width;\n      height = dimensions.height;\n    }\n  } else {\n    dimensions = guessDimensions(gl, target, width, height, numElements);\n    width = dimensions.width;\n    height = dimensions.height;\n  }\n\n  saveSkipState(gl);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, options.unpackAlignment || 1);\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    var elementsPerElement = bytesPerElement / src.BYTES_PER_ELEMENT;\n    var faceSize = numElements / 6 * elementsPerElement;\n    getCubeFacesWithNdx(gl, options).forEach(function (f) {\n      var offset = faceSize * f.ndx;\n      var data = src.subarray(offset, offset + faceSize);\n      gl.texImage2D(f.face, level, internalFormat, width, height, 0, format, type, data);\n    });\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, src);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, src);\n  }\n\n  restorePackState(gl, options);\n  restoreSkipState(gl);\n  return {\n    width: width,\n    height: height,\n    depth: depth,\n    type: type\n  };\n}\n/**\n * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\n * You must set `options.width` and `options.height`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setEmptyTexture(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null);\n    }\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, options.width, options.height, 0, format, type, null);\n  }\n\n  restorePackState(gl, options);\n}\n/**\n * Creates a texture based on the options passed in.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\n * @return {WebGLTexture} the created texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTexture(gl, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  var tex = gl.createTexture();\n  var target = options.target || gl.TEXTURE_2D;\n  var width = options.width || 1;\n  var height = options.height || 1;\n  var internalFormat = options.internalFormat || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var type = options.type || formatType.type;\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // this should have been the default for CUBEMAPS :(\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  var src = options.src;\n\n  if (src) {\n    if (typeof src === \"function\") {\n      src = src(gl, options);\n    }\n\n    if (typeof src === \"string\") {\n      loadTextureFromUrl(gl, tex, options, callback);\n    } else if (isArrayBuffer(src) || Array.isArray(src) && (typeof src[0] === 'number' || Array.isArray(src[0]) || isArrayBuffer(src[0]))) {\n      var dimensions = setTextureFromArray(gl, tex, src, options);\n      width = dimensions.width;\n      height = dimensions.height;\n      type = dimensions.type;\n    } else if (Array.isArray(src) && (typeof src[0] === 'string' || isTexImageSource(src[0]))) {\n      if (target === gl.TEXTURE_CUBE_MAP) {\n        loadCubemapFromUrls(gl, tex, options, callback);\n      } else {\n        loadSlicesFromUrls(gl, tex, options, callback);\n      }\n    } else if (isTexImageSource(src)) {\n      setTextureFromElement(gl, tex, src, options);\n      width = src.width;\n      height = src.height;\n    } else {\n      throw \"unsupported src type\";\n    }\n  } else {\n    setEmptyTexture(gl, tex, options);\n  }\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n  return tex;\n}\n/**\n * Resizes a texture based on the options passed in.\n *\n * Note: This is not a generic resize anything function.\n * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\n * It will use `options.src` if it exists to try to determine a `type`\n * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\n * for the texture. Texture parameters will be set accordingly\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the texture to resize\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {number} [width] the new width. If not passed in will use `options.width`\n * @param {number} [height] the new height. If not passed in will use `options.height`\n * @memberOf module:twgl/textures\n */\n\n\nfunction resizeTexture(gl, tex, options, width, height) {\n  width = width || options.width;\n  height = height || options.height;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type;\n  var src = options.src;\n\n  if (!src) {\n    type = options.type || formatType.type;\n  } else if (isArrayBuffer(src) || Array.isArray(src) && typeof src[0] === 'number') {\n    type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  } else {\n    type = options.type || formatType.type;\n  }\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, width, height, 0, format, type, null);\n    }\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\n  }\n}\n/**\n * Check if a src is an async request.\n * if src is a string we're going to download an image\n * if src is an array of strings we're going to download cubemap images\n * @param {*} src The src from a TextureOptions\n * @returns {bool} true if src is async.\n */\n\n\nfunction isAsyncSrc(src) {\n  return typeof src === 'string' || Array.isArray(src) && typeof src[0] === 'string';\n}\n/**\n * Creates a bunch of textures based on the passed in options.\n *\n * Example:\n *\n *     const textures = twgl.createTextures(gl, {\n *       // a power of 2 image\n *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\n *       // a non-power of 2 image\n *       clover: { src: \"images/clover.jpg\" },\n *       // From a canvas\n *       fromCanvas: { src: ctx.canvas },\n *       // A cubemap from 6 images\n *       yokohama: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: [\n *           'images/yokohama/posx.jpg',\n *           'images/yokohama/negx.jpg',\n *           'images/yokohama/posy.jpg',\n *           'images/yokohama/negy.jpg',\n *           'images/yokohama/posz.jpg',\n *           'images/yokohama/negz.jpg',\n *         ],\n *       },\n *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\n *       goldengate: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: 'images/goldengate.jpg',\n *       },\n *       // A 2x2 pixel texture from a JavaScript array\n *       checker: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         src: [\n *           255,255,255,255,\n *           192,192,192,255,\n *           192,192,192,255,\n *           255,255,255,255,\n *         ],\n *       },\n *       // a 1x2 pixel texture from a typed array.\n *       stripe: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         format: gl.LUMINANCE,\n *         src: new Uint8Array([\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *         ]),\n *         width: 1,\n *       },\n *     });\n *\n * Now\n *\n * *   `textures.hftIcon` will be a 2d texture\n * *   `textures.clover` will be a 2d texture\n * *   `textures.fromCanvas` will be a 2d texture\n * *   `textures.yohohama` will be a cubemap texture\n * *   `textures.goldengate` will be a cubemap texture\n * *   `textures.checker` will be a 2d texture\n * *   `textures.stripe` will be a 2d texture\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\n * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\n * @return {Object.<string,WebGLTexture>} the created textures by name\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTextures(gl, textureOptions, callback) {\n  callback = callback || noop;\n  var numDownloading = 0;\n  var errors = [];\n  var textures = {};\n  var images = {};\n\n  function callCallbackIfReady() {\n    if (numDownloading === 0) {\n      setTimeout(function () {\n        callback(errors.length ? errors : undefined, textures, images);\n      }, 0);\n    }\n  }\n\n  Object.keys(textureOptions).forEach(function (name) {\n    var options = textureOptions[name];\n    var onLoadFn;\n\n    if (isAsyncSrc(options.src)) {\n      onLoadFn = function onLoadFn(err, tex, img) {\n        images[name] = img;\n        --numDownloading;\n\n        if (err) {\n          errors.push(err);\n        }\n\n        callCallbackIfReady();\n      };\n\n      ++numDownloading;\n    }\n\n    textures[name] = createTexture(gl, options, onLoadFn);\n  }); // queue the callback if there are no images to download.\n  // We do this because if your code is structured to wait for\n  // images to download but then you comment out all the async\n  // images your code would break.\n\n  callCallbackIfReady();\n  return textures;\n} // Using quotes prevents Uglify from changing the names.\n// No speed diff AFAICT.\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  m4: true,\n  v3: true,\n  primitives: true\n};\nexports.primitives = exports.v3 = exports.m4 = void 0;\n\nvar m4 = _interopRequireWildcard(__webpack_require__(6));\n\nexports.m4 = m4;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nexports.v3 = v3;\n\nvar primitives = _interopRequireWildcard(__webpack_require__(10));\n\nexports.primitives = primitives;\n\nvar _twgl = __webpack_require__(11);\n\nObject.keys(_twgl).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _twgl[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.create3DFVertices = create3DFVertices;\nexports.createAugmentedTypedArray = createAugmentedTypedArray;\nexports.createCubeVertices = createCubeVertices;\nexports.createPlaneVertices = createPlaneVertices;\nexports.createSphereVertices = createSphereVertices;\nexports.createTruncatedConeVertices = createTruncatedConeVertices;\nexports.createXYQuadVertices = createXYQuadVertices;\nexports.createCresentVertices = createCresentVertices;\nexports.createCylinderVertices = createCylinderVertices;\nexports.createTorusVertices = createTorusVertices;\nexports.createDiscVertices = createDiscVertices;\nexports.deindexVertices = deindexVertices;\nexports.flattenNormals = flattenNormals;\nexports.makeRandomVertexColors = makeRandomVertexColors;\nexports.reorientDirections = reorientDirections;\nexports.reorientNormals = reorientNormals;\nexports.reorientPositions = reorientPositions;\nexports.reorientVertices = reorientVertices;\nexports.concatVertices = concatVertices;\nexports.duplicateVertices = duplicateVertices;\nexports.createDiscBuffers = exports.createDiscBufferInfo = exports.createTorusBuffers = exports.createTorusBufferInfo = exports.createCylinderBuffers = exports.createCylinderBufferInfo = exports.createCresentBuffers = exports.createCresentBufferInfo = exports.createXYQuadBuffers = exports.createXYQuadBufferInfo = exports.createTruncatedConeBuffers = exports.createTruncatedConeBufferInfo = exports.createSphereBuffers = exports.createSphereBufferInfo = exports.createPlaneBuffers = exports.createPlaneBufferInfo = exports.createCubeBuffers = exports.createCubeBufferInfo = exports.create3DFBuffers = exports.create3DFBufferInfo = void 0;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(7));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar m4 = _interopRequireWildcard(__webpack_require__(6));\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Various functions to make simple primitives\n *\n * note: Most primitive functions come in 3 styles\n *\n * *  `createSomeShapeBufferInfo`\n *\n *    These functions are almost always the functions you want to call. They\n *    create vertices then make WebGLBuffers and create {@link module:twgl.AttribInfo}s\n *    returing a {@link module:twgl.BufferInfo} you can pass to {@link module:twgl.setBuffersAndAttributes}\n *    and {@link module:twgl.drawBufferInfo} etc...\n *\n * *  `createSomeShapeBuffers`\n *\n *    These create WebGLBuffers and put your data in them but nothing else.\n *    It's a shortcut to doing it yourself if you don't want to use\n *    the higher level functions.\n *\n * *  `createSomeShapeVertices`\n *\n *    These just create vertices, no buffers. This allows you to manipulate the vertices\n *    or add more data before generating a {@link module:twgl.BufferInfo}. Once you're finished\n *    manipulating the vertices call {@link module:twgl.createBufferInfoFromArrays}.\n *\n *    example:\n *\n *        const arrays = twgl.primitives.createPlaneArrays(1);\n *        twgl.primitives.reorientVertices(arrays, m4.rotationX(Math.PI * 0.5));\n *        const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n * @module twgl/primitives\n */\nvar getArray = attributes.getArray_; // eslint-disable-line\n\nvar getNumComponents = attributes.getNumComponents_; // eslint-disable-line\n\n/**\n * Add `push` to a typed array. It just keeps a 'cursor'\n * and allows use to `push` values into the array so we\n * don't have to manually compute offsets\n * @param {TypedArray} typedArray TypedArray to augment\n * @param {number} numComponents number of components.\n */\n\nfunction augmentTypedArray(typedArray, numComponents) {\n  var cursor = 0;\n\n  typedArray.push = function () {\n    for (var ii = 0; ii < arguments.length; ++ii) {\n      var value = arguments[ii];\n\n      if (value instanceof Array || typedArrays.isArrayBuffer(value)) {\n        for (var jj = 0; jj < value.length; ++jj) {\n          typedArray[cursor++] = value[jj];\n        }\n      } else {\n        typedArray[cursor++] = value;\n      }\n    }\n  };\n\n  typedArray.reset = function (opt_index) {\n    cursor = opt_index || 0;\n  };\n\n  typedArray.numComponents = numComponents;\n  Object.defineProperty(typedArray, 'numElements', {\n    get: function get() {\n      return this.length / this.numComponents | 0;\n    }\n  });\n  return typedArray;\n}\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param {number} numComponents number of components\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n * @return {ArrayBufferView} A typed array.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createAugmentedTypedArray(numComponents, numElements, opt_type) {\n  var Type = opt_type || Float32Array;\n  return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n}\n\nfunction allButIndices(name) {\n  return name !== \"indices\";\n}\n/**\n * Given indexed vertices creates a new set of vertices unindexed by expanding the indexed vertices.\n * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\n * @return {Object.<string, TypedArray>} The deindexed vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction deindexVertices(vertices) {\n  var indices = vertices.indices;\n  var newVertices = {};\n  var numElements = indices.length;\n\n  function expandToUnindexed(channel) {\n    var srcBuffer = vertices[channel];\n    var numComponents = srcBuffer.numComponents;\n    var dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\n\n    for (var ii = 0; ii < numElements; ++ii) {\n      var ndx = indices[ii];\n      var offset = ndx * numComponents;\n\n      for (var jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n\n    newVertices[channel] = dstBuffer;\n  }\n\n  Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\n  return newVertices;\n}\n/**\n * flattens the normals of deindexed vertices in place.\n * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\n * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\n * @memberOf module:twgl/primitives\n */\n\n\nfunction flattenNormals(vertices) {\n  if (vertices.indices) {\n    throw \"can't flatten normals of indexed vertices. deindex them first\";\n  }\n\n  var normals = vertices.normal;\n  var numNormals = normals.length;\n\n  for (var ii = 0; ii < numNormals; ii += 9) {\n    // pull out the 3 normals for this triangle\n    var nax = normals[ii + 0];\n    var nay = normals[ii + 1];\n    var naz = normals[ii + 2];\n    var nbx = normals[ii + 3];\n    var nby = normals[ii + 4];\n    var nbz = normals[ii + 5];\n    var ncx = normals[ii + 6];\n    var ncy = normals[ii + 7];\n    var ncz = normals[ii + 8]; // add them\n\n    var nx = nax + nbx + ncx;\n    var ny = nay + nby + ncy;\n    var nz = naz + nbz + ncz; // normalize them\n\n    var length = Math.sqrt(nx * nx + ny * ny + nz * nz);\n    nx /= length;\n    ny /= length;\n    nz /= length; // copy them back in\n\n    normals[ii + 0] = nx;\n    normals[ii + 1] = ny;\n    normals[ii + 2] = nz;\n    normals[ii + 3] = nx;\n    normals[ii + 4] = ny;\n    normals[ii + 5] = nz;\n    normals[ii + 6] = nx;\n    normals[ii + 7] = ny;\n    normals[ii + 8] = nz;\n  }\n\n  return vertices;\n}\n\nfunction applyFuncToV3Array(array, matrix, fn) {\n  var len = array.length;\n  var tmp = new Float32Array(3);\n\n  for (var ii = 0; ii < len; ii += 3) {\n    fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\n    array[ii] = tmp[0];\n    array[ii + 1] = tmp[1];\n    array[ii + 2] = tmp[2];\n  }\n}\n\nfunction transformNormal(mi, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n/**\n * Reorients directions by the given matrix..\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientDirections(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformDirection);\n  return array;\n}\n/**\n * Reorients normals by the inverse-transpose of the given\n * matrix..\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientNormals(array, matrix) {\n  applyFuncToV3Array(array, m4.inverse(matrix), transformNormal);\n  return array;\n}\n/**\n * Reorients positions by the given matrix. In other words, it\n * multiplies each vertex by the given matrix.\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientPositions(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformPoint);\n  return array;\n}\n/**\n * Reorients arrays by the given matrix. Assumes arrays have\n * names that contains 'pos' could be reoriented as positions,\n * 'binorm' or 'tan' as directions, and 'norm' as normals.\n *\n * @param {Object.<string, (number[]|TypedArray)>} arrays The vertices to reorient\n * @param {Matrix} matrix matrix to reorient by.\n * @return {Object.<string, (number[]|TypedArray)>} same arrays that were passed in.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientVertices(arrays, matrix) {\n  Object.keys(arrays).forEach(function (name) {\n    var array = arrays[name];\n\n    if (name.indexOf(\"pos\") >= 0) {\n      reorientPositions(array, matrix);\n    } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\n      reorientDirections(array, matrix);\n    } else if (name.indexOf(\"norm\") >= 0) {\n      reorientNormals(array, matrix);\n    }\n  });\n  return arrays;\n}\n/**\n * Creates XY quad BufferInfo\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\n * @memberOf module:twgl/primitives\n * @function createXYQuadBufferInfo\n */\n\n/**\n * Creates XY quad Buffers\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {module:twgl.BufferInfo} the created XY Quad buffers\n * @memberOf module:twgl/primitives\n * @function createXYQuadBuffers\n */\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, TypedArray> the created XY Quad vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createXYQuadVertices(size, xOffset, yOffset) {\n  size = size || 2;\n  xOffset = xOffset || 0;\n  yOffset = yOffset || 0;\n  size *= 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [xOffset + -1 * size, yOffset + -1 * size, xOffset + 1 * size, yOffset + -1 * size, xOffset + -1 * size, yOffset + 1 * size, xOffset + 1 * size, yOffset + 1 * size]\n    },\n    normal: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n    texcoord: [0, 0, 1, 0, 0, 1, 1, 1],\n    indices: [0, 1, 2, 2, 1, 3]\n  };\n}\n/**\n * Creates XZ plane BufferInfo.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {@module:twgl.BufferInfo} The created plane BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createPlaneBufferInfo\n */\n\n/**\n * Creates XZ plane buffers.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, WebGLBuffer>} The created plane buffers.\n * @memberOf module:twgl/primitives\n * @function createPlaneBuffers\n */\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, TypedArray>} The created plane vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createPlaneVertices(width, depth, subdivisionsWidth, subdivisionsDepth, matrix) {\n  width = width || 1;\n  depth = depth || 1;\n  subdivisionsWidth = subdivisionsWidth || 1;\n  subdivisionsDepth = subdivisionsDepth || 1;\n  matrix = matrix || m4.identity();\n  var numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  for (var z = 0; z <= subdivisionsDepth; z++) {\n    for (var x = 0; x <= subdivisionsWidth; x++) {\n      var u = x / subdivisionsWidth;\n      var v = z / subdivisionsDepth;\n      positions.push(width * u - width * 0.5, 0, depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  var numVertsAcross = subdivisionsWidth + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (var _z = 0; _z < subdivisionsDepth; _z++) {\n    // eslint-disable-line\n    for (var _x = 0; _x < subdivisionsWidth; _x++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_z + 0) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x, (_z + 0) * numVertsAcross + _x + 1); // Make triangle 2 of quad.\n\n      indices.push((_z + 1) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x + 1, (_z + 0) * numVertsAcross + _x + 1);\n    }\n  }\n\n  var arrays = reorientVertices({\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  }, matrix);\n  return arrays;\n}\n/**\n * Creates sphere BufferInfo.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createSphereBufferInfo\n */\n\n/**\n * Creates sphere buffers.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\n * @memberOf module:twgl/primitives\n * @function createSphereBuffers\n */\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, TypedArray>} The created sphere vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createSphereVertices(radius, subdivisionsAxis, subdivisionsHeight, opt_startLatitudeInRadians, opt_endLatitudeInRadians, opt_startLongitudeInRadians, opt_endLongitudeInRadians) {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || Math.PI * 2;\n  var latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n  var longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians; // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n\n  var numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices); // Generate the individual vertices in our vertex buffer.\n\n  for (var y = 0; y <= subdivisionsHeight; y++) {\n    for (var x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      var u = x / subdivisionsAxis;\n      var v = y / subdivisionsHeight;\n      var theta = longRange * u;\n      var phi = latRange * v;\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      var ux = cosTheta * sinPhi;\n      var uy = cosPhi;\n      var uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  var numVertsAround = subdivisionsAxis + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n\n  for (var _x2 = 0; _x2 < subdivisionsAxis; _x2++) {\n    // eslint-disable-line\n    for (var _y = 0; _y < subdivisionsHeight; _y++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_y + 0) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2); // Make triangle 2 of quad.\n\n      indices.push((_y + 1) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2 + 1);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Array of the indices of corners of each face of a cube.\n * @type {Array.<number[]>}\n */\n\n\nvar CUBE_FACE_INDICES = [[3, 7, 5, 1], // right\n[6, 2, 0, 4], // left\n[6, 7, 3, 2], // ??\n[0, 1, 5, 4], // ??\n[7, 6, 4, 5], // front\n[2, 3, 1, 0]];\n/**\n * Creates a BufferInfo for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCubeBufferInfo\n */\n\n/**\n * Creates the buffers and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCubeBuffers\n */\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\nfunction createCubeVertices(size) {\n  size = size || 1;\n  var k = size / 2;\n  var cornerVertices = [[-k, -k, -k], [+k, -k, -k], [-k, +k, -k], [+k, +k, -k], [-k, -k, +k], [+k, -k, +k], [-k, +k, +k], [+k, +k, +k]];\n  var faceNormals = [[+1, +0, +0], [-1, +0, +0], [+0, +1, +0], [+0, -1, +0], [+0, +0, +1], [+0, +0, -1]];\n  var uvCoords = [[1, 0], [0, 0], [0, 1], [1, 1]];\n  var numVertices = 6 * 4;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (var f = 0; f < 6; ++f) {\n    var faceIndices = CUBE_FACE_INDICES[f];\n\n    for (var v = 0; v < 4; ++v) {\n      var position = cornerVertices[faceIndices[v]];\n      var normal = faceNormals[f];\n      var uv = uvCoords[v]; // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n\n      positions.push(position);\n      normals.push(normal);\n      texcoords.push(uv);\n    } // Two triangles make a square face.\n\n\n    var offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a BufferInfo for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created cone BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBufferInfo\n */\n\n/**\n * Creates buffers for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created cone buffers.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBuffers\n */\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created cone vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTruncatedConeVertices(bottomRadius, topRadius, height, radialSubdivisions, verticalSubdivisions, opt_topCap, opt_bottomCap) {\n  if (radialSubdivisions < 3) {\n    throw Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  var topCap = opt_topCap === undefined ? true : opt_topCap;\n  var bottomCap = opt_bottomCap === undefined ? true : opt_bottomCap;\n  var extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n  var numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra) * 2, Uint16Array);\n  var vertsAroundEdge = radialSubdivisions + 1; // The slant of the cone is constant across its surface\n\n  var slant = Math.atan2(bottomRadius - topRadius, height);\n  var cosSlant = Math.cos(slant);\n  var sinSlant = Math.sin(slant);\n  var start = topCap ? -2 : 0;\n  var end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (var yy = start; yy <= end; ++yy) {\n    var v = yy / verticalSubdivisions;\n    var y = height * v;\n    var ringRadius = void 0;\n\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius + (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n\n    y -= height / 2;\n\n    for (var ii = 0; ii < vertsAroundEdge; ++ii) {\n      var sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      var cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      normals.push(yy < 0 || yy > verticalSubdivisions ? 0 : sin * cosSlant, yy < 0 ? -1 : yy > verticalSubdivisions ? 1 : sinSlant, yy < 0 || yy > verticalSubdivisions ? 0 : cos * cosSlant);\n      texcoords.push(ii / radialSubdivisions, 1 - v);\n    }\n  }\n\n  for (var _yy = 0; _yy < verticalSubdivisions + extra; ++_yy) {\n    // eslint-disable-line\n    for (var _ii = 0; _ii < radialSubdivisions; ++_ii) {\n      // eslint-disable-line\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 0) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii);\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 0 + _ii);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Expands RLE data\n * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param {number[]} [padding] value to add each entry with.\n * @return {number[]} the expanded rleData\n */\n\n\nfunction expandRLEData(rleData, padding) {\n  padding = padding || [];\n  var data = [];\n\n  for (var ii = 0; ii < rleData.length; ii += 4) {\n    var runLength = rleData[ii];\n    var element = rleData.slice(ii + 1, ii + 4);\n    element.push.apply(element, padding);\n\n    for (var jj = 0; jj < runLength; ++jj) {\n      data.push.apply(data, element);\n    }\n  }\n\n  return data;\n}\n/**\n * Creates 3D 'F' BufferInfo.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function create3DFBufferInfo\n */\n\n/**\n * Creates 3D 'F' buffers.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function create3DFBuffers\n */\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction create3DFVertices() {\n  var positions = [// left column front\n  0, 0, 0, 0, 150, 0, 30, 0, 0, 0, 150, 0, 30, 150, 0, 30, 0, 0, // top rung front\n  30, 0, 0, 30, 30, 0, 100, 0, 0, 30, 30, 0, 100, 30, 0, 100, 0, 0, // middle rung front\n  30, 60, 0, 30, 90, 0, 67, 60, 0, 30, 90, 0, 67, 90, 0, 67, 60, 0, // left column back\n  0, 0, 30, 30, 0, 30, 0, 150, 30, 0, 150, 30, 30, 0, 30, 30, 150, 30, // top rung back\n  30, 0, 30, 100, 0, 30, 30, 30, 30, 30, 30, 30, 100, 0, 30, 100, 30, 30, // middle rung back\n  30, 60, 30, 67, 60, 30, 30, 90, 30, 30, 90, 30, 67, 60, 30, 67, 90, 30, // top\n  0, 0, 0, 100, 0, 0, 100, 0, 30, 0, 0, 0, 100, 0, 30, 0, 0, 30, // top rung front\n  100, 0, 0, 100, 30, 0, 100, 30, 30, 100, 0, 0, 100, 30, 30, 100, 0, 30, // under top rung\n  30, 30, 0, 30, 30, 30, 100, 30, 30, 30, 30, 0, 100, 30, 30, 100, 30, 0, // between top rung and middle\n  30, 30, 0, 30, 60, 30, 30, 30, 30, 30, 30, 0, 30, 60, 0, 30, 60, 30, // top of middle rung\n  30, 60, 0, 67, 60, 30, 30, 60, 30, 30, 60, 0, 67, 60, 0, 67, 60, 30, // front of middle rung\n  67, 60, 0, 67, 90, 30, 67, 60, 30, 67, 60, 0, 67, 90, 0, 67, 90, 30, // bottom of middle rung.\n  30, 90, 0, 30, 90, 30, 67, 90, 30, 30, 90, 0, 67, 90, 30, 67, 90, 0, // front of bottom\n  30, 90, 0, 30, 150, 30, 30, 90, 30, 30, 90, 0, 30, 150, 0, 30, 150, 30, // bottom\n  0, 150, 0, 0, 150, 30, 30, 150, 30, 0, 150, 0, 30, 150, 30, 30, 150, 0, // left side\n  0, 0, 0, 0, 0, 30, 0, 150, 30, 0, 0, 0, 0, 150, 30, 0, 150, 0];\n  var texcoords = [// left column front\n  0.22, 0.19, 0.22, 0.79, 0.34, 0.19, 0.22, 0.79, 0.34, 0.79, 0.34, 0.19, // top rung front\n  0.34, 0.19, 0.34, 0.31, 0.62, 0.19, 0.34, 0.31, 0.62, 0.31, 0.62, 0.19, // middle rung front\n  0.34, 0.43, 0.34, 0.55, 0.49, 0.43, 0.34, 0.55, 0.49, 0.55, 0.49, 0.43, // left column back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // middle rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // top rung front\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // under top rung\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // between top rung and middle\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // top of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // front of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom of middle rung.\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // front of bottom\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // left side\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0];\n  var normals = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 0, 0, 1, // left column back\n  // top rung back\n  // middle rung back\n  18, 0, 0, -1, // top\n  6, 0, 1, 0, // top rung front\n  6, 1, 0, 0, // under top rung\n  6, 0, -1, 0, // between top rung and middle\n  6, 1, 0, 0, // top of middle rung\n  6, 0, 1, 0, // front of middle rung\n  6, 1, 0, 0, // bottom of middle rung.\n  6, 0, -1, 0, // front of bottom\n  6, 1, 0, 0, // bottom\n  6, 0, -1, 0, // left side\n  6, -1, 0, 0]);\n  var colors = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 200, 70, 120, // left column back\n  // top rung back\n  // middle rung back\n  18, 80, 70, 200, // top\n  6, 70, 200, 210, // top rung front\n  6, 200, 200, 70, // under top rung\n  6, 210, 100, 70, // between top rung and middle\n  6, 210, 160, 70, // top of middle rung\n  6, 70, 180, 210, // front of middle rung\n  6, 100, 70, 210, // bottom of middle rung.\n  6, 76, 210, 100, // front of bottom\n  6, 140, 210, 80, // bottom\n  6, 90, 130, 110, // left side\n  6, 160, 160, 220], [255]);\n  var numVerts = positions.length / 3;\n  var arrays = {\n    position: createAugmentedTypedArray(3, numVerts),\n    texcoord: createAugmentedTypedArray(2, numVerts),\n    normal: createAugmentedTypedArray(3, numVerts),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array)\n  };\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (var ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return arrays;\n}\n/**\n * Creates cresent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCresentBufferInfo\n */\n\n/**\n * Creates cresent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates cresent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCresentVertices(verticalRadius, outerRadius, innerRadius, thickness, subdivisionsDown, startOffset, endOffset) {\n  if (subdivisionsDown <= 0) {\n    throw Error('subdivisionDown must be > 0');\n  }\n\n  startOffset = startOffset || 0;\n  endOffset = endOffset || 1;\n  var subdivisionsThick = 2;\n  var offsetRange = endOffset - startOffset;\n  var numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  function lerp(a, b, s) {\n    return a + (b - a) * s;\n  }\n\n  function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\n    for (var z = 0; z <= subdivisionsDown; z++) {\n      var uBack = x / (subdivisionsThick - 1);\n      var v = z / subdivisionsDown;\n      var xBack = (uBack - 0.5) * 2;\n      var angle = (startOffset + v * offsetRange) * Math.PI;\n      var s = Math.sin(angle);\n      var c = Math.cos(angle);\n      var radius = lerp(verticalRadius, arcRadius, s);\n      var px = xBack * thickness;\n      var py = c * verticalRadius;\n      var pz = s * radius;\n      positions.push(px, py, pz);\n      var n = v3.add(v3.multiply([0, s, c], normalMult), normalAdd);\n      normals.push(n);\n      texcoords.push(uBack * uMult + uAdd, v);\n    }\n  } // Generate the individual vertices in our vertex buffer.\n\n\n  for (var x = 0; x < subdivisionsThick; x++) {\n    var uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\n    createArc(outerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\n    createArc(innerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\n  } // Do outer surface.\n\n\n  var indices = createAugmentedTypedArray(3, subdivisionsDown * 2 * (2 + subdivisionsThick), Uint16Array);\n\n  function createSurface(leftArcOffset, rightArcOffset) {\n    for (var z = 0; z < subdivisionsDown; ++z) {\n      // Make triangle 1 of quad.\n      indices.push(leftArcOffset + z + 0, leftArcOffset + z + 1, rightArcOffset + z + 0); // Make triangle 2 of quad.\n\n      indices.push(leftArcOffset + z + 1, rightArcOffset + z + 1, rightArcOffset + z + 0);\n    }\n  }\n\n  var numVerticesDown = subdivisionsDown + 1; // front\n\n  createSurface(numVerticesDown * 0, numVerticesDown * 4); // right\n\n  createSurface(numVerticesDown * 5, numVerticesDown * 7); // back\n\n  createSurface(numVerticesDown * 6, numVerticesDown * 2); // left\n\n  createSurface(numVerticesDown * 3, numVerticesDown * 1);\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates cylinder BufferInfo. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCylinderBufferInfo\n */\n\n/**\n * Creates cylinder buffers. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCylinderBuffers\n */\n\n/**\n * Creates cylinder vertices. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCylinderVertices(radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap) {\n  return createTruncatedConeVertices(radius, radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap);\n}\n/**\n * Creates BufferInfo for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTorusBufferInfo\n */\n\n/**\n * Creates buffers for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createTorusBuffers\n */\n\n/**\n * Creates vertices for a torus\n *\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTorusVertices(radius, thickness, radialSubdivisions, bodySubdivisions, startAngle, endAngle) {\n  if (radialSubdivisions < 3) {\n    throw Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw Error('verticalSubdivisions must be 3 or greater');\n  }\n\n  startAngle = startAngle || 0;\n  endAngle = endAngle || Math.PI * 2;\n  var range = endAngle - startAngle;\n  var radialParts = radialSubdivisions + 1;\n  var bodyParts = bodySubdivisions + 1;\n  var numVertices = radialParts * bodyParts;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * bodySubdivisions * 2, Uint16Array);\n\n  for (var slice = 0; slice < bodyParts; ++slice) {\n    var v = slice / bodySubdivisions;\n    var sliceAngle = v * Math.PI * 2;\n    var sliceSin = Math.sin(sliceAngle);\n    var ringRadius = radius + sliceSin * thickness;\n    var ny = Math.cos(sliceAngle);\n    var y = ny * thickness;\n\n    for (var ring = 0; ring < radialParts; ++ring) {\n      var u = ring / radialSubdivisions;\n      var ringAngle = startAngle + u * range;\n      var xSin = Math.sin(ringAngle);\n      var zCos = Math.cos(ringAngle);\n      var x = xSin * ringRadius;\n      var z = zCos * ringRadius;\n      var nx = xSin * sliceSin;\n      var nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (var _slice = 0; _slice < bodySubdivisions; ++_slice) {\n    // eslint-disable-line\n    for (var _ring = 0; _ring < radialSubdivisions; ++_ring) {\n      // eslint-disable-line\n      var nextRingIndex = 1 + _ring;\n      var nextSliceIndex = 1 + _slice;\n      indices.push(radialParts * _slice + _ring, radialParts * nextSliceIndex + _ring, radialParts * _slice + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + _ring, radialParts * nextSliceIndex + nextRingIndex, radialParts * _slice + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createDiscBufferInfo\n */\n\n/**\n * Creates disc buffers. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createDiscBuffers\n */\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createDiscVertices(radius, divisions, stacks, innerRadius, stackPower) {\n  if (divisions < 3) {\n    throw Error('divisions must be at least 3');\n  }\n\n  stacks = stacks ? stacks : 1;\n  stackPower = stackPower ? stackPower : 1;\n  innerRadius = innerRadius ? innerRadius : 0; // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n\n  var numVertices = (divisions + 1) * (stacks + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n  var firstIndex = 0;\n  var radiusSpan = radius - innerRadius;\n  var pointsPerStack = divisions + 1; // Build the disk one stack at a time.\n\n  for (var stack = 0; stack <= stacks; ++stack) {\n    var stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (var i = 0; i <= divisions; ++i) {\n      var theta = 2.0 * Math.PI * i / divisions;\n      var x = stackRadius * Math.cos(theta);\n      var z = stackRadius * Math.sin(theta);\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - i / divisions, stack / stacks);\n\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        var a = firstIndex + (i + 1);\n        var b = firstIndex + i;\n        var c = firstIndex + i - pointsPerStack;\n        var d = firstIndex + (i + 1) - pointsPerStack; // Make a quad of the vertices a, b, c, d.\n\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * creates a random integer between 0 and range - 1 inclusive.\n * @param {number} range\n * @return {number} random value between 0 and range - 1 inclusive.\n */\n\n\nfunction randInt(range) {\n  return Math.random() * range | 0;\n}\n/**\n * Used to supply random colors\n * @callback RandomColorFunc\n * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\n * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\n * @return {number} a number from 0 to 255\n * @memberOf module:twgl/primitives\n */\n\n/**\n * @typedef {Object} RandomVerticesOptions\n * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\n * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\n * @memberOf module:twgl/primitives\n */\n\n/**\n * Creates an augmentedTypedArray of random vertex colors.\n * If the vertices are indexed (have an indices array) then will\n * just make random colors. Otherwise assumes they are triangles\n * and makes one random color for every 3 vertices.\n * @param {Object.<string, augmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\n * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\n * @return {Object.<string, augmentedTypedArray>} same vertices as passed in with `color` added.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction makeRandomVertexColors(vertices, options) {\n  options = options || {};\n  var numElements = vertices.position.numElements;\n  var vcolors = createAugmentedTypedArray(4, numElements, Uint8Array);\n\n  var rand = options.rand || function (ndx, channel) {\n    return channel < 3 ? randInt(256) : 255;\n  };\n\n  vertices.color = vcolors;\n\n  if (vertices.indices) {\n    // just make random colors if index\n    for (var ii = 0; ii < numElements; ++ii) {\n      vcolors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\n    }\n  } else {\n    // make random colors per triangle\n    var numVertsPerColor = options.vertsPerColor || 3;\n    var numSets = numElements / numVertsPerColor;\n\n    for (var _ii2 = 0; _ii2 < numSets; ++_ii2) {\n      // eslint-disable-line\n      var color = [rand(_ii2, 0), rand(_ii2, 1), rand(_ii2, 2), rand(_ii2, 3)];\n\n      for (var jj = 0; jj < numVertsPerColor; ++jj) {\n        vcolors.push(color);\n      }\n    }\n  }\n\n  return vertices;\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a buffers for them\n */\n\n\nfunction createBufferFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBuffersFromArrays(gl, arrays);\n  };\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a bufferInfo object for them\n */\n\n\nfunction createBufferInfoFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(null, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBufferInfoFromArrays(gl, arrays);\n  };\n}\n\nvar arraySpecPropertyNames = [\"numComponents\", \"size\", \"type\", \"normalize\", \"stride\", \"offset\", \"attrib\", \"name\", \"attribName\"];\n/**\n * Copy elements from one array to another\n *\n * @param {Array|TypedArray} src source array\n * @param {Array|TypedArray} dst dest array\n * @param {number} dstNdx index in dest to copy src\n * @param {number} [offset] offset to add to copied values\n */\n\nfunction copyElements(src, dst, dstNdx, offset) {\n  offset = offset || 0;\n  var length = src.length;\n\n  for (var ii = 0; ii < length; ++ii) {\n    dst[dstNdx + ii] = src[ii] + offset;\n  }\n}\n/**\n * Creates an array of the same time\n *\n * @param {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} srcArray array who's type to copy\n * @param {number} length size of new array\n * @return {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} array with same type as srcArray\n */\n\n\nfunction createArrayOfSameType(srcArray, length) {\n  var arraySrc = getArray(srcArray);\n  var newArray = new arraySrc.constructor(length);\n  var newArraySpec = newArray; // If it appears to have been augmented make new one augemented\n\n  if (arraySrc.numComponents && arraySrc.numElements) {\n    augmentTypedArray(newArray, arraySrc.numComponents);\n  } // If it was a fullspec make new one a fullspec\n\n\n  if (srcArray.data) {\n    newArraySpec = {\n      data: newArray\n    };\n    helper.copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\n  }\n\n  return newArraySpec;\n}\n/**\n * Concatinates sets of vertices\n *\n * Assumes the vertices match in composition. For example\n * if one set of vertices has positions, normals, and indices\n * all sets of vertices must have positions, normals, and indices\n * and of the same type.\n *\n * Example:\n *\n *      const cubeVertices = twgl.primtiives.createCubeVertices(2);\n *      const sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\n *      // move the sphere 2 units up\n *      twgl.primitives.reorientVertices(\n *          sphereVertices, twgl.m4.translation([0, 2, 0]));\n *      // merge the sphere with the cube\n *      const cubeSphereVertices = twgl.primitives.concatVertices(\n *          [cubeVertices, sphereVertices]);\n *      // turn them into WebGL buffers and attrib data\n *      const bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\n *\n * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\n * @return {module:twgl.Arrays} The concatinated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction concatVertices(arrayOfArrays) {\n  var names = {};\n  var baseName; // get names of all arrays.\n  // and numElements for each set of vertices\n\n  var _loop = function _loop(ii) {\n    var arrays = arrayOfArrays[ii];\n    Object.keys(arrays).forEach(function (name) {\n      // eslint-disable-line\n      if (!names[name]) {\n        names[name] = [];\n      }\n\n      if (!baseName && name !== 'indices') {\n        baseName = name;\n      }\n\n      var arrayInfo = arrays[name];\n      var numComponents = getNumComponents(arrayInfo, name);\n      var array = getArray(arrayInfo);\n      var numElements = array.length / numComponents;\n      names[name].push(numElements);\n    });\n  };\n\n  for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n    _loop(ii);\n  } // compute length of combined array\n  // and return one for reference\n\n\n  function getLengthOfCombinedArrays(name) {\n    var length = 0;\n    var arraySpec;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n      length += array.length;\n\n      if (!arraySpec || arrayInfo.data) {\n        arraySpec = arrayInfo;\n      }\n    }\n\n    return {\n      length: length,\n      spec: arraySpec\n    };\n  }\n\n  function copyArraysToNewArray(name, base, newArray) {\n    var baseIndex = 0;\n    var offset = 0;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n\n      if (name === 'indices') {\n        copyElements(array, newArray, offset, baseIndex);\n        baseIndex += base[ii];\n      } else {\n        copyElements(array, newArray, offset);\n      }\n\n      offset += array.length;\n    }\n  }\n\n  var base = names[baseName];\n  var newArrays = {};\n  Object.keys(names).forEach(function (name) {\n    var info = getLengthOfCombinedArrays(name);\n    var newArraySpec = createArrayOfSameType(info.spec, info.length);\n    copyArraysToNewArray(name, base, getArray(newArraySpec));\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n/**\n * Creates a duplicate set of vertices\n *\n * This is useful for calling reorientVertices when you\n * also want to keep the original available\n *\n * @param {module:twgl.Arrays} arrays of vertices\n * @return {module:twgl.Arrays} The dupilicated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction duplicateVertices(arrays) {\n  var newArrays = {};\n  Object.keys(arrays).forEach(function (name) {\n    var arraySpec = arrays[name];\n    var srcArray = getArray(arraySpec);\n    var newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\n    copyElements(srcArray, getArray(newArraySpec), 0);\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\nvar create3DFBufferInfo = createBufferInfoFunc(create3DFVertices);\nexports.create3DFBufferInfo = create3DFBufferInfo;\nvar create3DFBuffers = createBufferFunc(create3DFVertices);\nexports.create3DFBuffers = create3DFBuffers;\nvar createCubeBufferInfo = createBufferInfoFunc(createCubeVertices);\nexports.createCubeBufferInfo = createCubeBufferInfo;\nvar createCubeBuffers = createBufferFunc(createCubeVertices);\nexports.createCubeBuffers = createCubeBuffers;\nvar createPlaneBufferInfo = createBufferInfoFunc(createPlaneVertices);\nexports.createPlaneBufferInfo = createPlaneBufferInfo;\nvar createPlaneBuffers = createBufferFunc(createPlaneVertices);\nexports.createPlaneBuffers = createPlaneBuffers;\nvar createSphereBufferInfo = createBufferInfoFunc(createSphereVertices);\nexports.createSphereBufferInfo = createSphereBufferInfo;\nvar createSphereBuffers = createBufferFunc(createSphereVertices);\nexports.createSphereBuffers = createSphereBuffers;\nvar createTruncatedConeBufferInfo = createBufferInfoFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBufferInfo = createTruncatedConeBufferInfo;\nvar createTruncatedConeBuffers = createBufferFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBuffers = createTruncatedConeBuffers;\nvar createXYQuadBufferInfo = createBufferInfoFunc(createXYQuadVertices);\nexports.createXYQuadBufferInfo = createXYQuadBufferInfo;\nvar createXYQuadBuffers = createBufferFunc(createXYQuadVertices);\nexports.createXYQuadBuffers = createXYQuadBuffers;\nvar createCresentBufferInfo = createBufferInfoFunc(createCresentVertices);\nexports.createCresentBufferInfo = createCresentBufferInfo;\nvar createCresentBuffers = createBufferFunc(createCresentVertices);\nexports.createCresentBuffers = createCresentBuffers;\nvar createCylinderBufferInfo = createBufferInfoFunc(createCylinderVertices);\nexports.createCylinderBufferInfo = createCylinderBufferInfo;\nvar createCylinderBuffers = createBufferFunc(createCylinderVertices);\nexports.createCylinderBuffers = createCylinderBuffers;\nvar createTorusBufferInfo = createBufferInfoFunc(createTorusVertices);\nexports.createTorusBufferInfo = createTorusBufferInfo;\nvar createTorusBuffers = createBufferFunc(createTorusVertices);\nexports.createTorusBuffers = createTorusBuffers;\nvar createDiscBufferInfo = createBufferInfoFunc(createDiscVertices);\nexports.createDiscBufferInfo = createDiscBufferInfo;\nvar createDiscBuffers = createBufferFunc(createDiscVertices);\nexports.createDiscBuffers = createDiscBuffers;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  addExtensionsToContext: true,\n  getContext: true,\n  getWebGLContext: true,\n  resizeCanvasToDisplaySize: true,\n  setDefaults: true\n};\nexports.addExtensionsToContext = addExtensionsToContext;\nexports.getContext = getContext;\nexports.getWebGLContext = getWebGLContext;\nexports.resizeCanvasToDisplaySize = resizeCanvasToDisplaySize;\nexports.setDefaults = setDefaults;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(7));\n\nObject.keys(attributes).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = attributes[key];\n});\n\nvar textures = _interopRequireWildcard(__webpack_require__(8));\n\nObject.keys(textures).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = textures[key];\n});\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nObject.keys(utils).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = utils[key];\n});\n\nvar _draw = __webpack_require__(12);\n\nObject.keys(_draw).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _draw[key];\n});\n\nvar _framebuffers = __webpack_require__(13);\n\nObject.keys(_framebuffers).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _framebuffers[key];\n});\n\nvar _programs = __webpack_require__(5);\n\nObject.keys(_programs).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _programs[key];\n});\n\nvar _typedarrays = __webpack_require__(1);\n\nObject.keys(_typedarrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _typedarrays[key];\n});\n\nvar _vertexArrays = __webpack_require__(14);\n\nObject.keys(_vertexArrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _vertexArrays[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * The main TWGL module.\n *\n * For most use cases you shouldn't need anything outside this module.\n * Exceptions between the stuff added to twgl-full (v3, m4, primitives)\n *\n * @module twgl\n * @borrows module:twgl/attributes.setAttribInfoBufferFromArray as setAttribInfoBufferFromArray\n * @borrows module:twgl/attributes.createBufferInfoFromArrays as createBufferInfoFromArrays\n * @borrows module:twgl/attributes.createVertexArrayInfo as createVertexArrayInfo\n * @borrows module:twgl/draw.drawBufferInfo as drawBufferInfo\n * @borrows module:twgl/draw.drawObjectList as drawObjectList\n * @borrows module:twgl/framebuffers.createFramebufferInfo as createFramebufferInfo\n * @borrows module:twgl/framebuffers.resizeFramebufferInfo as resizeFramebufferInfo\n * @borrows module:twgl/framebuffers.bindFramebufferInfo as bindFramebufferInfo\n * @borrows module:twgl/programs.createProgramInfo as createProgramInfo\n * @borrows module:twgl/programs.createUniformBlockInfo as createUniformBlockInfo\n * @borrows module:twgl/programs.bindUniformBlock as bindUniformBlock\n * @borrows module:twgl/programs.setUniformBlock as setUniformBlock\n * @borrows module:twgl/programs.setBlockUniforms as setBlockUniforms\n * @borrows module:twgl/programs.setUniforms as setUniforms\n * @borrows module:twgl/programs.setBuffersAndAttributes as setBuffersAndAttributes\n * @borrows module:twgl/textures.setTextureFromArray as setTextureFromArray\n * @borrows module:twgl/textures.createTexture as createTexture\n * @borrows module:twgl/textures.resizeTexture as resizeTexture\n * @borrows module:twgl/textures.createTextures as createTextures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  addExtensionsToContext: true\n};\n/**\n * Various default settings for twgl.\n *\n * Note: You can call this any number of times. Example:\n *\n *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\n *     twgl.setDefaults({ attribPrefix: 'a_' });\n *\n * is equivalent to\n *\n *     twgl.setDefaults({\n *       textureColor: [1, 0, 0, 1],\n *       attribPrefix: 'a_',\n *     });\n *\n * @typedef {Object} Defaults\n * @property {string} attribPrefix The prefix to stick on attributes\n *\n *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n *   as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n *\n *   In otherwords I'll create arrays of geometry like this\n *\n *       const arrays = {\n *         position: ...\n *         normal: ...\n *         texcoord: ...\n *       };\n *\n *   But need those mapped to attributes and my attributes start with `a_`.\n *\n *   Default: `\"\"`\n *\n * @property {number[]} textureColor Array of 4 values in the range 0 to 1\n *\n *   The default texture color is used when loading textures from\n *   urls. Because the URL will be loaded async we'd like to be\n *   able to use the texture immediately. By putting a 1x1 pixel\n *   color in the texture we can start using the texture before\n *   the URL has loaded.\n *\n *   Default: `[0.5, 0.75, 1, 1]`\n *\n * @property {string} crossOrigin\n *\n *   If not undefined sets the crossOrigin attribute on images\n *   that twgl creates when downloading images for textures.\n *\n *   Also see {@link module:twgl.TextureOptions}.\n *\n * @property {bool} addExtensionsToContext\n *\n *   If true, then, when twgl will try to add any supported WebGL extensions\n *   directly to the context under their normal GL names. For example\n *   if ANGLE_instances_arrays exists then twgl would enable it,\n *   add the functions `vertexAttribDivisor`, `drawArraysInstanced`,\n *   `drawElementsInstanced`, and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR`\n *   to the `WebGLRenderingContext`.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets various defaults for twgl.\n *\n * In the interest of terseness which is kind of the point\n * of twgl I've integrated a few of the older functions here\n *\n * @param {module:twgl.Defaults} newDefaults The default settings.\n * @memberOf module:twgl\n */\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n  attributes.setAttributeDefaults_(newDefaults); // eslint-disable-line\n\n  textures.setTextureDefaults_(newDefaults); // eslint-disable-line\n}\n\nvar prefixRE = /^(.*?)_/;\n\nfunction addExtensionToContext(gl, extensionName) {\n  utils.glEnumToString(gl, 0);\n  var ext = gl.getExtension(extensionName);\n\n  if (ext) {\n    var enums = {};\n    var fnSuffix = prefixRE.exec(extensionName)[1];\n    var enumSuffix = '_' + fnSuffix;\n\n    for (var key in ext) {\n      var value = ext[key];\n      var isFunc = typeof value === 'function';\n      var suffix = isFunc ? fnSuffix : enumSuffix;\n      var name = key; // examples of where this is not true are WEBGL_compressed_texture_s3tc\n      // and WEBGL_compressed_texture_pvrtc\n\n      if (key.endsWith(suffix)) {\n        name = key.substring(0, key.length - suffix.length);\n      }\n\n      if (gl[name] !== undefined) {\n        if (!isFunc && gl[name] !== value) {\n          helper.warn(name, gl[name], value, key);\n        }\n      } else {\n        if (isFunc) {\n          gl[name] = function (origFn) {\n            return function () {\n              return origFn.apply(ext, arguments);\n            };\n          }(value);\n        } else {\n          gl[name] = value;\n          enums[name] = value;\n        }\n      }\n    } // pass the modified enums to glEnumToString\n\n\n    enums.constructor = {\n      name: ext.constructor.name\n    };\n    utils.glEnumToString(enums, 0);\n  }\n\n  return ext;\n}\n/*\n * If you're wondering why the code doesn't just iterate\n * over all extensions using `gl.getExtensions` is that it's possible\n * some future extension is incompatible with this code. Rather than\n * have thing suddenly break it seems better to manually add to this\n * list.\n *\n */\n\n\nvar supportedExtensions = ['ANGLE_instanced_arrays', 'EXT_blend_minmax', 'EXT_color_buffer_float', 'EXT_color_buffer_half_float', 'EXT_disjoint_timer_query', 'EXT_disjoint_timer_query_webgl2', 'EXT_frag_depth', 'EXT_sRGB', 'EXT_shader_texture_lod', 'EXT_texture_filter_anisotropic', 'OES_element_index_uint', 'OES_standard_derivatives', 'OES_texture_float', 'OES_texture_float_linear', 'OES_texture_half_float', 'OES_texture_half_float_linear', 'OES_vertex_array_object', 'WEBGL_color_buffer_float', 'WEBGL_compressed_texture_atc', 'WEBGL_compressed_texture_etc1', 'WEBGL_compressed_texture_pvrtc', 'WEBGL_compressed_texture_s3tc', 'WEBGL_compressed_texture_s3tc_srgb', 'WEBGL_depth_texture', 'WEBGL_draw_buffers'];\n/**\n * Attempts to enable all of the following extensions\n * and add their functions and constants to the\n * `WebGLRenderingContext` using their normal non-extension like names.\n *\n *      ANGLE_instanced_arrays\n *      EXT_blend_minmax\n *      EXT_color_buffer_float\n *      EXT_color_buffer_half_float\n *      EXT_disjoint_timer_query\n *      EXT_disjoint_timer_query_webgl2\n *      EXT_frag_depth\n *      EXT_sRGB\n *      EXT_shader_texture_lod\n *      EXT_texture_filter_anisotropic\n *      OES_element_index_uint\n *      OES_standard_derivatives\n *      OES_texture_float\n *      OES_texture_float_linear\n *      OES_texture_half_float\n *      OES_texture_half_float_linear\n *      OES_vertex_array_object\n *      WEBGL_color_buffer_float\n *      WEBGL_compressed_texture_atc\n *      WEBGL_compressed_texture_etc1\n *      WEBGL_compressed_texture_pvrtc\n *      WEBGL_compressed_texture_s3tc\n *      WEBGL_compressed_texture_s3tc_srgb\n *      WEBGL_depth_texture\n *      WEBGL_draw_buffers\n *\n * For example if `ANGLE_instanced_arrays` exists then the functions\n * `drawArraysInstanced`, `drawElementsInstanced`, `vertexAttribDivisor`\n * and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR` are added to the\n * `WebGLRenderingContext`.\n *\n * Note that if you want to know if the extension exists you should\n * probably call `gl.getExtension` for each extension. Alternatively\n * you can check for the existance of the functions or constants that\n * are expected to be added. For example\n *\n *    if (gl.drawBuffers) {\n *      // Either WEBGL_draw_buffers was enabled OR you're running in WebGL2\n *      ....\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @memberOf module:twgl\n */\n\nfunction addExtensionsToContext(gl) {\n  for (var ii = 0; ii < supportedExtensions.length; ++ii) {\n    addExtensionToContext(gl, supportedExtensions[ii]);\n  }\n}\n/**\n * Creates a webgl context.\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\n\n\nfunction create3DContext(canvas, opt_attribs) {\n  var names = [\"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL1 context.\n *\n * Note: Will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextCreationAttirbutes} [opt_attribs] optional webgl context creation attributes\n * @memberOf module:twgl\n */\n\n\nfunction getWebGLContext(canvas, opt_attribs) {\n  var gl = create3DContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Creates a webgl context.\n *\n * Will return a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *     twgl.isWebGL2(gl);\n *\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\n\n\nfunction createContext(canvas, opt_attribs) {\n  var names = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL context.  Will create a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *    function isWebGL2(gl) {\n *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\n *    }\n *\n * Note: For a WebGL1 context will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextCreationAttirbutes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\n\n\nfunction getContext(canvas, opt_attribs) {\n  var gl = createContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Resize a canvas to match the size it's displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` or other scale value if you want to.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:twgl\n */\n\n\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  multiplier = Math.max(0, multiplier);\n  var width = canvas.clientWidth * multiplier | 0;\n  var height = canvas.clientHeight * multiplier | 0;\n\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n\n  return false;\n}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.drawBufferInfo = drawBufferInfo;\nexports.drawObjectList = drawObjectList;\n\nvar programs = _interopRequireWildcard(__webpack_require__(5));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Drawing related functions\n *\n * For backward compatibily they are available at both `twgl.draw` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/draw\n */\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @param {enum} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\n * @memberOf module:twgl/draw\n */\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\n  type = type === undefined ? gl.TRIANGLES : type;\n  var indices = bufferInfo.indices;\n  var elementType = bufferInfo.elementType;\n  var numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n\n  if (elementType || indices) {\n    if (instanceCount !== undefined) {\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset, instanceCount);\n    } else {\n      gl.drawElements(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n}\n/**\n * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\n *\n * You need either a `BufferInfo` or a `VertexArrayInfo`.\n *\n * @typedef {Object} DrawObject\n * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In otherwords `undefined` = `true`\n * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\n * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\n * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @property {Object<string, ?>} uniforms The values for the uniforms.\n *   You can pass multiple objects by putting them in an array. For example\n *\n *     var sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     var localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     var drawObj = {\n *       ...\n *       uniforms: [sharedUniforms, localUniforms],\n *     };\n *\n * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\n * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElemnts`. Defaults to bufferInfo.numElements.\n * @property {number} [instanceCount] the number of instances. Defaults to undefined.\n * @memberOf module:twgl\n */\n\n/**\n * Draws a list of objects\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n * @memberOf module:twgl/draw\n */\n\n\nfunction drawObjectList(gl, objectsToDraw) {\n  var lastUsedProgramInfo = null;\n  var lastUsedBufferInfo = null;\n  objectsToDraw.forEach(function (object) {\n    if (object.active === false) {\n      return;\n    }\n\n    var programInfo = object.programInfo;\n    var bufferInfo = object.vertexArrayInfo || object.bufferInfo;\n    var bindBuffers = false;\n    var type = object.type === undefined ? gl.TRIANGLES : object.type;\n\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program); // We have to rebind buffers when changing programs because we\n      // only bind buffers the program uses. So if 2 programs use the same\n      // bufferInfo but the 1st one uses only positions the when the\n      // we switch to the 2nd one some of the attributes will not be on.\n\n      bindBuffers = true;\n    } // Setup all the needed attributes.\n\n\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\n        gl.bindVertexArray(null);\n      }\n\n      lastUsedBufferInfo = bufferInfo;\n      programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    } // Set the uniforms.\n\n\n    programs.setUniforms(programInfo, object.uniforms); // Draw\n\n    drawBufferInfo(gl, bufferInfo, type, object.count, object.offset, object.instanceCount);\n  });\n\n  if (lastUsedBufferInfo.vertexArrayObject) {\n    gl.bindVertexArray(null);\n  }\n}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.bindFramebufferInfo = bindFramebufferInfo;\nexports.createFramebufferInfo = createFramebufferInfo;\nexports.resizeFramebufferInfo = resizeFramebufferInfo;\n\nvar textures = _interopRequireWildcard(__webpack_require__(8));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Framebuffer related functions\n *\n * For backward compatibily they are available at both `twgl.framebuffer` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/framebuffers\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar UNSIGNED_BYTE = 0x1401;\n/* PixelFormat */\n\nvar DEPTH_COMPONENT = 0x1902;\nvar RGBA = 0x1908;\n/* Framebuffer Object. */\n\nvar RGBA4 = 0x8056;\nvar RGB5_A1 = 0x8057;\nvar RGB565 = 0x8D62;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar STENCIL_INDEX = 0x1901;\nvar STENCIL_INDEX8 = 0x8D48;\nvar DEPTH_STENCIL = 0x84F9;\nvar COLOR_ATTACHMENT0 = 0x8CE0;\nvar DEPTH_ATTACHMENT = 0x8D00;\nvar STENCIL_ATTACHMENT = 0x8D20;\nvar DEPTH_STENCIL_ATTACHMENT = 0x821A;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar CLAMP_TO_EDGE = 0x812F;\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\nvar LINEAR = 0x2601;\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\n/**\n * The options for a framebuffer attachment.\n *\n * Note: For a `format` that is a texture include all the texture\n * options from {@link module:twgl.TextureOptions} for example\n * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\n * `auto` defaults to `false` for attachment textures but `min` and `mag` default\n * to `gl.LINEAR` and `wrap` defaults to `CLAMP_TO_EDGE`\n *\n * @typedef {Object} AttachmentOptions\n * @property {number} [attach] The attachment point. Defaults\n *   to `gl.COLOR_ATTACTMENT0 + ndx` unless type is a depth or stencil type\n *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\n *   on the format or attachment type.\n * @property {number} [format] The format. If one of `gl.RGBA4`,\n *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\n *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\n *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\n * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\n * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\n *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\n * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\n * @property {WebGLObject} [attachment] An existing renderbuffer or texture.\n *    If provided will attach this Object. This allows you to share\n *    attachemnts across framebuffers.\n * @memberOf module:twgl\n */\n\nvar defaultAttachments = [{\n  format: RGBA,\n  type: UNSIGNED_BYTE,\n  min: LINEAR,\n  wrap: CLAMP_TO_EDGE\n}, {\n  format: DEPTH_STENCIL\n}];\nvar attachmentsByFormat = {};\nattachmentsByFormat[DEPTH_STENCIL] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT16] = DEPTH_ATTACHMENT;\n\nfunction getAttachmentPointForFormat(format) {\n  return attachmentsByFormat[format];\n}\n\nvar renderbufferFormats = {};\nrenderbufferFormats[RGBA4] = true;\nrenderbufferFormats[RGB5_A1] = true;\nrenderbufferFormats[RGB565] = true;\nrenderbufferFormats[DEPTH_STENCIL] = true;\nrenderbufferFormats[DEPTH_COMPONENT16] = true;\nrenderbufferFormats[STENCIL_INDEX] = true;\nrenderbufferFormats[STENCIL_INDEX8] = true;\n\nfunction isRenderbufferFormat(format) {\n  return renderbufferFormats[format];\n}\n/**\n * @typedef {Object} FramebufferInfo\n * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\n * @property {WebGLObject[]} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a framebuffer and attachments.\n *\n * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n * Passing in a specific size\n *\n *     const width = 256;\n *     const height = 256;\n *     const fbi = twgl.createFramebufferInfo(gl, attachments, width, height);\n *\n * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\n * [WebGL only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\n *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction createFramebufferInfo(gl, attachments, width, height) {\n  var target = gl.FRAMEBUFFER;\n  var fb = gl.createFramebuffer();\n  gl.bindFramebuffer(target, fb);\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  attachments = attachments || defaultAttachments;\n  var colorAttachmentCount = 0;\n  var framebufferInfo = {\n    framebuffer: fb,\n    attachments: [],\n    width: width,\n    height: height\n  };\n  attachments.forEach(function (attachmentOptions) {\n    var attachment = attachmentOptions.attachment;\n    var format = attachmentOptions.format;\n    var attachmentPoint = getAttachmentPointForFormat(format);\n\n    if (!attachmentPoint) {\n      attachmentPoint = COLOR_ATTACHMENT0 + colorAttachmentCount++;\n    }\n\n    if (!attachment) {\n      if (isRenderbufferFormat(format)) {\n        attachment = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n        gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n      } else {\n        var textureOptions = Object.assign({}, attachmentOptions);\n        textureOptions.width = width;\n        textureOptions.height = height;\n\n        if (textureOptions.auto === undefined) {\n          textureOptions.auto = false;\n          textureOptions.min = textureOptions.min || textureOptions.minMag || gl.LINEAR;\n          textureOptions.mag = textureOptions.mag || textureOptions.minMag || gl.LINEAR;\n          textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n          textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n        }\n\n        attachment = textures.createTexture(gl, textureOptions);\n      }\n    }\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.framebufferRenderbuffer(target, attachmentPoint, gl.RENDERBUFFER, attachment);\n    } else if (helper.isTexture(gl, attachment)) {\n      gl.framebufferTexture2D(target, attachmentPoint, attachmentOptions.texTarget || gl.TEXTURE_2D, attachment, attachmentOptions.level || 0);\n    } else {\n      throw \"unknown attachment type\";\n    }\n\n    framebufferInfo.attachments.push(attachment);\n  });\n  return framebufferInfo;\n}\n/**\n * Resizes the attachments of a framebuffer.\n *\n * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebufferInfo}\n * because TWGL has no idea the format/type of each attachment.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments\n *         twgl.resizeFramebufferInfo(gl, fbi);\n *       }\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments to match\n *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\n *       }\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebufferInfo}.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  framebufferInfo.width = width;\n  framebufferInfo.height = height;\n  attachments = attachments || defaultAttachments;\n  attachments.forEach(function (attachmentOptions, ndx) {\n    var attachment = framebufferInfo.attachments[ndx];\n    var format = attachmentOptions.format;\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n      gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n    } else if (helper.isTexture(gl, attachment)) {\n      textures.resizeTexture(gl, attachment, attachmentOptions, width, height);\n    } else {\n      throw \"unknown attachment type\";\n    }\n  });\n}\n/**\n * Binds a framebuffer\n *\n * This function pretty much soley exists because I spent hours\n * trying to figure out why something I wrote wasn't working only\n * to realize I forget to set the viewport dimensions.\n * My hope is this function will fix that.\n *\n * It is effectively the same as\n *\n *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\n *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n *   If not passed will bind the canvas.\n * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction bindFramebufferInfo(gl, framebufferInfo, target) {\n  target = target || gl.FRAMEBUFFER;\n\n  if (framebufferInfo) {\n    gl.bindFramebuffer(target, framebufferInfo.framebuffer);\n    gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\n  } else {\n    gl.bindFramebuffer(target, null);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createVertexArrayInfo = createVertexArrayInfo;\nexports.createVAOAndSetAttributes = createVAOAndSetAttributes;\nexports.createVAOFromBufferInfo = createVAOFromBufferInfo;\n\nvar programs = _interopRequireWildcard(__webpack_require__(5));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * vertex array object related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/vertexArrays\n */\n\n/**\n * @typedef {Object} VertexArrayInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\n * @memberOf module:twgl\n */\n\n/**\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n *   who's attributes use the same attribute locations for the same purposes.\n *\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n *\n * also\n *\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n *   will affect the Vertex Array Object state.\n *\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n *\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n *    now attribute D's location.\n *\n *    So, you can pass in both shader 1 and shader 2's programInfo\n *\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n\n  if (!programInfos.length) {\n    programInfos = [programInfos];\n  }\n\n  programInfos.forEach(function (programInfo) {\n    programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  });\n  gl.bindVertexArray(null);\n  return {\n    numElements: bufferInfo.numElements,\n    elementType: bufferInfo.elementType,\n    vertexArrayObject: vao\n  };\n}\n/**\n * Creates a vertex array object and then sets the attributes on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOAndSetAttributes(gl, setters, attribs, indices) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  programs.setAttributes(setters, attribs);\n\n  if (indices) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indices);\n  } // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n  // like when creating buffers for other stuff will mess up this VAO's binding\n\n\n  gl.bindVertexArray(null);\n  return vao;\n}\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>| module:twgl.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n  return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n}\n\n/***/ })\n/******/ ]);\n});","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import {_} from 'underscore'\nimport twgl from './twgl';\nimport {gl} from './gl';\n\nfunction getGl() {\n    return gl;\n}\n\ngetGl();\n\nfunction createTextures(opts) {\n    return new Promise(function(resolve, reject) {\n        twgl.createTextures(gl, opts, function(errors, textures, images) {\n            resolve({errors, textures, images});\n        });\n    });\n}\n\nclass Loader {\n    constructor(opts) {\n        this.cache = new Map();\n        this.textureCache = new Map();\n        this.programCache = new Map();\n        this.errors = {\n            programs: new Map(),\n            textures: new Map(),\n            paths: new Map()\n        }\n        this.loading = null;\n        this.load(opts);\n    }\n\n    load(opts) {\n        let {basePath,\n            raiseOnFailure,\n            paths,\n            textures,\n            programs} = ({basePath: '', raiseOnFailure: true, ...opts});\n        // trim trailing slashes\n        basePath = basePath.replace(/\\/+$/, '');\n\n        const loadPromise = new Promise(async (resolve, reject) => {\n            if (paths) {\n                await this.loadPaths(paths, basePath, raiseOnFailure);\n            }\n\n            if (textures) {\n                let {errors, textures: tex, images} = await createTextures(textures);\n                if (errors) {\n                    console.log(errors);\n                }\n                Object.keys(tex).forEach((key) => {\n                    this.textureCache.set(key, tex[key]);\n                });\n            }\n\n            if (programs) {\n                for (let progOpts of programs) {\n                    let name = progOpts;\n                    let opts;\n\n                    if (_.isObject(progOpts)) {\n                        name = progOpts.name;\n                        opts = progOpts.opts;\n                    }\n\n                    if (this.programCache.has(name)) {\n                        console.log(`Warning: attempted to load already loaded program '${name}'`);\n                        continue;\n                    }\n\n                    const fp = _.compact([basePath, name.split('.').join('/')]).join('/');\n\n                    const vsName = `${fp}.vert`;\n                    const fsName = `${fp}.frag`;\n                    await this.loadPaths([vsName, fsName], '', raiseOnFailure);\n                    this.programCache.set(\n                        name,\n                        twgl.createProgramInfo(gl, [this.get(vsName), this.get(fsName)], opts)\n                    );\n                }\n            }\n\n            resolve(this);\n        });\n\n        this.loading = this.loading ? this.loading.then(res => loadPromise) : loadPromise;\n\n        return this.loading;\n    }\n\n    get(path) {\n        const ret = this.cache.get(path);\n        if (ret === undefined) {\n            raise `No value for key ${path}`;\n        }\n        return ret;\n    }\n\n    getTexture(name) {\n        const ret = this.textureCache.get(name);\n        if (ret === undefined) {\n            raise `No texture value for key ${path}`;\n        }\n        return ret;\n    }\n\n    getProgram(name) {\n        return this.programCache.get(name)\n    }\n\n    async loadPaths(paths, basePath, raiseOnFailure = true) {\n        for (let path of paths) {\n            if (this.cache.has(basePath + path)) {\n                console.log(`Warning: attempted to load already loaded path '${basePath + path}'`);\n                continue;\n            }\n            const contents = await this.fetch(basePath + path, raiseOnFailure);\n            if (contents) {\n                this.cache.set(basePath + path, contents);\n            }\n        }\n    }\n\n    async fetch(path, raiseOnFailure = true) {\n        const req = await fetch(path);\n\n        if (req.ok) {\n            return await req.text();\n        } else if (raiseOnFailure) {\n            throw `failed to fetch resource '${path}'; got status ${req.status} '${req.statusText}'`;\n        } else {\n            this.errors.paths.set(path, req.statusText);\n\n            return false;\n        }\n    }\n}\n\nexport {Loader};\n","import {Loader} from 'resource.js';\nimport {CoordinateConversions} from 'graphics.js';\nimport {mat3, mat4} from 'gl-matrix';\nimport {registerContext, gl} from 'gl.js';\nimport {attachFramebuffer} from 'util.js';\nimport 'vendor/webgl-debug.js'\nimport {Sprite} from './graphics/Sprite';\nimport {SpriteRenderer} from './graphics/SpriteRenderer'\nimport {Camera} from \"./graphics/Camera\";\n\n//import * as glMatrix from 'gl-matrix';\n\nfunction logGLCall(functionName, args) {\n    console.log(\"gl.\" + functionName + \"(\" +\n        WebGLDebugUtils.glFunctionArgsToString(functionName, args) + \")\");\n}\n\nfunction throwOnGLError(err, funcName, args) {\n    throw WebGLDebugUtils.glEnumToString(err) + \" was caused by call to: \" + funcName;\n}\n\nconst initCanvas = (containerId, canvasClass) => {\n    if (!containerId) {\n        throw new Error('argument containerId, id of containing element required');\n    }\n    const mountPoint = document.getElementById(containerId);\n    const canvas = document.createElement('canvas');\n    if (canvasClass) {\n        canvas.classList.add(canvasClass);\n    }\n    mountPoint.appendChild(canvas);\n\n    return canvas;\n};\n\n/**\n * options:\n * el\n * debug - default: false\n * clearColor - default: [0.4, 0.4, 0.4, 1]\n * resolution - default: { width: 352, height: 224 }\n * pixelMultiplier - default: 2\n */\nclass App {\n    constructor(options) {\n        this.clearColor = options.clearColor || [0.4, 0.4, 0.4, 1];\n        this.resolution = options.resolution || {width: 352, height: 224};\n        this.pixelMultiplier = options.pixelMultiplier || 2;\n        this.debug = options.debug;\n\n        if (typeof options.el === 'string') {\n            this.canvas = document.getElementById(options.el);\n        } else {\n            this.canvas = options.el;\n        }\n\n        // create rendering context\n        this.gl = this.canvas.getContext('webgl2');\n\n        if (this.debug) {\n            WebGLDebugUtils.init(this.gl);\n            this.gl = WebGLDebugUtils.makeDebugContext(this.gl, undefined, logGLCall);\n        }\n\n        registerContext(this.gl);\n\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n\n        this.framebuffer = attachFramebuffer(gl, this.resolution.width, this.resolution.height);\n        this.framebufferRenderer = new SpriteRenderer({\n            game: this,\n            textureInfo: {\n                texture: this.framebuffer.texture,\n                ...this.resolution\n            }\n        });\n        this.loader = new Loader();\n        this.projection = mat4.ortho(mat4.create(), 0, this.resolution.width, 0, this.resolution.height, -1, 1);\n        this.camera = new Camera(this.resolution);\n        this.cameraEnabled = true;\n        this.updateCanvasSize();\n        this.adjustViewport();\n    }\n\n    updateCanvasSize() {\n        const width = this.resolution.width * this.pixelMultiplier;\n        const height = this.resolution.height * this.pixelMultiplier;\n\n        this.canvas.style.width = `${width}px`;\n        this.canvas.style.height = `${height}px`;\n\n        this.canvas.width = width * (window.devicePixelRatio || 1);\n        this.canvas.height = height * (window.devicePixelRatio || 1);\n    }\n\n    adjustViewport() {\n        // Use device pixels rather than CSS pixels to set viewport\n        // This will handle devicePixelRatios different than 1\n        const canvas_width = this.canvas.width;\n        const canvas_height = this.canvas.height;\n\n        this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n\n        this._canvasToWorld = CoordinateConversions.canvasToWorldMatrix(\n            this.camera.matrix,\n            {width: canvas_width, height: canvas_height},\n            this.resolution\n        );\n    }\n\n    clear() {\n        this.gl.clearColor(...this.clearColor);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n    }\n\n    load(paths) {\n        return this.loader.load(paths);\n    }\n\n    getProgram(key) {\n        const ret = this.loader.getProgram(key);\n\n        if (!ret) {\n            throw `No program loaded for key '${key}'`;\n        }\n\n        return ret;\n    }\n\n    enableCamera() {\n        this.cameraEnabled = true;\n    }\n\n    disableCamera() {\n        this.cameraEnabled = false;\n    }\n\n    get canvasToWorld() {\n        return this._canvasToWorld;\n    }\n\n    get viewMatrix() {\n        let camera = mat4.create();\n        if (this.cameraEnabled) {\n            camera = this.camera.matrix;\n        }\n        return mat4.multiply(mat4.create(), this.projection, camera);\n    }\n\n    beginRenderToTexture() {\n        this.framebuffer.attach();\n        this.clear();\n    }\n\n    endRenderToTexture() {\n        this.framebuffer.detach();\n        this.adjustViewport();\n    }\n\n    start() {\n        let timestamp;\n\n        const update = time => {\n            if (!timestamp) {\n                timestamp = time;\n            }\n\n            let dt = time - timestamp;\n            timestamp = time;\n            //this.framebuffer.attach();\n\n            if (this.stage) {\n                this.stage.prerender(dt);\n\n                this.beginRenderToTexture();\n\n                this.stage.render(dt);\n\n                this.stage.postrender(dt);\n\n                this.endRenderToTexture();\n\n                this.clear();\n\n                this.framebufferRenderer.render(\n                    [new Sprite({\n                        position: [0, 0],\n                        size: [this.resolution.width, this.resolution.height]\n                    })],\n                    this.projection\n                );\n\n                // possible post fullscreen render hook here\n            }\n\n            if (this.running) {\n                requestAnimationFrame(update);\n            }\n        };\n\n        if (!this.running) {\n            requestAnimationFrame(update);\n            this.running = true;\n        }\n    }\n\n    setStage(stage) {\n        this.stage = stage;\n        stage.app = this;\n        stage.init(this);\n    }\n}\n\nexport default App;\n\nexport {\n    App,\n    initCanvas\n};\n","import * as twgl from '../../node_modules/twgl.js';\n\nexport {twgl};\n\nexport default twgl;\n"],"sourceRoot":""}
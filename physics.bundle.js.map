{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/gl.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/common.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2d.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat4.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec4.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/quat.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/quat2.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec2.js","webpack:///./node_modules/planck-js/lib/common/Vec2.js","webpack:///./node_modules/planck-js/lib/common/Math.js","webpack:///./src/js/twgl.js","webpack:///./node_modules/planck-js/lib/util/common.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/planck-js/lib/common/Rot.js","webpack:///./node_modules/planck-js/lib/Settings.js","webpack:///./node_modules/planck-js/lib/common/Transform.js","webpack:///./src/js/util.js","webpack:///./src/js/graphics/Sprite.js","webpack:///./src/js/graphics/SpriteRenderer.js","webpack:///./node_modules/planck-js/lib/util/create.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/js/graphics.js","webpack:///./node_modules/underscore/underscore.js","webpack:///./node_modules/planck-js/lib/util/options.js","webpack:///./src/js/graphics/Camera.js","webpack:///./src/css/app.css","webpack:///./src/css/app.css?13d6","webpack:///./src/shaders/sprite.frag","webpack:///./src/shaders/sprite.vert","webpack:///./src/js/vendor/webgl-debug.js","webpack:///./node_modules/twgl.js/dist/4.x/twgl-full.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/js/resource.js","webpack:///./src/js/app.js","webpack:///./node_modules/planck-js/lib/common/Sweep.js","webpack:///./node_modules/planck-js/lib/common/Vec3.js","webpack:///./node_modules/planck-js/lib/common/Mat22.js","webpack:///./node_modules/planck-js/lib/common/Position.js","webpack:///./node_modules/planck-js/lib/common/Velocity.js","webpack:///./node_modules/planck-js/lib/Joint.js","webpack:///./node_modules/planck-js/lib/common/Mat33.js","webpack:///./src/js/graphics/Grid.js","webpack:///./node_modules/planck-js/lib/Shape.js","webpack:///./src/shaders/grid.frag","webpack:///./src/shaders/grid.vert","webpack:///./node_modules/planck-js/lib/collision/AABB.js","webpack:///./node_modules/planck-js/lib/Contact.js","webpack:///./node_modules/planck-js/lib/Manifold.js","webpack:///./node_modules/planck-js/lib/shape/PolygonShape.js","webpack:///./src/js/controls.js","webpack:///./node_modules/planck-js/lib/shape/EdgeShape.js","webpack:///./node_modules/planck-js/lib/shape/CircleShape.js","webpack:///./node_modules/planck-js/lib/collision/Distance.js","webpack:///./node_modules/planck-js/lib/shape/ChainShape.js","webpack:///./node_modules/planck-js/lib/common/stats.js","webpack:///./node_modules/planck-js/lib/Body.js","webpack:///./src/shaders/lines.frag","webpack:///./src/shaders/lines.vert","webpack:///./src/js/graphics/LineRenderer.js","webpack:///./node_modules/planck-js/lib/joint/PrismaticJoint.js","webpack:///./node_modules/planck-js/lib/joint/RevoluteJoint.js","webpack:///./node_modules/planck-js/lib/collision/TimeOfImpact.js","webpack:///./node_modules/planck-js/lib/collision/DynamicTree.js","webpack:///./node_modules/planck-js/lib/World.js","webpack:///./node_modules/planck-js/lib/Fixture.js","webpack:///./node_modules/planck-js/lib/index.js","webpack:///./src/js/graphics/WorldRenderer.js","webpack:///./node_modules/planck-js/lib/joint/WheelJoint.js","webpack:///./node_modules/planck-js/lib/joint/WeldJoint.js","webpack:///./node_modules/planck-js/lib/joint/RopeJoint.js","webpack:///./node_modules/planck-js/lib/joint/PulleyJoint.js","webpack:///./node_modules/planck-js/lib/joint/MouseJoint.js","webpack:///./node_modules/planck-js/lib/joint/MotorJoint.js","webpack:///./node_modules/planck-js/lib/joint/GearJoint.js","webpack:///./node_modules/planck-js/lib/joint/FrictionJoint.js","webpack:///./node_modules/planck-js/lib/joint/DistanceJoint.js","webpack:///./node_modules/planck-js/lib/shape/CollideEdgePolygon.js","webpack:///./node_modules/planck-js/lib/shape/CollideCirclePolygone.js","webpack:///./node_modules/planck-js/lib/shape/CollidePolygon.js","webpack:///./node_modules/planck-js/lib/shape/CollideEdgeCircle.js","webpack:///./node_modules/planck-js/lib/shape/CollideCircle.js","webpack:///./node_modules/planck-js/lib/shape/BoxShape.js","webpack:///./node_modules/planck-js/lib/util/Timer.js","webpack:///./node_modules/planck-js/lib/Solver.js","webpack:///./node_modules/planck-js/lib/util/Pool.js","webpack:///./node_modules/planck-js/lib/collision/BroadPhase.js","webpack:///./src/demo/physics.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_gl","gl","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","setMatrixArrayType","type","degree","PI","toRadian","a","equals","b","abs","max","out","clone","copy","identity","fromValues","m00","m01","m10","m11","set","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","sin","cos","mat2_scale","v","v0","v1","fromRotation","fromScaling","str","frob","sqrt","pow","LDU","L","D","U","add","subtract","exactEquals","mat2_equals","multiplyScalar","multiplyScalarAndAdd","scale","mul","sub","mat2d_create","mat2d_clone","mat2d_copy","mat2d_identity","mat2d_fromValues","tx","ty","mat2d_set","mat2d_invert","aa","ab","ac","ad","atx","aty","mat2d_determinant","mat2d_multiply","a4","a5","b4","b5","mat2d_rotate","mat2d_scale","translate","mat2d_fromRotation","mat2d_fromScaling","fromTranslation","mat2d_str","mat2d_frob","mat2d_add","mat2d_subtract","mat2d_multiplyScalar","mat2d_multiplyScalarAndAdd","mat2d_exactEquals","mat2d_equals","mat2d_mul","mat2d_sub","mat3_create","fromMat4","mat3_clone","mat3_copy","mat3_fromValues","m02","m12","m20","m21","m22","mat3_set","mat3_identity","mat3_transpose","a01","a02","a12","mat3_invert","a00","a10","a11","a20","a21","a22","b01","b11","b21","mat3_adjoint","mat3_determinant","mat3_multiply","b00","b02","b10","b12","b20","b22","mat3_translate","x","y","mat3_rotate","mat3_scale","mat3_fromTranslation","mat3_fromRotation","mat3_fromScaling","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","width","height","mat3_str","mat3_frob","mat3_add","mat3_subtract","mat3_multiplyScalar","mat3_multiplyScalarAndAdd","mat3_exactEquals","mat3_equals","a6","a7","a8","b6","b7","b8","mat3_mul","mat3_sub","mat4_create","mat4_clone","mat4_copy","mat4_fromValues","m03","m13","m23","m30","m31","m32","m33","mat4_set","mat4_identity","mat4_transpose","mat4_invert","mat4_adjoint","mat4_determinant","mat4_multiply","mat4_translate","mat4_scale","mat4_rotate","axis","len","rotateX","rotateY","rotateZ","mat4_fromTranslation","mat4_fromScaling","mat4_fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","mat4_fromQuat","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","mat4_str","mat4_frob","mat4_add","mat4_subtract","mat4_multiplyScalar","mat4_multiplyScalarAndAdd","mat4_exactEquals","mat4_equals","a9","a14","a15","b9","b13","b14","b15","mat4_mul","mat4_sub","vec3_create","vec3_clone","vec3_length","vec3_fromValues","vec3_copy","vec3_set","vec3_add","vec3_subtract","vec3_multiply","divide","ceil","floor","min","round","vec3_scale","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","vec3_dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","vec3_rotateX","vec3_rotateY","vec3_rotateZ","angle","tempA","tempB","cosine","acos","vec3_str","vec3_exactEquals","vec3_equals","vec3_sub","vec3_mul","div","dist","sqrDist","vec3_len","sqrLen","forEach","vec","stride","offset","count","fn","arg","length","vec4_create","vec4_clone","vec4_fromValues","vec4_copy","vec4_set","vec4_add","vec4_subtract","vec4_multiply","vec4_divide","vec4_ceil","vec4_floor","vec4_min","vec4_max","vec4_round","vec4_scale","vec4_scaleAndAdd","vec4_distance","vec4_squaredDistance","vec4_length","vec4_squaredLength","vec4_negate","vec4_inverse","vec4_normalize","vec4_dot","vec4_lerp","vec4_random","vectorScale","v2","v3","v4","s1","s2","vec4_transformMat4","vec4_transformQuat","ix","iy","iz","iw","vec4_str","vec4_exactEquals","vec4_equals","vec4_sub","vec4_mul","vec4_div","vec4_dist","vec4_sqrDist","vec4_len","vec4_sqrLen","vec4_forEach","quat_create","quat_identity","setAxisAngle","getAxisAngle","out_axis","quat_multiply","quat_rotateX","quat_rotateY","quat_rotateZ","calculateW","slerp","omega","cosom","sinom","scale0","scale1","quat_invert","dot","invDot","conjugate","fromMat3","fRoot","fTrace","j","k","fromEuler","halfToRad","cx","cy","cz","quat_str","quat_clone","quat_fromValues","quat_copy","quat_set","quat_add","quat_mul","quat_scale","quat_dot","quat_lerp","quat_length","quat_len","quat_squaredLength","quat_sqrLen","quat_normalize","quat_exactEquals","quat_equals","rotationTo","tmpvec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","view","quat2_create","dq","quat2_clone","quat2_fromValues","w1","fromRotationTranslationValues","quat2_fromRotationTranslation","quat2_fromTranslation","quat2_fromRotation","quat2_fromMat4","outer","quat2_copy","quat2_identity","quat2_set","getReal","getDual","setReal","setDual","quat2_getTranslation","quat2_translate","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","quat2_rotateX","quat2_rotateY","quat2_rotateZ","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","quat2_add","quat2_multiply","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","quat2_mul","quat2_scale","quat2_dot","quat2_lerp","mt","quat2_invert","sqlen","quat2_squaredLength","quat2_conjugate","quat2_length","quat2_len","quat2_sqrLen","quat2_normalize","quat2_str","quat2_exactEquals","quat2_equals","vec2_create","vec2_clone","vec2_fromValues","vec2_copy","vec2_set","vec2_add","vec2_subtract","vec2_multiply","vec2_divide","vec2_ceil","vec2_floor","vec2_min","vec2_max","vec2_round","vec2_scale","vec2_scaleAndAdd","vec2_distance","vec2_squaredDistance","vec2_length","vec2_squaredLength","vec2_negate","vec2_inverse","vec2_normalize","vec2_dot","vec2_cross","vec2_lerp","vec2_random","transformMat2","transformMat2d","vec2_transformMat3","vec2_transformMat4","vec2_rotate","p0","p1","sinC","cosC","vec2_angle","len1","len2","vec2_str","vec2_exactEquals","vec2_equals","vec2_len","vec2_sub","vec2_mul","vec2_div","vec2_dist","vec2_sqrDist","vec2_sqrLen","vec2_forEach","_DEBUG","DEBUG","_ASSERT","ASSERT","Vec2","common","this","assert","zero","obj","neo","depricated","toString","JSON","stringify","isValid","isFinite","debug","Error","setZero","wSet","wAdd","wSub","lengthOf","lengthSquared","invLength","dx","dy","distanceSquared","areEqual","skew","addCross","neg","mid","upper","lower","clamp","lengthSqr","invSqrt","native","math","isNaN","nextPowerOfTwo","isPowerOfTwo","mod","num","twgl","_interopRequireWildcard","console","log","apply","arguments","statement","err","g","Function","eval","e","window","Rot","setAngle","setIdentity","rot","getAngle","atan2","getXAxis","getYAxis","qr","mulSub","mulT","Settings","maxManifoldPoints","maxPolygonVertices","aabbExtension","aabbMultiplier","linearSlop","linearSlopSquared","angularSlop","polygonRadius","maxSubSteps","maxTOIContacts","maxTOIIterations","maxDistnceIterations","velocityThreshold","maxLinearCorrection","maxAngularCorrection","maxTranslation","maxTranslationSquared","maxRotation","maxRotationSquared","baumgarte","toiBaugarte","timeToSleep","linearSleepTolerance","linearSleepToleranceSqr","angularSleepTolerance","angularSleepToleranceSqr","Transform","position","rotation","xf","isArray","arr","px","py","buffer","newElements","h","framebuffer","createFramebuffer","texture","createTexture","bindTexture","TEXTURE_2D","texStorage2D","RGBA8","texParameteri","TEXTURE_MIN_FILTER","NEAREST","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","attach","viewport","detach","src","Promise","resolve","reject","img","Image","removeListeners","removeEventListener","addEventListener","error","Sprite","options","_classCallCheck","size","backgroundColor","textureName","_twgl","_interopRequireDefault","_sprite","_sprite2","SPRITE_RECT_VERTICES","SpriteRenderer","_ref","game","textureInfo","loader","setup","programInfo","createProgramInfo","vs","fs","_arrays","vertex","data","numComponents","divisor","drawType","STATIC_DRAW","DYNAMIC_DRAW","texcoord","Int16Array","indices","bufferInfo","createBufferInfoFromArrays","vao","createVertexArrayInfo","sprites","positions","sizes","offsets","sprite","spriteIndex","compIndex","setAttribInfoBufferFromArray","attribs","useProgram","program","setUniforms","setBuffersAndAttributes","drawBufferInfo","TRIANGLE_STRIP","undefined","proto","props","noop","stylesInDom","isOldIE","memo","memoize","document","all","atob","getElement","selector","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","item","domStyle","id","refs","parts","push","addStyle","listToStyles","list","newStyles","base","part","css","media","sourceMap","insertStyleElement","style","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","attrs","addAttrs","el","keys","setAttribute","update","remove","result","transform","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","newList","mayRemove","replaceText","textStore","index","replacement","filter","Boolean","join","cssNode","childNodes","useSourceMap","map","content","cssMapping","sourceMapping","toComment","sourceURLs","sources","source","sourceRoot","concat","cssWithMappingToString","mediaQuery","alreadyImportedModules","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","_glMatrix","TilemapTextureBuilder","opts","assign","_objectSpread","tileWidth","tileHeight","layers","copyIndex","TEXTURE_2D_ARRAY","texStorage3D","_this","tileWide","detectWidthInTiles","tileHigh","detectHeightInTiles","canvas","ctx","getContext","drawImage","copyTile","tileX","tileY","imageData","getImageData","_this$tileCoordinates","tileCoordinates","texSubImage3D","RGBA","UNSIGNED_BYTE","pixelStorei","UNPACK_FLIP_Y_WEBGL","isFull","maxIndex","Uint8Array","layerWidth","layerHeight","fb","READ_FRAMEBUFFER","layer","framebufferTextureLayer","readPixels","ImageData","Uint8ClampedArray","CoordinateConversions","canvasToWorldMatrix","viewMatrix","displaySize","virtualSize","acc","mat4","temp","__WEBPACK_AMD_DEFINE_RESULT__","root","self","global","previousUnderscore","_","ArrayProto","ObjProto","SymbolProto","slice","nativeIsArray","nativeKeys","nativeCreate","Ctor","_wrapped","nodeType","VERSION","builtinIteratee","optimizeCb","func","context","argCount","collection","accumulator","cb","iteratee","isFunction","isObject","matcher","Infinity","restArguments","startIndex","rest","args","baseCreate","shallowProperty","has","path","deepGet","MAX_ARRAY_INDEX","getLength","isArrayLike","each","collect","results","currentKey","createReduce","dir","initial","reducer","reduce","foldl","inject","reduceRight","foldr","find","detect","predicate","findIndex","findKey","select","every","some","any","contains","includes","include","fromIndex","guard","values","invoke","contextPath","method","pluck","where","findWhere","computed","lastComputed","shuffle","sample","last","rand","sortBy","criteria","sort","group","behavior","partition","groupBy","indexBy","countBy","reStrSymbol","toArray","isString","match","pass","first","take","array","tail","drop","compact","flatten","input","shallow","strict","output","isArguments","without","otherArrays","difference","uniq","unique","isSorted","isBoolean","seen","union","arrays","intersection","argsLength","unzip","zip","createPredicateIndexFinder","findLastIndex","sortedIndex","low","high","createIndexFinder","predicateFind","lastIndexOf","range","start","stop","step","chunk","executeBound","sourceFunc","boundFunc","callingContext","TypeError","bound","callArgs","partial","boundArgs","placeholder","bindAll","hasher","cache","address","delay","wait","setTimeout","defer","throttle","timeout","previous","later","leading","now","throttled","remaining","clearTimeout","trailing","cancel","debounce","immediate","debounced","callNow","wrap","wrapper","compose","after","times","once","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","collectNonEnumProps","nonEnumIdx","constructor","prop","allKeys","mapObject","pairs","functions","methods","names","createAssigner","keysFunc","defaults","extend","extendOwn","eq","deepEq","keyInObj","pick","omit","String","tap","interceptor","isMatch","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isElement","nodelist","Int8Array","isSymbol","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","propertyOf","matches","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","RegExp","replaceRegexp","string","escape","fallback","idCounter","uniqueId","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeRegExp","escapeChar","template","text","settings","oldSettings","render","variable","argument","chain","instance","_chain","chainResult","mixin","toJSON","to","from","getOwnPropertySymbols","symbols","symbol","Camera","bounds","_translation","vec2","_bounds","vec4","_toConsumableArray","hmr","locals","WebGLDebugUtils","msg","glValidEnumContexts","enable","1","0","disable","getParameter","drawArrays","3","drawElements","4","2","createShader","getShaderParameter","getProgramParameter","getShaderPrecisionFormat","getVertexAttrib","vertexAttribPointer","6","activeTexture","getTexParameter","texParameterf","copyTexImage2D","8","copyTexSubImage2D","generateMipmap","bindBuffer","getBufferParameter","bindRenderbuffer","checkFramebufferStatus","framebufferRenderbuffer","5","getFramebufferAttachmentParameter","getRenderbufferParameter","renderbufferStorage","clear","enumBitwiseOr","depthFunc","blendFunc","blendFuncSeparate","blendEquation","blendEquationSeparate","stencilFunc","stencilFuncSeparate","stencilMaskSeparate","stencilOp","stencilOpSeparate","cullFace","frontFace","drawArraysInstancedANGLE","drawElementsInstancedANGLE","blendEquationEXT","bufferData","bufferSubData","copyBufferSubData","getBufferSubData","blitFramebuffer","10","9","invalidateFramebuffer","invalidateSubFramebuffer","readBuffer","getInternalformatParameter","renderbufferStorageMultisample","texImage2D","7","texImage3D","11","texSubImage2D","12","copyTexSubImage3D","compressedTexImage2D","compressedTexImage3D","compressedTexSubImage2D","compressedTexSubImage3D","vertexAttribIPointer","drawArraysInstanced","drawElementsInstanced","drawRangeElements","clearBufferfv","clearBufferiv","clearBufferuiv","clearBufferfi","beginQuery","endQuery","getQuery","getQueryParameter","samplerParameteri","samplerParameterf","getSamplerParameter","fenceSync","clientWaitSync","waitSync","getSyncParameter","bindTransformFeedback","beginTransformFeedback","transformFeedbackVaryings","bindBufferBase","bindBufferRange","getIndexedParameter","getActiveUniforms","getActiveUniformBlockParameter","glEnums","enumStringToValue","init","propertyName","checkInit","glEnumToString","glFunctionArgToString","functionName","numArgs","argumentIndex","funcInfo","enums","orResult","orEnums","enumValue","makePropertyWrapper","original","__defineGetter__","__defineSetter__","resetToInitialState","isWebGL2RenderingContext","createTransformFeedback","bindVertexArray","numAttribs","MAX_VERTEX_ATTRIBS","tmp","createBuffer","ARRAY_BUFFER","ii","disableVertexAttribArray","FLOAT","vertexAttrib1f","vertexAttribDivisor","deleteBuffer","numTextureUnits","MAX_TEXTURE_IMAGE_UNITS","TEXTURE0","TEXTURE_CUBE_MAP","TEXTURE_3D","bindSampler","ELEMENT_ARRAY_BUFFER","RENDERBUFFER","BLEND","CULL_FACE","DEPTH_TEST","DITHER","SCISSOR_TEST","blendColor","FUNC_ADD","ONE","ZERO","clearColor","clearDepth","clearStencil","colorMask","BACK","LESS","depthMask","depthRange","CCW","hint","GENERATE_MIPMAP_HINT","DONT_CARE","lineWidth","PACK_ALIGNMENT","UNPACK_ALIGNMENT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","BROWSER_DEFAULT_WEBGL","polygonOffset","sampleCoverage","scissor","ALWAYS","stencilMask","KEEP","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","drawBuffers","COPY_READ_BUFFER","COPY_WRITE_BUFFER","PIXEL_PACK_BUFFER","PIXEL_UNPACK_BUFFER","numTransformFeedbacks","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","TRANSFORM_FEEDBACK_BUFFER","numUBOs","MAX_UNIFORM_BUFFER_BINDINGS","UNIFORM_BUFFER","RASTERIZER_DISCARD","UNPACK_IMAGE_HEIGHT","UNPACK_SKIP_IMAGES","UNPACK_ROW_LENGTH","UNPACK_SKIP_ROWS","UNPACK_SKIP_PIXELS","PACK_ROW_LENGTH","PACK_SKIP_ROWS","PACK_SKIP_PIXELS","FRAGMENT_SHADER_DERIVATIVE_HINT","getError","mightBeEnum","glFunctionArgsToString","argStr","makeDebugContext","opt_onErrorFunc","opt_onFunc","opt_err_ctx","glErrorShadow","makeErrorWrapper","wrapped","NO_ERROR","makeLostContextSimulatingCanvas","unwrappedContext_","onLost_","onRestored_","wrappedContext_","contextId_","contextLost_","resourceDb_","numCallsToLoseContext_","numCalls_","canRestore_","restoreTimeout_","glErrorShadow_","wrapEvent","listener","info","handleEvent","WebGLRenderingContext","WebGL2RenderingContext","makeLostContextFunctionWrapper","loseContextIfTime","creationFunctions","__webglDebugContextLostId__","functionsThatShouldReturnNull","isFunctions","FRAMEBUFFER_UNSUPPORTED","getAttribLocation","getVertexAttribOffset","isContextLost","getFragDataLocation","WAIT_FAILED","getUniformBlockIndex","INVALID_INDEX","makeLostContextSimulatingContext","addOnContextLostListener","addOnContextRestoredListener","loseContext","makeWebGLContextEvent","statusMessage","preventDefault","bubble","wrapAddEventListener","clearErrors","CONTEXT_LOST_WEBGL","event","callbacks","restoreContext","resource","WebGLBuffer","WebGLFramebuffer","deleteFramebuffer","WebGLProgram","deleteProgram","WebGLRenderbuffer","deleteRenderbuffer","WebGLShader","deleteShader","WebGLTexture","deleteTexture","WebGLQuery","deleteQuery","WebGLSampler","deleteSampler","WebGLSync","deleteSync","WebGLTransformFeedback","deleteTransformFeedback","WebGLVertexArrayObject","deleteVertexArray","freeResources","loseContextInNCalls","numCalls","getNumCalls","setRestoreTimeout","factory","configurable","copyExistingProperties","dst","copyNamedProperties","isBuffer","repBuffer","isRenderbuffer","repRenderbuffer","createRenderbuffer","isShader","repShader","VERTEX_SHADER","isTexture","repTexture","isSampler","repSampler","createSampler","warn","_globalObject","default","getGLTypeForTypedArray","typedArray","BYTE","SHORT","Uint16Array","UNSIGNED_SHORT","Int32Array","INT","Uint32Array","UNSIGNED_INT","getGLTypeForTypedArrayType","typedArrayType","getTypedArrayTypeForGLType","CTOR","glTypeToTypedArray","isArrayBuffer","tt","SharedArrayBuffer","ArrayBuffer","VecType","t1","t2","dz","distanceSq","divScalar","lengthSq","mulScalar","lenSq","setDefaultType","ctor","oldType","isWebGL1","isWebGL2","haveEnumsForType","existing","addEnums","createAttributeSetters","createProgram","createProgramFromScripts","shaderScriptIds","opt_attribs","opt_locations","opt_errorCallback","progOptions","getProgramOptions","shaders","shader","createShaderFromScript","defaultShaderType","errorCallback","createProgramFromSources","shaderSources","good","script","getElementById","createProgramInfoFromProgram","createUniformSetters","createUniformBlockSpecFromProgram","createUniformBlockInfoFromProgram","createUniformBlockInfo","blockName","uniformBlockSpec","tf","TRANSFORM_FEEDBACK","bindTransformFeedbackInfo","transformFeedbackInfo","varying","unbindTransformFeedbackInfo","createTransformFeedbackInfo","setAttributes","buffers","vertexArrayObject","attribSetters","setters","actualSetters","uniformSetters","andx","vals","numValues","setter","setUniformBlock","uniformBlockInfo","bindUniformBlock","setBlockUniforms","uniforms","utils","helper","desc","getOwnPropertyDescriptor","typeMap","getBindPointForSamplerType","bindPoint","intSetter","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","textureOrPair","sampler","samplerArraySetter","units","textures","floatAttribSetter","enableVertexAttribArray","intAttribSetter","matAttribSetter","typeInfo","defaultSize","rowOffset","Type","uniform1f","arraySetter","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","attrTypeMap","spaceRE","loadShader","shaderSource","shaderType","errFn","lineOffset","compileShader","COMPILE_STATUS","lastError","getShaderInfoLog","split","line","ndx","addLineNumbers","opt","attribLocations","attrib","getShaderTypeFromScriptType","scriptType","FRAGMENT_SHADER","deleteShaders","realShaders","newShaders","elem","attachShader","bindAttribLocation","varyings","transformFeedbackMode","SEPARATE_ATTRIBS","linkProgram","LINK_STATUS","getProgramInfoLog","scriptId","opt_shaderType","shaderScript","isBuiltIn","startsWith","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","substr","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","numVaryings","TRANSFORM_FEEDBACK_VARYINGS","getTransformFeedbackVarying","buf","uniformData","uniformIndices","pair","pname","blockSpecs","numUniformBlocks","ACTIVE_UNIFORM_BLOCKS","_ii","getActiveUniformBlockName","blockSpec","usedByVertexShader","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","usedByFragmentShader","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","used","usedByVertexSahder","arraySuffixRE","uniformBufferIndex","uniformBlockBinding","uniformNdx","BYTES_PER_ELEMENT","asFloat","bufferBindIndex","byteLength","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","axisRotate","angleInRadians","MatType","oneMinusCosine","r00","r01","r02","r10","r11","r12","r20","r21","r22","axisRotation","getAxis","off","xAxis","tempV3a","yAxis","tempV3b","zAxis","tempV3c","b23","b30","b31","b32","b33","fieldOfViewYInRadians","zNear","zFar","rangeInv","rotationX","rotationY","rotationZ","scaling","setAxis","setTranslation","transformDirection","transformNormal","mi","transformPoint","tmp_0","tmp_1","tmp_2","tmp_3","tmp_4","tmp_5","tmp_6","tmp_7","tmp_8","tmp_9","tmp_10","tmp_11","tmp_12","tmp_13","tmp_14","tmp_15","tmp_16","tmp_17","tmp_18","tmp_19","tmp_20","tmp_21","tmp_22","tmp_23","t0","t3","createAttribsFromArrays","createBuffersFromArrays","createBufferFromArray","numElements","elementType","typedArrays","makeTypedArray","positionKeys","getArray","getNumComponents","getNumElementsFromNonIndexedArrays","createBufferFromTypedArray","newIndices","attribPrefix","numBytes","BUFFER_SIZE","bytesPerValue","getBytesPerValueForGLType","totalElements","getNumElementsFromAttributes","setBufferFromTypedArray","setAttributePrefix","setAttributeDefaults_","newDefaults","getNumComponents_","getArray_","isIndices","texcoordRE","colorRE","guessNumComponentsFromName","arrayName","normalization","attribName","arrayType","getNormalizationForTypedArrayType","getNormalizationForTypedArray","setTextureDefaults_","textureColor","setDefaultTextureColor","createSamplers","samplerOptions","samplers","setSamplerParameters","setEmptyTexture","setTextureFromArray","loadTextureFromUrl","setTextureFromElement","setTextureFilteringForSize","setTextureParameters","createTextures","textureOptions","callback","numDownloading","errors","images","callCallbackIfReady","onLoadFn","isAsyncSrc","tex","resizeTexture","level","internalFormat","format","formatType","getFormatAndTypeForInternalFormat","getTextureTypeForArrayType","TEXTURE_CUBE_MAP_POSITIVE_X","getNumComponentsForFormat","formatInfo","numColorComponents","getBytesPerElementForInternalFormat","crossOrigin","RGB","RG","textureInternalFormatInfo","bytesPerElement","bytesPerElementMap","textureFormat","isPowerOf2","defaultType","guessDimensions","color","colorRenderable","textureFilterable","lastPackState","savePackState","colorspaceConversion","premultiplyAlpha","flipY","restorePackState","saveSkipState","unpackAlignment","unpackRowLength","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","restoreSkipState","setTextureSamplerParameters","parameteriFn","minMag","TEXTURE_MAG_FILTER","mag","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","wrapR","wrapS","wrapT","minLod","TEXTURE_MIN_LOD","maxLod","TEXTURE_MAX_LOD","baseLevel","TEXTURE_BASE_LEVEL","maxLevel","TEXTURE_MAX_LEVEL","canGenerateMipmap","filtering","canFilter","LINEAR","CLAMP_TO_EDGE","shouldAutomaticallySetTextureFilteringForSize","auto","getCubeFaceOrder","cubeFaceOrder","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","getCubeFacesWithNdx","facesWithNdx","face","element","slices","imgWidth","imgHeight","nodeName","xOffset","yOffset","createImageBitmap","colorSpaceConversion","then","imageBitmap","smallest","largest","depth","xMult","yMult","srcX","srcY","isTexImageSource","ImageBitmap","HTMLElement","loadAndUseImage","url","clearEventHandlers","onError","onLoad","bm","fetch","response","ok","bitmap","catch","loadImage","setTextureTo1PixelColor","make1Pixel","loadCubemapFromUrls","urls","imgs","numToLoad","faces","faceTarget","otherTarget","uploadImg","loadSlicesFromUrls","firstImage","dimensions","cbrt","faceSize","subarray","_exportNames","m4","primitives","create3DFVertices","createAugmentedTypedArray","createCubeVertices","createPlaneVertices","createSphereVertices","createTruncatedConeVertices","createXYQuadVertices","createCresentVertices","createCylinderVertices","createTorusVertices","createDiscVertices","deindexVertices","vertices","newVertices","allButIndices","channel","srcBuffer","dstBuffer","jj","flattenNormals","normals","normal","numNormals","nax","nay","naz","nbx","nby","nbz","ncx","ncy","ncz","nx","ny","nz","makeRandomVertexColors","vcolors","randInt","numVertsPerColor","vertsPerColor","numSets","_ii2","reorientDirections","reorientNormals","reorientPositions","reorientVertices","concatVertices","arrayOfArrays","baseName","_loop","arrayInfo","newArrays","arraySpec","spec","getLengthOfCombinedArrays","newArraySpec","createArrayOfSameType","newArray","baseIndex","copyElements","copyArraysToNewArray","duplicateVertices","srcArray","createDiscBuffers","createDiscBufferInfo","createTorusBuffers","createTorusBufferInfo","createCylinderBuffers","createCylinderBufferInfo","createCresentBuffers","createCresentBufferInfo","createXYQuadBuffers","createXYQuadBufferInfo","createTruncatedConeBuffers","createTruncatedConeBufferInfo","createSphereBuffers","createSphereBufferInfo","createPlaneBuffers","createPlaneBufferInfo","createCubeBuffers","createCubeBufferInfo","create3DFBuffers","create3DFBufferInfo","attributes","augmentTypedArray","cursor","reset","opt_index","opt_type","applyFuncToV3Array","matrix","subdivisionsWidth","subdivisionsDepth","numVertices","texcoords","u","numVertsAcross","_z","_x","radius","subdivisionsAxis","subdivisionsHeight","opt_startLatitudeInRadians","opt_endLatitudeInRadians","opt_startLongitudeInRadians","opt_endLongitudeInRadians","latRange","longRange","theta","phi","sinTheta","cosTheta","sinPhi","ux","uy","uz","numVertsAround","_x2","_y","CUBE_FACE_INDICES","cornerVertices","faceNormals","uvCoords","faceIndices","uv","bottomRadius","topRadius","radialSubdivisions","verticalSubdivisions","opt_topCap","opt_bottomCap","topCap","bottomCap","extra","vertsAroundEdge","slant","cosSlant","sinSlant","end","ringRadius","_yy","expandRLEData","rleData","padding","runLength","colors","numVerts","verticalRadius","outerRadius","innerRadius","thickness","subdivisionsDown","startOffset","endOffset","subdivisionsThick","offsetRange","createArc","arcRadius","normalMult","normalAdd","uMult","uAdd","uBack","xBack","pz","createSurface","leftArcOffset","rightArcOffset","numVerticesDown","bodySubdivisions","startAngle","endAngle","radialParts","bodyParts","sliceAngle","sliceSin","ring","ringAngle","xSin","zCos","_slice","_ring","nextRingIndex","nextSliceIndex","divisions","stacks","stackPower","firstIndex","radiusSpan","pointsPerStack","stack","stackRadius","createBufferFunc","createBufferInfoFunc","arraySpecPropertyNames","dstNdx","arraySrc","addExtensionsToContext","getWebGLContext","resizeCanvasToDisplaySize","setDefaults","createContext","create3DContext","multiplier","clientWidth","clientHeight","_draw","_framebuffers","_programs","_typedarrays","_vertexArrays","prefixRE","addExtensionToContext","extensionName","ext","getExtension","fnSuffix","exec","enumSuffix","isFunc","suffix","endsWith","substring","origFn","supportedExtensions","drawObjectList","objectsToDraw","lastUsedProgramInfo","lastUsedBufferInfo","active","vertexArrayInfo","bindBuffers","TRIANGLES","programs","instanceCount","bindFramebufferInfo","framebufferInfo","drawingBufferWidth","drawingBufferHeight","createFramebufferInfo","attachments","colorAttachmentCount","defaultAttachments","attachmentOptions","attachment","attachmentPoint","attachmentsByFormat","getAttachmentPointForFormat","renderbufferFormats","isRenderbufferFormat","texTarget","resizeFramebufferInfo","programInfos","createVertexArray","createVAOAndSetAttributes","createVAOFromBufferInfo","webpackPolyfill","deprecate","paths","children","_underscore","Loader","Map","textureCache","programCache","loading","load","_basePath$raiseOnFail","basePath","raiseOnFailure","loadPromise","_asyncToGenerator","regeneratorRuntime","mark","_callee","_ref2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","progOpts","_opts","fp","vsName","fsName","_context","prev","next","loadPaths","sent","iterator","done","abrupt","return","finish","_x3","res","ret","raise","contents","req","status","statusText","_resource","_graphics","_util","_Sprite","_SpriteRenderer","_Camera","logGLCall","containerId","canvasClass","mountPoint","classList","App","resolution","pixelMultiplier","registerContext","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","attachFramebuffer","framebufferRenderer","camera","cameraEnabled","updateCanvasSize","adjustViewport","devicePixelRatio","canvas_width","canvas_height","_canvasToWorld","_this$gl","getProgram","timestamp","running","requestAnimationFrame","time","dt","stage","prerender","beginRenderToTexture","postrender","endRenderToTexture","app","Sweep","localCenter","alpha0","c0","setTransform","setLocalCenter","getTransform","beta","advance","alpha","forward","that","Vec3","Mat22","ex","ey","getInverse","imx","solve","mx","mx1","mx2","Position","Joint","JointEdge","other","joint","def","bodyA","bodyB","m_type","m_bodyA","m_bodyB","m_index","m_collideConnected","collideConnected","m_prev","m_next","m_edgeA","m_edgeB","m_islandFlag","m_userData","userData","isActive","getType","getBodyA","getBodyB","getNext","getUserData","setUserData","getCollideConnected","getAnchorA","getAnchorB","getReactionForce","inv_dt","getReactionTorque","shiftOrigin","newOrigin","initVelocityConstraints","solveVelocityConstraints","solvePositionConstraints","Mat33","ez","solve33","solve22","getInverse22","M","getSymInverse33","_grid","_grid2","GRID_VERTICES","sharedProgram","Grid","grids","lineColor","xcells","ycells","_makeGridVertices","_ref3","row","col","makeGridVertices","cameraPos","gridInfo","line_color","Shape","m_radius","shape","getRadius","_clone","getChildCount","testPoint","rayCast","childIndex","computeAABB","aabb","computeMass","massData","density","computeDistanceProxy","proxy","AABB","lowerBound","upperBound","getCenter","getExtents","getPerimeter","combine","combinePoints","testOverlap","d1x","d2x","d1y","d2y","diff","wD","hD","tmin","tmax","p2","absD","inv_d","maxFraction","fraction","Manifold","Distance","ContactEdge","contact","Contact","fA","indexA","fB","indexB","evaluateFcn","m_nodeA","m_nodeB","m_fixtureA","m_fixtureB","m_indexA","m_indexB","m_evaluateFcn","m_manifold","m_toi","m_toiCount","m_toiFlag","m_friction","mixFriction","m_restitution","mixRestitution","m_tangentSpeed","m_enabledFlag","m_touchingFlag","m_filterFlag","m_bulletHitFlag","v_points","v_normal","v_normalMass","v_K","v_pointCount","v_tangentSpeed","v_friction","v_restitution","v_invMassA","v_invMassB","v_invIA","v_invIB","p_localPoints","p_localNormal","p_localPoint","p_localCenterA","p_localCenterB","p_type","p_radiusA","p_radiusB","p_pointCount","p_invMassA","p_invMassB","p_invIA","p_invIB","VelocityConstraintPoint","rA","rB","normalImpulse","tangentImpulse","normalMass","tangentMass","velocityBias","friction1","friction2","restitution1","restitution2","initConstraint","fixtureA","fixtureB","shapeA","getShape","shapeB","getBody","manifold","getManifold","pointCount","m_invMass","m_invI","m_sweep","localNormal","localPoint","cp","points","vcp","warmStarting","dtRatio","getWorldManifold","worldManifold","setEnabled","flag","isEnabled","isTouching","getFixtureA","getFixtureB","getChildIndexA","getChildIndexB","flagForFiltering","setFriction","friction","getFriction","resetFriction","setRestitution","restitution","getRestitution","resetRestitution","setTangentSpeed","speed","getTangentSpeed","xfA","xfB","touching","wasTouching","sensorA","isSensor","sensorB","sensor","oldManifold","nmp","omp","setAwake","beginContact","endContact","preSolve","solvePositionConstraint","_solvePositionConstraint","solvePositionConstraintTOI","toiA","toiB","toi","positionA","c_velocity","c_position","positionB","localCenterA","localCenterB","mA","iA","mB","iB","cA","aA","cB","aB","minSeparation","point","separation","e_circles","pointA","pointB","e_faceA","planePoint","clipPoint","e_faceB","C","rnA","rnB","K","impulse","P","initVelocityConstraint","velocityA","velocityB","radiusA","radiusB","vA","wA","vB","wB","kNormal","tangent","rtA","rtB","kTangent","vRel","blockSolve","vcp1","vcp2","rn1A","rn1B","rn2A","rn2B","k11","k22","k12","warmStartConstraint","storeConstraintImpulses","solveVelocityConstraint","m_body","dv","vt","lambda","maxFriction","newImpulse","vn","dv1","dv2","vn1","vn2","P1","P2","s_registers","addType","type1","type2","typeA","typeB","m_contactList","destroy","destroyFcn","ManifoldPoint","ContactID","cf","ContactFeature","clipSegmentToLine","vOut","vIn","vertexIndexA","numOut","distance0","distance1","interp","e_vertex","e_face","clipVertex","ClipVertex","getPointStates","state1","state2","manifold1","manifold2","PointState","removeState","persistState","addState","wm","separations","nullState","PolygonShape","_super","TYPE","m_centroid","m_vertices","m_normals","m_count","_set","getVertex","_setAsBox","ps","tempCount","i0","hull","ih","ie","i1","i2","edge","area","pRef","p3","e1","e2","triangleArea","ComputeCentroid","hx","hy","pLocal","numerator","denominator","minX","minY","maxX","maxY","I","ex1","ey1","ex2","ey2","mass","validate","MouseDrawingEvents","MouseDrawing","connected","endKeys","listeners","evt","addListener","_lineData","currentLineIdx","available","isDrawing","convertMouseCoordinates","offsetX","offsetY","endLine","startLine","endDrawing","_len","_key","coord","mvec","canvasToWorld","inBounds","lineIndex","notifyListeners","currentLineStart","currentLine","currentLineEnd","fill","Keyboard","keydown","keyup","delete","CameraPan","_this2","pandir","keyboard","loopStartTime","loopId","loop","delta","isdown","CameraBodyTracker","body","cancelAnimationFrame","centerAt","EdgeShape","m_vertex1","m_vertex2","m_vertex0","m_vertex3","m_hasVertex0","m_hasVertex3","setNext","setPrev","rr","CircleShape","m_p","getSupportVertex","getVertexCount","sigma","Input","DistanceInput","Output","DistanceOutput","Proxy","DistanceProxy","Cache","SimplexCache","stats","proxyA","proxyB","transformA","transformB","useRadii","iterations","metric","gjkCalls","simplex","Simplex","readCache","m_v","k_maxIters","saveA","saveB","saveCount","iter","getClosestPoint","getSearchDirection","getSupport","gjkIters","duplicate","gjkMaxIters","getWitnessPoints","writeCache","m_buffer","SimplexVertex","m_v1","m_v2","m_v3","bestIndex","bestValue","print","wALocal","wBLocal","metric1","metric2","getMetric","e12","pA","pB","solve2","solve3","d12_2","d12_1","inv_d12","w3","w1e12","e13","w1e13","d13_1","d13_2","e23","w2e23","d23_1","d23_2","n123","d123_1","d123_2","d123_3","inv_d13","inv_d23","inv_d123","ChainShape","m_prevVertex","m_nextVertex","m_hasPrevVertex","m_hasNextVertex","_createLoop","_createChain","_setPrevVertex","prevVertex","_setNextVertex","nextVertex","createChain","getChildEdge","newline","Body","Velocity","Fixture","staticBody","STATIC","kinematicBody","KINEMATIC","dynamicBody","DYNAMIC","BodyDef","linearVelocity","angularVelocity","linearDamping","angularDamping","fixedRotation","bullet","gravityScale","allowSleep","awake","world","m_world","m_awakeFlag","m_autoSleepFlag","m_bulletFlag","m_fixedRotationFlag","m_activeFlag","m_mass","m_I","m_xf","m_force","m_torque","m_linearVelocity","m_angularVelocity","m_linearDamping","m_angularDamping","m_gravityScale","m_sleepTime","m_jointList","m_fixtureList","MassData","isWorldLocked","isLocked","getWorld","getFixtureList","getJointList","getContactList","isStatic","isDynamic","isKinematic","setStatic","setType","setDynamic","setKinematic","resetMassData","synchronizeFixtures","ce","ce0","destroyContact","broadPhase","m_broadPhase","proxyCount","m_proxyCount","touchProxy","m_proxies","proxyId","isBullet","setBullet","isSleepingAllowed","setSleepingAllowed","isAwake","setActive","createProxies","destroyProxies","isFixedRotation","setFixedRotation","synchronize","synchronizeTransform","getPosition","setPosition","getWorldCenter","getLocalCenter","getLinearVelocity","getLinearVelocityFromWorldPoint","worldPoint","getLinearVelocityFromLocalPoint","getWorldPoint","setLinearVelocity","getAngularVelocity","setAngularVelocity","getLinearDamping","setLinearDamping","getAngularDamping","setAngularDamping","getGravityScale","setGravityScale","getMass","getInertia","getMassData","m_density","oldCenter","setMassData","applyForce","force","wake","applyForceToCenter","applyTorque","torque","applyLinearImpulse","applyAngularImpulse","shouldCollide","jn","createFixture","fixdef","fixture","m_newFixture","destroyFixture","found","node","publish","getWorldVector","localVector","getLocalPoint","getLocalVector","worldVector","_lines","_lines2","LineRenderer","_maxLines$opts","maxLines","lines","LINES","polygons","lineCount","polygon","vtx","PrismaticJoint","inactiveLimit","PrismaticJointDef","enableLimit","lowerTranslation","upperTranslation","enableMotor","maxMotorForce","motorSpeed","anchor","m_localAnchorA","localAnchorA","m_localAnchorB","localAnchorB","m_localXAxisA","localAxisA","m_localYAxisA","m_referenceAngle","m_impulse","m_motorMass","m_motorImpulse","m_lowerTranslation","m_upperTranslation","m_maxMotorForce","m_motorSpeed","m_enableLimit","m_enableMotor","m_limitState","m_axis","m_perp","m_localCenterA","m_localCenterB","m_invMassA","m_invMassB","m_invIA","m_invIB","m_s1","m_s2","m_a1","m_a2","m_K","getLocalAnchorA","getLocalAnchorB","getLocalAxisA","getReferenceAngle","getJointTranslation","getJointSpeed","bA","bB","Mul","Dot","Cross","isLimitEnabled","getLowerLimit","getUpperLimit","setLimits","isMotorEnabled","setMotorSpeed","setMaxMotorForce","getMotorSpeed","getMotorForce","qA","qB","k13","k23","k33","jointTranslation","LA","LB","Cdot","oldImpulse","maxImpulse","Cdot1","Cdot2","f1","df","f2r","perp","C1","linearError","angularError","C2","impulse1","RevoluteJoint","RevoluteJointDef","lowerAngle","upperAngle","maxMotorTorque","m_lowerAngle","m_upperAngle","m_maxMotorTorque","m_rA","m_rB","getJointAngle","getMotorTorque","setMaxMotorTorque","jointAngle","rhs","reduced","positionError","limitImpulse","timer","Timer","toiCalls","state","TOIOutput","e_unknown","tMax","sweepA","sweepB","totalRadius","tolerance","k_maxIterations","distanceInput","distanceOutput","e_overlapped","e_touching","fcn","SeparationFunction","initialize","pushBackIter","findMinSeparation","e_separated","e_failed","rootIterCount","toiRootIters","toiMaxRootIters","toiIters","toiMaxIters","toiMaxTime","toiTime","m_proxyA","m_proxyB","m_sweepA","m_sweepB","m_localPoint","localPointA","localPointB","localPointB1","localPointB2","localPointA1","localPointA2","compute","axisA","axisB","Pool","TreeNode","parent","child1","child2","DynamicTree","m_root","m_nodes","m_lastProxyId","m_pool","isLeaf","getFatAABB","allocateNode","allocate","freeNode","release","createProxy","insertLeaf","destroyProxy","removeLeaf","moveProxy","leaf","leafAABB","combinedAABB","cost1","cost2","combinedArea","cost","inheritanceCost","oldArea","sibling","oldParent","newParent","balance","grandParent","A","B","F","G","E","getHeight","getAreaRatio","rootArea","totalArea","it","iteratorPool","preorder","computeHeight","height1","ComputeHeight","height2","validateStructure","validateMetrics","ValidateStructure","ValidateMetrics","getMaxBalance","maxBalance","rebuildBottomUp","nodes","minCost","iMin","jMin","aabbi","aabbj","query","queryCallback","stackPool","rayCastCallback","abs_v","segmentAABB","subInput","inputPool","parents","states","close","World","BroadPhase","Solver","WorldDef","gravity","continuousPhysics","subStepping","velocityIterations","positionIterations","m_solver","m_contactCount","m_bodyList","m_bodyCount","m_jointCount","m_stepComplete","m_allowSleep","m_gravity","m_clearForces","m_locked","m_warmStarting","m_continuousPhysics","m_subStepping","m_blockSolve","m_velocityIterations","m_positionIterations","m_t","m_stepCount","addPair","createContact","getBodyList","getBodyCount","getJointCount","getContactCount","setGravity","getGravity","setAllowSleeping","getAllowSleeping","setWarmStarting","getWarmStarting","setContinuousPhysics","getContinuousPhysics","setSubStepping","getSubStepping","setAutoClearForces","getAutoClearForces","clearForces","queryAABB","point1","point2","reportFixtureCallback","getProxyCount","getTreeHeight","getTreeBalance","getTreeQuality","createBody","createDynamicBody","createKinematicBody","destroyBody","m_destroyed","je","je0","destroyJoint","f0","createJoint","s_step","TimeStep","timeStep","findNewContacts","updateContacts","solveWorld","solveWorldTOI","updatePairs","next_c","activeA","activeB","proxyIdA","proxyIdB","_listeners","on","arg1","arg2","arg3","postSolve","FixtureDef","filterGroupIndex","filterCategoryBits","filterMaskBits","FixtureProxy","m_isSensor","m_filterGroupIndex","m_filterCategoryBits","m_filterMaskBits","m_shape","childCount","setSensor","getDensity","setDensity","getAABB","xf1","xf2","aabb1","aabb2","displacement","setFilterData","groupIndex","categoryBits","maskBits","refilter","getFilterGroupIndex","getFilterCategoryBits","getFilterMaskBits","internal","Circle","Edge","Polygon","Chain","Box","CollidePolygons","DistanceJoint","FrictionJoint","GearJoint","MotorJoint","MouseJoint","PulleyJoint","RopeJoint","WeldJoint","WheelJoint","TimeOfImpact","_planckJs","_LineRenderer","WORLD_RENDERER_DEFAULTS","pixelScale","WorldRenderer","lineRenderer","segments","scaledVertices","transformVertices","firstVertex","viewRect","modelTransform","mat3","circle","WheelJointDef","frequencyHz","dampingRatio","m_springMass","m_springImpulse","m_frequencyHz","m_dampingRatio","m_bias","m_gamma","m_ax","m_ay","m_sAx","m_sBx","m_sAy","m_sBy","getMaxMotorTorque","setSpringFrequencyHz","hz","getSpringFrequencyHz","setSpringDampingRatio","ratio","getSpringDampingRatio","invMass","sAy","sBy","WeldJointDef","setFrequency","getFrequency","setDampingRatio","getDampingRatio","invM","impulse2","RopeJointDef","maxLength","m_maxLength","m_length","m_state","m_u","setMaxLength","getMaxLength","getLimitState","crA","crB","vpA","vpB","MIN_PULLEY_LENGTH","PulleyJointDef","groundA","groundB","anchorA","anchorB","m_groundAnchorA","m_groundAnchorB","m_lengthA","m_lengthB","m_ratio","m_constant","m_uA","m_uB","getGroundAnchorA","getGroundAnchorB","getLengthA","getLengthB","getRatio","getCurrentLengthA","getCurrentLengthB","lengthA","lengthB","ruA","ruB","PA","PB","uA","uB","MouseJointDef","maxForce","m_targetA","m_maxForce","m_beta","m_C","setTarget","getTarget","setMaxForce","getMaxForce","velocity","MotorJointDef","maxTorque","correctionFactor","xB","m_linearOffset","angleA","angleB","m_angularOffset","m_linearImpulse","m_angularImpulse","m_maxTorque","m_correctionFactor","m_linearError","m_angularError","m_linearMass","m_angularMass","IsValid","setMaxTorque","getMaxTorque","setCorrectionFactor","factor","getCorrectionFactor","setLinearOffset","linearOffset","getLinearOffset","setAngularOffset","angularOffset","getAngularOffset","inv_h","GearJointDef","joint1","joint2","coordinateA","coordinateB","m_joint1","m_joint2","m_type1","m_type2","m_bodyC","xfC","aC","revolute","m_localAnchorC","m_referenceAngleA","m_localAxisC","prismatic","pC","m_bodyD","xfD","aD","m_localAnchorD","m_referenceAngleB","m_localAxisD","pD","m_lcA","m_lcB","m_lcC","m_lcD","m_mA","m_mB","m_mC","m_mD","m_iA","m_iB","m_iC","m_iD","m_JvAC","m_JvBD","m_JwA","m_JwB","m_JwC","m_JwD","getJoint1","getJoint2","setRatio","vC","wC","vD","qC","qD","rC","rD","JvAC","JvBD","JwA","JwB","JwC","JwD","cC","cD","FrictionJointDef","DistanceJointDef","setLength","crAu","crBu","CollideEdgePolygon","e_edgeA","e_edgeB","EPAxis","edgeAxis","polygonAxis","polygonBA","rf","sideNormal1","sideOffset1","sideNormal2","sideOffset2","edgeA","polygonB","centroidB","hasVertex0","hasVertex3","edge1","front","normal1","offset1","offset0","offset2","convex1","convex2","edge0","normal0","edge2","normal2","lowerLimit","upperLimit","primaryAxis","clipPoints1","clipPoints2","polygonA","circleB","cLocal","normalIndex","vertexCount","vertIndex1","vertIndex2","u1","u2","faceCenter","CollidePolygonCircle","FindMaxSeparation","poly1","poly2","count1","count2","n1s","v1s","v2s","maxSeparation","si","sij","_maxSeparation","_bestIndex","polyA","polyB","separationA","edgeB","separationB","flip","incidentEdge","normals1","vertices2","normals2","minDot","FindIncidentEdge","vertices1","iv1","iv2","v11","v12","localTangent","frontOffset","CollideEdgeCircle","Q","A1","B1","B2","A2","den","CollideCircles","circleA","distSqr","BoxShape","TOIInput","inv_dt0","m_stack","m_bodies","m_contacts","m_joints","addBody","addContact","addJoint","seed","solveIsland","printBodies","positionSolved","contactsOkay","jointsOkay","jointOkay","postSolveIsland","minSleepTime","linTolSqr","angTolSqr","tag","s_subStep","minContact","minAlpha","collideA","collideB","backup1","backup2","bodies","backup","solveIslandTOI","subStep","normalImpulses","tangentImpulses","_list","_max","_createFn","_outFn","_inFn","_discardFn","discard","_createCount","_outCount","_inCount","_discardCount","shift","m_tree","m_moveBuffer","aabbA","aabbB","bufferMove","unbufferMove","addPairCallback","m_callback","m_queryProxyId","fatAABB","userDataA","userDataB","_app","_controls","_WorldRenderer","initCanvas","PIXEL_SCALE","pl","ground","spriteRenderer","worldRenderer","enableCamera","disableCamera","box","ball","linearVelocityDampingRatio","endpointA","endpointB","segmentLength","chainLength","seg_count","chainDirection","atan","joints","alignChain","jointDef","frequency","segA","segB","bodyChain","run"],"mappings":"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","file":"physics.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 261);\n","let gl = {};\n\nfunction registerContext(_gl) {\n    gl = _gl;\n}\n\nexport {registerContext, gl};\n","/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nexport const RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\n\nconst degree = Math.PI / 180;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n","import * as glMatrix from \"./common.js\"\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nexport function fromValues(m00, m01, m10, m11) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    let a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\n  // Calculate the determinant\n  let det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] =  a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] =  a0 * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  let a0 = a[0];\n  out[0] =  a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] =  a0;\n\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n}\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix\n * @param {mat2} D the diagonal matrix\n * @param {mat2} U the upper triangular matrix\n * @param {mat2} a the input matrix to factorize\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2]/a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 2x3 Matrix\n * @module mat2d\n *\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nexport function fromValues(a, b, c, d, tx, ty) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function invert(out, a) {\n  let aa = a[0], ab = a[1], ac = a[2], ad = a[3];\n  let atx = a[4], aty = a[5];\n\n  let det = aa * ad - ab * ac;\n  if(!det){\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nexport function translate(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}\n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));\n}\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b01 = a22 * a11 - a12 * a21;\n  let b11 = -a22 * a10 + a12 * a20;\n  let b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  out[0] = (a11 * a22 - a12 * a21);\n  out[1] = (a02 * a21 - a01 * a22);\n  out[2] = (a01 * a12 - a02 * a11);\n  out[3] = (a12 * a20 - a10 * a22);\n  out[4] = (a00 * a22 - a02 * a20);\n  out[5] = (a02 * a10 - a00 * a12);\n  out[6] = (a10 * a21 - a11 * a20);\n  out[7] = (a01 * a20 - a00 * a21);\n  out[8] = (a00 * a11 - a01 * a10);\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b00 = b[0], b01 = b[1], b02 = b[2];\n  let b10 = b[3], b11 = b[4], b12 = b[5];\n  let b20 = b[6], b21 = b[7], b22 = b[8];\n\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n    x = v[0], y = v[1];\n\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n\n    s = Math.sin(rad),\n    c = Math.cos(rad);\n\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1];\n\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n\n  return out;\n}\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nexport function normalFromMat4(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ', ' +\n          a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] &&\n         a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\n         a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a03 = a[3];\n    let a12 = a[6], a13 = a[7];\n    let a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n  out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n  out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n  out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n  out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n  out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  let b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n  out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n  out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n  out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n    out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n    out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n  let b00, b01, b02;\n  let b10, b11, b12;\n  let b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n  a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n  a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[0]  = a[0];\n    out[1]  = a[1];\n    out[2]  = a[2];\n    out[3]  = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[4]  = a[4];\n    out[5]  = a[5];\n    out[6]  = a[6];\n    out[7]  = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[8]  = a[8];\n    out[9]  = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function fromRotation(out, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n\n  if (len < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromXRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = 1;\n  out[1]  = 0;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromYRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = 0;\n  out[2]  = -s;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromZRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = s;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {quat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\nexport function fromQuat2(out, a) {\n  let translation = new glMatrix.ARRAY_TYPE(3);\n  let bx = -a[0], by = -a[1], bz = -a[2], bw = a[3],\n  ax = a[4], ay = a[5], az = a[6], aw = a[7];\n\n  let magnitude = bx * bx + by * by + bz * bz + bw * bw;\n  //Only scale if it makes sense\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n  let m11 = mat[0];\n  let m12 = mat[1];\n  let m13 = mat[2];\n  let m21 = mat[4];\n  let m22 = mat[5];\n  let m23 = mat[6];\n  let m31 = mat[8];\n  let m32 = mat[9];\n  let m33 = mat[10];\n\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport function getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  let trace = mat[0] + mat[5] + mat[10];\n  let S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if ((mat[0] > mat[5]) && (mat[0] > mat[10])) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  let ox = o[0];\n  let oy = o[1];\n  let oz = o[2];\n\n  let out0 = (1 - (yy + zz)) * sx;\n  let out1 = (xy + wz) * sx;\n  let out2 = (xz - wy) * sx;\n  let out4 = (xy - wz) * sy;\n  let out5 = (1 - (xx + zz)) * sy;\n  let out6 = (yz + wx) * sy;\n  let out8 = (xz + wy) * sz;\n  let out9 = (yz - wx) * sz;\n  let out10 = (1 - (xx + yy)) * sz;\n\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function frustum(out, left, right, bottom, top, near, far) {\n  let rl = 1 / (right - left);\n  let tb = 1 / (top - bottom);\n  let nf = 1 / (near - far);\n  out[0] = (near * 2) * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = (near * 2) * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (far * near * 2) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n  let f = 1.0 / Math.tan(fovy / 2);\n  let nf = 1 / (near - far);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (2 * far * near) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  let upTan = Math.tan(fov.upDegrees * Math.PI/180.0);\n  let downTan = Math.tan(fov.downDegrees * Math.PI/180.0);\n  let leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0);\n  let rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0);\n  let xScale = 2.0 / (leftTan + rightTan);\n  let yScale = 2.0 / (upTan + downTan);\n\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = ((upTan - downTan) * yScale * 0.5);\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = (far * near) / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n  let lr = 1 / (left - right);\n  let bt = 1 / (bottom - top);\n  let nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  let x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  let eyex = eye[0];\n  let eyey = eye[1];\n  let eyez = eye[2];\n  let upx = up[0];\n  let upy = up[1];\n  let upz = up[2];\n  let centerx = center[0];\n  let centery = center[1];\n  let centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n      Math.abs(eyey - centery) < glMatrix.EPSILON &&\n      Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n  let eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n\n  let z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n\n  let len = z0*z0 + z1*z1 + z2*z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  let x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n\n  len = x0*x0 + x1*x1 + x2*x2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n          a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n          a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\n          a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  out[9] = a[9] + (b[9] * scale);\n  out[10] = a[10] + (b[10] * scale);\n  out[11] = a[11] + (b[11] * scale);\n  out[12] = a[12] + (b[12] * scale);\n  out[13] = a[13] + (b[13] * scale);\n  out[14] = a[14] + (b[14] * scale);\n  out[15] = a[15] + (b[15] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n         a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] &&\n         a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n         a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3];\n  let a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7];\n  let a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11];\n  let a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\n\n  let b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3];\n  let b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7];\n  let b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11];\n  let b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n          Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n          Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n          Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n          Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n          Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n          Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n          Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let len = x*x + y*y + z*z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2];\n  let bx = b[0], by = b[1], bz = b[2];\n\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  let factorTimes2 = t * t;\n  let factor1 = factorTimes2 * (2 * t - 3) + 1;\n  let factor2 = factorTimes2 * (t - 2) + t;\n  let factor3 = factorTimes2 * (t - 1);\n  let factor4 = factorTimes2 * (3 - 2 * t);\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  let inverseFactor = 1 - t;\n  let inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  let factorTimes2 = t * t;\n  let factor1 = inverseFactorTimesTwo * inverseFactor;\n  let factor2 = 3 * t * inverseFactorTimesTwo;\n  let factor3 = 3 * factorTimes2 * inverseFactor;\n  let factor4 = factorTimes2 * t;\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n\n  let r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  let z = (glMatrix.RANDOM() * 2.0) - 1.0;\n  let zScale = Math.sqrt(1.0-z*z) * scale;\n\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n    let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n    let x = a[0], y = a[1], z = a[2];\n    // var qvec = [qx, qy, qz];\n    // var uv = vec3.cross([], qvec, a);\n    let uvx = qy * z - qz * y,\n        uvy = qz * x - qx * z,\n        uvz = qx * y - qy * x;\n    // var uuv = vec3.cross([], qvec, uv);\n    let uuvx = qy * uvz - qz * uvy,\n        uuvy = qz * uvx - qx * uvz,\n        uuvz = qx * uvy - qy * uvx;\n    // vec3.scale(uv, uv, 2 * w);\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n    // vec3.scale(uuv, uuv, 2);\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n    // return vec3.add(out, a, vec3.add(out, uv, uuv));\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let tempA = fromValues(a[0], a[1], a[2]);\n  let tempB = fromValues(b[0], b[1], b[2]);\n\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n\n  let cosine = dot(tempA, tempB);\n\n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2];\n  let b0 = b[0], b1 = b[1], b2 = b[2];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 3;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n    }\n\n    return a;\n  };\n})();\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  let len = x*x + y*y + z*z + w*w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  let aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, vectorScale) {\n  vectorScale = vectorScale || 1.0;\n\n  // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n  var v1, v2, v3, v4;\n  var s1, s2;\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2], w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  let x = a[0], y = a[1], z = a[2];\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n\n  // calculate quat * vec\n  let ix = qw * x + qy * z - qz * y;\n  let iy = qw * y + qz * x - qx * z;\n  let iz = qw * z + qx * y - qy * x;\n  let iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 4;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n    }\n\n    return a;\n  };\n})();\n","import * as glMatrix from \"./common.js\"\nimport * as mat3 from \"./mat3.js\"\nimport * as vec3 from \"./vec3.js\"\nimport * as vec4 from \"./vec4.js\"\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nexport function getAxisAngle(out_axis, q) {\n  let rad = Math.acos(q[3]) * 2.0;\n  let s = Math.sin(rad / 2.0);\n  if (s != 0.0) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let by = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bz = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nexport function calculateW(out, a) {\n  let x = a[0], y = a[1], z = a[2];\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  let omega, cosom, sinom, scale0, scale1;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if ( cosom < 0.0 ) {\n    cosom = -cosom;\n    bx = - bx;\n    by = - by;\n    bz = - bz;\n    bw = - bw;\n  }\n  // calculate coefficients\n  if ( (1.0 - cosom) > 0.000001 ) {\n    // standard case (slerp)\n    omega  = Math.acos(cosom);\n    sinom  = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let dot = a0*a0 + a1*a1 + a2*a2 + a3*a3;\n  let invDot = dot ? 1.0/dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0*invDot;\n  out[1] = -a1*invDot;\n  out[2] = -a2*invDot;\n  out[3] = a3*invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  let fTrace = m[0] + m[4] + m[8];\n  let fRoot;\n\n  if ( fTrace > 0.0 ) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5/fRoot;  // 1/(4w)\n    out[0] = (m[5]-m[7])*fRoot;\n    out[1] = (m[6]-m[2])*fRoot;\n    out[2] = (m[1]-m[3])*fRoot;\n  } else {\n    // |w| <= 1/2\n    let i = 0;\n    if ( m[4] > m[0] )\n      i = 1;\n    if ( m[8] > m[i*3+i] )\n      i = 2;\n    let j = (i+1)%3;\n    let k = (i+2)%3;\n\n    fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n    out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n    out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n  }\n\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, x, y, z) {\n    let halfToRad = 0.5 * Math.PI / 180.0;\n    x *= halfToRad;\n    y *= halfToRad;\n    z *= halfToRad;\n\n    let sx = Math.sin(x);\n    let cx = Math.cos(x);\n    let sy = Math.sin(y);\n    let cy = Math.cos(y);\n    let sz = Math.sin(z);\n    let cz = Math.cos(z);\n\n    out[0] = sx * cy * cz - cx * sy * sz;\n    out[1] = cx * sy * cz + sx * cy * sz;\n    out[2] = cx * cy * sz - sx * sy * cz;\n    out[3] = cx * cy * cz + sx * sy * sz;\n\n    return out;\n}\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nexport const clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nexport const fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const equals = vec4.equals;\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nexport const rotationTo = (function() {\n  let tmpvec3 = vec3.create();\n  let xUnitVec3 = vec3.fromValues(1,0,0);\n  let yUnitVec3 = vec3.fromValues(0,1,0);\n\n  return function(out, a, b) {\n    let dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001)\n        vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n})();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport const sqlerp = (function () {\n  let temp1 = create();\n  let temp2 = create();\n\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\n    return out;\n  };\n}());\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nexport const setAxes = (function() {\n  let matr = mat3.create();\n\n  return function(out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n\n    return normalize(out, fromMat3(out, matr));\n  };\n})();\n","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\nexport function create() {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = 0;\n  dq[1] = 0;\n  dq[2] = 0;\n  dq[3] = 1;\n  dq[4] = 0;\n  dq[5] = 0;\n  dq[6] = 0;\n  dq[7] = 0;\n  return dq;\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function clone(a) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  let ax = x2 * 0.5,\n    ay = y2 * 0.5,\n    az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {quat} q quaternion\n * @param {vec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromRotationTranslation(out, q, t) {\n  let ax = t[0] * 0.5,\n    ay = t[1] * 0.5,\n    az = t[2] * 0.5,\n    bx = q[0],\n    by = q[1],\n    bz = q[2],\n    bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Creates a dual quat from a translation\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {vec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {quat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {mat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  let outer = quat.create();\n  mat4.getRotation(outer, a);\n  let t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {quat2} a Dual Quaternion\n * @return {quat} real part\n */\nexport const getReal = quat.copy;\n\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {quat2} a Dual Quaternion\n * @return {quat} dual part\n */\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\nexport const setReal = quat.copy;\n\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {quat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\nexport function getTranslation(out, a) {\n  let ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to translate\n * @param {vec3} v vector to translate by\n * @returns {quat2} out\n */\nexport function translate(out, a, v) {\n  let ax1 = a[0],\n    ay1 = a[1],\n    az1 = a[2],\n    aw1 = a[3],\n    bx1 = v[0] * 0.5,\n    by1 = v[1] * 0.5,\n    bz1 = v[2] * 0.5,\n    ax2 = a[4],\n    ay2 = a[5],\n    az2 = a[6],\n    aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateX(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateY(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateZ(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {quat} q quaternion to rotate by\n * @returns {quat2} out\n */\nexport function rotateByQuatAppend(out, a, q) {\n  let qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3],\n    ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat} q quaternion to rotate by\n * @param {quat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\nexport function rotateByQuatPrepend(out, q, a) {\n  let qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3],\n    bx = a[0],\n    by = a[1],\n    bz = a[2],\n    bw = a[3];\n\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {vec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n  let axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  let bx = s * axis[0] / axisLength;\n  let by = s * axis[1] / axisLength;\n  let bz = s * axis[2] / axisLength;\n  let bw = Math.cos(rad);\n\n  let ax1 = a[0],\n    ay1 = a[1],\n    az1 = a[2],\n    aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n\n  let ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n\n  return out;\n}\n\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {quat2} out\n * @function\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {quat2} out\n */\nexport function multiply(out, a, b) {\n  let ax0 = a[0],\n    ay0 = a[1],\n    az0 = a[2],\n    aw0 = a[3],\n    bx1 = b[4],\n    by1 = b[5],\n    bz1 = b[6],\n    bw1 = b[7],\n    ax1 = a[4],\n    ay1 = a[5],\n    az1 = a[6],\n    aw1 = a[7],\n    bx0 = b[0],\n    by0 = b[1],\n    bz0 = b[2],\n    bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {quat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = quat.dot;\n\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\nexport function lerp(out, a, b, t) {\n  let mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\nexport function invert(out, a) {\n  let sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n\n/**\n * Calculates the length of a dual quat\n *\n * @param {quat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\nexport const length = quat.length;\n\n/**\n * Alias for {@link quat2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {quat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = quat.squaredLength;\n\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\nexport function normalize(out, a) {\n  let magnitude = squaredLength(a);\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    out[0] = a[0] / magnitude;\n    out[1] = a[1] / magnitude;\n    out[2] = a[2] / magnitude;\n    out[3] = a[3] / magnitude;\n    out[4] = a[4] / magnitude;\n    out[5] = a[5] / magnitude;\n    out[6] = a[6] / magnitude;\n    out[7] = a[7] / magnitude;\n  }\n  return out;\n}\n\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {quat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\nexport function str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat2} a the first dual quaternion.\n * @param {quat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n    a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {quat2} a the first dual quat.\n * @param {quat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5],\n    a6 = a[6],\n    a7 = a[7];\n  let b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n    Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n    Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n    Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n    Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n    Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n    Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n    Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)));\n}\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = 0;\n  out[1] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nexport function fromValues(x, y) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nexport function round (out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return Math.sqrt(x*x + y*y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return x*x + y*y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0],\n    y = a[1];\n  return Math.sqrt(x*x + y*y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength (a) {\n  var x = a[0],\n    y = a[1];\n  return x*x + y*y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n  var x = a[0],\n    y = a[1];\n  var len = x*x + y*y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n    ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0];\n  let y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {vec2} a The vec2 point to rotate\n * @param {vec2} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec2} out\n */\nexport function rotate(out, a, b, c) {\n  //Translate point to the origin\n  let p0 = a[0] - b[0],\n  p1 = a[1] - b[1],\n  sinC = Math.sin(c),\n  cosC = Math.cos(c);\n  \n  //perform rotation and translate to correct position\n  out[0] = p0*cosC - p1*sinC + b[0];\n  out[1] = p0*sinC + p1*cosC + b[1];\n\n  return out;\n}\n\n/**\n * Get the angle between two 2D vectors\n * @param {vec2} a The first operand\n * @param {vec2} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let x1 = a[0],\n    y1 = a[1],\n    x2 = b[0],\n    y2 = b[1];\n  \n  let len1 = x1*x1 + y1*y1;\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n  \n  let len2 = x2*x2 + y2*y2;\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n  \n  let cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n  \n  \n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1];\n  let b0 = b[0], b1 = b[1];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 2;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1];\n    }\n\n    return a;\n  };\n})();\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Vec2;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\n\nfunction Vec2(x, y) {\n  if (!(this instanceof Vec2)) {\n    return new Vec2(x, y);\n  }\n  if (typeof x === 'undefined') {\n    this.x = 0, this.y = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x, this.y = x.y;\n  } else {\n    this.x = x, this.y = y;\n  }\n  _ASSERT && Vec2.assert(this);\n};\n\nVec2.zero = function() {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = 0;\n  obj.y = 0;\n  return obj;\n};\n\nVec2.neo = function(x, y) {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = x;\n  obj.y = y;\n  return obj;\n};\n\nVec2.clone = function(v, depricated) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && common.assert(!depricated);\n  return Vec2.neo(v.x, v.y);\n};\n\nVec2.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\n/**\n * Does this vector contain finite coordinates?\n */\nVec2.isValid = function(v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y);\n}\n\nVec2.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Vec2.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec2!');\n  }\n}\n\nVec2.prototype.clone = function(depricated) {\n  return Vec2.clone(this, depricated);\n}\n\n/**\n * Set this vector to all zeros.\n * \n * @returns this\n */\nVec2.prototype.setZero = function() {\n  this.x = 0.0;\n  this.y = 0.0;\n  return this;\n}\n\n/**\n * Set this vector to some specified coordinates.\n * \n * @returns this\n */\nVec2.prototype.set = function(x, y) {\n  if (typeof x === 'object') {\n    _ASSERT && Vec2.assert(x);\n    this.x = x.x;\n    this.y = x.y;\n  } else {\n    _ASSERT && Math.assert(x);\n    _ASSERT && Math.assert(y);\n    this.x = x;\n    this.y = y;\n  }\n  return this;\n}\n\nVec2.prototype.wSet = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    _ASSERT && Math.assert(b);\n    _ASSERT && Vec2.assert(w);\n    x += b * w.x;\n    y += b * w.y;\n  }\n\n  // `this` may be `w`\n  this.x = x;\n  this.y = y;\n  return this;\n}\n\n/**\n * Add a vector to this vector.\n * \n * @returns this\n */\nVec2.prototype.add = function(w) {\n  _ASSERT && Vec2.assert(w);\n  this.x += w.x;\n  this.y += w.y;\n  return this;\n}\n\nVec2.prototype.wAdd = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    _ASSERT && Math.assert(b);\n    _ASSERT && Vec2.assert(w);\n    x += b * w.x;\n    y += b * w.y;\n  }\n\n  // `this` may be `w`\n  this.x += x;\n  this.y += y;\n  return this;\n}\n\nVec2.prototype.wSub = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    _ASSERT && Math.assert(b);\n    _ASSERT && Vec2.assert(w);\n    x += b * w.x;\n    y += b * w.y;\n  }\n\n  // `this` may be `w`\n  this.x -= x;\n  this.y -= y;\n  return this;\n}\n\n/**\n * Subtract a vector from this vector\n * \n * @returns this\n */\nVec2.prototype.sub = function(w) {\n  _ASSERT && Vec2.assert(w);\n  this.x -= w.x;\n  this.y -= w.y;\n  return this;\n}\n\n/**\n * Multiply this vector by a scalar.\n * \n * @returns this\n */\nVec2.prototype.mul = function(m) {\n  _ASSERT && Math.assert(m);\n  this.x *= m;\n  this.y *= m;\n  return this;\n}\n\n/**\n * Get the length of this vector (the norm).\n * \n * For performance, use this instead of lengthSquared (if possible).\n */\nVec2.prototype.length = function() {\n  return Vec2.lengthOf(this);\n}\n\n/**\n * Get the length squared.\n */\nVec2.prototype.lengthSquared = function() {\n  return Vec2.lengthSquared(this);\n}\n\n/**\n * Convert this vector into a unit vector.\n * \n * @returns old length\n */\nVec2.prototype.normalize = function() {\n  var length = this.length();\n  if (length < Math.EPSILON) {\n    return 0.0;\n  }\n  var invLength = 1.0 / length;\n  this.x *= invLength;\n  this.y *= invLength;\n  return length;\n}\n\n/**\n * Get the length of this vector (the norm).\n *\n * For performance, use this instead of lengthSquared (if possible).\n */\nVec2.lengthOf = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Math.sqrt(v.x * v.x + v.y * v.y);\n}\n\n/**\n * Get the length squared.\n */\nVec2.lengthSquared = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return v.x * v.x + v.y * v.y;\n}\n\nVec2.distance = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x, dy = v.y - w.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nVec2.distanceSquared = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x, dy = v.y - w.y;\n  return dx * dx + dy * dy;\n}\n\nVec2.areEqual = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v == w || typeof w === 'object' && w !== null && v.x == w.x && v.y == w.y;\n}\n\n/**\n * Get the skew vector such that dot(skew_vec, other) == cross(vec, other)\n */\nVec2.skew = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.y, v.x);\n}\n\n/**\n * Perform the dot product on two vectors.\n */\nVec2.dot = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v.x * w.x + v.y * w.y;\n}\n\n/**\n * Perform the cross product on two vectors. In 2D this produces a scalar.\n * \n * Perform the cross product on a vector and a scalar. In 2D this produces a\n * vector.\n */\nVec2.cross = function(v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y, -w * v.x);\n\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y, v * w.x);\n\n  } else {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return v.x * w.y - v.y * w.x\n  }\n}\n\nVec2.addCross = function(a, v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y + a.x, -w * v.x + a.y);\n\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y + a.x, v * w.x + a.y);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nVec2.add = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x + w.x, v.y + w.y);\n}\n\nVec2.wAdd = function(a, v, b, w) {\n  var r = Vec2.zero();\n  r.wAdd(a, v, b, w);\n  return r;\n}\n\nVec2.sub = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x - w.x, v.y - w.y);\n}\n\n Vec2.mul = function(a, b) {\n  if (typeof a === 'object') {\n    _ASSERT && Vec2.assert(a);\n    _ASSERT && Math.assert(b);\n    return Vec2.neo(a.x * b, a.y * b);\n\n  } else if (typeof b === 'object') {\n    _ASSERT && Math.assert(a);\n    _ASSERT && Vec2.assert(b);\n    return Vec2.neo(a * b.x, a * b.y);\n  }\n}\n\nVec2.prototype.neg = function() {\n  this.x = -this.x;\n  this.y = -this.y;\n  return this;\n}\n\nVec2.neg = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.x, -v.y);\n}\n\nVec2.abs = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(Math.abs(v.x), Math.abs(v.y));\n}\n\nVec2.mid = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo((v.x + w.x) * 0.5, (v.y + w.y) * 0.5);\n}\n\nVec2.upper = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.max(v.x, w.x), Math.max(v.y, w.y));\n}\n\nVec2.lower = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.min(v.x, w.x), Math.min(v.y, w.y));\n}\n\nVec2.prototype.clamp = function(max) {\n  var lengthSqr = this.x * this.x + this.y * this.y;\n  if (lengthSqr > max * max) {\n    var invLength = Math.invSqrt(lengthSqr);\n    this.x *= invLength * max;\n    this.y *= invLength * max;\n  }\n  return this;\n}\n\nVec2.clamp = function(v, max) {\n  v = Vec2.neo(v.x, v.y);\n  v.clamp(max);\n  return v;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar native = Math;\nvar math = module.exports = create(native);\n\nmath.EPSILON = 1e-9; // TODO\n\n/**\n * This function is used to ensure that a floating point number is not a NaN or\n * infinity.\n */\nmath.isFinite = function(x) {\n  return (typeof x === 'number') && isFinite(x) && !isNaN(x);\n}\n\nmath.assert = function(x) {\n  if (!_ASSERT) return;\n  if (!math.isFinite(x)) {\n    _DEBUG && common.debug(x);\n    throw new Error('Invalid Number!');\n  }\n}\n\n/**\n * TODO: This is a approximate yet fast inverse square-root.\n */\nmath.invSqrt = function(x) {\n  // TODO\n  return 1 / native.sqrt(x);\n}\n\n/**\n * Next Largest Power of 2 Given a binary integer value x, the next largest\n * power of 2 can be computed by a SWAR algorithm that recursively \"folds\" the\n * upper bits into the lower bits. This process yields a bit vector with the\n * same most significant 1 as x, but all 1's below it. Adding 1 to that value\n * yields the next largest power of 2. For a 32-bit value:\n */\nmath.nextPowerOfTwo = function(x) {\n  // TODO\n  x |= (x >> 1);\n  x |= (x >> 2);\n  x |= (x >> 4);\n  x |= (x >> 8);\n  x |= (x >> 16);\n  return x + 1;\n}\n\nmath.isPowerOfTwo = function(x) {\n  return x > 0 && (x & (x - 1)) == 0;\n}\n\nmath.mod = function(num, min, max) {\n  if (typeof min === 'undefined') {\n    max = 1, min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min, min = 0;\n  }\n  if (max > min) {\n    num = (num - min) % (max - min);\n    return num + (num < 0 ? max : min);\n  } else {\n    num = (num - max) % (min - max);\n    return num + (num <= 0 ? min : max);\n  }\n};\n\nmath.clamp = function(num, min, max) {\n  if (num < min) {\n    return min;\n  } else if (num > max) {\n    return max;\n  } else {\n    return num;\n  }\n};\n\nmath.random = function(min, max) {\n  if (typeof min === 'undefined') {\n    max = 1;\n    min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min;\n    min = 0;\n  }\n  return min == max ? min : native.random() * (max - min) + min;\n};\n","import * as twgl from '../../node_modules/twgl.js';\n\nexport {twgl};\n\nexport default twgl;\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexports.debug = function() {\n  if (!_DEBUG) return;\n  console.log.apply(console, arguments);\n};\n\nexports.assert = function(statement, err, log) {\n  if (!_ASSERT) return;\n  if (statement) return;\n  log && console.log(log);\n  throw new Error(err);\n};","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Rot;\n\nvar common = require('../util/common');\nvar Vec2 = require('./Vec2');\nvar Math = require('./Math');\n\n// TODO merge with Transform\n\n/**\n * Initialize from an angle in radians.\n */\nfunction Rot(angle) {\n  if (!(this instanceof Rot)) {\n    return new Rot(angle);\n  }\n  if (typeof angle === 'number') {\n    this.setAngle(angle);\n  } else if (typeof angle === 'object') {\n      this.set(angle);\n  } else {\n    this.setIdentity();\n  }\n}\n\nRot.neo = function(angle) {\n  var obj = Object.create(Rot.prototype);\n  obj.setAngle(angle);\n  return obj;\n};\n\nRot.clone = function(rot) {\n  _ASSERT && Rot.assert(rot);\n  var obj = Object.create(Rot.prototype);\n  obj.s = rot.s;\n  obj.c = rot.c;\n  return obj;\n};\n\nRot.identity = function(rot) {\n  var obj = Object.create(Rot.prototype);\n  obj.s = 0.0;\n  obj.c = 1.0;\n  return obj;\n};\n\nRot.isValid = function(o) {\n  return o && Math.isFinite(o.s) && Math.isFinite(o.c);\n}\n\nRot.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Rot.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Rot!');\n  }\n}\n\n/**\n * Set to the identity rotation.\n */\nRot.prototype.setIdentity = function() {\n  this.s = 0.0;\n  this.c = 1.0;\n}\n\nRot.prototype.set = function(angle) {\n  if (typeof angle === 'object') {\n    _ASSERT && Rot.assert(angle);\n    this.s = angle.s;\n    this.c = angle.c;\n\n  } else {\n    _ASSERT && Math.assert(angle);\n    // TODO_ERIN optimize\n    this.s = Math.sin(angle);\n    this.c = Math.cos(angle);\n  }\n}\n\n/**\n * Set using an angle in radians.\n */\nRot.prototype.setAngle = function(angle) {\n  _ASSERT && Math.assert(angle);\n  // TODO_ERIN optimize\n  this.s = Math.sin(angle);\n  this.c = Math.cos(angle);\n};\n\n/**\n * Get the angle in radians.\n */\nRot.prototype.getAngle = function() {\n  return Math.atan2(this.s, this.c);\n}\n\n/**\n * Get the x-axis.\n */\nRot.prototype.getXAxis = function() {\n  return Vec2.neo(this.c, this.s);\n}\n\n/**\n * Get the u-axis.\n */\nRot.prototype.getYAxis = function() {\n  return Vec2.neo(-this.s, this.c);\n}\n\n/**\n * Multiply two rotations: q * r\n * \n * @returns Rot\n * \n * Rotate a vector\n * \n * @returns Vec2\n */\nRot.mul = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m);\n    // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\n    // [qs qc] [rs rc] [qs*rc+qc*rs -qs*rs+qc*rc]\n    // s = qs * rc + qc * rs\n    // c = qc * rc - qs * rs\n    var qr = Rot.identity();\n    qr.s = rot.s * m.c + rot.c * m.s;\n    qr.c = rot.c * m.c - rot.s * m.s;\n    return qr;\n\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x - rot.s * m.y, rot.s * m.x + rot.c * m.y);\n  }\n}\n\nRot.mulSub = function(rot, v, w) {\n  var x = rot.c * (v.x - w.x) - rot.s * (v.y - w.y);\n  var y = rot.s * (v.x - w.y) + rot.c * (v.y - w.y);\n  return Vec2.neo(x, y);\n}\n\n/**\n * Transpose multiply two rotations: qT * r\n * \n * @returns Rot\n * \n * Inverse rotate a vector\n * \n * @returns Vec2\n */\nRot.mulT = function(rot, m) {\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m);\n    // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\n    // [-qs qc] [rs rc] [-qs*rc+qc*rs qs*rs+qc*rc]\n    // s = qc * rs - qs * rc\n    // c = qc * rc + qs * rs\n    var qr = Rot.identity();\n    qr.s = rot.c * m.s - rot.s * m.c;\n    qr.c = rot.c * m.c + rot.s * m.s;\n    return qr;\n\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x + rot.s * m.y, -rot.s * m.x + rot.c * m.y);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\n// TODO merge with World options?\n\nvar Settings = exports;\n\n/**\n * Tuning constants based on meters-kilograms-seconds (MKS) units.\n */\n\n// Collision\n/**\n * The maximum number of contact points between two convex shapes. Do not change\n * this value.\n */\nSettings.maxManifoldPoints = 2;\n\n/**\n * The maximum number of vertices on a convex polygon. You cannot increase this\n * too much because BlockAllocator has a maximum object size.\n */\nSettings.maxPolygonVertices = 12;\n\n/**\n * This is used to fatten AABBs in the dynamic tree. This allows proxies to move\n * by a small amount without triggering a tree adjustment. This is in meters.\n */\nSettings.aabbExtension = 0.1;\n\n/**\n * This is used to fatten AABBs in the dynamic tree. This is used to predict the\n * future position based on the current displacement. This is a dimensionless\n * multiplier.\n */\nSettings.aabbMultiplier = 2.0;\n\n/**\n * A small length used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\nSettings.linearSlop = 0.005;\nSettings.linearSlopSquared = Settings.linearSlop * Settings.linearSlop;\n\n/**\n * A small angle used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\nSettings.angularSlop = (2.0 / 180.0 * Math.PI);\n\n/**\n * The radius of the polygon/edge shape skin. This should not be modified.\n * Making this smaller means polygons will have an insufficient buffer for\n * continuous collision. Making it larger may create artifacts for vertex\n * collision.\n */\nSettings.polygonRadius = (2.0 * Settings.linearSlop);\n\n/**\n * Maximum number of sub-steps per contact in continuous physics simulation.\n */\nSettings.maxSubSteps = 8;\n\n// Dynamics\n\n/**\n * Maximum number of contacts to be handled to solve a TOI impact.\n */\nSettings.maxTOIContacts = 32;\n\n/**\n * Maximum iterations to solve a TOI.\n */\nSettings.maxTOIIterations = 20;\n\n/**\n * Maximum iterations to find Distance.\n */\nSettings.maxDistnceIterations = 20;\n\n/**\n * A velocity threshold for elastic collisions. Any collision with a relative\n * linear velocity below this threshold will be treated as inelastic.\n */\nSettings.velocityThreshold = 1.0;\n\n/**\n * The maximum linear position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\nSettings.maxLinearCorrection = 0.2;\n\n/**\n * The maximum angular position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\nSettings.maxAngularCorrection = (8.0 / 180.0 * Math.PI);\n\n/**\n * The maximum linear velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\nSettings.maxTranslation = 2.0;\nSettings.maxTranslationSquared = (Settings.maxTranslation * Settings.maxTranslation);\n\n/**\n * The maximum angular velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\nSettings.maxRotation = (0.5 * Math.PI)\nSettings.maxRotationSquared = (Settings.maxRotation * Settings.maxRotation)\n\n/**\n * This scale factor controls how fast overlap is resolved. Ideally this would\n * be 1 so that overlap is removed in one time step. However using values close\n * to 1 often lead to overshoot.\n */\nSettings.baumgarte = 0.2;\nSettings.toiBaugarte = 0.75;\n\n// Sleep\n\n/**\n * The time that a body must be still before it will go to sleep.\n */\nSettings.timeToSleep = 0.5;\n\n/**\n * A body cannot sleep if its linear velocity is above this tolerance.\n */\nSettings.linearSleepTolerance = 0.01;\n\nSettings.linearSleepToleranceSqr = Math.pow(Settings.linearSleepTolerance, 2);\n\n/**\n * A body cannot sleep if its angular velocity is above this tolerance.\n */\nSettings.angularSleepTolerance = (2.0 / 180.0 * Math.PI);\n\nSettings.angularSleepToleranceSqr = Math.pow(Settings.angularSleepTolerance, 2);\n\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Transform;\n\nvar common = require('../util/common');\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\n\n// TODO merge with Rot\n\n/**\n * A transform contains translation and rotation. It is used to represent the\n * position and orientation of rigid frames. Initialize using a position vector\n * and a rotation.\n * \n * @prop {Vec2} position\n * @prop {Rot} rotation\n */\nfunction Transform(position, rotation) {\n  if (!(this instanceof Transform)) {\n    return new Transform(position, rotation);\n  }\n  this.p = Vec2.zero();\n  this.q = Rot.identity();\n  if (typeof position !== 'undefined') {\n    this.p.set(position);\n  }\n  if (typeof rotation !== 'undefined') {\n    this.q.set(rotation);\n  }\n};\n\nTransform.clone = function(xf) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(xf.p);\n  obj.q = Rot.clone(xf.q);\n  return obj;\n};\n\nTransform.neo = function(position, rotation) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(position);\n  obj.q = Rot.clone(rotation);\n  return obj;\n};\n\nTransform.identity = function() {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.zero();\n  obj.q = Rot.identity();\n  return obj;\n};\n\n/**\n * Set this to the identity transform.\n */\nTransform.prototype.setIdentity = function() {\n  this.p.setZero();\n  this.q.setIdentity();\n}\n\n/**\n * Set this based on the position and angle.\n */\nTransform.prototype.set = function(a, b) {\n  if (Transform.isValid(a)) {\n    this.p.set(a.p);\n    this.q.set(a.q);\n  } else {\n    this.p.set(a);\n    this.q.set(b);\n  }\n}\n\nTransform.isValid = function(o) {\n  return o && Vec2.isValid(o.p) && Rot.isValid(o.q);\n}\n\nTransform.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Transform.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Transform!');\n  }\n}\n\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n * \n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\nTransform.mul = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  if (Array.isArray(b)) {\n    var arr = [];\n    for (var i = 0; i < b.length; i++) {\n      arr[i] = Transform.mul(a, b[i]);\n    }\n    return arr;\n\n  } else if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = (a.q.c * b.x - a.q.s * b.y) + a.p.x;\n    var y = (a.q.s * b.x + a.q.c * b.y) + a.p.y;\n    return Vec2.neo(x, y);\n\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b);\n    // v2 = A.q.Rot(B.q.Rot(v1) + B.p) + A.p\n    // = (A.q * B.q).Rot(v1) + A.q.Rot(B.p) + A.p\n    var xf = Transform.identity();\n    xf.q = Rot.mul(a.q, b.q);\n    xf.p = Vec2.add(Rot.mul(a.q, b.p), a.p);\n    return xf;\n  }\n}\n\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n * \n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\nTransform.mulT = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b)\n    var px = b.x - a.p.x;\n    var py = b.y - a.p.y;\n    var x = (a.q.c * px + a.q.s * py);\n    var y = (-a.q.s * px + a.q.c * py);\n    return Vec2.neo(x, y);\n\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b);\n    // v2 = A.q' * (B.q * v1 + B.p - A.p)\n    // = A.q' * B.q * v1 + A.q' * (B.p - A.p)\n    var xf = Transform.identity();\n    xf.q.set(Rot.mulT(a.q, b.q));\n    xf.p.set(Rot.mulT(a.q, Vec2.sub(b.p, a.p)));\n    return xf;\n  }\n}","function arraySetter(buffer) {\n    let count = 0;\n    return function (newElements) {\n        if (!newElements.length) {\n            newElements = [newElements];\n            if (count + newElements.length > buffer.length) {\n                throw new Error('attempting to append beyond buffer length');\n            }\n        }\n        buffer.set(newElements, count);\n        count += newElements.length;\n    }\n}\n\nfunction hsl2rgb (h, s, l) {\n\n    var r, g, b, m, c, x\n\n    if (!isFinite(h)) h = 0\n    if (!isFinite(s)) s = 0\n    if (!isFinite(l)) l = 0\n\n    h /= 60\n    if (h < 0) h = 6 - (-h % 6)\n    h %= 6\n\n    s = Math.max(0, Math.min(1, s / 100))\n    l = Math.max(0, Math.min(1, l / 100))\n\n    c = (1 - Math.abs((2 * l) - 1)) * s\n    x = c * (1 - Math.abs((h % 2) - 1))\n\n    if (h < 1) {\n        r = c\n        g = x\n        b = 0\n    } else if (h < 2) {\n        r = x\n        g = c\n        b = 0\n    } else if (h < 3) {\n        r = 0\n        g = c\n        b = x\n    } else if (h < 4) {\n        r = 0\n        g = x\n        b = c\n    } else if (h < 5) {\n        r = x\n        g = 0\n        b = c\n    } else {\n        r = c\n        g = 0\n        b = x\n    }\n\n    m = l - c / 2\n    r = Math.round((r + m) * 255)\n    g = Math.round((g + m) * 255)\n    b = Math.round((b + m) * 255)\n\n    return [r, g, b];\n}\n\nfunction attachFramebuffer(gl, width, height) {\n    const framebuffer = gl.createFramebuffer();\n    const texture = gl.createTexture();\n\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA8, width, height);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    return {\n        width,\n        height,\n        attach() {\n            gl.viewport(0, 0, width, height);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        },\n        detach() {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        },\n        texture,\n        framebuffer\n    }\n}\n\nfunction loadImage(src) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n\n        function removeListeners() {\n            img.removeEventListener('load', null);\n            img.removeEventListener('error', null);\n        }\n\n        img.addEventListener('load', () => {\n            removeListeners();\n            resolve(img);\n        });\n\n        img.addEventListener('error', (error) => {\n            removeListeners();\n            reject(error);\n        });\n\n        img.src = src;\n    });\n}\n\nexport {arraySetter, hsl2rgb, attachFramebuffer, loadImage};\n","export {Sprite};\n\nclass Sprite {\n    constructor(options) {\n        this.position = options.position || [0, 0];\n        this.size = options.size;// || [8, 8];\n        // default angle is 0 radians\n        this.angle = 0;\n        // default is offset sets the sprite's bottom left corner at position\n        this.offset = options.offset || [0, 0];\n        // default backgroundColor is transparent black\n        this.backgroundColor = options.backgroundColor || [0, 0, 0, 0];\n        this.textureName = options.textureName || null;\n    }\n}\n","import twgl from '../twgl';\n\nimport vs from '../../shaders/sprite.vert';\nimport fs from '../../shaders/sprite.frag';\n\nconst SPRITE_RECT_VERTICES = new Float32Array([\n    0, 0, // bottom left\n    1, 0, // bottom right\n    0, 1, // top left\n    1, 1  // top right\n]);\n\nclass SpriteRenderer {\n    constructor({game, textureInfo}) {\n        this.gl = game.gl;\n        this.loader = game.loader;\n        this.game = game;\n\n        this.textureInfo = textureInfo;\n\n        this.setup();\n    }\n\n    setup() {\n        this.programInfo = twgl.createProgramInfo(this.gl, [vs, fs]);\n\n        this._arrays = {\n            vertex: {\n                data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 0,\n                drawType: this.gl.STATIC_DRAW\n            },\n            position: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            offset: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            size: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            texcoord: {\n                data: [\n                    // 0, 0,\n                    // this.textureInfo.width, 0,\n                    // 0, this.textureInfo.height,\n                    // this.textureInfo.width, this.textureInfo.height\n                    0, 0,\n                    1, 0,\n                    0, 1,\n                    1, 1\n                ],\n                numComponents: 2,\n                divisor: 0,\n                type: Int16Array\n            },\n            indices: {\n                data: [\n                    0,\n                    1,\n                    2,\n                    3\n                ]\n            }\n        };\n\n        this.bufferInfo = twgl.createBufferInfoFromArrays(this.gl, this._arrays);\n        this.vao = twgl.createVertexArrayInfo(this.gl, this.programInfo, this.bufferInfo);\n    }\n\n    render(sprites, projection) {\n        const positions = new Float32Array(2 * sprites.length);\n        const sizes = new Float32Array(2 * sprites.length);\n        const offsets = new Float32Array(2 * sprites.length);\n\n        sprites.forEach((sprite, spriteIndex) => {\n            sprite.position.forEach((v, compIndex) => {\n                positions[spriteIndex * 2 + compIndex] = v;\n            });\n\n            sprite.size.forEach((v, compIndex) => {\n                sizes[spriteIndex * 2 + compIndex] = v;\n            });\n\n            sprite.offset.forEach((v, compIndex) => {\n                offsets[spriteIndex * 2 + compIndex] = v;\n            });\n        });\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.position,\n            positions\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.size,\n            sizes\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.offset,\n            offsets\n        );\n\n        this.gl.useProgram(this.programInfo.program);\n\n        twgl.setUniforms(this.programInfo, {\n            projection: projection,\n            texture: this.textureInfo.texture\n        });\n\n        twgl.setBuffersAndAttributes(this.gl, this.programInfo, this.vao);\n        twgl.drawBufferInfo(this.gl, this.vao, this.gl.TRIANGLE_STRIP, undefined, undefined, sprites.length);\n    }\n}\n\nexport {SpriteRenderer};\n","if (typeof Object.create == 'function') {\n  module.exports = function(proto, props) {\n    return Object.create.call(Object, proto, props);\n  };\n} else {\n  module.exports = function(proto, props) {\n    if (props)\n      throw Error('Second argument is not supported!');\n    if (typeof proto !== 'object' || proto === null)\n      throw Error('Invalid prototype!');\n    noop.prototype = proto;\n    return new noop;\n  };\n  function noop() {\n  }\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tvar styleTarget = fn.call(this, selector);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[selector] = styleTarget;\n\t\t}\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","import {mat3, mat4, vec2, vec3, vec4} from 'gl-matrix';\n\nimport {gl} from 'gl.js';\n\nconst POSITION_COMPONENTS = 2;\nconst SIZE_COMPONENTS = 2;\n\nclass TilemapTextureBuilder {\n    constructor(opts) {\n        Object.assign(this, {\n            tileWidth: 8,\n            tileHeight: 8,\n            width: 256,\n            height: 1,\n            layers: 2,\n            ...opts\n        });\n\n        this.copyIndex = 0;\n\n        this.texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n        gl.texStorage3D(gl.TEXTURE_2D_ARRAY, 1, gl.RGBA8, this.width * this.tileWidth, this.height * this.tileHeight, this.layers);\n        gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, null);\n\n    }\n\n    tileCoordinates() {\n        return {\n            x: this.copyIndex % this.width,\n            y: Math.floor(this.copyIndex / (this.width)) % this.height,\n            z: Math.floor(this.copyIndex / (this.width * this.height)) % this.layers\n        }\n    }\n\n    addTiles(src) {\n        const tileWide = this.detectWidthInTiles(src);\n        const tileHigh = this.detectHeightInTiles(src);\n\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        canvas.width = src.width;\n        canvas.height = src.height;\n\n        ctx.drawImage(src, 0, 0);\n\n        /**\n         *  Copies pixels in src from the tile starting at (tileX, tileY) to the current\n         * tile and advances the copy index\n         */\n        const copyTile = (tileX, tileY) => {\n            const imageData = ctx.getImageData(\n                tileX * this.tileWidth,\n                tileY * this.tileHeight,\n                this.tileWidth,\n                this.tileHeight\n            );\n\n            const {x, y, z} = this.tileCoordinates();\n\n            gl.texSubImage3D(\n                gl.TEXTURE_2D_ARRAY, // target\n                0,                   // mipmap level, always zero\n                x * this.tileWidth,  // xoffset\n                y * this.tileHeight, // yoffset\n                z,                   // zoffset\n                this.tileWidth,      // width\n                this.tileHeight,     // height\n                1,                   // depth\n                gl.RGBA,             // format, guaranteed by ImageData to be RGBA\n                gl.UNSIGNED_BYTE,    // type, guaranteed by ImageData to be Uint8ClampedArray, i.e. UNSIGNED_BYTE\n                imageData            // pixel data\n            );\n\n            this.copyIndex++;\n        };\n\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n\n        for (let y = 0; y < tileHigh; y++) {\n            for (let x = 0; x < tileWide; x++) {\n                if (this.isFull()) {\n                    break;\n                }\n                copyTile(x, y);\n            }\n        }\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, null);\n    }\n\n    detectWidthInTiles(src) {\n        return Math.floor(src.width / this.tileWidth);\n    }\n\n    detectHeightInTiles(src) {\n        return Math.floor(src.height / this.tileHeight);\n    }\n\n    get layerWidth() {\n        return this.tileWidth * this.width;\n    }\n\n    get layerHeight() {\n        return this.tileHeight * this.height;\n    }\n\n    get maxIndex() {\n        return this.width * this.height * this.layers;\n    }\n\n    isFull() {\n        return this.copyIndex >= this.maxIndex;\n    }\n\n    /**\n     * Reads texture from GL memory returns it as Array of ImageData\n     */\n    readback() {\n        // Uint8Array long enough to hold pixel data for one layer\n        const buffer = new Uint8Array(this.layerWidth * this.layerHeight * 4);\n        const fb = gl.createFramebuffer();\n        const layers = [];\n\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, fb);\n\n        for (let layer = 0; layer < this.layers; layer++) {\n            gl.framebufferTextureLayer(gl.READ_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, this.texture, 0, layer);\n            gl.readPixels(0, 0, this.layerWidth, this.layerHeight, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n            layers.push(new ImageData(new Uint8ClampedArray(buffer), this.layerWidth, this.layerHeight));\n        }\n\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n\n        return layers;\n    }\n}\n\n\nconst CoordinateConversions = {\n    canvasToWorldMatrix(viewMatrix, displaySize, virtualSize) {\n        const acc = mat4.create();\n        const temp = mat4.create();\n\n        // (scale to virtualSize) * (project viewport) * (subtract offset) * point\n\n        // (inverse viewMatrix) * (scale virtualSize / displaySize) * (flip y) * point\n\n        // flip y\n        mat4.multiply(\n            acc,\n            mat4.fromValues(\n                1,  0, 0, 0,\n                0, -1, 0, 0,\n                0,  0, 1, 0,\n                0, displaySize.height, 1, 1\n            ),\n            acc\n        );\n\n        // scale\n        mat4.fromScaling(\n            temp,\n            [virtualSize.width / displaySize.width, virtualSize.height / displaySize.height, 1]\n        );\n        mat4.multiply(acc, temp, acc);\n\n        // invert view\n        mat4.invert(temp, viewMatrix);\n        mat4.multiply(acc, temp, acc);\n\n        return acc;\n    }\n};\n\n\nexport {\n    TilemapTextureBuilder,\n    CoordinateConversions};\n","//     Underscore.js 1.9.1\n//     http://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global ||\n            this ||\n            {};\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n  if (typeof exports != 'undefined' && !exports.nodeType) {\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.9.1';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      // The 2-argument case is omitted because we’re not using it.\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee;\n\n  // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  };\n\n  // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n  _.iteratee = builtinIteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n  var restArguments = function(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n      switch (startIndex) {\n        case 0: return func.call(this, rest);\n        case 1: return func.call(this, arguments[0], rest);\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\n      }\n      var args = Array(startIndex + 1);\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function(obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  }\n\n  var deepGet = function(obj, path) {\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n    return length ? obj : void 0;\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  var createReduce = function(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    };\n\n    return function(obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  };\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = restArguments(function(obj, path, args) {\n    var contextPath, func;\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n    return _.map(obj, function(context) {\n      var method = func;\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n        if (context == null) return void 0;\n        method = context[path];\n      }\n      return method == null ? method : method.apply(context, args);\n    });\n  });\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection.\n  _.shuffle = function(obj) {\n    return _.sample(obj, Infinity);\n  };\n\n  // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n    return sample.slice(0, n);\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior, partition) {\n    return function(obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = group(function(result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true);\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, Boolean);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0, len = value.length;\n          while (j < len) output[idx++] = value[j++];\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = restArguments(function(array, otherArrays) {\n    return _.difference(array, otherArrays);\n  });\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = restArguments(function(arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  });\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = restArguments(function(array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  });\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = restArguments(_.unzip);\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions.\n  var createPredicateIndexFinder = function(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  };\n\n  // Returns the first index on an array-like that passes a predicate test.\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions.\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n  _.chunk = function(array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0, length = array.length;\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n    return result;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = restArguments(function(func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function(callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  });\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n  _.partial = restArguments(function(func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  });\n\n  _.partial.placeholder = _;\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = restArguments(function(obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  });\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = restArguments(function(func, wait, args) {\n    return setTimeout(function() {\n      return func.apply(null, args);\n    }, wait);\n  });\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function() {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n\n    var later = function(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function(args) {\n      if (timeout) clearTimeout(timeout);\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function() {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  _.restArguments = restArguments;\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  };\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, defaults) {\n    return function(obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test.\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Internal pick helper function to determine if `obj` has key `key`.\n  var keyInObj = function(value, key, obj) {\n    return key in obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = restArguments(function(obj, keys) {\n    var result = {}, iteratee = keys[0];\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  });\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = restArguments(function(obj, keys) {\n    var iteratee = keys[0], context;\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  });\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq, deepEq;\n  eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  deepEq = function(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n  var nodelist = root.document && root.document.childNodes;\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`?\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n      obj = obj[key];\n    }\n    return !!length;\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n  _.property = function(path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n    return function(obj) {\n      return deepGet(obj, path);\n    };\n  };\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    if (obj == null) {\n      return function(){};\n    }\n    return function(path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n  // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped.\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n  _.result = function(obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n    return obj;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offset.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    var render;\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var chainResult = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n    return _;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return String(this._wrapped);\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define == 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}());\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function(to, from) {\n  if (to === null || typeof to === 'undefined') {\n    to = {};\n  }\n\n  for ( var key in from) {\n    if (from.hasOwnProperty(key) && typeof to[key] === 'undefined') {\n      to[key] = from[key];\n    }\n  }\n\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    var symbols = Object.getOwnPropertySymbols(from);\n    for (var i = 0; i < symbols.length; i++) {\n      var symbol = symbols[i];\n      if (from.propertyIsEnumerable(symbol) && typeof to[key] === 'undefined') {\n        to[symbol] = from[symbol];\n      }\n    }\n  }\n  return to;\n};\n","import {mat3, mat4, vec2, vec3, vec4} from 'gl-matrix';\n\nexport {Camera};\n\nclass Camera {\n    constructor(bounds) {\n        this._translation = vec2.create();\n        this._bounds = bounds;\n    }\n\n    centerAt(x, y) {\n        this._translation.set([\n            -(x - this._bounds.width / 2),\n            -(y - this._bounds.height / 2)\n        ]);\n\n        return this;\n    }\n\n    translate(x, y) {\n        vec2.sub(this._translation, this._translation, [x, y]);\n\n        return this;\n    }\n\n    get position() {\n        return vec2.clone(this._translation);\n    }\n\n    get translation() {\n        return this.position;\n    }\n\n    get matrix() {\n        return mat4.fromTranslation(mat4.create(), vec4.fromValues(...this._translation, 0, 1));\n    }\n}\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html {\\n    height: 100%;\\n    background-color: #555;\\n    color: #eee;\\n    font-family: monospace;\\n}\\n\\nbody {\\n    padding: 0;\\n    margin: 0;\\n    height: 100%;\\n}\\n\\n#content {\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    flex-direction: column;\\n}\\n\\ncanvas.game {\\n    width: 100vw;\\n    height: 100vh;\\n}\\n\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!./app.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./app.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./app.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \"#version 300 es\\n\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nin vec2 v_tex_coord;\\n\\nuniform sampler2D texture;\\n\\nvoid main() {\\n    float line = v_tex_coord.y - floor(v_tex_coord.y);\\n\\n    vec4 texel = texelFetch(texture, ivec2(v_tex_coord), 0).xyzw;\\n    out_color = texel; //vec4(texel.xyz * (line >= 0.5 ? 1. : .25), texel.w);\\n}\\n\"","module.exports = \"#version 300 es\\n\\nlayout(location = 0) in vec2 vertex;\\nlayout(location = 1) in vec2 position;\\nlayout(location = 2) in vec2 size;\\nlayout(location = 3) in ivec2 texcoord;\\nlayout(location = 4) in vec2 offset;\\n\\nout vec2 v_tex_coord;\\n\\nuniform mat4 projection;\\n\\n/*\\n\\nConvert coordinates from world space to clip space\\n\\n 1. Scale [0, dim] -> [-1, 1] where dim is screen width or height\\n    dim pixels = 2 clip\\n    clip / pixels = 2 / dim\\n    x' = 2 * x / width - 1\\n    y' = 2 * y / height - 1\\n\\n    2/w  0   0   -1\\n     0  2/h  0   -1\\n     0   0   1    0\\n     0   0   0    1\\n*/\\n\\nvoid main() {\\n    vec4 transformed_position = projection * vec4(position + size * (vertex - offset), 0, 1);\\n    gl_Position = transformed_position;\\n    v_tex_coord = vec2(texcoord * ivec2(size));\\n}\\n\"","/*\n** Copyright (c) 2012 The Khronos Group Inc.\n**\n** Permission is hereby granted, free of charge, to any person obtaining a\n** copy of this software and/or associated documentation files (the\n** \"Materials\"), to deal in the Materials without restriction, including\n** without limitation the rights to use, copy, modify, merge, publish,\n** distribute, sublicense, and/or sell copies of the Materials, and to\n** permit persons to whom the Materials are furnished to do so, subject to\n** the following conditions:\n**\n** The above copyright notice and this permission notice shall be included\n** in all copies or substantial portions of the Materials.\n**\n** THE MATERIALS ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\n*/\n\n// Various functions for helping debug WebGL apps.\n\nWebGLDebugUtils = function() {\n\n/**\n * Wrapped logging function.\n * @param {string} msg Message to log.\n */\nvar log = function(msg) {\n  if (window.console && window.console.log) {\n    window.console.log(msg);\n  }\n};\n\n/**\n * Wrapped error logging function.\n * @param {string} msg Message to log.\n */\nvar error = function(msg) {\n  if (window.console && window.console.error) {\n    window.console.error(msg);\n  } else {\n    log(msg);\n  }\n};\n\n\n/**\n * Which arguments are enums based on the number of arguments to the function.\n * So\n *    'texImage2D': {\n *       9: { 0:true, 2:true, 6:true, 7:true },\n *       6: { 0:true, 2:true, 3:true, 4:true },\n *    },\n *\n * means if there are 9 arguments then 6 and 7 are enums, if there are 6\n * arguments 3 and 4 are enums\n *\n * @type {!Object.<number, !Object.<number, string>}\n */\nvar glValidEnumContexts = {\n  // Generic setters and getters\n\n  'enable': {1: { 0:true }},\n  'disable': {1: { 0:true }},\n  'getParameter': {1: { 0:true }},\n\n  // Rendering\n\n  'drawArrays': {3:{ 0:true }},\n  'drawElements': {4:{ 0:true, 2:true }},\n\n  // Shaders\n\n  'createShader': {1: { 0:true }},\n  'getShaderParameter': {2: { 1:true }},\n  'getProgramParameter': {2: { 1:true }},\n  'getShaderPrecisionFormat': {2: { 0: true, 1:true }},\n\n  // Vertex attributes\n\n  'getVertexAttrib': {2: { 1:true }},\n  'vertexAttribPointer': {6: { 2:true }},\n\n  // Textures\n\n  'bindTexture': {2: { 0:true }},\n  'activeTexture': {1: { 0:true }},\n  'getTexParameter': {2: { 0:true, 1:true }},\n  'texParameterf': {3: { 0:true, 1:true }},\n  'texParameteri': {3: { 0:true, 1:true, 2:true }},\n  // texImage2D and texSubImage2D are defined below with WebGL 2 entrypoints\n  'copyTexImage2D': {8: { 0:true, 2:true }},\n  'copyTexSubImage2D': {8: { 0:true }},\n  'generateMipmap': {1: { 0:true }},\n  // compressedTexImage2D and compressedTexSubImage2D are defined below with WebGL 2 entrypoints\n\n  // Buffer objects\n\n  'bindBuffer': {2: { 0:true }},\n  // bufferData and bufferSubData are defined below with WebGL 2 entrypoints\n  'getBufferParameter': {2: { 0:true, 1:true }},\n\n  // Renderbuffers and framebuffers\n\n  'pixelStorei': {2: { 0:true, 1:true }},\n  // readPixels is defined below with WebGL 2 entrypoints\n  'bindRenderbuffer': {2: { 0:true }},\n  'bindFramebuffer': {2: { 0:true }},\n  'checkFramebufferStatus': {1: { 0:true }},\n  'framebufferRenderbuffer': {4: { 0:true, 1:true, 2:true }},\n  'framebufferTexture2D': {5: { 0:true, 1:true, 2:true }},\n  'getFramebufferAttachmentParameter': {3: { 0:true, 1:true, 2:true }},\n  'getRenderbufferParameter': {2: { 0:true, 1:true }},\n  'renderbufferStorage': {4: { 0:true, 1:true }},\n\n  // Frame buffer operations (clear, blend, depth test, stencil)\n\n  'clear': {1: { 0: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }}},\n  'depthFunc': {1: { 0:true }},\n  'blendFunc': {2: { 0:true, 1:true }},\n  'blendFuncSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},\n  'blendEquation': {1: { 0:true }},\n  'blendEquationSeparate': {2: { 0:true, 1:true }},\n  'stencilFunc': {3: { 0:true }},\n  'stencilFuncSeparate': {4: { 0:true, 1:true }},\n  'stencilMaskSeparate': {2: { 0:true }},\n  'stencilOp': {3: { 0:true, 1:true, 2:true }},\n  'stencilOpSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},\n\n  // Culling\n\n  'cullFace': {1: { 0:true }},\n  'frontFace': {1: { 0:true }},\n\n  // ANGLE_instanced_arrays extension\n\n  'drawArraysInstancedANGLE': {4: { 0:true }},\n  'drawElementsInstancedANGLE': {5: { 0:true, 2:true }},\n\n  // EXT_blend_minmax extension\n\n  'blendEquationEXT': {1: { 0:true }},\n\n  // WebGL 2 Buffer objects\n\n  'bufferData': {\n    3: { 0:true, 2:true }, // WebGL 1\n    4: { 0:true, 2:true }, // WebGL 2\n    5: { 0:true, 2:true }  // WebGL 2\n  },\n  'bufferSubData': {\n    3: { 0:true }, // WebGL 1\n    4: { 0:true }, // WebGL 2\n    5: { 0:true }  // WebGL 2\n  },\n  'copyBufferSubData': {5: { 0:true, 1:true }},\n  'getBufferSubData': {3: { 0:true }, 4: { 0:true }, 5: { 0:true }},\n\n  // WebGL 2 Framebuffer objects\n\n  'blitFramebuffer': {10: { 8: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }, 9:true }},\n  'framebufferTextureLayer': {5: { 0:true, 1:true }},\n  'invalidateFramebuffer': {2: { 0:true }},\n  'invalidateSubFramebuffer': {6: { 0:true }},\n  'readBuffer': {1: { 0:true }},\n\n  // WebGL 2 Renderbuffer objects\n\n  'getInternalformatParameter': {3: { 0:true, 1:true, 2:true }},\n  'renderbufferStorageMultisample': {5: { 0:true, 2:true }},\n\n  // WebGL 2 Texture objects\n\n  'texStorage2D': {5: { 0:true, 2:true }},\n  'texStorage3D': {6: { 0:true, 2:true }},\n  'texImage2D': {\n    9: { 0:true, 2:true, 6:true, 7:true }, // WebGL 1 & 2\n    6: { 0:true, 2:true, 3:true, 4:true }, // WebGL 1\n    10: { 0:true, 2:true, 6:true, 7:true } // WebGL 2\n  },\n  'texImage3D': {\n    10: { 0:true, 2:true, 7:true, 8:true },\n    11: { 0:true, 2:true, 7:true, 8:true }\n  },\n  'texSubImage2D': {\n    9: { 0:true, 6:true, 7:true }, // WebGL 1 & 2\n    7: { 0:true, 4:true, 5:true }, // WebGL 1\n    10: { 0:true, 6:true, 7:true } // WebGL 2\n  },\n  'texSubImage3D': {\n    11: { 0:true, 8:true, 9:true },\n    12: { 0:true, 8:true, 9:true }\n  },\n  'copyTexSubImage3D': {9: { 0:true }},\n  'compressedTexImage2D': {\n    7: { 0: true, 2:true }, // WebGL 1 & 2\n    8: { 0: true, 2:true }, // WebGL 2\n    9: { 0: true, 2:true }  // WebGL 2\n  },\n  'compressedTexImage3D': {\n    8: { 0: true, 2:true },\n    9: { 0: true, 2:true },\n    10: { 0: true, 2:true }\n  },\n  'compressedTexSubImage2D': {\n    8: { 0: true, 6:true }, // WebGL 1 & 2\n    9: { 0: true, 6:true }, // WebGL 2\n    10: { 0: true, 6:true } // WebGL 2\n  },\n  'compressedTexSubImage3D': {\n    10: { 0: true, 8:true },\n    11: { 0: true, 8:true },\n    12: { 0: true, 8:true }\n  },\n\n  // WebGL 2 Vertex attribs\n\n  'vertexAttribIPointer': {5: { 2:true }},\n\n  // WebGL 2 Writing to the isDrawing buffer\n\n  'drawArraysInstanced': {4: { 0:true }},\n  'drawElementsInstanced': {5: { 0:true, 2:true }},\n  'drawRangeElements': {6: { 0:true, 4:true }},\n\n  // WebGL 2 Reading back pixels\n\n  'readPixels': {\n    7: { 4:true, 5:true }, // WebGL 1 & 2\n    8: { 4:true, 5:true }  // WebGL 2\n  },\n\n  // WebGL 2 Multiple Render Targets\n\n  'clearBufferfv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferiv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferuiv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferfi': {4: { 0:true }},\n\n  // WebGL 2 Query objects\n\n  'beginQuery': {2: { 0:true }},\n  'endQuery': {1: { 0:true }},\n  'getQuery': {2: { 0:true, 1:true }},\n  'getQueryParameter': {2: { 1:true }},\n\n  // WebGL 2 Sampler objects\n\n  'samplerParameteri': {3: { 1:true, 2:true }},\n  'samplerParameterf': {3: { 1:true }},\n  'getSamplerParameter': {2: { 1:true }},\n\n  // WebGL 2 Sync objects\n\n  'fenceSync': {2: { 0:true, 1: { 'enumBitwiseOr': [] } }},\n  'clientWaitSync': {3: { 1: { 'enumBitwiseOr': ['SYNC_FLUSH_COMMANDS_BIT'] } }},\n  'waitSync': {3: { 1: { 'enumBitwiseOr': [] } }},\n  'getSyncParameter': {2: { 1:true }},\n\n  // WebGL 2 Transform Feedback\n\n  'bindTransformFeedback': {2: { 0:true }},\n  'beginTransformFeedback': {1: { 0:true }},\n  'transformFeedbackVaryings': {3: { 2:true }},\n\n  // WebGL2 Uniform Buffer Objects and Transform Feedback Buffers\n\n  'bindBufferBase': {3: { 0:true }},\n  'bindBufferRange': {5: { 0:true }},\n  'getIndexedParameter': {2: { 0:true }},\n  'getActiveUniforms': {3: { 2:true }},\n  'getActiveUniformBlockParameter': {3: { 2:true }}\n};\n\n/**\n * Map of numbers to names.\n * @type {Object}\n */\nvar glEnums = null;\n\n/**\n * Map of names to numbers.\n * @type {Object}\n */\nvar enumStringToValue = null;\n\n/**\n * Initializes this module. Safe to call more than once.\n * @param {!WebGLRenderingContext} ctx A WebGL context. If\n *    you have more than one context it doesn't matter which one\n *    you pass in, it is only used to pull out constants.\n */\nfunction init(ctx) {\n  if (glEnums == null) {\n    glEnums = { };\n    enumStringToValue = { };\n    for (var propertyName in ctx) {\n      if (typeof ctx[propertyName] == 'number') {\n        glEnums[ctx[propertyName]] = propertyName;\n        enumStringToValue[propertyName] = ctx[propertyName];\n      }\n    }\n  }\n}\n\n/**\n * Checks the utils have been initialized.\n */\nfunction checkInit() {\n  if (glEnums == null) {\n    throw 'WebGLDebugUtils.init(ctx) not called';\n  }\n}\n\n/**\n * Returns true or false if value matches any WebGL enum\n * @param {*} value Value to check if it might be an enum.\n * @return {boolean} True if value matches one of the WebGL defined enums\n */\nfunction mightBeEnum(value) {\n  checkInit();\n  return (glEnums[value] !== undefined);\n}\n\n/**\n * Gets an string version of an WebGL enum.\n *\n * Example:\n *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\n *\n * @param {number} value Value to return an enum for\n * @return {string} The string version of the enum.\n */\nfunction glEnumToString(value) {\n  checkInit();\n  var name = glEnums[value];\n  return (name !== undefined) ? (\"gl.\" + name) :\n      (\"/*UNKNOWN WebGL ENUM*/ 0x\" + value.toString(16) + \"\");\n}\n\n/**\n * Returns the string version of a WebGL argument.\n * Attempts to convert enum arguments to strings.\n * @param {string} functionName the name of the WebGL function.\n * @param {number} numArgs the number of arguments passed to the function.\n * @param {number} argumentIndx the index of the argument.\n * @param {*} value The value of the argument.\n * @return {string} The value as a string.\n */\nfunction glFunctionArgToString(functionName, numArgs, argumentIndex, value) {\n  var funcInfo = glValidEnumContexts[functionName];\n  if (funcInfo !== undefined) {\n    var funcInfo = funcInfo[numArgs];\n    if (funcInfo !== undefined) {\n      if (funcInfo[argumentIndex]) {\n        if (typeof funcInfo[argumentIndex] === 'object' &&\n            funcInfo[argumentIndex]['enumBitwiseOr'] !== undefined) {\n          var enums = funcInfo[argumentIndex]['enumBitwiseOr'];\n          var orResult = 0;\n          var orEnums = [];\n          for (var i = 0; i < enums.length; ++i) {\n            var enumValue = enumStringToValue[enums[i]];\n            if ((value & enumValue) !== 0) {\n              orResult |= enumValue;\n              orEnums.push(glEnumToString(enumValue));\n            }\n          }\n          if (orResult === value) {\n            return orEnums.join(' | ');\n          } else {\n            return glEnumToString(value);\n          }\n        } else {\n          return glEnumToString(value);\n        }\n      }\n    }\n  }\n  if (value === null) {\n    return \"null\";\n  } else if (value === undefined) {\n    return \"undefined\";\n  } else {\n    return value.toString();\n  }\n}\n\n/**\n * Converts the arguments of a WebGL function to a string.\n * Attempts to convert enum arguments to strings.\n *\n * @param {string} functionName the name of the WebGL function.\n * @param {number} args The arguments.\n * @return {string} The arguments as a string.\n */\nfunction glFunctionArgsToString(functionName, args) {\n  // apparently we can't do args.join(\",\");\n  var argStr = \"\";\n  var numArgs = args.length;\n  for (var ii = 0; ii < numArgs; ++ii) {\n    argStr += ((ii == 0) ? '' : ', ') +\n        glFunctionArgToString(functionName, numArgs, ii, args[ii]);\n  }\n  return argStr;\n};\n\n\nfunction makePropertyWrapper(wrapper, original, propertyName) {\n  //log(\"wrap prop: \" + propertyName);\n  wrapper.__defineGetter__(propertyName, function() {\n    return original[propertyName];\n  });\n  // TODO(gmane): this needs to handle properties that take more than\n  // one value?\n  wrapper.__defineSetter__(propertyName, function(value) {\n    //log(\"set: \" + propertyName);\n    original[propertyName] = value;\n  });\n}\n\n// Makes a function that calls a function on another object.\nfunction makeFunctionWrapper(original, functionName) {\n  //log(\"wrap fn: \" + functionName);\n  var f = original[functionName];\n  return function() {\n    //log(\"call: \" + functionName);\n    var result = f.apply(original, arguments);\n    return result;\n  };\n}\n\n/**\n * Given a WebGL context returns a wrapped context that calls\n * gl.getError after every command and calls a function if the\n * result is not gl.NO_ERROR.\n *\n * @param {!WebGLRenderingContext} ctx The webgl context to\n *        wrap.\n * @param {!function(err, funcName, args): void} opt_onErrorFunc\n *        The function to call when gl.getError returns an\n *        error. If not specified the default function calls\n *        console.log with a message.\n * @param {!function(funcName, args): void} opt_onFunc The\n *        function to call when each webgl function is called.\n *        You can use this to log all calls for example.\n * @param {!WebGLRenderingContext} opt_err_ctx The webgl context\n *        to call getError on if different than ctx.\n */\nfunction makeDebugContext(ctx, opt_onErrorFunc, opt_onFunc, opt_err_ctx) {\n  opt_err_ctx = opt_err_ctx || ctx;\n  init(ctx);\n  opt_onErrorFunc = opt_onErrorFunc || function(err, functionName, args) {\n        // apparently we can't do args.join(\",\");\n        var argStr = \"\";\n        var numArgs = args.length;\n        for (var ii = 0; ii < numArgs; ++ii) {\n          argStr += ((ii == 0) ? '' : ', ') +\n              glFunctionArgToString(functionName, numArgs, ii, args[ii]);\n        }\n        error(\"WebGL error \"+ glEnumToString(err) + \" in \"+ functionName +\n              \"(\" + argStr + \")\");\n      };\n\n  // Holds booleans for each GL error so after we get the error ourselves\n  // we can still return it to the client app.\n  var glErrorShadow = { };\n\n  // Makes a function that calls a WebGL function and then calls getError.\n  function makeErrorWrapper(ctx, functionName) {\n    return function() {\n      if (opt_onFunc) {\n        opt_onFunc(functionName, arguments);\n      }\n      var result = ctx[functionName].apply(ctx, arguments);\n      var err = opt_err_ctx.getError();\n      if (err != 0) {\n        glErrorShadow[err] = true;\n        opt_onErrorFunc(err, functionName, arguments);\n      }\n      return result;\n    };\n  }\n\n  // Make a an object that has a copy of every property of the WebGL context\n  // but wraps all functions.\n  var wrapper = {};\n  for (var propertyName in ctx) {\n    if (typeof ctx[propertyName] == 'function') {\n      if (propertyName != 'getExtension') {\n        wrapper[propertyName] = makeErrorWrapper(ctx, propertyName);\n      } else {\n        var wrapped = makeErrorWrapper(ctx, propertyName);\n        wrapper[propertyName] = function () {\n          var result = wrapped.apply(ctx, arguments);\n          if (!result) {\n            return null;\n          }\n          return makeDebugContext(result, opt_onErrorFunc, opt_onFunc, opt_err_ctx);\n        };\n      }\n    } else {\n      makePropertyWrapper(wrapper, ctx, propertyName);\n    }\n  }\n\n  // Override the getError function with one that returns our saved results.\n  wrapper.getError = function() {\n    for (var err in glErrorShadow) {\n      if (glErrorShadow.hasOwnProperty(err)) {\n        if (glErrorShadow[err]) {\n          glErrorShadow[err] = false;\n          return err;\n        }\n      }\n    }\n    return ctx.NO_ERROR;\n  };\n\n  return wrapper;\n}\n\nfunction resetToInitialState(ctx) {\n  var isWebGL2RenderingContext = !!ctx.createTransformFeedback;\n\n  if (isWebGL2RenderingContext) {\n    ctx.bindVertexArray(null);\n  }\n\n  var numAttribs = ctx.getParameter(ctx.MAX_VERTEX_ATTRIBS);\n  var tmp = ctx.createBuffer();\n  ctx.bindBuffer(ctx.ARRAY_BUFFER, tmp);\n  for (var ii = 0; ii < numAttribs; ++ii) {\n    ctx.disableVertexAttribArray(ii);\n    ctx.vertexAttribPointer(ii, 4, ctx.FLOAT, false, 0, 0);\n    ctx.vertexAttrib1f(ii, 0);\n    if (isWebGL2RenderingContext) {\n      ctx.vertexAttribDivisor(ii, 0);\n    }\n  }\n  ctx.deleteBuffer(tmp);\n\n  var numTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);\n  for (var ii = 0; ii < numTextureUnits; ++ii) {\n    ctx.activeTexture(ctx.TEXTURE0 + ii);\n    ctx.bindTexture(ctx.TEXTURE_CUBE_MAP, null);\n    ctx.bindTexture(ctx.TEXTURE_2D, null);\n    if (isWebGL2RenderingContext) {\n      ctx.bindTexture(ctx.TEXTURE_2D_ARRAY, null);\n      ctx.bindTexture(ctx.TEXTURE_3D, null);\n      ctx.bindSampler(ii, null);\n    }\n  }\n\n  ctx.activeTexture(ctx.TEXTURE0);\n  ctx.useProgram(null);\n  ctx.bindBuffer(ctx.ARRAY_BUFFER, null);\n  ctx.bindBuffer(ctx.ELEMENT_ARRAY_BUFFER, null);\n  ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);\n  ctx.bindRenderbuffer(ctx.RENDERBUFFER, null);\n  ctx.disable(ctx.BLEND);\n  ctx.disable(ctx.CULL_FACE);\n  ctx.disable(ctx.DEPTH_TEST);\n  ctx.disable(ctx.DITHER);\n  ctx.disable(ctx.SCISSOR_TEST);\n  ctx.blendColor(0, 0, 0, 0);\n  ctx.blendEquation(ctx.FUNC_ADD);\n  ctx.blendFunc(ctx.ONE, ctx.ZERO);\n  ctx.clearColor(0, 0, 0, 0);\n  ctx.clearDepth(1);\n  ctx.clearStencil(-1);\n  ctx.colorMask(true, true, true, true);\n  ctx.cullFace(ctx.BACK);\n  ctx.depthFunc(ctx.LESS);\n  ctx.depthMask(true);\n  ctx.depthRange(0, 1);\n  ctx.frontFace(ctx.CCW);\n  ctx.hint(ctx.GENERATE_MIPMAP_HINT, ctx.DONT_CARE);\n  ctx.lineWidth(1);\n  ctx.pixelStorei(ctx.PACK_ALIGNMENT, 4);\n  ctx.pixelStorei(ctx.UNPACK_ALIGNMENT, 4);\n  ctx.pixelStorei(ctx.UNPACK_FLIP_Y_WEBGL, false);\n  ctx.pixelStorei(ctx.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n  // TODO: Delete this IF.\n  if (ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL) {\n    ctx.pixelStorei(ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL, ctx.BROWSER_DEFAULT_WEBGL);\n  }\n  ctx.polygonOffset(0, 0);\n  ctx.sampleCoverage(1, false);\n  ctx.scissor(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.stencilFunc(ctx.ALWAYS, 0, 0xFFFFFFFF);\n  ctx.stencilMask(0xFFFFFFFF);\n  ctx.stencilOp(ctx.KEEP, ctx.KEEP, ctx.KEEP);\n  ctx.viewport(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.clear(ctx.COLOR_BUFFER_BIT | ctx.DEPTH_BUFFER_BIT | ctx.STENCIL_BUFFER_BIT);\n\n  if (isWebGL2RenderingContext) {\n    ctx.drawBuffers([ctx.BACK]);\n    ctx.readBuffer(ctx.BACK);\n    ctx.bindBuffer(ctx.COPY_READ_BUFFER, null);\n    ctx.bindBuffer(ctx.COPY_WRITE_BUFFER, null);\n    ctx.bindBuffer(ctx.PIXEL_PACK_BUFFER, null);\n    ctx.bindBuffer(ctx.PIXEL_UNPACK_BUFFER, null);\n    var numTransformFeedbacks = ctx.getParameter(ctx.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS);\n    for (var ii = 0; ii < numTransformFeedbacks; ++ii) {\n      ctx.bindBufferBase(ctx.TRANSFORM_FEEDBACK_BUFFER, ii, null);\n    }\n    var numUBOs = ctx.getParameter(ctx.MAX_UNIFORM_BUFFER_BINDINGS);\n    for (var ii = 0; ii < numUBOs; ++ii) {\n      ctx.bindBufferBase(ctx.UNIFORM_BUFFER, ii, null);\n    }\n    ctx.disable(ctx.RASTERIZER_DISCARD);\n    ctx.pixelStorei(ctx.UNPACK_IMAGE_HEIGHT, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_IMAGES, 0);\n    ctx.pixelStorei(ctx.UNPACK_ROW_LENGTH, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_ROWS, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_PIXELS, 0);\n    ctx.pixelStorei(ctx.PACK_ROW_LENGTH, 0);\n    ctx.pixelStorei(ctx.PACK_SKIP_ROWS, 0);\n    ctx.pixelStorei(ctx.PACK_SKIP_PIXELS, 0);\n    ctx.hint(ctx.FRAGMENT_SHADER_DERIVATIVE_HINT, ctx.DONT_CARE);\n  }\n\n  // TODO: This should NOT be needed but Firefox fails with 'hint'\n  while(ctx.getError());\n}\n\nfunction makeLostContextSimulatingCanvas(canvas) {\n  var unwrappedContext_;\n  var wrappedContext_;\n  var onLost_ = [];\n  var onRestored_ = [];\n  var wrappedContext_ = {};\n  var contextId_ = 1;\n  var contextLost_ = false;\n  var resourceId_ = 0;\n  var resourceDb_ = [];\n  var numCallsToLoseContext_ = 0;\n  var numCalls_ = 0;\n  var canRestore_ = false;\n  var restoreTimeout_ = 0;\n  var isWebGL2RenderingContext;\n\n  // Holds booleans for each GL error so can simulate errors.\n  var glErrorShadow_ = { };\n\n  canvas.getContext = function(f) {\n    return function() {\n      var ctx = f.apply(canvas, arguments);\n      // Did we get a context and is it a WebGL context?\n      if ((ctx instanceof WebGLRenderingContext) || (window.WebGL2RenderingContext && (ctx instanceof WebGL2RenderingContext))) {\n        if (ctx != unwrappedContext_) {\n          if (unwrappedContext_) {\n            throw \"got different context\"\n          }\n          isWebGL2RenderingContext = window.WebGL2RenderingContext && (ctx instanceof WebGL2RenderingContext);\n          unwrappedContext_ = ctx;\n          wrappedContext_ = makeLostContextSimulatingContext(unwrappedContext_);\n        }\n        return wrappedContext_;\n      }\n      return ctx;\n    }\n  }(canvas.getContext);\n\n  function wrapEvent(listener) {\n    if (typeof(listener) == \"function\") {\n      return listener;\n    } else {\n      return function(info) {\n        listener.handleEvent(info);\n      }\n    }\n  }\n\n  var addOnContextLostListener = function(listener) {\n    onLost_.push(wrapEvent(listener));\n  };\n\n  var addOnContextRestoredListener = function(listener) {\n    onRestored_.push(wrapEvent(listener));\n  };\n\n\n  function wrapAddEventListener(canvas) {\n    var f = canvas.addEventListener;\n    canvas.addEventListener = function(type, listener, bubble) {\n      switch (type) {\n        case 'webglcontextlost':\n          addOnContextLostListener(listener);\n          break;\n        case 'webglcontextrestored':\n          addOnContextRestoredListener(listener);\n          break;\n        default:\n          f.apply(canvas, arguments);\n      }\n    };\n  }\n\n  wrapAddEventListener(canvas);\n\n  canvas.loseContext = function() {\n    if (!contextLost_) {\n      contextLost_ = true;\n      numCallsToLoseContext_ = 0;\n      ++contextId_;\n      while (unwrappedContext_.getError());\n      clearErrors();\n      glErrorShadow_[unwrappedContext_.CONTEXT_LOST_WEBGL] = true;\n      var event = makeWebGLContextEvent(\"context lost\");\n      var callbacks = onLost_.slice();\n      setTimeout(function() {\n          //log(\"numCallbacks:\" + callbacks.length);\n          for (var ii = 0; ii < callbacks.length; ++ii) {\n            //log(\"calling callback:\" + ii);\n            callbacks[ii](event);\n          }\n          if (restoreTimeout_ >= 0) {\n            setTimeout(function() {\n                canvas.restoreContext();\n              }, restoreTimeout_);\n          }\n        }, 0);\n    }\n  };\n\n  canvas.restoreContext = function() {\n    if (contextLost_) {\n      if (onRestored_.length) {\n        setTimeout(function() {\n            if (!canRestore_) {\n              throw \"can not restore. webglcontestlost listener did not call event.preventDefault\";\n            }\n            freeResources();\n            resetToInitialState(unwrappedContext_);\n            contextLost_ = false;\n            numCalls_ = 0;\n            canRestore_ = false;\n            var callbacks = onRestored_.slice();\n            var event = makeWebGLContextEvent(\"context restored\");\n            for (var ii = 0; ii < callbacks.length; ++ii) {\n              callbacks[ii](event);\n            }\n          }, 0);\n      }\n    }\n  };\n\n  canvas.loseContextInNCalls = function(numCalls) {\n    if (contextLost_) {\n      throw \"You can not ask a lost contet to be lost\";\n    }\n    numCallsToLoseContext_ = numCalls_ + numCalls;\n  };\n\n  canvas.getNumCalls = function() {\n    return numCalls_;\n  };\n\n  canvas.setRestoreTimeout = function(timeout) {\n    restoreTimeout_ = timeout;\n  };\n\n  function isWebGLObject(obj) {\n    //return false;\n    return (obj instanceof WebGLBuffer ||\n            obj instanceof WebGLFramebuffer ||\n            obj instanceof WebGLProgram ||\n            obj instanceof WebGLRenderbuffer ||\n            obj instanceof WebGLShader ||\n            obj instanceof WebGLTexture);\n  }\n\n  function checkResources(args) {\n    for (var ii = 0; ii < args.length; ++ii) {\n      var arg = args[ii];\n      if (isWebGLObject(arg)) {\n        return arg.__webglDebugContextLostId__ == contextId_;\n      }\n    }\n    return true;\n  }\n\n  function clearErrors() {\n    var k = Object.keys(glErrorShadow_);\n    for (var ii = 0; ii < k.length; ++ii) {\n      delete glErrorShadow_[k[ii]];\n    }\n  }\n\n  function loseContextIfTime() {\n    ++numCalls_;\n    if (!contextLost_) {\n      if (numCallsToLoseContext_ == numCalls_) {\n        canvas.loseContext();\n      }\n    }\n  }\n\n  // Makes a function that simulates WebGL when out of context.\n  function makeLostContextFunctionWrapper(ctx, functionName) {\n    var f = ctx[functionName];\n    return function() {\n      // log(\"calling:\" + functionName);\n      // Only call the functions if the context is not lost.\n      loseContextIfTime();\n      if (!contextLost_) {\n        //if (!checkResources(arguments)) {\n        //  glErrorShadow_[wrappedContext_.INVALID_OPERATION] = true;\n        //  return;\n        //}\n        var result = f.apply(ctx, arguments);\n        return result;\n      }\n    };\n  }\n\n  function freeResources() {\n    for (var ii = 0; ii < resourceDb_.length; ++ii) {\n      var resource = resourceDb_[ii];\n      if (resource instanceof WebGLBuffer) {\n        unwrappedContext_.deleteBuffer(resource);\n      } else if (resource instanceof WebGLFramebuffer) {\n        unwrappedContext_.deleteFramebuffer(resource);\n      } else if (resource instanceof WebGLProgram) {\n        unwrappedContext_.deleteProgram(resource);\n      } else if (resource instanceof WebGLRenderbuffer) {\n        unwrappedContext_.deleteRenderbuffer(resource);\n      } else if (resource instanceof WebGLShader) {\n        unwrappedContext_.deleteShader(resource);\n      } else if (resource instanceof WebGLTexture) {\n        unwrappedContext_.deleteTexture(resource);\n      }\n      else if (isWebGL2RenderingContext) {\n        if (resource instanceof WebGLQuery) {\n          unwrappedContext_.deleteQuery(resource);\n        } else if (resource instanceof WebGLSampler) {\n          unwrappedContext_.deleteSampler(resource);\n        } else if (resource instanceof WebGLSync) {\n          unwrappedContext_.deleteSync(resource);\n        } else if (resource instanceof WebGLTransformFeedback) {\n          unwrappedContext_.deleteTransformFeedback(resource);\n        } else if (resource instanceof WebGLVertexArrayObject) {\n          unwrappedContext_.deleteVertexArray(resource);\n        }\n      }\n    }\n  }\n\n  function makeWebGLContextEvent(statusMessage) {\n    return {\n      statusMessage: statusMessage,\n      preventDefault: function() {\n          canRestore_ = true;\n        }\n    };\n  }\n\n  return canvas;\n\n  function makeLostContextSimulatingContext(ctx) {\n    // copy all functions and properties to wrapper\n    for (var propertyName in ctx) {\n      if (typeof ctx[propertyName] == 'function') {\n         wrappedContext_[propertyName] = makeLostContextFunctionWrapper(\n             ctx, propertyName);\n       } else {\n         makePropertyWrapper(wrappedContext_, ctx, propertyName);\n       }\n    }\n\n    // Wrap a few functions specially.\n    wrappedContext_.getError = function() {\n      loseContextIfTime();\n      if (!contextLost_) {\n        var err;\n        while (err = unwrappedContext_.getError()) {\n          glErrorShadow_[err] = true;\n        }\n      }\n      for (var err in glErrorShadow_) {\n        if (glErrorShadow_[err]) {\n          delete glErrorShadow_[err];\n          return err;\n        }\n      }\n      return wrappedContext_.NO_ERROR;\n    };\n\n    var creationFunctions = [\n      \"createBuffer\",\n      \"createFramebuffer\",\n      \"createProgram\",\n      \"createRenderbuffer\",\n      \"createShader\",\n      \"createTexture\"\n    ];\n    if (isWebGL2RenderingContext) {\n      creationFunctions.push(\n        \"createQuery\",\n        \"createSampler\",\n        \"fenceSync\",\n        \"createTransformFeedback\",\n        \"createVertexArray\"\n      );\n    }\n    for (var ii = 0; ii < creationFunctions.length; ++ii) {\n      var functionName = creationFunctions[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return null;\n          }\n          var obj = f.apply(ctx, arguments);\n          obj.__webglDebugContextLostId__ = contextId_;\n          resourceDb_.push(obj);\n          return obj;\n        };\n      }(ctx[functionName]);\n    }\n\n    var functionsThatShouldReturnNull = [\n      \"getActiveAttrib\",\n      \"getActiveUniform\",\n      \"getBufferParameter\",\n      \"getContextAttributes\",\n      \"getAttachedShaders\",\n      \"getFramebufferAttachmentParameter\",\n      \"getParameter\",\n      \"getProgramParameter\",\n      \"getProgramInfoLog\",\n      \"getRenderbufferParameter\",\n      \"getShaderParameter\",\n      \"getShaderInfoLog\",\n      \"getShaderSource\",\n      \"getTexParameter\",\n      \"getUniform\",\n      \"getUniformLocation\",\n      \"getVertexAttrib\"\n    ];\n    if (isWebGL2RenderingContext) {\n      functionsThatShouldReturnNull.push(\n        \"getInternalformatParameter\",\n        \"getQuery\",\n        \"getQueryParameter\",\n        \"getSamplerParameter\",\n        \"getSyncParameter\",\n        \"getTransformFeedbackVarying\",\n        \"getIndexedParameter\",\n        \"getUniformIndices\",\n        \"getActiveUniforms\",\n        \"getActiveUniformBlockParameter\",\n        \"getActiveUniformBlockName\"\n      );\n    }\n    for (var ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {\n      var functionName = functionsThatShouldReturnNull[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return null;\n          }\n          return f.apply(ctx, arguments);\n        }\n      }(wrappedContext_[functionName]);\n    }\n\n    var isFunctions = [\n      \"isBuffer\",\n      \"isEnabled\",\n      \"isFramebuffer\",\n      \"isProgram\",\n      \"isRenderbuffer\",\n      \"isShader\",\n      \"isTexture\"\n    ];\n    if (isWebGL2RenderingContext) {\n      isFunctions.push(\n        \"isQuery\",\n        \"isSampler\",\n        \"isSync\",\n        \"isTransformFeedback\",\n        \"isVertexArray\"\n      );\n    }\n    for (var ii = 0; ii < isFunctions.length; ++ii) {\n      var functionName = isFunctions[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return false;\n          }\n          return f.apply(ctx, arguments);\n        }\n      }(wrappedContext_[functionName]);\n    }\n\n    wrappedContext_.checkFramebufferStatus = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return wrappedContext_.FRAMEBUFFER_UNSUPPORTED;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.checkFramebufferStatus);\n\n    wrappedContext_.getAttribLocation = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return -1;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.getAttribLocation);\n\n    wrappedContext_.getVertexAttribOffset = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return 0;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.getVertexAttribOffset);\n\n    wrappedContext_.isContextLost = function() {\n      return contextLost_;\n    };\n\n    if (isWebGL2RenderingContext) {\n      wrappedContext_.getFragDataLocation = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return -1;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.getFragDataLocation);\n\n      wrappedContext_.clientWaitSync = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return wrappedContext_.WAIT_FAILED;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.clientWaitSync);\n\n      wrappedContext_.getUniformBlockIndex = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return wrappedContext_.INVALID_INDEX;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.getUniformBlockIndex);\n    }\n\n    return wrappedContext_;\n  }\n}\n\nreturn {\n  /**\n   * Initializes this module. Safe to call more than once.\n   * @param {!WebGLRenderingContext} ctx A WebGL context. If\n   *    you have more than one context it doesn't matter which one\n   *    you pass in, it is only used to pull out constants.\n   */\n  'init': init,\n\n  /**\n   * Returns true or false if value matches any WebGL enum\n   * @param {*} value Value to check if it might be an enum.\n   * @return {boolean} True if value matches one of the WebGL defined enums\n   */\n  'mightBeEnum': mightBeEnum,\n\n  /**\n   * Gets an string version of an WebGL enum.\n   *\n   * Example:\n   *   WebGLDebugUtil.init(ctx);\n   *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\n   *\n   * @param {number} value Value to return an enum for\n   * @return {string} The string version of the enum.\n   */\n  'glEnumToString': glEnumToString,\n\n  /**\n   * Converts the argument of a WebGL function to a string.\n   * Attempts to convert enum arguments to strings.\n   *\n   * Example:\n   *   WebGLDebugUtil.init(ctx);\n   *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 2, 0, gl.TEXTURE_2D);\n   *\n   * would return 'TEXTURE_2D'\n   *\n   * @param {string} functionName the name of the WebGL function.\n   * @param {number} numArgs The number of arguments\n   * @param {number} argumentIndx the index of the argument.\n   * @param {*} value The value of the argument.\n   * @return {string} The value as a string.\n   */\n  'glFunctionArgToString': glFunctionArgToString,\n\n  /**\n   * Converts the arguments of a WebGL function to a string.\n   * Attempts to convert enum arguments to strings.\n   *\n   * @param {string} functionName the name of the WebGL function.\n   * @param {number} args The arguments.\n   * @return {string} The arguments as a string.\n   */\n  'glFunctionArgsToString': glFunctionArgsToString,\n\n  /**\n   * Given a WebGL context returns a wrapped context that calls\n   * gl.getError after every command and calls a function if the\n   * result is not NO_ERROR.\n   *\n   * You can supply your own function if you want. For example, if you'd like\n   * an exception thrown on any GL error you could do this\n   *\n   *    function throwOnGLError(err, funcName, args) {\n   *      throw WebGLDebugUtils.glEnumToString(err) +\n   *            \" was caused by call to \" + funcName;\n   *    };\n   *\n   *    ctx = WebGLDebugUtils.makeDebugContext(\n   *        canvas.getContext(\"webgl\"), throwOnGLError);\n   *\n   * @param {!WebGLRenderingContext} ctx The webgl context to wrap.\n   * @param {!function(err, funcName, args): void} opt_onErrorFunc The function\n   *     to call when gl.getError returns an error. If not specified the default\n   *     function calls console.log with a message.\n   * @param {!function(funcName, args): void} opt_onFunc The\n   *     function to call when each webgl function is called. You\n   *     can use this to log all calls for example.\n   */\n  'makeDebugContext': makeDebugContext,\n\n  /**\n   * Given a canvas element returns a wrapped canvas element that will\n   * simulate lost context. The canvas returned adds the following functions.\n   *\n   * loseContext:\n   *   simulates a lost context event.\n   *\n   * restoreContext:\n   *   simulates the context being restored.\n   *\n   * lostContextInNCalls:\n   *   loses the context after N gl calls.\n   *\n   * getNumCalls:\n   *   tells you how many gl calls there have been so far.\n   *\n   * setRestoreTimeout:\n   *   sets the number of milliseconds until the context is restored\n   *   after it has been lost. Defaults to 0. Pass -1 to prevent\n   *   automatic restoring.\n   *\n   * @param {!Canvas} canvas The canvas element to wrap.\n   */\n  'makeLostContextSimulatingCanvas': makeLostContextSimulatingCanvas,\n\n  /**\n   * Resets a context to the initial state.\n   * @param {!WebGLRenderingContext} ctx The webgl context to\n   *     reset.\n   */\n  'resetToInitialState': resetToInitialState\n};\n\n}();\n","/*!\n * @license twgl.js 4.4.0 Copyright (c) 2015, Gregg Tavares All Rights Reserved.\n * Available via the MIT license.\n * see: http://github.com/greggman/twgl.js for details\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"twgl\"] = factory();\n\telse\n\t\troot[\"twgl\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 9);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.copyExistingProperties = copyExistingProperties;\nexports.copyNamedProperties = copyNamedProperties;\nexports.isBuffer = isBuffer;\nexports.isRenderbuffer = isRenderbuffer;\nexports.isShader = isShader;\nexports.isTexture = isTexture;\nexports.isSampler = isSampler;\nexports.warn = exports.error = void 0;\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Copy named properties\n *\n * @param {string[]} names names of properties to copy\n * @param {object} src object to copy properties from\n * @param {object} dst object to copy properties to\n */\nfunction copyNamedProperties(names, src, dst) {\n  names.forEach(function (name) {\n    var value = src[name];\n\n    if (value !== undefined) {\n      dst[name] = value;\n    }\n  });\n}\n/**\n * Copies properties from source to dest only if a matching key is in dest\n *\n * @param {Object.<string, ?>} src the source\n * @param {Object.<string, ?>} dst the dest\n */\n\n\nfunction copyExistingProperties(src, dst) {\n  Object.keys(dst).forEach(function (key) {\n    if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {\n      dst[key] = src[key];\n    }\n  });\n}\n\nvar error = _globalObject.default.console && _globalObject.default.console.error && typeof _globalObject.default.console.error === \"function\" ? _globalObject.default.console.error.bind(_globalObject.default.console) : function () {};\nexports.error = error;\nvar warn = _globalObject.default.console && _globalObject.default.console.warn && typeof _globalObject.default.console.warn === \"function\" ? _globalObject.default.console.warn.bind(_globalObject.default.console) : function () {};\nexports.warn = warn;\nvar repBuffer;\n\nfunction isBuffer(gl, t) {\n  if (!repBuffer) {\n    repBuffer = gl.createBuffer();\n  }\n\n  return t instanceof repBuffer.constructor;\n}\n\nvar repRenderbuffer;\n\nfunction isRenderbuffer(gl, t) {\n  if (!repRenderbuffer) {\n    repRenderbuffer = gl.createRenderbuffer();\n  }\n\n  return t instanceof repRenderbuffer.constructor;\n}\n\nvar repShader;\n\nfunction isShader(gl, t) {\n  if (!repShader) {\n    repShader = gl.createShader(gl.VERTEX_SHADER);\n  }\n\n  return t instanceof repShader.constructor;\n}\n\nvar repTexture;\n\nfunction isTexture(gl, t) {\n  if (!repTexture) {\n    repTexture = gl.createTexture();\n  }\n\n  return t instanceof repTexture.constructor;\n}\n\nvar repSampler;\n\nfunction isSampler(gl, t) {\n  if (!repSampler) {\n    if (gl.createSampler) {\n      repSampler = gl.createSampler();\n    } else {\n      return false; // it can't be a sampler if this is not WebGL2\n    }\n  }\n\n  return t instanceof repSampler.constructor;\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.getGLTypeForTypedArray = getGLTypeForTypedArray;\nexports.getGLTypeForTypedArrayType = getGLTypeForTypedArrayType;\nexports.getTypedArrayTypeForGLType = getTypedArrayTypeForGLType;\nexports.isArrayBuffer = void 0;\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level shader typed array related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.typedArray` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/typedArray\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar glTypeToTypedArray = {};\n{\n  var tt = glTypeToTypedArray;\n  tt[BYTE] = Int8Array;\n  tt[UNSIGNED_BYTE] = Uint8Array;\n  tt[SHORT] = Int16Array;\n  tt[UNSIGNED_SHORT] = Uint16Array;\n  tt[INT] = Int32Array;\n  tt[UNSIGNED_INT] = Uint32Array;\n  tt[FLOAT] = Float32Array;\n  tt[UNSIGNED_SHORT_4_4_4_4] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_5_5_1] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_6_5] = Uint16Array;\n  tt[HALF_FLOAT] = Uint16Array;\n  tt[UNSIGNED_INT_2_10_10_10_REV] = Uint32Array;\n  tt[UNSIGNED_INT_10F_11F_11F_REV] = Uint32Array;\n  tt[UNSIGNED_INT_5_9_9_9_REV] = Uint32Array;\n  tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\n  tt[UNSIGNED_INT_24_8] = Uint32Array;\n}\n/**\n * Get the GL type for a typedArray\n * @param {ArrayBuffer|ArrayBufferView} typedArray a typedArray\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\nfunction getGLTypeForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw \"unsupported typed array type\";\n}\n/**\n * Get the GL type for a typedArray type\n * @param {ArrayBufferViewType} typedArrayType a typedArray constructor\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getGLTypeForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw \"unsupported typed array type\";\n}\n/**\n * Get the typed array constructor for a given GL type\n * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\n * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getTypedArrayTypeForGLType(type) {\n  var CTOR = glTypeToTypedArray[type];\n\n  if (!CTOR) {\n    throw \"unknown gl type\";\n  }\n\n  return CTOR;\n}\n\nvar isArrayBuffer = _globalObject.default.SharedArrayBuffer ? function isArrayBufferOrSharedArrayBuffer(a) {\n  return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof _globalObject.default.SharedArrayBuffer);\n} : function isArrayBuffer(a) {\n  return a && a.buffer && a.buffer instanceof ArrayBuffer;\n};\nexports.isArrayBuffer = isArrayBuffer;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.default = void 0;\nvar global = typeof global !== 'undefined' // eslint-disable-line\n? global // eslint-disable-line\n: typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {};\nexports.default = global;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.add = add;\nexports.copy = copy;\nexports.create = create;\nexports.cross = cross;\nexports.distance = distance;\nexports.distanceSq = distanceSq;\nexports.divide = divide;\nexports.divScalar = divScalar;\nexports.dot = dot;\nexports.lerp = lerp;\nexports.length = length;\nexports.lengthSq = lengthSq;\nexports.mulScalar = mulScalar;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.normalize = normalize;\nexports.setDefaultType = setDefaultType;\nexports.subtract = subtract;\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n *\n * Vec3 math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec3. In other words you can do this\n *\n *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     var v3 = v3.create();\n *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any vector as the destination. So for example\n *\n *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n * @module twgl/v3\n */\nvar VecType = Float32Array;\n/**\n * A JavaScript array with 3 values or a Float32Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/v3.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Vec3\n * @memberOf module:twgl/v3\n */\n\n/**\n * Sets the type this library creates for a Vec3\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Vec3\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @return {Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction create(x, y, z) {\n  var dst = new VecType(3);\n\n  if (x) {\n    dst[0] = x;\n  }\n\n  if (y) {\n    dst[1] = y;\n  }\n\n  if (z) {\n    dst[2] = z;\n  }\n\n  return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction add(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n  return dst;\n}\n/**\n * Subtracts two vectors.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction subtract(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n  return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * (1 - t) * a + t * b.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {number} t Interpolation coefficient.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction lerp(a, b, t, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = (1 - t) * a[0] + t * b[0];\n  dst[1] = (1 - t) * a[1] + t * b[1];\n  dst[2] = (1 - t) * a[2] + t * b[2];\n  return dst;\n}\n/**\n * Mutiplies a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction mulScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n  return dst;\n}\n/**\n * Divides a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n  return dst;\n}\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector a cross b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction cross(a, b, dst) {\n  dst = dst || new VecType(3);\n  var t1 = a[2] * b[0] - a[0] * b[2];\n  var t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n  return dst;\n}\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @return {number} dot product\n * @memberOf module:twgl/v3\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction length(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n/**\n * Computes the square of the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} square of the length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction lengthSq(v) {\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\n/**\n * Computes the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distance(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n/**\n * Computes the square of the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} square of the distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distanceSq(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param {module:twgl/v3.Vec3} a The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The normalized vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction normalize(a, dst) {\n  dst = dst || new VecType(3);\n  var lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n  var len = Math.sqrt(lenSq);\n\n  if (len > 0.00001) {\n    dst[0] = a[0] / len;\n    dst[1] = a[1] / len;\n    dst[2] = a[2] / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return dst;\n}\n/**\n * Negates a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} -v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction negate(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n  return dst;\n}\n/**\n * Copies a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} A copy of v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction copy(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n  return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n  return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divide(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n  return dst;\n}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.isWebGL1 = isWebGL1;\nexports.isWebGL2 = isWebGL2;\nexports.glEnumToString = void 0;\n\n/*\n * Copyright 2017, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Gets the gl version as a number\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {number} version of gl\n */\n//function getVersionAsNumber(gl) {\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\n//}\n\n/**\n * Check if context is WebGL 2.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 2.0\n * @memberOf module:twgl\n */\nfunction isWebGL2(gl) {\n  // This is the correct check but it's slow\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGL2RenderingContext;\n  return !!gl.texStorage2D;\n}\n/**\n * Check if context is WebGL 1.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 1.0\n * @memberOf module:twgl\n */\n\n\nfunction isWebGL1(gl) {\n  // This is the correct check but it's slow\n  // const version = getVersionAsNumber(gl);\n  // return version <= 1.0 && version > 0.0;  // because as of 2016/5 Edge returns 0.96\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGLRenderingContext;\n  return !gl.texStorage2D;\n}\n/**\n * Gets a string for WebGL enum\n *\n * Note: Several enums are the same. Without more\n * context (which function) it's impossible to always\n * give the correct enum. As it is, for matching values\n * it gives all enums. Checking the WebGL2RenderingContext\n * that means\n *\n *      0     = ZERO | POINT | NONE | NO_ERROR\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\n *\n * It's also not useful for bits really unless you pass in individual bits.\n * In other words\n *\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\n *     twgl.glEnumToString(gl, bits);  // not going to work\n *\n * Note that some enums only exist on extensions. If you\n * want them to show up you need to pass the extension at least\n * once. For example\n *\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc`);\n *     if (ext) {\n *        twgl.glEnumToString(ext, 0);  // just prime the function\n *\n *        ..later..\n *\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n *        console.log(twgl.glEnumToString(gl, internalFormat));\n *\n * Notice I didn't have to pass the extension the second time. This means\n * you can have place that generically gets an enum for texture formats for example.\n * and as long as you primed the function with the extensions\n *\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\n * then twgl will automatically get the extension's enums.\n *\n * @param {WebGLRenderingContext|Extension} gl A WebGLRenderingContext or any extension object\n * @param {number} value the value of the enum you want to look up.\n * @memberOf module:twgl\n */\n\n\nvar glEnumToString = function () {\n  var haveEnumsForType = {};\n  var enums = {};\n\n  function addEnums(gl) {\n    var type = gl.constructor.name;\n\n    if (!haveEnumsForType[type]) {\n      for (var key in gl) {\n        if (typeof gl[key] === 'number') {\n          var existing = enums[gl[key]];\n          enums[gl[key]] = existing ? \"\".concat(existing, \" | \").concat(key) : key;\n        }\n      }\n\n      haveEnumsForType[type] = true;\n    }\n  }\n\n  return function glEnumToString(gl, value) {\n    addEnums(gl);\n    return enums[value] || \"0x\" + value.toString(16);\n  };\n}();\n\nexports.glEnumToString = glEnumToString;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttributeSetters = createAttributeSetters;\nexports.createProgram = createProgram;\nexports.createProgramFromScripts = createProgramFromScripts;\nexports.createProgramFromSources = createProgramFromSources;\nexports.createProgramInfo = createProgramInfo;\nexports.createProgramInfoFromProgram = createProgramInfoFromProgram;\nexports.createUniformSetters = createUniformSetters;\nexports.createUniformBlockSpecFromProgram = createUniformBlockSpecFromProgram;\nexports.createUniformBlockInfoFromProgram = createUniformBlockInfoFromProgram;\nexports.createUniformBlockInfo = createUniformBlockInfo;\nexports.createTransformFeedback = createTransformFeedback;\nexports.createTransformFeedbackInfo = createTransformFeedbackInfo;\nexports.bindTransformFeedbackInfo = bindTransformFeedbackInfo;\nexports.setAttributes = setAttributes;\nexports.setBuffersAndAttributes = setBuffersAndAttributes;\nexports.setUniforms = setUniforms;\nexports.setUniformBlock = setUniformBlock;\nexports.setBlockUniforms = setBlockUniforms;\nexports.bindUniformBlock = bindUniformBlock;\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level shader program related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.programs` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/programs\n */\nvar error = helper.error;\nvar warn = helper.warn;\nvar getElementById = _globalObject.default && _globalObject.default.document && _globalObject.default.document.getElementById ? _globalObject.default.document.getElementById.bind(_globalObject.default.document) : function () {\n  return null;\n};\nvar FLOAT = 0x1406;\nvar FLOAT_VEC2 = 0x8B50;\nvar FLOAT_VEC3 = 0x8B51;\nvar FLOAT_VEC4 = 0x8B52;\nvar INT = 0x1404;\nvar INT_VEC2 = 0x8B53;\nvar INT_VEC3 = 0x8B54;\nvar INT_VEC4 = 0x8B55;\nvar BOOL = 0x8B56;\nvar BOOL_VEC2 = 0x8B57;\nvar BOOL_VEC3 = 0x8B58;\nvar BOOL_VEC4 = 0x8B59;\nvar FLOAT_MAT2 = 0x8B5A;\nvar FLOAT_MAT3 = 0x8B5B;\nvar FLOAT_MAT4 = 0x8B5C;\nvar SAMPLER_2D = 0x8B5E;\nvar SAMPLER_CUBE = 0x8B60;\nvar SAMPLER_3D = 0x8B5F;\nvar SAMPLER_2D_SHADOW = 0x8B62;\nvar FLOAT_MAT2x3 = 0x8B65;\nvar FLOAT_MAT2x4 = 0x8B66;\nvar FLOAT_MAT3x2 = 0x8B67;\nvar FLOAT_MAT3x4 = 0x8B68;\nvar FLOAT_MAT4x2 = 0x8B69;\nvar FLOAT_MAT4x3 = 0x8B6A;\nvar SAMPLER_2D_ARRAY = 0x8DC1;\nvar SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;\nvar SAMPLER_CUBE_SHADOW = 0x8DC5;\nvar UNSIGNED_INT = 0x1405;\nvar UNSIGNED_INT_VEC2 = 0x8DC6;\nvar UNSIGNED_INT_VEC3 = 0x8DC7;\nvar UNSIGNED_INT_VEC4 = 0x8DC8;\nvar INT_SAMPLER_2D = 0x8DCA;\nvar INT_SAMPLER_3D = 0x8DCB;\nvar INT_SAMPLER_CUBE = 0x8DCC;\nvar INT_SAMPLER_2D_ARRAY = 0x8DCF;\nvar UNSIGNED_INT_SAMPLER_2D = 0x8DD2;\nvar UNSIGNED_INT_SAMPLER_3D = 0x8DD3;\nvar UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;\nvar UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\nvar TEXTURE_2D = 0x0DE1;\nvar TEXTURE_CUBE_MAP = 0x8513;\nvar TEXTURE_3D = 0x806F;\nvar TEXTURE_2D_ARRAY = 0x8C1A;\nvar typeMap = {};\n/**\n * Returns the corresponding bind point for a given sampler type\n */\n\nfunction getBindPointForSamplerType(gl, type) {\n  return typeMap[type].bindPoint;\n} // This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n// this code could be a lot smaller but that is sadly really slow (T_T)\n\n\nfunction floatSetter(gl, location) {\n  return function (v) {\n    gl.uniform1f(location, v);\n  };\n}\n\nfunction floatArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1fv(location, v);\n  };\n}\n\nfunction floatVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2fv(location, v);\n  };\n}\n\nfunction floatVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3fv(location, v);\n  };\n}\n\nfunction floatVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4fv(location, v);\n  };\n}\n\nfunction intSetter(gl, location) {\n  return function (v) {\n    gl.uniform1i(location, v);\n  };\n}\n\nfunction intArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1iv(location, v);\n  };\n}\n\nfunction intVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2iv(location, v);\n  };\n}\n\nfunction intVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3iv(location, v);\n  };\n}\n\nfunction intVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4iv(location, v);\n  };\n}\n\nfunction uintSetter(gl, location) {\n  return function (v) {\n    gl.uniform1ui(location, v);\n  };\n}\n\nfunction uintArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1uiv(location, v);\n  };\n}\n\nfunction uintVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2uiv(location, v);\n  };\n}\n\nfunction uintVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3uiv(location, v);\n  };\n}\n\nfunction uintVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4uiv(location, v);\n  };\n}\n\nfunction floatMat2Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2fv(location, false, v);\n  };\n}\n\nfunction floatMat3Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3fv(location, false, v);\n  };\n}\n\nfunction floatMat4Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4fv(location, false, v);\n  };\n}\n\nfunction floatMat23Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x3fv(location, false, v);\n  };\n}\n\nfunction floatMat32Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x2fv(location, false, v);\n  };\n}\n\nfunction floatMat24Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x4fv(location, false, v);\n  };\n}\n\nfunction floatMat42Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x2fv(location, false, v);\n  };\n}\n\nfunction floatMat34Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x4fv(location, false, v);\n  };\n}\n\nfunction floatMat43Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x3fv(location, false, v);\n  };\n}\n\nfunction samplerSetter(gl, type, unit, location) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  return utils.isWebGL2(gl) ? function (textureOrPair) {\n    var texture;\n    var sampler;\n\n    if (helper.isTexture(gl, textureOrPair)) {\n      texture = textureOrPair;\n      sampler = null;\n    } else {\n      texture = textureOrPair.texture;\n      sampler = textureOrPair.sampler;\n    }\n\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n    gl.bindSampler(unit, sampler);\n  } : function (texture) {\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n  };\n}\n\nfunction samplerArraySetter(gl, type, unit, location, size) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  var units = new Int32Array(size);\n\n  for (var ii = 0; ii < size; ++ii) {\n    units[ii] = unit + ii;\n  }\n\n  return utils.isWebGL2(gl) ? function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (textureOrPair, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      var texture;\n      var sampler;\n\n      if (helper.isTexture(gl, textureOrPair)) {\n        texture = textureOrPair;\n        sampler = null;\n      } else {\n        texture = textureOrPair.texture;\n        sampler = textureOrPair.sampler;\n      }\n\n      gl.bindSampler(unit, sampler);\n      gl.bindTexture(bindPoint, texture);\n    });\n  } : function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (texture, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      gl.bindTexture(bindPoint, texture);\n    });\n  };\n}\n\ntypeMap[FLOAT] = {\n  Type: Float32Array,\n  size: 4,\n  setter: floatSetter,\n  arraySetter: floatArraySetter\n};\ntypeMap[FLOAT_VEC2] = {\n  Type: Float32Array,\n  size: 8,\n  setter: floatVec2Setter\n};\ntypeMap[FLOAT_VEC3] = {\n  Type: Float32Array,\n  size: 12,\n  setter: floatVec3Setter\n};\ntypeMap[FLOAT_VEC4] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatVec4Setter\n};\ntypeMap[INT] = {\n  Type: Int32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[INT_VEC2] = {\n  Type: Int32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[INT_VEC3] = {\n  Type: Int32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[INT_VEC4] = {\n  Type: Int32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[UNSIGNED_INT] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: uintSetter,\n  arraySetter: uintArraySetter\n};\ntypeMap[UNSIGNED_INT_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: uintVec2Setter\n};\ntypeMap[UNSIGNED_INT_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: uintVec3Setter\n};\ntypeMap[UNSIGNED_INT_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: uintVec4Setter\n};\ntypeMap[BOOL] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[BOOL_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[BOOL_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[BOOL_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[FLOAT_MAT2] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatMat2Setter\n};\ntypeMap[FLOAT_MAT3] = {\n  Type: Float32Array,\n  size: 36,\n  setter: floatMat3Setter\n};\ntypeMap[FLOAT_MAT4] = {\n  Type: Float32Array,\n  size: 64,\n  setter: floatMat4Setter\n};\ntypeMap[FLOAT_MAT2x3] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat23Setter\n};\ntypeMap[FLOAT_MAT2x4] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat24Setter\n};\ntypeMap[FLOAT_MAT3x2] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat32Setter\n};\ntypeMap[FLOAT_MAT3x4] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat34Setter\n};\ntypeMap[FLOAT_MAT4x2] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat42Setter\n};\ntypeMap[FLOAT_MAT4x3] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat43Setter\n};\ntypeMap[SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[SAMPLER_2D_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_2D_ARRAY_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_CUBE_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\n\nfunction floatAttribSetter(gl, index) {\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    gl.enableVertexAttribArray(index);\n    gl.vertexAttribPointer(index, b.numComponents || b.size, b.type || gl.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n\n    if (b.divisor !== undefined) {\n      gl.vertexAttribDivisor(index, b.divisor);\n    }\n  };\n}\n\nfunction intAttribSetter(gl, index) {\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    gl.enableVertexAttribArray(index);\n    gl.vertexAttribIPointer(index, b.numComponents || b.size, b.type || gl.INT, b.stride || 0, b.offset || 0);\n\n    if (b.divisor !== undefined) {\n      gl.vertexAttribDivisor(index, b.divisor);\n    }\n  };\n}\n\nfunction matAttribSetter(gl, index, typeInfo) {\n  var defaultSize = typeInfo.size;\n  var count = typeInfo.count;\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    var numComponents = b.size || b.numComponents || defaultSize;\n    var size = numComponents / count;\n    var type = b.type || gl.FLOAT;\n    var typeInfo = typeMap[type];\n    var stride = typeInfo.size * numComponents;\n    var normalize = b.normalize || false;\n    var offset = b.offset || 0;\n    var rowOffset = stride / count;\n\n    for (var i = 0; i < count; ++i) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(index + i, size, type, normalize, stride, offset + rowOffset * i);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index + i, b.divisor);\n      }\n    }\n  };\n}\n\nvar attrTypeMap = {};\nattrTypeMap[FLOAT] = {\n  size: 4,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC2] = {\n  size: 8,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC3] = {\n  size: 12,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC4] = {\n  size: 16,\n  setter: floatAttribSetter\n};\nattrTypeMap[INT] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[FLOAT_MAT2] = {\n  size: 4,\n  setter: matAttribSetter,\n  count: 2\n};\nattrTypeMap[FLOAT_MAT3] = {\n  size: 9,\n  setter: matAttribSetter,\n  count: 3\n};\nattrTypeMap[FLOAT_MAT4] = {\n  size: 16,\n  setter: matAttribSetter,\n  count: 4\n}; // make sure we don't see a global gl\n\nvar gl = undefined; // eslint-disable-line\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @param {number} [lineOffset] amount to add to line number\n * @memberOf module:twgl\n */\n\nfunction addLineNumbers(src, lineOffset) {\n  lineOffset = lineOffset || 0;\n  ++lineOffset;\n  return src.split(\"\\n\").map(function (line, ndx) {\n    return ndx + lineOffset + \": \" + line;\n  }).join(\"\\n\");\n}\n\nvar spaceRE = /^[ \\t]*\\n/;\n/**\n * Loads a shader.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} shaderSource The shader source.\n * @param {number} shaderType The type of shader.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors.\n * @return {WebGLShader} The created shader.\n */\n\nfunction loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\n  var errFn = opt_errorCallback || error; // Create the shader object\n\n  var shader = gl.createShader(shaderType); // Remove the first end of line because WebGL 2.0 requires\n  // #version 300 es\n  // as the first line. No whitespace allowed before that line\n  // so\n  //\n  // <script>\n  // #version 300 es\n  // </script>\n  //\n  // Has one line before it which is invalid according to GLSL ES 3.00\n  //\n\n  var lineOffset = 0;\n\n  if (spaceRE.test(shaderSource)) {\n    lineOffset = 1;\n    shaderSource = shaderSource.replace(spaceRE, '');\n  } // Load the shader source\n\n\n  gl.shaderSource(shader, shaderSource); // Compile the shader\n\n  gl.compileShader(shader); // Check the compile status\n\n  var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    var lastError = gl.getShaderInfoLog(shader);\n    errFn(addLineNumbers(shaderSource, lineOffset) + \"\\n*** Error compiling shader: \" + lastError);\n    gl.deleteShader(shader);\n    return null;\n  }\n\n  return shader;\n}\n/**\n * @typedef {Object} ProgramOptions\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>} [attribLocations] a attribute name to location map\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @memberOf module:twgl\n */\n\n/**\n * Gets the program options based on all these optional arguments\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments pased on\n */\n\n\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\n  var transformFeedbackVaryings;\n\n  if (typeof opt_locations === 'function') {\n    opt_errorCallback = opt_locations;\n    opt_locations = undefined;\n  }\n\n  if (typeof opt_attribs === 'function') {\n    opt_errorCallback = opt_attribs;\n    opt_attribs = undefined;\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\n    // If we have an errorCallback we can just return this object\n    // Otherwise we need to construct one with default errorCallback\n    if (opt_attribs.errorCallback) {\n      return opt_attribs;\n    }\n\n    var opt = opt_attribs;\n    opt_errorCallback = opt.errorCallback;\n    opt_attribs = opt.attribLocations;\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\n  }\n\n  var options = {\n    errorCallback: opt_errorCallback || error,\n    transformFeedbackVaryings: transformFeedbackVaryings\n  };\n\n  if (opt_attribs) {\n    var attribLocations = {};\n\n    if (Array.isArray(opt_attribs)) {\n      opt_attribs.forEach(function (attrib, ndx) {\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\n      });\n    } else {\n      attribLocations = opt_attribs;\n    }\n\n    options.attribLocations = attribLocations;\n  }\n\n  return options;\n}\n\nvar defaultShaderType = [\"VERTEX_SHADER\", \"FRAGMENT_SHADER\"];\n\nfunction getShaderTypeFromScriptType(scriptType) {\n  if (scriptType.indexOf(\"frag\") >= 0) {\n    return gl.FRAGMENT_SHADER;\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\n    return gl.VERTEX_SHADER;\n  }\n\n  return undefined;\n}\n\nfunction deleteShaders(gl, shaders) {\n  shaders.forEach(function (shader) {\n    gl.deleteShader(shader);\n  });\n}\n/**\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\n * program and calls useProgram.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgram(gl, [vs, fs], options);\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgram(gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var realShaders = [];\n  var newShaders = [];\n\n  for (var ndx = 0; ndx < shaders.length; ++ndx) {\n    var shader = shaders[ndx];\n\n    if (typeof shader === 'string') {\n      var elem = getElementById(shader);\n      var src = elem ? elem.text : shader;\n      var type = gl[defaultShaderType[ndx]];\n\n      if (elem && elem.type) {\n        type = getShaderTypeFromScriptType(elem.type) || type;\n      }\n\n      shader = loadShader(gl, src, type, progOptions.errorCallback);\n      newShaders.push(shader);\n    }\n\n    if (helper.isShader(gl, shader)) {\n      realShaders.push(shader);\n    }\n  }\n\n  if (realShaders.length !== shaders.length) {\n    progOptions.errorCallback(\"not enough shaders for program\");\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  var program = gl.createProgram();\n  realShaders.forEach(function (shader) {\n    gl.attachShader(program, shader);\n  });\n\n  if (progOptions.attribLocations) {\n    Object.keys(progOptions.attribLocations).forEach(function (attrib) {\n      gl.bindAttribLocation(program, progOptions.attribLocations[attrib], attrib);\n    });\n  }\n\n  var varyings = progOptions.transformFeedbackVaryings;\n\n  if (varyings) {\n    if (varyings.attribs) {\n      varyings = varyings.attribs;\n    }\n\n    if (!Array.isArray(varyings)) {\n      varyings = Object.keys(varyings);\n    }\n\n    gl.transformFeedbackVaryings(program, varyings, progOptions.transformFeedbackMode || gl.SEPARATE_ATTRIBS);\n  }\n\n  gl.linkProgram(program); // Check the link status\n\n  var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n  if (!linked) {\n    // something went wrong with the link\n    var lastError = gl.getProgramInfoLog(program);\n    progOptions.errorCallback(\"Error in program linking:\" + lastError);\n    gl.deleteProgram(program);\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  return program;\n}\n/**\n * Loads a shader from a script tag.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} scriptId The id of the script tag.\n * @param {number} [opt_shaderType] The type of shader. If not passed in it will\n *     be derived from the type of the script tag.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors.\n * @return {WebGLShader?} The created shader or null if error.\n */\n\n\nfunction createShaderFromScript(gl, scriptId, opt_shaderType, opt_errorCallback) {\n  var shaderSource = \"\";\n  var shaderScript = getElementById(scriptId);\n\n  if (!shaderScript) {\n    throw \"*** Error: unknown script element\" + scriptId;\n  }\n\n  shaderSource = shaderScript.text;\n  var shaderType = opt_shaderType || getShaderTypeFromScriptType(shaderScript.type);\n\n  if (!shaderType) {\n    throw \"*** Error: unknown shader type\";\n  }\n\n  return loadShader(gl, shaderSource, shaderType, opt_errorCallback);\n}\n/**\n * Creates a program from 2 script tags.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderScriptIds Array of ids of the script\n *        tags for the shaders. The first is assumed to be the\n *        vertex shader, the second the fragment shader.\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram} The created program.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromScripts(gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderScriptIds.length; ++ii) {\n    var shader = createShaderFromScript(gl, shaderScriptIds[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Creates a program from 2 sources.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram} The created program.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromSources(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderSources.length; ++ii) {\n    var shader = loadShader(gl, shaderSources[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Returns true if attribute/uniform is a reserved/built in\n *\n * It makes no sense to me why GL returns these because it's\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\n * with names that start with `gl_` (and `webgl_` in WebGL)\n *\n * I can only assume they are there because they might count\n * when computing the number of uniforms/attributes used when you want to\n * know if you are near the limit. That doesn't really make sense\n * to me but the fact that these get returned are in the spec.\n *\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\n *    `gl.getActiveAttrib`.\n * @return {bool} true if it's reserved\n */\n\n\nfunction isBuiltIn(info) {\n  var name = info.name;\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\n}\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:twgl.setUniforms}\n *\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformSetters(gl, program) {\n  var textureUnit = 0;\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n\n  function createUniformSetter(program, uniformInfo) {\n    var location = gl.getUniformLocation(program, uniformInfo.name);\n    var isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === \"[0]\";\n    var type = uniformInfo.type;\n    var typeInfo = typeMap[type];\n\n    if (!typeInfo) {\n      throw \"unknown type: 0x\" + type.toString(16); // we should never get here.\n    }\n\n    var setter;\n\n    if (typeInfo.bindPoint) {\n      // it's a sampler\n      var unit = textureUnit;\n      textureUnit += uniformInfo.size;\n\n      if (isArray) {\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n      } else {\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n      }\n    } else {\n      if (typeInfo.arraySetter && isArray) {\n        setter = typeInfo.arraySetter(gl, location);\n      } else {\n        setter = typeInfo.setter(gl, location);\n      }\n    }\n\n    setter.location = location;\n    return setter;\n  }\n\n  var uniformSetters = {};\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      continue;\n    }\n\n    var name = uniformInfo.name; // remove the array suffix.\n\n    if (name.substr(-3) === \"[0]\") {\n      name = name.substr(0, name.length - 3);\n    }\n\n    var setter = createUniformSetter(program, uniformInfo);\n    uniformSetters[name] = setter;\n  }\n\n  return uniformSetters;\n}\n/**\n * @typedef {Object} TransformFeedbackInfo\n * @property {number} index index of transform feedback\n * @property {number} type GL type\n * @property {number} size 1 - 4\n * @memberOf module:twgl\n */\n\n/**\n * Create TransformFeedbackInfo for passing to bind/unbindTransformFeedbackInfo.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedbackInfo(gl, program) {\n  var info = {};\n  var numVaryings = gl.getProgramParameter(program, gl.TRANSFORM_FEEDBACK_VARYINGS);\n\n  for (var ii = 0; ii < numVaryings; ++ii) {\n    var varying = gl.getTransformFeedbackVarying(program, ii);\n    info[varying.name] = {\n      index: ii,\n      type: varying.type,\n      size: varying.size\n    };\n  }\n\n  return info;\n}\n/**\n * Binds buffers for transform feedback.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @memberOf module:twgl\n */\n\n\nfunction bindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n\n  for (var name in bufferInfo) {\n    var varying = transformFeedbackInfo[name];\n\n    if (varying) {\n      var buf = bufferInfo[name];\n\n      if (buf.offset) {\n        gl.bindBufferRange(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size);\n      } else {\n        gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer);\n      }\n    }\n  }\n}\n/**\n * Unbinds buffers afetr transform feedback.\n *\n * Buffers can not be bound to 2 bind points so if you try to bind a buffer used\n * in a transform feedback as an ARRAY_BUFFER for an attribute it will fail.\n *\n * This function unbinds all buffers that were bound with {@link module:twgl.bindTransformFeedbackInfo}.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n */\n\n\nfunction unbindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n\n  for (var name in bufferInfo) {\n    var varying = transformFeedbackInfo[name];\n\n    if (varying) {\n      gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, null);\n    }\n  }\n}\n/**\n * Creates a transform feedback and sets the buffers\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @return {WebGLTransformFeedback} the created transform feedback\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedback(gl, programInfo, bufferInfo) {\n  var tf = gl.createTransformFeedback();\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, tf);\n  gl.useProgram(programInfo.program);\n  bindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null); // This is only needed because of a bug in Chrome 56. Will remove\n  // when chrome fixes it.\n\n  unbindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  return tf;\n}\n/**\n * @typedef {Object} UniformData\n * @property {number} type The WebGL type enum for this uniform\n * @property {number} size The number of elements for this uniform\n * @property {number} blockNdx The block index this uniform appears in\n * @property {number} offset The byte offset in the block for this uniform's value\n * @memberOf module:twgl\n */\n\n/**\n * The specification for one UniformBlockObject\n *\n * @typedef {Object} BlockSpec\n * @property {number} index The index of the block.\n * @property {number} size The size in bytes needed for the block\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n * @property {bool} usedByVertexShader Self explanitory\n * @property {bool} usedByFragmentShader Self explanitory\n * @property {bool} used Self explanitory\n * @memberOf module:twgl\n */\n\n/**\n * A `UniformBlockSpec` represents the data needed to create and bind\n * UniformBlockObjects for a given program\n *\n * @typedef {Object} UniformBlockSpec\n * @property {Object.<string, module:twgl.BlockSpec> blockSpecs The BlockSpec for each block by block name\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a UniformBlockSpec for the given program.\n *\n * A UniformBlockSpec represents the data needed to create and bind\n * UniformBlockObjects\n *\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockSpecFromProgram(gl, program) {\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  var uniformData = [];\n  var uniformIndices = [];\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    uniformIndices.push(ii);\n    uniformData.push({});\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      break;\n    } // REMOVE [0]?\n\n\n    uniformData[ii].name = uniformInfo.name;\n  }\n\n  [[\"UNIFORM_TYPE\", \"type\"], [\"UNIFORM_SIZE\", \"size\"], // num elements\n  [\"UNIFORM_BLOCK_INDEX\", \"blockNdx\"], [\"UNIFORM_OFFSET\", \"offset\"]].forEach(function (pair) {\n    var pname = pair[0];\n    var key = pair[1];\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function (value, ndx) {\n      uniformData[ndx][key] = value;\n    });\n  });\n  var blockSpecs = {};\n  var numUniformBlocks = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\n\n  for (var _ii = 0; _ii < numUniformBlocks; ++_ii) {\n    var name = gl.getActiveUniformBlockName(program, _ii);\n    var blockSpec = {\n      index: _ii,\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      size: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_DATA_SIZE),\n      uniformIndices: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES)\n    };\n    blockSpec.used = blockSpec.usedByVertexSahder || blockSpec.usedByFragmentShader;\n    blockSpecs[name] = blockSpec;\n  }\n\n  return {\n    blockSpecs: blockSpecs,\n    uniformData: uniformData\n  };\n}\n\nvar arraySuffixRE = /\\[\\d+\\]\\.$/; // better way to check?\n\n/**\n * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\n * and a corresponding WebGLBuffer to hold those values on the GPU\n *\n * @typedef {Object} UniformBlockInfo\n * @property {string} name The name of the block\n * @property {ArrayBuffer} array The array buffer that contains the uniform values\n * @property {Float32Array} asFloat A float view on the array buffer. This is useful\n *    inspecting the contents of the buffer in the debugger.\n * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\n * @property {number} [offset] offset into buffer\n * @property {Object.<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\n *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\n *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\n *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\n *   `Int32Array` view, etc.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {WebGLProgram} program A WebGLProgram\n * @param {module:twgl.UniformBlockSpec} uinformBlockSpec. A UniformBlockSpec as returned\n *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\nfunction createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName) {\n  var blockSpecs = uniformBlockSpec.blockSpecs;\n  var uniformData = uniformBlockSpec.uniformData;\n  var blockSpec = blockSpecs[blockName];\n\n  if (!blockSpec) {\n    warn(\"no uniform block object named:\", blockName);\n    return {\n      name: blockName,\n      uniforms: {}\n    };\n  }\n\n  var array = new ArrayBuffer(blockSpec.size);\n  var buffer = gl.createBuffer();\n  var uniformBufferIndex = blockSpec.index;\n  gl.bindBuffer(gl.UNIFORM_BUFFER, buffer);\n  gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\n  var prefix = blockName + \".\";\n\n  if (arraySuffixRE.test(prefix)) {\n    prefix = prefix.replace(arraySuffixRE, \".\");\n  }\n\n  var uniforms = {};\n  blockSpec.uniformIndices.forEach(function (uniformNdx) {\n    var data = uniformData[uniformNdx];\n    var typeInfo = typeMap[data.type];\n    var Type = typeInfo.Type;\n    var length = data.size * typeInfo.size;\n    var name = data.name;\n\n    if (name.substr(0, prefix.length) === prefix) {\n      name = name.substr(prefix.length);\n    }\n\n    uniforms[name] = new Type(array, data.offset, length / Type.BYTES_PER_ELEMENT);\n  });\n  return {\n    name: blockName,\n    array: array,\n    asFloat: new Float32Array(array),\n    // for debugging\n    buffer: buffer,\n    uniforms: uniforms\n  };\n}\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo}\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockInfo(gl, programInfo, blockName) {\n  return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName);\n}\n/**\n * Binds a unform block to the matching uniform block point.\n * Matches by blocks by name so blocks must have the same name not just the same\n * structure.\n *\n * If you have changed any values and you upload the valus into the corresponding WebGLBuffer\n * call {@link module:twgl.setUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\n *     no buffer is bound.\n * @memberOf module:twgl/programs\n */\n\n\nfunction bindUniformBlock(gl, programInfo, uniformBlockInfo) {\n  var uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\n  var blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\n\n  if (blockSpec) {\n    var bufferBindIndex = blockSpec.index;\n    gl.bindBufferRange(gl.UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, uniformBlockInfo.offset || 0, uniformBlockInfo.array.byteLength);\n    return true;\n  }\n\n  return false;\n}\n/**\n * Uploads the current uniform values to the corresponding WebGLBuffer\n * and binds that buffer to the program's corresponding bind point for the uniform block object.\n *\n * If you haven't changed any values and you only need to bind the uniform block object\n * call {@link module:twgl.bindUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniformBlock(gl, programInfo, uniformBlockInfo) {\n  if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\n    gl.bufferData(gl.UNIFORM_BUFFER, uniformBlockInfo.array, gl.DYNAMIC_DRAW);\n  }\n}\n/**\n * Sets values of a uniform block object\n *\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\n * @param {Object.<string, ?>} values A uniform name to value map where the value is correct for the given\n *    type of uniform. So for example given a block like\n *\n *       uniform SomeBlock {\n *         float someFloat;\n *         vec2 someVec2;\n *         vec3 someVec3Array[2];\n *         int someInt;\n *       }\n *\n *  You can set the values of the uniform block with\n *\n *       twgl.setBlockUniforms(someBlockInfo, {\n *          someFloat: 12.3,\n *          someVec2: [1, 2],\n *          someVec3Array: [1, 2, 3, 4, 5, 6],\n *          someInt: 5,\n *       }\n *\n *  Arrays can be JavaScript arrays or typed arrays\n *\n *  Any name that doesn't match will be ignored\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBlockUniforms(uniformBlockInfo, values) {\n  var uniforms = uniformBlockInfo.uniforms;\n\n  for (var name in values) {\n    var array = uniforms[name];\n\n    if (array) {\n      var value = values[name];\n\n      if (value.length) {\n        array.set(value);\n      } else {\n        array[0] = value;\n      }\n    }\n  }\n}\n/**\n * Set uniforms and binds related textures.\n *\n * example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     const tex1 = gl.createTexture();\n *     const tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     var texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     const moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *     twgl.setUniforms(programInfo, moreUniforms);\n *\n * You can also add WebGLSamplers to uniform samplers as in\n *\n *     const uniforms = {\n *       u_someSampler: {\n *         texture: someWebGLTexture,\n *         sampler: someWebGLSampler,\n *       },\n *     };\n *\n * In which case both the sampler and texture will be bound to the\n * same unit.\n *\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n *        uniforms.\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n *\n *     const sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     const localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, sharedUniforms);\n *     twgl.setUniforms(programInfo, localUniforms};\n *\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniforms(setters, values) {\n  // eslint-disable-line\n  var actualSetters = setters.uniformSetters || setters;\n  var numArgs = arguments.length;\n\n  for (var andx = 1; andx < numArgs; ++andx) {\n    var vals = arguments[andx];\n\n    if (Array.isArray(vals)) {\n      var numValues = vals.length;\n\n      for (var ii = 0; ii < numValues; ++ii) {\n        setUniforms(actualSetters, vals[ii]);\n      }\n    } else {\n      for (var name in vals) {\n        var setter = actualSetters[name];\n\n        if (setter) {\n          setter(vals[name]);\n        }\n      }\n    }\n  }\n}\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:twgl.setAttributes} for example\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createAttributeSetters(gl, program) {\n  var attribSetters = {};\n  var numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n  for (var ii = 0; ii < numAttribs; ++ii) {\n    var attribInfo = gl.getActiveAttrib(program, ii);\n\n    if (isBuiltIn(attribInfo)) {\n      continue;\n    }\n\n    var index = gl.getAttribLocation(program, attribInfo.name);\n    var typeInfo = attrTypeMap[attribInfo.type];\n    var setter = typeInfo.setter(gl, index, typeInfo);\n    setter.location = index;\n    attribSetters[attribInfo.name] = setter;\n  }\n\n  return attribSetters;\n}\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n *\n * Example:\n *\n *     const program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const attribSetters = createAttributeSetters(program);\n *\n *     const positionBuffer = gl.createBuffer();\n *     const texcoordBuffer = gl.createBuffer();\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n * *   divisor: the divisor for instances. Default = undefined\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n * @memberOf module:twgl/programs\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n */\n\n\nfunction setAttributes(setters, buffers) {\n  for (var name in buffers) {\n    var setter = setters[name];\n\n    if (setter) {\n      setter(buffers[name]);\n    }\n  }\n}\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n *\n * For the example above it is equivilent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgrmaInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n * @param {(module:twgl.BufferInfo|module:twgl.vertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\n  if (buffers.vertexArrayObject) {\n    gl.bindVertexArray(buffers.vertexArrayObject);\n  } else {\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n\n    if (buffers.indices) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\n    }\n  }\n}\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n * @propetty {module:twgl.UniformBlockSpec} [uniformBlockSpace] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\n * @memberOf module:twgl\n */\n\n/**\n * Creates a ProgramInfo from an existing program.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfoFromProgram(gl, program) {\n  var uniformSetters = createUniformSetters(gl, program);\n  var attribSetters = createAttributeSetters(gl, program);\n  var programInfo = {\n    program: program,\n    uniformSetters: uniformSetters,\n    attribSetters: attribSetters\n  };\n\n  if (utils.isWebGL2(gl)) {\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\n  }\n\n  return programInfo;\n}\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramInfo(gl, [vs, fs], options);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the attributes. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfo(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var good = true;\n  shaderSources = shaderSources.map(function (source) {\n    // Lets assume if there is no \\n it's an id\n    if (source.indexOf(\"\\n\") < 0) {\n      var script = getElementById(source);\n\n      if (!script) {\n        progOptions.errorCallback(\"no element with id: \" + source);\n        good = false;\n      } else {\n        source = script.text;\n      }\n    }\n\n    return source;\n  });\n\n  if (!good) {\n    return null;\n  }\n\n  var program = createProgramFromSources(gl, shaderSources, progOptions);\n\n  if (!program) {\n    return null;\n  }\n\n  return createProgramInfoFromProgram(gl, program);\n}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.axisRotate = axisRotate;\nexports.axisRotation = axisRotation;\nexports.copy = copy;\nexports.frustum = frustum;\nexports.getAxis = getAxis;\nexports.getTranslation = getTranslation;\nexports.identity = identity;\nexports.inverse = inverse;\nexports.lookAt = lookAt;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.ortho = ortho;\nexports.perspective = perspective;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.rotationX = rotationX;\nexports.rotationY = rotationY;\nexports.rotationZ = rotationZ;\nexports.scale = scale;\nexports.scaling = scaling;\nexports.setAxis = setAxis;\nexports.setDefaultType = setDefaultType;\nexports.setTranslation = setTranslation;\nexports.transformDirection = transformDirection;\nexports.transformNormal = transformNormal;\nexports.transformPoint = transformPoint;\nexports.translate = translate;\nexports.translation = translation;\nexports.transpose = transpose;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = m4.create();\n *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = m4.identity();\n *     const trans = m4.translation([1, 2, 3]);\n *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n * @module twgl/m4\n */\nvar MatType = Float32Array;\nvar tempV3a = v3.create();\nvar tempV3b = v3.create();\nvar tempV3c = v3.create();\n/**\n * A JavaScript array with 16 values or a Float32Array with 16 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/m4.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Mat4\n * @memberOf module:twgl/m4\n */\n\n/**\n * Sets the type this library creates for a Mat4\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Mat4\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n/**\n * Negates a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} -m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction negate(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = -m[0];\n  dst[1] = -m[1];\n  dst[2] = -m[2];\n  dst[3] = -m[3];\n  dst[4] = -m[4];\n  dst[5] = -m[5];\n  dst[6] = -m[6];\n  dst[7] = -m[7];\n  dst[8] = -m[8];\n  dst[9] = -m[9];\n  dst[10] = -m[10];\n  dst[11] = -m[11];\n  dst[12] = -m[12];\n  dst[13] = -m[13];\n  dst[14] = -m[14];\n  dst[15] = -m[15];\n  return dst;\n}\n/**\n * Copies a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] The matrix.\n * @return {module:twgl/m4.Mat4} A copy of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction copy(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = m[0];\n  dst[1] = m[1];\n  dst[2] = m[2];\n  dst[3] = m[3];\n  dst[4] = m[4];\n  dst[5] = m[5];\n  dst[6] = m[6];\n  dst[7] = m[7];\n  dst[8] = m[8];\n  dst[9] = m[9];\n  dst[10] = m[10];\n  dst[11] = m[11];\n  dst[12] = m[12];\n  dst[13] = m[13];\n  dst[14] = m[14];\n  dst[15] = m[15];\n  return dst;\n}\n/**\n * Creates an n-by-n identity matrix.\n *\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction identity(dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Takes the transpose of a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The transpose of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transpose(m, dst) {\n  dst = dst || new MatType(16);\n\n  if (dst === m) {\n    var t;\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  dst[0] = m00;\n  dst[1] = m10;\n  dst[2] = m20;\n  dst[3] = m30;\n  dst[4] = m01;\n  dst[5] = m11;\n  dst[6] = m21;\n  dst[7] = m31;\n  dst[8] = m02;\n  dst[9] = m12;\n  dst[10] = m22;\n  dst[11] = m32;\n  dst[12] = m03;\n  dst[13] = m13;\n  dst[14] = m23;\n  dst[15] = m33;\n  return dst;\n}\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The inverse of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction inverse(m, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  var tmp_0 = m22 * m33;\n  var tmp_1 = m32 * m23;\n  var tmp_2 = m12 * m33;\n  var tmp_3 = m32 * m13;\n  var tmp_4 = m12 * m23;\n  var tmp_5 = m22 * m13;\n  var tmp_6 = m02 * m33;\n  var tmp_7 = m32 * m03;\n  var tmp_8 = m02 * m23;\n  var tmp_9 = m22 * m03;\n  var tmp_10 = m02 * m13;\n  var tmp_11 = m12 * m03;\n  var tmp_12 = m20 * m31;\n  var tmp_13 = m30 * m21;\n  var tmp_14 = m10 * m31;\n  var tmp_15 = m30 * m11;\n  var tmp_16 = m10 * m21;\n  var tmp_17 = m20 * m11;\n  var tmp_18 = m00 * m31;\n  var tmp_19 = m30 * m01;\n  var tmp_20 = m00 * m21;\n  var tmp_21 = m20 * m01;\n  var tmp_22 = m00 * m11;\n  var tmp_23 = m10 * m01;\n  var t0 = tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31 - (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  var t1 = tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31 - (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  var t2 = tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31 - (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  var t3 = tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21 - (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n  var d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n  dst[0] = d * t0;\n  dst[1] = d * t1;\n  dst[2] = d * t2;\n  dst[3] = d * t3;\n  dst[4] = d * (tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30 - (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n  dst[5] = d * (tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30 - (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n  dst[6] = d * (tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30 - (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n  dst[7] = d * (tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20 - (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n  dst[8] = d * (tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33 - (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n  dst[9] = d * (tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33 - (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n  dst[10] = d * (tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33 - (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n  dst[11] = d * (tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23 - (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n  dst[12] = d * (tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12 - (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n  dst[13] = d * (tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22 - (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n  dst[14] = d * (tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02 - (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n  dst[15] = d * (tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12 - (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n  return dst;\n}\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param {module:twgl/m4.Mat4} a The matrix on the left.\n * @param {module:twgl/m4.Mat4} b The matrix on the right.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The matrix product of a and b.\n * @memberOf module:twgl/m4\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new MatType(16);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4 + 0];\n  var a11 = a[4 + 1];\n  var a12 = a[4 + 2];\n  var a13 = a[4 + 3];\n  var a20 = a[8 + 0];\n  var a21 = a[8 + 1];\n  var a22 = a[8 + 2];\n  var a23 = a[8 + 3];\n  var a30 = a[12 + 0];\n  var a31 = a[12 + 1];\n  var a32 = a[12 + 2];\n  var a33 = a[12 + 3];\n  var b00 = b[0];\n  var b01 = b[1];\n  var b02 = b[2];\n  var b03 = b[3];\n  var b10 = b[4 + 0];\n  var b11 = b[4 + 1];\n  var b12 = b[4 + 2];\n  var b13 = b[4 + 3];\n  var b20 = b[8 + 0];\n  var b21 = b[8 + 1];\n  var b22 = b[8 + 2];\n  var b23 = b[8 + 3];\n  var b30 = b[12 + 0];\n  var b31 = b[12 + 1];\n  var b32 = b[12 + 2];\n  var b33 = b[12 + 3];\n  dst[0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n  return dst;\n}\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param {module:twgl/m4.Mat4} a The matrix.\n * @param {Vec3} v The vector.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} a once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction setTranslation(a, v, dst) {\n  dst = dst || identity();\n\n  if (a !== dst) {\n    dst[0] = a[0];\n    dst[1] = a[1];\n    dst[2] = a[2];\n    dst[3] = a[3];\n    dst[4] = a[4];\n    dst[5] = a[5];\n    dst[6] = a[6];\n    dst[7] = a[7];\n    dst[8] = a[8];\n    dst[9] = a[9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} [dst] vector..\n * @return {Vec3} The translation component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getTranslation(m, dst) {\n  dst = dst || v3.create();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\n * @return {Vec3} [dst] vector.\n * @return {Vec3} The axis component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getAxis(m, axis, dst) {\n  dst = dst || v3.create();\n  var off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param {Vec3} v the axis vector\n * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\n * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If none a new one is created\n * @return {module:twgl/m4.Mat4} dst\n * @memberOf module:twgl/m4\n */\n\n\nfunction setAxis(a, v, axis, dst) {\n  if (dst !== a) {\n    dst = copy(a, dst);\n  }\n\n  var off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\n * @param {number} aspect The aspect ratio width / height.\n * @param {number} zNear The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} zFar The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n  dst = dst || new MatType(16);\n  var f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n  var rangeInv = 1.0 / (zNear - zFar);\n  dst[0] = f / aspect;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = f;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = (zNear + zFar) * rangeInv;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = zNear * zFar * rangeInv * 2;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 othogonal transformation matrix given the left, right,\n * bottom, and top dimensions of the near clipping plane as well as the\n * near and far clipping plane distances.\n * @param {number} left Left side of the near clipping plane viewport.\n * @param {number} right Right side of the near clipping plane viewport.\n * @param {number} top Top of the near clipping plane viewport.\n * @param {number} bottom Bottom of the near clipping plane viewport.\n * @param {number} near The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} far The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction ortho(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 2 / (right - left);\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 / (top - bottom);\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 2 / (near - far);\n  dst[11] = 0;\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = (far + near) / (near - far);\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective projection matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction frustum(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  var dx = right - left;\n  var dy = top - bottom;\n  var dz = near - far;\n  dst[0] = 2 * near / dx;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 * near / dy;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = (left + right) / dx;\n  dst[9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 look-at transformation.\n *\n * This is a matrix which positions the camera itself. If you want\n * a view matrix (a matrix which moves things in front of the camera)\n * take the inverse of this.\n *\n * @param {Vec3} eye The position of the eye.\n * @param {Vec3} target The position meant to be viewed.\n * @param {Vec3} up A vector pointing up.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The look-at matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction lookAt(eye, target, up, dst) {\n  dst = dst || new MatType(16);\n  var xAxis = tempV3a;\n  var yAxis = tempV3b;\n  var zAxis = tempV3c;\n  v3.normalize(v3.subtract(eye, target, zAxis), zAxis);\n  v3.normalize(v3.cross(up, zAxis, xAxis), xAxis);\n  v3.normalize(v3.cross(zAxis, xAxis, yAxis), yAxis);\n  dst[0] = xAxis[0];\n  dst[1] = xAxis[1];\n  dst[2] = xAxis[2];\n  dst[3] = 0;\n  dst[4] = yAxis[0];\n  dst[5] = yAxis[1];\n  dst[6] = yAxis[2];\n  dst[7] = 0;\n  dst[8] = zAxis[0];\n  dst[9] = zAxis[1];\n  dst[10] = zAxis[2];\n  dst[11] = 0;\n  dst[12] = eye[0];\n  dst[13] = eye[1];\n  dst[14] = eye[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param {Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The translation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translation(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by translation by the given vector v.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translate(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[0] = m00;\n    dst[1] = m01;\n    dst[2] = m02;\n    dst[3] = m03;\n    dst[4] = m10;\n    dst[5] = m11;\n    dst[6] = m12;\n    dst[7] = m13;\n    dst[8] = m20;\n    dst[9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationX(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = c;\n  dst[6] = s;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = -s;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the x-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateX(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[4] = c * m10 + s * m20;\n  dst[5] = c * m11 + s * m21;\n  dst[6] = c * m12 + s * m22;\n  dst[7] = c * m13 + s * m23;\n  dst[8] = c * m20 - s * m10;\n  dst[9] = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[3] = m[3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationY(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = 0;\n  dst[2] = -s;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = s;\n  dst[9] = 0;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the y-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateY(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 - s * m20;\n  dst[1] = c * m01 - s * m21;\n  dst[2] = c * m02 - s * m22;\n  dst[3] = c * m03 - s * m23;\n  dst[8] = c * m20 + s * m00;\n  dst[9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[4] = m[4];\n    dst[5] = m[5];\n    dst[6] = m[6];\n    dst[7] = m[7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationZ(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = s;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = -s;\n  dst[5] = c;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the z-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateZ(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 + s * m10;\n  dst[1] = c * m01 + s * m11;\n  dst[2] = c * m02 + s * m12;\n  dst[3] = c * m03 + s * m13;\n  dst[4] = c * m10 - s * m00;\n  dst[5] = c * m11 - s * m01;\n  dst[6] = c * m12 - s * m02;\n  dst[7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[8] = m[8];\n    dst[9] = m[9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param {Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\n *     around the axis.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotation(axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  dst[0] = xx + (1 - xx) * c;\n  dst[1] = x * y * oneMinusCosine + z * s;\n  dst[2] = x * z * oneMinusCosine - y * s;\n  dst[3] = 0;\n  dst[4] = x * y * oneMinusCosine - z * s;\n  dst[5] = yy + (1 - yy) * c;\n  dst[6] = y * z * oneMinusCosine + x * s;\n  dst[7] = 0;\n  dst[8] = x * z * oneMinusCosine + y * s;\n  dst[9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by rotation around the given axis by the\n * given angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotate(m, axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  var r00 = xx + (1 - xx) * c;\n  var r01 = x * y * oneMinusCosine + z * s;\n  var r02 = x * z * oneMinusCosine - y * s;\n  var r10 = x * y * oneMinusCosine - z * s;\n  var r11 = yy + (1 - yy) * c;\n  var r12 = y * z * oneMinusCosine + x * s;\n  var r20 = x * z * oneMinusCosine + y * s;\n  var r21 = y * z * oneMinusCosine - x * s;\n  var r22 = zz + (1 - zz) * c;\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  dst[0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param {Vec3} v A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The scaling matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scaling(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = v[0];\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = v[1];\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = v[2];\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix, scaling in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param {module:twgl/m4.Mat4} m The matrix to be modified.\n * @param {Vec3} v A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scale(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2];\n  dst[3] = v0 * m[0 * 4 + 3];\n  dst[4] = v1 * m[1 * 4 + 0];\n  dst[5] = v1 * m[1 * 4 + 1];\n  dst[6] = v1 * m[1 * 4 + 2];\n  dst[7] = v1 * m[1 * 4 + 3];\n  dst[8] = v2 * m[2 * 4 + 0];\n  dst[9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The point.\n * @param {Vec3} dst optional vec3 to store result\n * @return {Vec3} dst or new vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformPoint(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n  dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\n  dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\n  dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n * direction, transforms that direction by the matrix, and returns the result;\n * assumes the transformation of 3-dimensional space represented by the matrix\n * is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion. Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The direction.\n * @param {Vec3} dst optional Vec3 to store result\n * @return {Vec3} dst or new Vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformDirection(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n * as a normal to a surface, and computes a vector which is normal upon\n * transforming that surface by the matrix. The effect of this function is the\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\n * function assumes the transformation of 3-dimensional space represented by the\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion.  Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The normal.\n * @param {Vec3} [dst] The direction.\n * @return {Vec3} The transformed direction.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformNormal(m, v, dst) {\n  dst = dst || v3.create();\n  var mi = inverse(m);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttribsFromArrays = createAttribsFromArrays;\nexports.createBuffersFromArrays = createBuffersFromArrays;\nexports.createBufferFromArray = createBufferFromArray;\nexports.createBufferFromTypedArray = createBufferFromTypedArray;\nexports.createBufferInfoFromArrays = createBufferInfoFromArrays;\nexports.setAttribInfoBufferFromArray = setAttribInfoBufferFromArray;\nexports.setAttributePrefix = setAttributePrefix;\nexports.setAttributeDefaults_ = setDefaults;\nexports.getNumComponents_ = getNumComponents;\nexports.getArray_ = getArray;\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level attribute and buffer related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/attributes\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  attribPrefix: \"\"\n};\n/**\n * Sets the default attrib prefix\n *\n * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n * as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n *\n * In otherwords I'll create arrays of geometry like this\n *\n *     var arrays = {\n *       position: ...\n *       normal: ...\n *       texcoord: ...\n *     };\n *\n * But need those mapped to attributes and my attributes start with `a_`.\n *\n * @deprecated see {@link module:twgl.setDefaults}\n * @param {string} prefix prefix for attribs\n * @memberOf module:twgl/attributes\n */\n\nfunction setAttributePrefix(prefix) {\n  defaults.attribPrefix = prefix;\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n}\n\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || gl.STATIC_DRAW);\n}\n/**\n * Given typed array creates a WebGLBuffer and copies the typed array\n * into it.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n * @return {WebGLBuffer} the created WebGLBuffer\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\n  if (helper.isBuffer(gl, typedArray)) {\n    return typedArray;\n  }\n\n  type = type || gl.ARRAY_BUFFER;\n  var buffer = gl.createBuffer();\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n  return buffer;\n}\n\nfunction isIndices(name) {\n  return name === \"indices\";\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n}\n\nfunction getArray(array) {\n  return array.length ? array : array.data;\n}\n\nvar texcoordRE = /coord|texture/i;\nvar colorRE = /color|colour/i;\n\nfunction guessNumComponentsFromName(name, length) {\n  var numComponents;\n\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3; // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw \"Can not guess numComponents for attribute '\" + name + \"'. Tried \" + numComponents + \" but \" + length + \" values is not evenly divisible by \" + numComponents + \". You should specify it.\";\n  }\n\n  return numComponents;\n}\n\nfunction getNumComponents(array, arrayName) {\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\n}\n\nfunction makeTypedArray(array, name) {\n  if (typedArrays.isArrayBuffer(array)) {\n    return array;\n  }\n\n  if (typedArrays.isArrayBuffer(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array\n    };\n  }\n\n  var Type = array.type;\n\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint16Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n\n  return new Type(array.data);\n}\n/**\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n * for the attribute.\n *\n * @typedef {Object} AttribInfo\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] synonym for `numComponents`.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {number} [divisor] the divisor in instances. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * Use this type of array spec when TWGL can't guess the type or number of compoments of an array\n * @typedef {Object} FullArraySpec\n * @property {(number|number[]|ArrayBufferView)} data The data of the array. A number alone becomes the number of elements of type.\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n *    If `coord` is in the name assumes `numComponents = 2`.\n *    If `color` is in the name assumes `numComponents = 4`.\n *    otherwise assumes `numComponents = 3`\n * @property {constructor} type The type. This is only used if `data` is a JavaScript array. It is the constructor for the typedarray. (eg. `Uint8Array`).\n * For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: Uint8Array, data: [255,0,255,255, ...], }`.\n * @property {number} [size] synonym for `numComponents`.\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n * @property {string} [name] synonym for `attrib`.\n * @property {string} [attribName] synonym for `attrib`.\n * @memberOf module:twgl\n */\n\n/**\n * An individual array in {@link module:twgl.Arrays}\n *\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\n *\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\n * @memberOf module:twgl\n */\n\n/**\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n * @memberOf module:twgl\n */\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      var arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      var attribs = {\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * notes:\n *\n * *   Arrays can take various forms\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {module:twgl.Arrays} arrays The arrays\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createAttribsFromArrays(gl, arrays) {\n  var attribs = {};\n  Object.keys(arrays).forEach(function (arrayName) {\n    if (!isIndices(arrayName)) {\n      var array = arrays[arrayName];\n      var attribName = array.attrib || array.name || array.attribName || defaults.attribPrefix + arrayName;\n      var buffer;\n      var type;\n      var normalization;\n      var numComponents;\n      var numValues;\n\n      if (typeof array === \"number\" || typeof array.data === \"number\") {\n        numValues = array.data || array;\n        var arrayType = array.type || Float32Array;\n        var numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\n        type = typedArrays.getGLTypeForTypedArrayType(arrayType);\n        normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\n        numComponents = array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues);\n        buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, numBytes, array.drawType || gl.STATIC_DRAW);\n      } else {\n        var typedArray = makeTypedArray(array, arrayName);\n        buffer = createBufferFromTypedArray(gl, typedArray, undefined, array.drawType);\n        type = typedArrays.getGLTypeForTypedArray(typedArray);\n        normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArray(typedArray);\n        numComponents = getNumComponents(array, arrayName);\n        numValues = typedArray.length;\n      }\n\n      attribs[attribName] = {\n        buffer: buffer,\n        numComponents: numComponents,\n        type: type,\n        normalize: normalization,\n        stride: array.stride || 0,\n        offset: array.offset || 0,\n        divisor: array.divisor === undefined ? undefined : array.divisor,\n        drawType: array.drawType\n      };\n    }\n  });\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  return attribs;\n}\n/**\n * Sets the contents of a buffer attached to an attribInfo\n *\n * This is helper function to dynamically update a buffer.\n *\n * Let's say you make a bufferInfo\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n *  And you want to dynamically upate the positions. You could do this\n *\n *     // assuming arrays.position has already been updated with new data.\n *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\n *\n * @param {WebGLRenderingContext} gl\n * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\n *   the name of the attribute will include the prefix.\n * @param {ArraySpec} array Note: it is arguably ineffient to pass in anything but a typed array because anything\n *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\n *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\n * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\n *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\n *    for the portion of the array you want to use.\n *\n *        var someArray = new Float32Array(1000); // an array with 1000 floats\n *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\n *\n *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\n * @memberOf module:twgl/attributes\n */\n\n\nfunction setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\n  array = makeTypedArray(array);\n\n  if (offset !== undefined) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, attribInfo.buffer);\n    gl.bufferSubData(gl.ARRAY_BUFFER, offset, array);\n  } else {\n    setBufferFromTypedArray(gl, gl.ARRAY_BUFFER, attribInfo.buffer, array, attribInfo.drawType);\n  }\n}\n\nfunction getBytesPerValueForGLType(gl, type) {\n  if (type === gl.BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.INT) return 4; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_INT) return 4; // eslint-disable-line\n\n  if (type === gl.FLOAT) return 4; // eslint-disable-line\n\n  return 0;\n}\n/**\n * tries to get the number of elements from a set of arrays.\n */\n\n\nvar positionKeys = ['position', 'positions', 'a_position'];\n\nfunction getNumElementsFromNonIndexedArrays(arrays) {\n  var key;\n\n  for (var _ii = 0; _ii < positionKeys.length; ++_ii) {\n    key = positionKeys[_ii];\n\n    if (key in arrays) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(arrays)[0];\n  }\n\n  var array = arrays[key];\n  var length = getArray(array).length;\n  var numComponents = getNumComponents(array, key);\n  var numElements = length / numComponents;\n\n  if (length % numComponents > 0) {\n    throw \"numComponents \" + numComponents + \" not correct for length \" + length;\n  }\n\n  return numElements;\n}\n\nfunction getNumElementsFromAttributes(gl, attribs) {\n  var key;\n  var ii;\n\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n\n    if (key in attribs) {\n      break;\n    }\n\n    key = defaults.attribPrefix + key;\n\n    if (key in attribs) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(attribs)[0];\n  }\n\n  var attrib = attribs[key];\n  gl.bindBuffer(gl.ARRAY_BUFFER, attrib.buffer);\n  var numBytes = gl.getBufferParameter(gl.ARRAY_BUFFER, gl.BUFFER_SIZE);\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  var bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\n  var totalElements = numBytes / bytesPerValue;\n  var numComponents = attrib.numComponents || attrib.size; // TODO: check stride\n\n  var numElements = totalElements / numComponents;\n\n  if (numElements % 1 !== 0) {\n    throw \"numComponents \" + numComponents + \" not correct for length \" + length;\n  }\n\n  return numElements;\n}\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs approriate to call `setAttributes`\n * @memberOf module:twgl\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * Given an object like\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         a_position: { buffer: WebGLBuffer, numComponents: 3, },\n *         a_normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         a_texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     var arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also by TypedArrays\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or augmentedTypedArrays\n *\n *     var positions = createAugmentedTypedArray(3, 4);\n *     var texcoords = createAugmentedTypedArray(2, 4);\n *     var normals   = createAugmentedTypedArray(3, 4);\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     var arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     var bufferInfo = {\n *       attribs: {\n *         a_position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         a_texcoods: { numComponents: 2, buffer: gl.createBuffer(), },\n *         a_normals: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.Arrays} arrays Your data\n * @return {module:twgl.BufferInfo} A BufferInfo\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferInfoFromArrays(gl, arrays) {\n  var bufferInfo = {\n    attribs: createAttribsFromArrays(gl, arrays)\n  };\n  var indices = arrays.indices;\n\n  if (indices) {\n    var newIndices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, gl.ELEMENT_ARRAY_BUFFER);\n    bufferInfo.numElements = newIndices.length;\n    bufferInfo.elementType = typedArrays.getGLTypeForTypedArray(newIndices);\n  } else {\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\n  }\n\n  return bufferInfo;\n}\n/**\n * Creates a buffer from an array, typed array, or array spec\n *\n * Given something like this\n *\n *     [1, 2, 3],\n *\n * or\n *\n *     new Uint16Array([1,2,3]);\n *\n * or\n *\n *     {\n *        data: [1, 2, 3],\n *        type: Uint8Array,\n *     }\n *\n * returns a WebGLBuffer that constains the given data.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\n * @param {string} arrayName name of array. Used to guess the type if type can not be dervied other wise.\n * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromArray(gl, array, arrayName) {\n  var type = arrayName === \"indices\" ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;\n  var typedArray = makeTypedArray(array, arrayName);\n  return createBufferFromTypedArray(gl, typedArray, type);\n}\n/**\n * Creates buffers from arrays or typed arrays\n *\n * Given something like this\n *\n *     var arrays = {\n *        positions: [1, 2, 3],\n *        normals: [0, 0, 1],\n *     }\n *\n * returns something like\n *\n *     buffers = {\n *       positions: WebGLBuffer,\n *       normals: WebGLBuffer,\n *     }\n *\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.Arrays} arrays\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBuffersFromArrays(gl, arrays) {\n  var buffers = {};\n  Object.keys(arrays).forEach(function (key) {\n    buffers[key] = createBufferFromArray(gl, arrays[key], key);\n  }); // Ugh!\n\n  if (arrays.indices) {\n    buffers.numElements = arrays.indices.length;\n    buffers.elementType = typedArrays.getGLTypeForTypedArray(makeTypedArray(arrays.indices), 'indices');\n  } else {\n    buffers.numElements = getNumElementsFromNonIndexedArrays(arrays);\n  }\n\n  return buffers;\n}\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.setTextureDefaults_ = setDefaults;\nexports.createSampler = createSampler;\nexports.createSamplers = createSamplers;\nexports.setSamplerParameters = setSamplerParameters;\nexports.createTexture = createTexture;\nexports.setEmptyTexture = setEmptyTexture;\nexports.setTextureFromArray = setTextureFromArray;\nexports.loadTextureFromUrl = loadTextureFromUrl;\nexports.setTextureFromElement = setTextureFromElement;\nexports.setTextureFilteringForSize = setTextureFilteringForSize;\nexports.setTextureParameters = setTextureParameters;\nexports.setDefaultTextureColor = setDefaultTextureColor;\nexports.createTextures = createTextures;\nexports.resizeTexture = resizeTexture;\nexports.getNumComponentsForFormat = getNumComponentsForFormat;\nexports.getBytesPerElementForInternalFormat = getBytesPerElementForInternalFormat;\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level texture related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.textures` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/textures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  textureColor: new Uint8Array([128, 192, 255, 255]),\n  textureOptions: {},\n  crossOrigin: undefined\n};\nvar isArrayBuffer = typedArrays.isArrayBuffer; // Should we make this on demand?\n\nvar ctx = _globalObject.default.document && _globalObject.default.document.createElement ? _globalObject.default.document.createElement(\"canvas\").getContext(\"2d\") : null; // NOTE: Chrome supports 2D canvas in a Worker (behind flag as of v64 but\n//       not only does Firefox NOT support it but Firefox freezes immediately\n//       if you try to create one instead of just returning null and continuing.\n//  : (global.OffscreenCanvas && (new global.OffscreenCanvas(1, 1)).getContext(\"2d\"));  // OffscreenCanvas may not support 2d\n// NOTE: We can maybe remove some of the need for the 2d canvas. In WebGL2\n// we can use the various unpack settings. Otherwise we could try using\n// the ability of an imagebitmap to be cut. Unfortunately cutting an imagebitmap\n// is async and the current TWGL code expects a non-Async result though that\n// might not be a problem. ImageBitmap though is not available in Edge or Safari\n// as of 2018-01-02\n\n/* PixelFormat */\n\nvar ALPHA = 0x1906;\nvar RGB = 0x1907;\nvar RGBA = 0x1908;\nvar LUMINANCE = 0x1909;\nvar LUMINANCE_ALPHA = 0x190A;\nvar DEPTH_COMPONENT = 0x1902;\nvar DEPTH_STENCIL = 0x84F9;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\nvar R8 = 0x8229;\nvar R8_SNORM = 0x8F94;\nvar R16F = 0x822D;\nvar R32F = 0x822E;\nvar R8UI = 0x8232;\nvar R8I = 0x8231;\nvar RG16UI = 0x823A;\nvar RG16I = 0x8239;\nvar RG32UI = 0x823C;\nvar RG32I = 0x823B;\nvar RG8 = 0x822B;\nvar RG8_SNORM = 0x8F95;\nvar RG16F = 0x822F;\nvar RG32F = 0x8230;\nvar RG8UI = 0x8238;\nvar RG8I = 0x8237;\nvar R16UI = 0x8234;\nvar R16I = 0x8233;\nvar R32UI = 0x8236;\nvar R32I = 0x8235;\nvar RGB8 = 0x8051;\nvar SRGB8 = 0x8C41;\nvar RGB565 = 0x8D62;\nvar RGB8_SNORM = 0x8F96;\nvar R11F_G11F_B10F = 0x8C3A;\nvar RGB9_E5 = 0x8C3D;\nvar RGB16F = 0x881B;\nvar RGB32F = 0x8815;\nvar RGB8UI = 0x8D7D;\nvar RGB8I = 0x8D8F;\nvar RGB16UI = 0x8D77;\nvar RGB16I = 0x8D89;\nvar RGB32UI = 0x8D71;\nvar RGB32I = 0x8D83;\nvar RGBA8 = 0x8058;\nvar SRGB8_ALPHA8 = 0x8C43;\nvar RGBA8_SNORM = 0x8F97;\nvar RGB5_A1 = 0x8057;\nvar RGBA4 = 0x8056;\nvar RGB10_A2 = 0x8059;\nvar RGBA16F = 0x881A;\nvar RGBA32F = 0x8814;\nvar RGBA8UI = 0x8D7C;\nvar RGBA8I = 0x8D8E;\nvar RGB10_A2UI = 0x906F;\nvar RGBA16UI = 0x8D76;\nvar RGBA16I = 0x8D88;\nvar RGBA32I = 0x8D82;\nvar RGBA32UI = 0x8D70;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar DEPTH_COMPONENT24 = 0x81A6;\nvar DEPTH_COMPONENT32F = 0x8CAC;\nvar DEPTH32F_STENCIL8 = 0x8CAD;\nvar DEPTH24_STENCIL8 = 0x88F0;\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar HALF_FLOAT_OES = 0x8D61; // Thanks Khronos for making this different >:(\n\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar RG = 0x8227;\nvar RG_INTEGER = 0x8228;\nvar RED = 0x1903;\nvar RED_INTEGER = 0x8D94;\nvar RGB_INTEGER = 0x8D98;\nvar RGBA_INTEGER = 0x8D99;\nvar formatInfo = {};\n{\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\n  // the name.\n  var f = formatInfo;\n  f[ALPHA] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE_ALPHA] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RED] = {\n    numColorComponents: 1\n  };\n  f[RED_INTEGER] = {\n    numColorComponents: 1\n  };\n  f[RG] = {\n    numColorComponents: 2\n  };\n  f[RG_INTEGER] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGB_INTEGER] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RGBA_INTEGER] = {\n    numColorComponents: 4\n  };\n  f[DEPTH_COMPONENT] = {\n    numColorComponents: 1\n  };\n  f[DEPTH_STENCIL] = {\n    numColorComponents: 2\n  };\n}\nvar textureInternalFormatInfo = {};\n{\n  // NOTE: these properties need unique names so we can let Uglify mangle the name.\n  var t = textureInternalFormatInfo; // unsized formats\n\n  t[ALPHA] = {\n    textureFormat: ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE] = {\n    textureFormat: LUMINANCE,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE_ALPHA] = {\n    textureFormat: LUMINANCE_ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [2, 4, 4, 8],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[RGB] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 6, 6, 12, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGBA] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 8, 8, 16, 2, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1]\n  }; // sized formats\n\n  t[R8] = {\n    textureFormat: RED,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 1,\n    type: UNSIGNED_BYTE\n  };\n  t[R8_SNORM] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 1,\n    type: BYTE\n  };\n  t[R16F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[R32F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT\n  };\n  t[R8UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 1,\n    type: UNSIGNED_BYTE\n  };\n  t[R8I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 1,\n    type: BYTE\n  };\n  t[R16UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: UNSIGNED_SHORT\n  };\n  t[R16I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: SHORT\n  };\n  t[R32UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT\n  };\n  t[R32I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: INT\n  };\n  t[RG8] = {\n    textureFormat: RG,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 2,\n    type: UNSIGNED_BYTE\n  };\n  t[RG8_SNORM] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 2,\n    type: BYTE\n  };\n  t[RG16F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [8, 4],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RG32F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: FLOAT\n  };\n  t[RG8UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: UNSIGNED_BYTE\n  };\n  t[RG8I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: BYTE\n  };\n  t[RG16UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_SHORT\n  };\n  t[RG16I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: SHORT\n  };\n  t[RG32UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: UNSIGNED_INT\n  };\n  t[RG32I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: INT\n  };\n  t[RGB8] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[SRGB8] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[RGB565] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGB8_SNORM] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: BYTE\n  };\n  t[R11F_G11F_B10F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_10F_11F_11F_REV]\n  };\n  t[RGB9_E5] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_5_9_9_9_REV]\n  };\n  t[RGB16F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGB32F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: FLOAT\n  };\n  t[RGB8UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[RGB8I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 3,\n    type: BYTE\n  };\n  t[RGB16UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 6,\n    type: UNSIGNED_SHORT\n  };\n  t[RGB16I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 6,\n    type: SHORT\n  };\n  t[RGB32UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: UNSIGNED_INT\n  };\n  t[RGB32I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: INT\n  };\n  t[RGBA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[SRGB8_ALPHA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[RGBA8_SNORM] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: BYTE\n  };\n  t[RGB5_A1] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2, 4],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_5_5_1, UNSIGNED_INT_2_10_10_10_REV]\n  };\n  t[RGBA4] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_4_4_4_4]\n  };\n  t[RGB10_A2] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_2_10_10_10_REV\n  };\n  t[RGBA16F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [16, 8],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGBA32F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: FLOAT\n  };\n  t[RGBA8UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[RGBA8I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: BYTE\n  };\n  t[RGB10_A2UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_2_10_10_10_REV\n  };\n  t[RGBA16UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: UNSIGNED_SHORT\n  };\n  t[RGBA16I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: SHORT\n  };\n  t[RGBA32I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: INT\n  };\n  t[RGBA32UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: UNSIGNED_INT\n  }; // Sized Internal\n\n  t[DEPTH_COMPONENT16] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2, 4],\n    type: [UNSIGNED_SHORT, UNSIGNED_INT]\n  };\n  t[DEPTH_COMPONENT24] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT\n  };\n  t[DEPTH_COMPONENT32F] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT\n  };\n  t[DEPTH24_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_24_8\n  };\n  t[DEPTH32F_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT_32_UNSIGNED_INT_24_8_REV\n  };\n  Object.keys(t).forEach(function (internalFormat) {\n    var info = t[internalFormat];\n    info.bytesPerElementMap = {};\n\n    if (Array.isArray(info.bytesPerElement)) {\n      info.bytesPerElement.forEach(function (bytesPerElement, ndx) {\n        var type = info.type[ndx];\n        info.bytesPerElementMap[type] = bytesPerElement;\n      });\n    } else {\n      var type = info.type;\n      info.bytesPerElementMap[type] = info.bytesPerElement;\n    }\n  });\n}\n/**\n * Gets the number of bytes per element for a given internalFormat / type\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {number} the number of bytes per element for the given internalFormat, type combo\n * @memberOf module:twgl/textures\n */\n\nfunction getBytesPerElementForInternalFormat(internalFormat, type) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  var bytesPerElement = info.bytesPerElementMap[type];\n\n  if (bytesPerElement === undefined) {\n    throw \"unknown internal format\";\n  }\n\n  return bytesPerElement;\n}\n/**\n * Gets the format for a given internalFormat\n *\n * @param {number} internalFormat The internal format\n * @return {{format:number, type:number}} the corresponding format and type\n */\n\n\nfunction getFormatAndTypeForInternalFormat(internalFormat) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return {\n    format: info.textureFormat,\n    type: Array.isArray(info.type) ? info.type[0] : info.type\n  };\n}\n/**\n * Returns true if value is power of 2\n * @param {number} value number to check.\n * @return true if value is power of 2\n */\n\n\nfunction isPowerOf2(value) {\n  return (value & value - 1) === 0;\n}\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {boolean} true if we can generate mips\n */\n\n\nfunction canGenerateMipmap(gl, width, height, internalFormat\n/*, type */\n) {\n  if (!utils.isWebGL2(gl)) {\n    return isPowerOf2(width) && isPowerOf2(height);\n  }\n\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.colorRenderable && info.textureFilterable;\n}\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {boolean} true if we can generate mips\n */\n\n\nfunction canFilter(internalFormat\n/*, type */\n) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.textureFilterable;\n}\n/**\n * Gets the number of compontents for a given image format.\n * @param {number} format the format.\n * @return {number} the number of components for the format.\n * @memberOf module:twgl/textures\n */\n\n\nfunction getNumComponentsForFormat(format) {\n  var info = formatInfo[format];\n\n  if (!info) {\n    throw \"unknown format: \" + format;\n  }\n\n  return info.numColorComponents;\n}\n/**\n * Gets the texture type for a given array type.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @return {number} the gl texture type\n */\n\n\nfunction getTextureTypeForArrayType(gl, src, defaultType) {\n  if (isArrayBuffer(src)) {\n    return typedArrays.getGLTypeForTypedArray(src);\n  }\n\n  return defaultType || gl.UNSIGNED_BYTE;\n}\n\nfunction guessDimensions(gl, target, width, height, numElements) {\n  if (numElements % 1 !== 0) {\n    throw \"can't guess dimensions\";\n  }\n\n  if (!width && !height) {\n    var size = Math.sqrt(numElements / (target === gl.TEXTURE_CUBE_MAP ? 6 : 1));\n\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width;\n\n    if (height % 1) {\n      throw \"can't guess dimensions\";\n    }\n  } else if (!width) {\n    width = numElements / height;\n\n    if (width % 1) {\n      throw \"can't guess dimensions\";\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Sets the default texture color.\n *\n * The default texture color is used when loading textures from\n * urls. Because the URL will be loaded async we'd like to be\n * able to use the texture immediately. By putting a 1x1 pixel\n * color in the texture we can start using the texture before\n * the URL has loaded.\n *\n * @param {number[]} color Array of 4 values in the range 0 to 1\n * @deprecated see {@link module:twgl.setDefaults}\n * @memberOf module:twgl/textures\n */\n\n\nfunction setDefaultTextureColor(color) {\n  defaults.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n\n  if (newDefaults.textureColor) {\n    setDefaultTextureColor(newDefaults.textureColor);\n  }\n}\n/**\n * A function to generate the source for a texture.\n * @callback TextureFunc\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options the texture options\n * @return {*} Returns any of the things documentented for `src` for {@link module:twgl.TextureOptions}.\n * @memberOf module:twgl\n */\n\n/**\n * Texture options passed to most texture functions. Each function will use whatever options\n * are appropriate for its needs. This lets you pass the same options to all functions.\n *\n * Note: A `TexImageSource` is defined in the WebGL spec as a `HTMLImageElement`, `HTMLVideoElement`,\n * `HTMLCanvasElement`, `ImageBitmap`, or `ImageData`.\n *\n * @typedef {Object} TextureOptions\n * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\n * @property {number} [level] the mip level to affect. Defaults to 0. Note, if set auto will be considered false unless explicitly set to true.\n * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\n * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\n * @property {number} [depth] the depth of a texture. Only used if src is an array or type array or null and target is `TEXTURE_3D` .\n * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\n *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\n * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\n * @property {number} [minMag] both the min and mag filter settings.\n * @property {number} [internalFormat] internal format for texture. Defaults to `gl.RGBA`\n * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\n * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBufferView. If `src`\n *     is ArrayBufferView defaults to type that matches ArrayBufferView type.\n * @property {number} [wrap] Texture wrapping for both S and T (and R if TEXTURE_3D or WebGLSampler). Defaults to `gl.REPEAT` for 2D unless src is WebGL1 and src not npot and `gl.CLAMP_TO_EDGE` for cube\n * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapR] Texture wrapping for R. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [minLod] TEXTURE_MIN_LOD setting\n * @property {number} [maxLod] TEXTURE_MAX_LOD setting\n * @property {number} [baseLevel] TEXTURE_BASE_LEVEL setting\n * @property {number} [maxLevel] TEXTURE_MAX_LEVEL setting\n * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\n * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {(number[]|ArrayBufferView)} color color used as temporary 1x1 pixel color for textures loaded async when src is a string.\n *    If it's a JavaScript array assumes color is 0 to 1 like most GL colors as in `[1, 0, 0, 1] = red=1, green=0, blue=0, alpha=0`.\n *    Defaults to `[0.5, 0.75, 1, 1]`. See {@link module:twgl.setDefaultTextureColor}. If `false` texture is set. Can be used to re-load a texture\n * @property {boolean} [auto] If `undefined` or `true`, in WebGL1, texture filtering is set automatically for non-power of 2 images and\n *    mips are generated for power of 2 images. In WebGL2 mips are generated if they can be. Note: if `level` is set above\n *    then then `auto` is assumed to be `false` unless explicity set to `true`.\n * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\n *\n *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n *\n * @property {(number[]|ArrayBufferView|TexImageSource|TexImageSource[]|string|string[]|module:twgl.TextureFunc)} [src] source for texture\n *\n *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\n *    1x1 pixel texture will be returned immediatley. The texture will be updated once the image has downloaded.\n *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\n *    The pieces will be uploaded in `cubeFaceOrder`\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_CUBE_MAP` then it must have 6 entries, one for each face of a cube map.\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_2D_ARRAY` then eact entry is a slice of the a 2d array texture\n *    and will be scaled to the specified width and height OR to the size of the first image that loads.\n *\n *    If `TexImageSource` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\n *    `HTMLCanvasElement`, `HTMLVideoElement`.\n *\n *    If `number[]` or `ArrayBufferView` it's assumed to be data for a texture. If `width` or `height` is\n *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponents`\n *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\n *    by 6. Then\n *\n *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\n *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\n *\n *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\n *\n * If `number[]` will be converted to `type`.\n *\n * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\n * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\n * an array etc...\n *\n * If `src` is undefined then an empty texture will be created of size `width` by `height`.\n *\n * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\n *    default: undefined. Also see {@link module:twgl.setDefaults}.\n *\n * @memberOf module:twgl\n */\n// NOTE: While querying GL is considered slow it's not remotely as slow\n// as uploading a texture. On top of that you're unlikely to call this in\n// a perf critical loop. Even if upload a texture every frame that's unlikely\n// to be more than 1 or 2 textures a frame. In other words, the benefits of\n// making the API easy to use outweigh any supposed perf benefits\n//\n// Also note I get that having one global of these is bad practice.\n// As long as it's used correctly it means no garbage which probably\n// doesn't matter when dealing with textures but old habits die hard.\n\n\nvar lastPackState = {};\n/**\n * Saves any packing state that will be set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\nfunction savePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    lastPackState.colorspaceConversion = gl.getParameter(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL);\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    lastPackState.premultiplyAlpha = gl.getParameter(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    lastPackState.flipY = gl.getParameter(gl.UNPACK_FLIP_Y_WEBGL);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, options.flipY);\n  }\n}\n/**\n * Restores any packing state that was set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction restorePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, lastPackState.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, lastPackState.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, lastPackState.flipY);\n  }\n}\n/**\n * Saves state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction saveSkipState(gl) {\n  lastPackState.unpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n\n  if (utils.isWebGL2(gl)) {\n    lastPackState.unpackRowLength = gl.getParameter(gl.UNPACK_ROW_LENGTH);\n    lastPackState.unpackImageHeight = gl.getParameter(gl.UNPACK_IMAGE_HEIGHT);\n    lastPackState.unpackSkipPixels = gl.getParameter(gl.UNPACK_SKIP_PIXELS);\n    lastPackState.unpackSkipRows = gl.getParameter(gl.UNPACK_SKIP_ROWS);\n    lastPackState.unpackSkipImages = gl.getParameter(gl.UNPACK_SKIP_IMAGES);\n  }\n}\n/**\n * Restores state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction restoreSkipState(gl) {\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, lastPackState.unpackAlignment);\n\n  if (utils.isWebGL2(gl)) {\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, lastPackState.unpackRowLength);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, lastPackState.unpackImageHeight);\n    gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, lastPackState.unpackSkipPixels);\n    gl.pixelStorei(gl.UNPACK_SKIP_ROWS, lastPackState.unpackSkipRows);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, lastPackState.unpackSkipImages);\n  }\n}\n/**\n * Sets the parameters of a texture or sampler\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number|WebGLSampler} target texture target or sampler\n * @param {function()} parameteriFn texParamteri or samplerParameteri fn\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n */\n\n\nfunction setTextureSamplerParameters(gl, target, parameteriFn, options) {\n  if (options.minMag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.minMag);\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.minMag);\n  }\n\n  if (options.min) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.min);\n  }\n\n  if (options.mag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.mag);\n  }\n\n  if (options.wrap) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrap);\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrap);\n\n    if (target === gl.TEXTURE_3D || helper.isSampler(gl, target)) {\n      parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrap);\n    }\n  }\n\n  if (options.wrapR) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrapR);\n  }\n\n  if (options.wrapS) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrapS);\n  }\n\n  if (options.wrapT) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrapT);\n  }\n\n  if (options.minLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_LOD, options.minLod);\n  }\n\n  if (options.maxLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LOD, options.maxLod);\n  }\n\n  if (options.baseLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_BASE_LEVEL, options.baseLevel);\n  }\n\n  if (options.maxLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LEVEL, options.maxLevel);\n  }\n}\n/**\n * Sets the texture parameters of a texture.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureParameters(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  setTextureSamplerParameters(gl, target, gl.texParameteri, options);\n}\n/**\n * Sets the sampler parameters of a sampler.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLSampler} sampler the WebGLSampler to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setSamplerParameters(gl, sampler, options) {\n  setTextureSamplerParameters(gl, sampler, gl.samplerParameteri, options);\n}\n/**\n * Creates a new sampler object and sets parameters.\n *\n * Example:\n *\n *      const sampler = twgl.createSampler(gl, {\n *        minMag: gl.NEAREST,         // sets both TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER\n *        wrap: gl.CLAMP_TO_NEAREST,  // sets both TEXTURE_WRAP_S and TEXTURE_WRAP_T and TEXTURE_WRAP_R\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per sampler.\n * @return {Object.<string,WebGLSampler>} the created samplers by name\n */\n\n\nfunction createSampler(gl, options) {\n  var sampler = gl.createSampler();\n  setSamplerParameters(gl, sampler, options);\n  return sampler;\n}\n/**\n * Creates a multiple sampler objects and sets parameters on each.\n *\n * Example:\n *\n *      const samplers = twgl.createSamplers(gl, {\n *        nearest: {\n *          minMag: gl.NEAREST,\n *        },\n *        nearestClampS: {\n *          minMag: gl.NEAREST,\n *          wrapS: gl.CLAMP_TO_NEAREST,\n *        },\n *        linear: {\n *          minMag: gl.LINEAR,\n *        },\n *        nearestClamp: {\n *          minMag: gl.NEAREST,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClamp: {\n *          minMag: gl.LINEAR,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClampT: {\n *          minMag: gl.LINEAR,\n *          wrapT: gl.CLAMP_TO_EDGE,\n *        },\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set on the sampler\n */\n\n\nfunction createSamplers(gl, samplerOptions) {\n  var samplers = {};\n  Object.keys(samplerOptions).forEach(function (name) {\n    samplers[name] = createSampler(gl, samplerOptions[name]);\n  });\n  return samplers;\n}\n/**\n * Makes a 1x1 pixel\n * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\n * @param {(number[]|ArrayBufferView)} [color] The color using 0-1 values\n * @return {Uint8Array} Unit8Array with color.\n */\n\n\nfunction make1Pixel(color) {\n  color = color || defaults.textureColor;\n\n  if (isArrayBuffer(color)) {\n    return color;\n  }\n\n  return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n/**\n * Sets filtering or generates mips for texture based on width or height\n * If width or height is not passed in uses `options.width` and//or `options.height`\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @param {number} [width] width of texture\n * @param {number} [height] height of texture\n * @param {number} [internalFormat] The internalFormat parameter from texImage2D etc..\n * @param {number} [type] The type parameter for texImage2D etc..\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type) {\n  options = options || defaults.textureOptions;\n  internalFormat = internalFormat || gl.RGBA;\n  type = type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n  width = width || options.width;\n  height = height || options.height;\n  gl.bindTexture(target, tex);\n\n  if (canGenerateMipmap(gl, width, height, internalFormat, type)) {\n    gl.generateMipmap(target);\n  } else {\n    var filtering = canFilter(internalFormat, type) ? gl.LINEAR : gl.NEAREST;\n    gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n}\n\nfunction shouldAutomaticallySetTextureFilteringForSize(options) {\n  return options.auto === true || options.auto === undefined && options.level === undefined;\n}\n/**\n * Gets an array of cubemap face enums\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @return {number[]} cubemap face enums\n */\n\n\nfunction getCubeFaceOrder(gl, options) {\n  options = options || {};\n  return options.cubeFaceOrder || [gl.TEXTURE_CUBE_MAP_POSITIVE_X, gl.TEXTURE_CUBE_MAP_NEGATIVE_X, gl.TEXTURE_CUBE_MAP_POSITIVE_Y, gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, gl.TEXTURE_CUBE_MAP_POSITIVE_Z, gl.TEXTURE_CUBE_MAP_NEGATIVE_Z];\n}\n/**\n * @typedef {Object} FaceInfo\n * @property {number} face gl enum for texImage2D\n * @property {number} ndx face index (0 - 5) into source data\n * @ignore\n */\n\n/**\n * Gets an array of FaceInfos\n * There's a bug in some NVidia drivers that will crash the driver if\n * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\n * the user's desired order from his faces to WebGL and make sure we\n * do the faces in WebGL order\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundent but\n *    it's needed internally to sort the array of `ndx` properties by `face`.\n */\n\n\nfunction getCubeFacesWithNdx(gl, options) {\n  var faces = getCubeFaceOrder(gl, options); // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\n\n  var facesWithNdx = faces.map(function (face, ndx) {\n    return {\n      face: face,\n      ndx: ndx\n    };\n  });\n  facesWithNdx.sort(function (a, b) {\n    return a.face - b.face;\n  });\n  return facesWithNdx;\n}\n/**\n * Set a texture from the contents of an element. Will also set\n * texture filtering or generate mips based on the dimensions of the element\n * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\n * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {HTMLElement} element a canvas, img, or video element.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @kind function\n */\n\n\nfunction setTextureFromElement(gl, tex, element, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  var level = options.level || 0;\n  var width = element.width;\n  var height = element.height;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // guess the parts\n    var imgWidth = element.width;\n    var imgHeight = element.height;\n    var size;\n    var slices;\n\n    if (imgWidth / 6 === imgHeight) {\n      // It's 6x1\n      size = imgHeight;\n      slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\n    } else if (imgHeight / 6 === imgWidth) {\n      // It's 1x6\n      size = imgWidth;\n      slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\n    } else if (imgWidth / 3 === imgHeight / 2) {\n      // It's 3x2\n      size = imgWidth / 3;\n      slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\n    } else if (imgWidth / 2 === imgHeight / 3) {\n      // It's 2x3\n      size = imgWidth / 2;\n      slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\n    } else {\n      throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\n    }\n\n    if (ctx) {\n      ctx.canvas.width = size;\n      ctx.canvas.height = size;\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size;\n        ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\n        gl.texImage2D(f.face, level, internalFormat, format, type, ctx.canvas);\n      }); // Free up the canvas memory\n\n      ctx.canvas.width = 1;\n      ctx.canvas.height = 1;\n    } else if (_globalObject.default.createImageBitmap) {\n      // NOTE: It seems like we should prefer ImageBitmap because unlike canvas it's\n      // note lossy? (alpha is not premultiplied? although I'm not sure what\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size; // We can't easily use a default texture color here as it would have to match\n        // the type across all faces where as with a 2D one there's only one face\n        // so we're replacing everything all at once. It also has to be the correct size.\n        // On the other hand we need all faces to be the same size so as one face loads\n        // the rest match else the texture will be unrenderable.\n\n        gl.texImage2D(f.face, level, internalFormat, size, size, 0, format, type, null);\n\n        _globalObject.default.createImageBitmap(element, xOffset, yOffset, size, size, {\n          premultiplyAlpha: 'none',\n          colorSpaceConversion: 'none'\n        }).then(function (imageBitmap) {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex);\n          gl.texImage2D(f.face, level, internalFormat, format, type, imageBitmap);\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n          }\n        });\n      });\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    var smallest = Math.min(element.width, element.height);\n    var largest = Math.max(element.width, element.height);\n    var depth = largest / smallest;\n\n    if (depth % 1 !== 0) {\n      throw \"can not compute 3D dimensions of element\";\n    }\n\n    var xMult = element.width === largest ? 1 : 0;\n    var yMult = element.height === largest ? 1 : 0;\n    saveSkipState(gl);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, element.width);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, 0);\n    gl.texImage3D(target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null);\n\n    for (var d = 0; d < depth; ++d) {\n      var srcX = d * smallest * xMult;\n      var srcY = d * smallest * yMult;\n      gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, srcX);\n      gl.pixelStorei(gl.UNPACK_SKIP_ROWS, srcY);\n      gl.texSubImage3D(target, level, 0, 0, d, smallest, smallest, 1, format, type, element);\n    }\n\n    restoreSkipState(gl);\n  } else {\n    gl.texImage2D(target, level, internalFormat, format, type, element);\n  }\n\n  restorePackState(gl, options);\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n}\n\nfunction noop() {}\n/**\n * Loads an image\n * @param {string} url url to image\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @return {HTMLImageElement} the image being loaded.\n */\n\n\nfunction loadImage(url, crossOrigin, callback) {\n  callback = callback || noop;\n  var img;\n\n  if (_globalObject.default.Image) {\n    img = new _globalObject.default.Image();\n    crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults.crossOrigin;\n\n    if (crossOrigin !== undefined) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    var clearEventHandlers = function clearEventHandlers() {\n      img.removeEventListener('error', onError); // eslint-disable-line\n\n      img.removeEventListener('load', onLoad); // eslint-disable-line\n\n      img = null;\n    };\n\n    var onError = function onError() {\n      var msg = \"couldn't load image: \" + url;\n      helper.error(msg);\n      callback(msg, img);\n      clearEventHandlers();\n    };\n\n    var onLoad = function onLoad() {\n      callback(null, img);\n      clearEventHandlers();\n    };\n\n    img.addEventListener('error', onError);\n    img.addEventListener('load', onLoad);\n    img.src = url;\n    return img;\n  } else if (_globalObject.default.ImageBitmap) {\n    var err;\n    var bm;\n\n    var cb = function cb() {\n      callback(err, bm);\n    };\n\n    var options = {};\n\n    if (crossOrigin) {\n      options.mode = 'cors'; // TODO: not sure how to translate image.crossOrigin\n    }\n\n    fetch(url, options).then(function (response) {\n      if (!response.ok) {\n        throw response;\n      }\n\n      return response.blob();\n    }).then(function (blob) {\n      return _globalObject.default.createImageBitmap(blob, {\n        premultiplyAlpha: 'none',\n        colorSpaceConversion: 'none'\n      });\n    }).then(function (bitmap) {\n      // not sure if this works. We don't want\n      // to catch the user's error. So, call\n      // the callback in a timeout so we're\n      // not in this scope inside the promise.\n      bm = bitmap;\n      setTimeout(cb);\n    }).catch(function (e) {\n      err = e;\n      setTimeout(cb);\n    });\n    img = null;\n  }\n\n  return img;\n}\n/**\n * check if object is a TexImageSource\n *\n * @param {Object} obj Object to test\n * @return {boolean} true if object is a TexImageSource\n */\n\n\nfunction isTexImageSource(obj) {\n  return _globalObject.default.ImageBitmap && obj instanceof _globalObject.default.ImageBitmap || _globalObject.default.ImageData && obj instanceof _globalObject.default.ImageData || _globalObject.default.HTMLElement && obj instanceof _globalObject.default.HTMLElement;\n}\n/**\n * if obj is an TexImageSource then just\n * uses it otherwise if obj is a string\n * then load it first.\n *\n * @param {string|TexImageSource} obj\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n */\n\n\nfunction loadAndUseImage(obj, crossOrigin, callback) {\n  if (isTexImageSource(obj)) {\n    setTimeout(function () {\n      callback(null, obj);\n    });\n    return obj;\n  }\n\n  return loadImage(obj, crossOrigin, callback);\n}\n/**\n * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\n * the default texture color is used which can be set by calling `setDefaultTextureColor`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureTo1PixelColor(gl, tex, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n\n  if (options.color === false) {\n    return;\n  } // Assume it's a URL\n  // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\n\n\n  var color = make1Pixel(options.color);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, 0, gl.RGBA, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  } else {\n    gl.texImage2D(target, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  }\n}\n/**\n * The src image(s) used to create a texture.\n *\n * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\n * you can pass in urls for images to load into the textures. If it's a single url\n * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\n * this will be a corresponding array of images for the cubemap.\n *\n * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback TextureReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} texture the texture.\n * @param {module:twgl.TextureSrc} souce image(s) used to as the src for the texture\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when all images have finished downloading and been uploaded into their respective textures\n * @callback TexturesReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\n * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback CubemapReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each face.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback ThreeDReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each slice.\n * @memberOf module:twgl\n */\n\n/**\n * Loads a texture from an image from a Url as specified in `options.src`\n * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\n * immediately useable. It will be updated with the contents of the image once the image has finished\n * downloading. Filtering options will be set as approriate for image unless `options.auto === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\n *    be non null if there was an error.\n * @return {HTMLImageElement} the image being downloaded.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadTextureFromUrl(gl, tex, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var img = loadAndUseImage(options.src, options.crossOrigin, function (err, img) {\n    if (err) {\n      callback(err, tex, img);\n    } else {\n      setTextureFromElement(gl, tex, img, options);\n      callback(null, tex, img);\n    }\n  });\n  return img;\n}\n/**\n * Loads a cubemap from 6 urls or TexImageSources as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadCubemapFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n\n  if (urls.length !== 6) {\n    throw \"there must be 6 urls for a cubemap\";\n  }\n\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n\n  if (target !== gl.TEXTURE_CUBE_MAP) {\n    throw \"target must be TEXTURE_CUBE_MAP\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = 6;\n  var errors = [];\n  var faces = getCubeFaceOrder(gl, options);\n  var imgs; // eslint-disable-line\n\n  function uploadImg(faceTarget) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        if (img.width !== img.height) {\n          errors.push(\"cubemap face img is not a square: \" + img.src);\n        } else {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex); // So assuming this is the first image we now have one face that's img sized\n          // and 5 faces that are 1x1 pixel so size the other faces\n\n          if (numToLoad === 5) {\n            // use the default order\n            getCubeFaceOrder(gl).forEach(function (otherTarget) {\n              // Should we re-use the same face or a color?\n              gl.texImage2D(otherTarget, level, internalFormat, format, type, img);\n            });\n          } else {\n            gl.texImage2D(faceTarget, level, internalFormat, format, type, img);\n          }\n\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            gl.generateMipmap(target);\n          }\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(faces[ndx]));\n  });\n}\n/**\n * Loads a 2d array or 3d texture from urls OR TexImageSources as specified in `options.src`.\n * Will set the texture to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n *\n * If the width and height is not specified the width and height of the first\n * image loaded will be used. Note that since images are loaded async\n * which image downloads first is unknown.\n *\n * If an image is not the same size as the width and height it will be scaled\n * to that width and height.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.ThreeDReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadSlicesFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D_ARRAY;\n\n  if (target !== gl.TEXTURE_3D && target !== gl.TEXTURE_2D_ARRAY) {\n    throw \"target must be TEXTURE_3D or TEXTURE_2D_ARRAY\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = urls.length;\n  var errors = [];\n  var imgs; // eslint-disable-line\n\n  var level = options.level || 0;\n  var width = options.width;\n  var height = options.height;\n  var depth = urls.length;\n  var firstImage = true;\n\n  function uploadImg(slice) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        savePackState(gl, options);\n        gl.bindTexture(target, tex);\n\n        if (firstImage) {\n          firstImage = false;\n          width = options.width || img.width;\n          height = options.height || img.height;\n          gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null); // put it in every slice otherwise some slices will be 0,0,0,0\n\n          for (var s = 0; s < depth; ++s) {\n            gl.texSubImage3D(target, level, 0, 0, s, width, height, 1, format, type, img);\n          }\n        } else {\n          var src = img;\n\n          if (img.width !== width || img.height !== height) {\n            // Size the image to fix\n            src = ctx.canvas;\n            ctx.canvas.width = width;\n            ctx.canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n          }\n\n          gl.texSubImage3D(target, level, 0, 0, slice, width, height, 1, format, type, src); // free the canvas memory\n\n          if (src === ctx.canvas) {\n            ctx.canvas.width = 0;\n            ctx.canvas.height = 0;\n          }\n        }\n\n        restorePackState(gl, options);\n\n        if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n          gl.generateMipmap(target);\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(ndx));\n  });\n}\n/**\n * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\n * guess the size. See {@link module:twgl.TextureOptions}.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {(number[]|ArrayBufferView)} src An array or typed arry with texture data.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFromArray(gl, tex, src, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var width = options.width;\n  var height = options.height;\n  var depth = options.depth;\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n\n  if (!isArrayBuffer(src)) {\n    var Type = typedArrays.getTypedArrayTypeForGLType(type);\n    src = new Type(src);\n  } else if (src instanceof Uint8ClampedArray) {\n    src = new Uint8Array(src.buffer);\n  }\n\n  var bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\n  var numElements = src.byteLength / bytesPerElement; // TODO: check UNPACK_ALIGNMENT?\n\n  if (numElements % 1) {\n    throw \"length wrong size for format: \" + utils.glEnumToString(gl, format);\n  }\n\n  var dimensions;\n\n  if (target === gl.TEXTURE_3D) {\n    if (!width && !height && !depth) {\n      var size = Math.cbrt(numElements);\n\n      if (size % 1 !== 0) {\n        throw \"can't guess cube size of array of numElements: \" + numElements;\n      }\n\n      width = size;\n      height = size;\n      depth = size;\n    } else if (width && (!height || !depth)) {\n      dimensions = guessDimensions(gl, target, height, depth, numElements / width);\n      height = dimensions.width;\n      depth = dimensions.height;\n    } else if (height && (!width || !depth)) {\n      dimensions = guessDimensions(gl, target, width, depth, numElements / height);\n      width = dimensions.width;\n      depth = dimensions.height;\n    } else {\n      dimensions = guessDimensions(gl, target, width, height, numElements / depth);\n      width = dimensions.width;\n      height = dimensions.height;\n    }\n  } else {\n    dimensions = guessDimensions(gl, target, width, height, numElements);\n    width = dimensions.width;\n    height = dimensions.height;\n  }\n\n  saveSkipState(gl);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, options.unpackAlignment || 1);\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    var elementsPerElement = bytesPerElement / src.BYTES_PER_ELEMENT;\n    var faceSize = numElements / 6 * elementsPerElement;\n    getCubeFacesWithNdx(gl, options).forEach(function (f) {\n      var offset = faceSize * f.ndx;\n      var data = src.subarray(offset, offset + faceSize);\n      gl.texImage2D(f.face, level, internalFormat, width, height, 0, format, type, data);\n    });\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, src);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, src);\n  }\n\n  restorePackState(gl, options);\n  restoreSkipState(gl);\n  return {\n    width: width,\n    height: height,\n    depth: depth,\n    type: type\n  };\n}\n/**\n * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\n * You must set `options.width` and `options.height`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setEmptyTexture(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null);\n    }\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, options.width, options.height, 0, format, type, null);\n  }\n\n  restorePackState(gl, options);\n}\n/**\n * Creates a texture based on the options passed in.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\n * @return {WebGLTexture} the created texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTexture(gl, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  var tex = gl.createTexture();\n  var target = options.target || gl.TEXTURE_2D;\n  var width = options.width || 1;\n  var height = options.height || 1;\n  var internalFormat = options.internalFormat || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var type = options.type || formatType.type;\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // this should have been the default for CUBEMAPS :(\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  var src = options.src;\n\n  if (src) {\n    if (typeof src === \"function\") {\n      src = src(gl, options);\n    }\n\n    if (typeof src === \"string\") {\n      loadTextureFromUrl(gl, tex, options, callback);\n    } else if (isArrayBuffer(src) || Array.isArray(src) && (typeof src[0] === 'number' || Array.isArray(src[0]) || isArrayBuffer(src[0]))) {\n      var dimensions = setTextureFromArray(gl, tex, src, options);\n      width = dimensions.width;\n      height = dimensions.height;\n      type = dimensions.type;\n    } else if (Array.isArray(src) && (typeof src[0] === 'string' || isTexImageSource(src[0]))) {\n      if (target === gl.TEXTURE_CUBE_MAP) {\n        loadCubemapFromUrls(gl, tex, options, callback);\n      } else {\n        loadSlicesFromUrls(gl, tex, options, callback);\n      }\n    } else if (isTexImageSource(src)) {\n      setTextureFromElement(gl, tex, src, options);\n      width = src.width;\n      height = src.height;\n    } else {\n      throw \"unsupported src type\";\n    }\n  } else {\n    setEmptyTexture(gl, tex, options);\n  }\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n  return tex;\n}\n/**\n * Resizes a texture based on the options passed in.\n *\n * Note: This is not a generic resize anything function.\n * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\n * It will use `options.src` if it exists to try to determine a `type`\n * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\n * for the texture. Texture parameters will be set accordingly\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the texture to resize\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {number} [width] the new width. If not passed in will use `options.width`\n * @param {number} [height] the new height. If not passed in will use `options.height`\n * @memberOf module:twgl/textures\n */\n\n\nfunction resizeTexture(gl, tex, options, width, height) {\n  width = width || options.width;\n  height = height || options.height;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type;\n  var src = options.src;\n\n  if (!src) {\n    type = options.type || formatType.type;\n  } else if (isArrayBuffer(src) || Array.isArray(src) && typeof src[0] === 'number') {\n    type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  } else {\n    type = options.type || formatType.type;\n  }\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, width, height, 0, format, type, null);\n    }\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\n  }\n}\n/**\n * Check if a src is an async request.\n * if src is a string we're going to download an image\n * if src is an array of strings we're going to download cubemap images\n * @param {*} src The src from a TextureOptions\n * @returns {bool} true if src is async.\n */\n\n\nfunction isAsyncSrc(src) {\n  return typeof src === 'string' || Array.isArray(src) && typeof src[0] === 'string';\n}\n/**\n * Creates a bunch of textures based on the passed in options.\n *\n * Example:\n *\n *     const textures = twgl.createTextures(gl, {\n *       // a power of 2 image\n *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\n *       // a non-power of 2 image\n *       clover: { src: \"images/clover.jpg\" },\n *       // From a canvas\n *       fromCanvas: { src: ctx.canvas },\n *       // A cubemap from 6 images\n *       yokohama: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: [\n *           'images/yokohama/posx.jpg',\n *           'images/yokohama/negx.jpg',\n *           'images/yokohama/posy.jpg',\n *           'images/yokohama/negy.jpg',\n *           'images/yokohama/posz.jpg',\n *           'images/yokohama/negz.jpg',\n *         ],\n *       },\n *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\n *       goldengate: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: 'images/goldengate.jpg',\n *       },\n *       // A 2x2 pixel texture from a JavaScript array\n *       checker: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         src: [\n *           255,255,255,255,\n *           192,192,192,255,\n *           192,192,192,255,\n *           255,255,255,255,\n *         ],\n *       },\n *       // a 1x2 pixel texture from a typed array.\n *       stripe: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         format: gl.LUMINANCE,\n *         src: new Uint8Array([\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *         ]),\n *         width: 1,\n *       },\n *     });\n *\n * Now\n *\n * *   `textures.hftIcon` will be a 2d texture\n * *   `textures.clover` will be a 2d texture\n * *   `textures.fromCanvas` will be a 2d texture\n * *   `textures.yohohama` will be a cubemap texture\n * *   `textures.goldengate` will be a cubemap texture\n * *   `textures.checker` will be a 2d texture\n * *   `textures.stripe` will be a 2d texture\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\n * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\n * @return {Object.<string,WebGLTexture>} the created textures by name\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTextures(gl, textureOptions, callback) {\n  callback = callback || noop;\n  var numDownloading = 0;\n  var errors = [];\n  var textures = {};\n  var images = {};\n\n  function callCallbackIfReady() {\n    if (numDownloading === 0) {\n      setTimeout(function () {\n        callback(errors.length ? errors : undefined, textures, images);\n      }, 0);\n    }\n  }\n\n  Object.keys(textureOptions).forEach(function (name) {\n    var options = textureOptions[name];\n    var onLoadFn;\n\n    if (isAsyncSrc(options.src)) {\n      onLoadFn = function onLoadFn(err, tex, img) {\n        images[name] = img;\n        --numDownloading;\n\n        if (err) {\n          errors.push(err);\n        }\n\n        callCallbackIfReady();\n      };\n\n      ++numDownloading;\n    }\n\n    textures[name] = createTexture(gl, options, onLoadFn);\n  }); // queue the callback if there are no images to download.\n  // We do this because if your code is structured to wait for\n  // images to download but then you comment out all the async\n  // images your code would break.\n\n  callCallbackIfReady();\n  return textures;\n} // Using quotes prevents Uglify from changing the names.\n// No speed diff AFAICT.\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  m4: true,\n  v3: true,\n  primitives: true\n};\nexports.primitives = exports.v3 = exports.m4 = void 0;\n\nvar m4 = _interopRequireWildcard(__webpack_require__(6));\n\nexports.m4 = m4;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nexports.v3 = v3;\n\nvar primitives = _interopRequireWildcard(__webpack_require__(10));\n\nexports.primitives = primitives;\n\nvar _twgl = __webpack_require__(11);\n\nObject.keys(_twgl).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _twgl[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.create3DFVertices = create3DFVertices;\nexports.createAugmentedTypedArray = createAugmentedTypedArray;\nexports.createCubeVertices = createCubeVertices;\nexports.createPlaneVertices = createPlaneVertices;\nexports.createSphereVertices = createSphereVertices;\nexports.createTruncatedConeVertices = createTruncatedConeVertices;\nexports.createXYQuadVertices = createXYQuadVertices;\nexports.createCresentVertices = createCresentVertices;\nexports.createCylinderVertices = createCylinderVertices;\nexports.createTorusVertices = createTorusVertices;\nexports.createDiscVertices = createDiscVertices;\nexports.deindexVertices = deindexVertices;\nexports.flattenNormals = flattenNormals;\nexports.makeRandomVertexColors = makeRandomVertexColors;\nexports.reorientDirections = reorientDirections;\nexports.reorientNormals = reorientNormals;\nexports.reorientPositions = reorientPositions;\nexports.reorientVertices = reorientVertices;\nexports.concatVertices = concatVertices;\nexports.duplicateVertices = duplicateVertices;\nexports.createDiscBuffers = exports.createDiscBufferInfo = exports.createTorusBuffers = exports.createTorusBufferInfo = exports.createCylinderBuffers = exports.createCylinderBufferInfo = exports.createCresentBuffers = exports.createCresentBufferInfo = exports.createXYQuadBuffers = exports.createXYQuadBufferInfo = exports.createTruncatedConeBuffers = exports.createTruncatedConeBufferInfo = exports.createSphereBuffers = exports.createSphereBufferInfo = exports.createPlaneBuffers = exports.createPlaneBufferInfo = exports.createCubeBuffers = exports.createCubeBufferInfo = exports.create3DFBuffers = exports.create3DFBufferInfo = void 0;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(7));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar m4 = _interopRequireWildcard(__webpack_require__(6));\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Various functions to make simple primitives\n *\n * note: Most primitive functions come in 3 styles\n *\n * *  `createSomeShapeBufferInfo`\n *\n *    These functions are almost always the functions you want to call. They\n *    create vertices then make WebGLBuffers and create {@link module:twgl.AttribInfo}s\n *    returing a {@link module:twgl.BufferInfo} you can pass to {@link module:twgl.setBuffersAndAttributes}\n *    and {@link module:twgl.drawBufferInfo} etc...\n *\n * *  `createSomeShapeBuffers`\n *\n *    These create WebGLBuffers and put your data in them but nothing else.\n *    It's a shortcut to doing it yourself if you don't want to use\n *    the higher level functions.\n *\n * *  `createSomeShapeVertices`\n *\n *    These just create vertices, no buffers. This allows you to manipulate the vertices\n *    or add more data before generating a {@link module:twgl.BufferInfo}. Once you're finished\n *    manipulating the vertices call {@link module:twgl.createBufferInfoFromArrays}.\n *\n *    example:\n *\n *        const arrays = twgl.primitives.createPlaneArrays(1);\n *        twgl.primitives.reorientVertices(arrays, m4.rotationX(Math.PI * 0.5));\n *        const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n * @module twgl/primitives\n */\nvar getArray = attributes.getArray_; // eslint-disable-line\n\nvar getNumComponents = attributes.getNumComponents_; // eslint-disable-line\n\n/**\n * Add `push` to a typed array. It just keeps a 'cursor'\n * and allows use to `push` values into the array so we\n * don't have to manually compute offsets\n * @param {TypedArray} typedArray TypedArray to augment\n * @param {number} numComponents number of components.\n */\n\nfunction augmentTypedArray(typedArray, numComponents) {\n  var cursor = 0;\n\n  typedArray.push = function () {\n    for (var ii = 0; ii < arguments.length; ++ii) {\n      var value = arguments[ii];\n\n      if (value instanceof Array || typedArrays.isArrayBuffer(value)) {\n        for (var jj = 0; jj < value.length; ++jj) {\n          typedArray[cursor++] = value[jj];\n        }\n      } else {\n        typedArray[cursor++] = value;\n      }\n    }\n  };\n\n  typedArray.reset = function (opt_index) {\n    cursor = opt_index || 0;\n  };\n\n  typedArray.numComponents = numComponents;\n  Object.defineProperty(typedArray, 'numElements', {\n    get: function get() {\n      return this.length / this.numComponents | 0;\n    }\n  });\n  return typedArray;\n}\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param {number} numComponents number of components\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n * @return {ArrayBufferView} A typed array.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createAugmentedTypedArray(numComponents, numElements, opt_type) {\n  var Type = opt_type || Float32Array;\n  return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n}\n\nfunction allButIndices(name) {\n  return name !== \"indices\";\n}\n/**\n * Given indexed vertices creates a new set of vertices unindexed by expanding the indexed vertices.\n * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\n * @return {Object.<string, TypedArray>} The deindexed vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction deindexVertices(vertices) {\n  var indices = vertices.indices;\n  var newVertices = {};\n  var numElements = indices.length;\n\n  function expandToUnindexed(channel) {\n    var srcBuffer = vertices[channel];\n    var numComponents = srcBuffer.numComponents;\n    var dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\n\n    for (var ii = 0; ii < numElements; ++ii) {\n      var ndx = indices[ii];\n      var offset = ndx * numComponents;\n\n      for (var jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n\n    newVertices[channel] = dstBuffer;\n  }\n\n  Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\n  return newVertices;\n}\n/**\n * flattens the normals of deindexed vertices in place.\n * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\n * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\n * @memberOf module:twgl/primitives\n */\n\n\nfunction flattenNormals(vertices) {\n  if (vertices.indices) {\n    throw \"can't flatten normals of indexed vertices. deindex them first\";\n  }\n\n  var normals = vertices.normal;\n  var numNormals = normals.length;\n\n  for (var ii = 0; ii < numNormals; ii += 9) {\n    // pull out the 3 normals for this triangle\n    var nax = normals[ii + 0];\n    var nay = normals[ii + 1];\n    var naz = normals[ii + 2];\n    var nbx = normals[ii + 3];\n    var nby = normals[ii + 4];\n    var nbz = normals[ii + 5];\n    var ncx = normals[ii + 6];\n    var ncy = normals[ii + 7];\n    var ncz = normals[ii + 8]; // add them\n\n    var nx = nax + nbx + ncx;\n    var ny = nay + nby + ncy;\n    var nz = naz + nbz + ncz; // normalize them\n\n    var length = Math.sqrt(nx * nx + ny * ny + nz * nz);\n    nx /= length;\n    ny /= length;\n    nz /= length; // copy them back in\n\n    normals[ii + 0] = nx;\n    normals[ii + 1] = ny;\n    normals[ii + 2] = nz;\n    normals[ii + 3] = nx;\n    normals[ii + 4] = ny;\n    normals[ii + 5] = nz;\n    normals[ii + 6] = nx;\n    normals[ii + 7] = ny;\n    normals[ii + 8] = nz;\n  }\n\n  return vertices;\n}\n\nfunction applyFuncToV3Array(array, matrix, fn) {\n  var len = array.length;\n  var tmp = new Float32Array(3);\n\n  for (var ii = 0; ii < len; ii += 3) {\n    fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\n    array[ii] = tmp[0];\n    array[ii + 1] = tmp[1];\n    array[ii + 2] = tmp[2];\n  }\n}\n\nfunction transformNormal(mi, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n/**\n * Reorients directions by the given matrix..\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientDirections(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformDirection);\n  return array;\n}\n/**\n * Reorients normals by the inverse-transpose of the given\n * matrix..\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientNormals(array, matrix) {\n  applyFuncToV3Array(array, m4.inverse(matrix), transformNormal);\n  return array;\n}\n/**\n * Reorients positions by the given matrix. In other words, it\n * multiplies each vertex by the given matrix.\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientPositions(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformPoint);\n  return array;\n}\n/**\n * Reorients arrays by the given matrix. Assumes arrays have\n * names that contains 'pos' could be reoriented as positions,\n * 'binorm' or 'tan' as directions, and 'norm' as normals.\n *\n * @param {Object.<string, (number[]|TypedArray)>} arrays The vertices to reorient\n * @param {Matrix} matrix matrix to reorient by.\n * @return {Object.<string, (number[]|TypedArray)>} same arrays that were passed in.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientVertices(arrays, matrix) {\n  Object.keys(arrays).forEach(function (name) {\n    var array = arrays[name];\n\n    if (name.indexOf(\"pos\") >= 0) {\n      reorientPositions(array, matrix);\n    } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\n      reorientDirections(array, matrix);\n    } else if (name.indexOf(\"norm\") >= 0) {\n      reorientNormals(array, matrix);\n    }\n  });\n  return arrays;\n}\n/**\n * Creates XY quad BufferInfo\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\n * @memberOf module:twgl/primitives\n * @function createXYQuadBufferInfo\n */\n\n/**\n * Creates XY quad Buffers\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {module:twgl.BufferInfo} the created XY Quad buffers\n * @memberOf module:twgl/primitives\n * @function createXYQuadBuffers\n */\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, TypedArray> the created XY Quad vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createXYQuadVertices(size, xOffset, yOffset) {\n  size = size || 2;\n  xOffset = xOffset || 0;\n  yOffset = yOffset || 0;\n  size *= 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [xOffset + -1 * size, yOffset + -1 * size, xOffset + 1 * size, yOffset + -1 * size, xOffset + -1 * size, yOffset + 1 * size, xOffset + 1 * size, yOffset + 1 * size]\n    },\n    normal: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n    texcoord: [0, 0, 1, 0, 0, 1, 1, 1],\n    indices: [0, 1, 2, 2, 1, 3]\n  };\n}\n/**\n * Creates XZ plane BufferInfo.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {@module:twgl.BufferInfo} The created plane BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createPlaneBufferInfo\n */\n\n/**\n * Creates XZ plane buffers.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, WebGLBuffer>} The created plane buffers.\n * @memberOf module:twgl/primitives\n * @function createPlaneBuffers\n */\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, TypedArray>} The created plane vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createPlaneVertices(width, depth, subdivisionsWidth, subdivisionsDepth, matrix) {\n  width = width || 1;\n  depth = depth || 1;\n  subdivisionsWidth = subdivisionsWidth || 1;\n  subdivisionsDepth = subdivisionsDepth || 1;\n  matrix = matrix || m4.identity();\n  var numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  for (var z = 0; z <= subdivisionsDepth; z++) {\n    for (var x = 0; x <= subdivisionsWidth; x++) {\n      var u = x / subdivisionsWidth;\n      var v = z / subdivisionsDepth;\n      positions.push(width * u - width * 0.5, 0, depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  var numVertsAcross = subdivisionsWidth + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (var _z = 0; _z < subdivisionsDepth; _z++) {\n    // eslint-disable-line\n    for (var _x = 0; _x < subdivisionsWidth; _x++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_z + 0) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x, (_z + 0) * numVertsAcross + _x + 1); // Make triangle 2 of quad.\n\n      indices.push((_z + 1) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x + 1, (_z + 0) * numVertsAcross + _x + 1);\n    }\n  }\n\n  var arrays = reorientVertices({\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  }, matrix);\n  return arrays;\n}\n/**\n * Creates sphere BufferInfo.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createSphereBufferInfo\n */\n\n/**\n * Creates sphere buffers.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\n * @memberOf module:twgl/primitives\n * @function createSphereBuffers\n */\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, TypedArray>} The created sphere vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createSphereVertices(radius, subdivisionsAxis, subdivisionsHeight, opt_startLatitudeInRadians, opt_endLatitudeInRadians, opt_startLongitudeInRadians, opt_endLongitudeInRadians) {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || Math.PI * 2;\n  var latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n  var longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians; // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n\n  var numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices); // Generate the individual vertices in our vertex buffer.\n\n  for (var y = 0; y <= subdivisionsHeight; y++) {\n    for (var x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      var u = x / subdivisionsAxis;\n      var v = y / subdivisionsHeight;\n      var theta = longRange * u;\n      var phi = latRange * v;\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      var ux = cosTheta * sinPhi;\n      var uy = cosPhi;\n      var uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  var numVertsAround = subdivisionsAxis + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n\n  for (var _x2 = 0; _x2 < subdivisionsAxis; _x2++) {\n    // eslint-disable-line\n    for (var _y = 0; _y < subdivisionsHeight; _y++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_y + 0) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2); // Make triangle 2 of quad.\n\n      indices.push((_y + 1) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2 + 1);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Array of the indices of corners of each face of a cube.\n * @type {Array.<number[]>}\n */\n\n\nvar CUBE_FACE_INDICES = [[3, 7, 5, 1], // right\n[6, 2, 0, 4], // left\n[6, 7, 3, 2], // ??\n[0, 1, 5, 4], // ??\n[7, 6, 4, 5], // front\n[2, 3, 1, 0]];\n/**\n * Creates a BufferInfo for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCubeBufferInfo\n */\n\n/**\n * Creates the buffers and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCubeBuffers\n */\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\nfunction createCubeVertices(size) {\n  size = size || 1;\n  var k = size / 2;\n  var cornerVertices = [[-k, -k, -k], [+k, -k, -k], [-k, +k, -k], [+k, +k, -k], [-k, -k, +k], [+k, -k, +k], [-k, +k, +k], [+k, +k, +k]];\n  var faceNormals = [[+1, +0, +0], [-1, +0, +0], [+0, +1, +0], [+0, -1, +0], [+0, +0, +1], [+0, +0, -1]];\n  var uvCoords = [[1, 0], [0, 0], [0, 1], [1, 1]];\n  var numVertices = 6 * 4;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (var f = 0; f < 6; ++f) {\n    var faceIndices = CUBE_FACE_INDICES[f];\n\n    for (var v = 0; v < 4; ++v) {\n      var position = cornerVertices[faceIndices[v]];\n      var normal = faceNormals[f];\n      var uv = uvCoords[v]; // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n\n      positions.push(position);\n      normals.push(normal);\n      texcoords.push(uv);\n    } // Two triangles make a square face.\n\n\n    var offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a BufferInfo for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created cone BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBufferInfo\n */\n\n/**\n * Creates buffers for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created cone buffers.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBuffers\n */\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created cone vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTruncatedConeVertices(bottomRadius, topRadius, height, radialSubdivisions, verticalSubdivisions, opt_topCap, opt_bottomCap) {\n  if (radialSubdivisions < 3) {\n    throw Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  var topCap = opt_topCap === undefined ? true : opt_topCap;\n  var bottomCap = opt_bottomCap === undefined ? true : opt_bottomCap;\n  var extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n  var numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra) * 2, Uint16Array);\n  var vertsAroundEdge = radialSubdivisions + 1; // The slant of the cone is constant across its surface\n\n  var slant = Math.atan2(bottomRadius - topRadius, height);\n  var cosSlant = Math.cos(slant);\n  var sinSlant = Math.sin(slant);\n  var start = topCap ? -2 : 0;\n  var end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (var yy = start; yy <= end; ++yy) {\n    var v = yy / verticalSubdivisions;\n    var y = height * v;\n    var ringRadius = void 0;\n\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius + (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n\n    y -= height / 2;\n\n    for (var ii = 0; ii < vertsAroundEdge; ++ii) {\n      var sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      var cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      normals.push(yy < 0 || yy > verticalSubdivisions ? 0 : sin * cosSlant, yy < 0 ? -1 : yy > verticalSubdivisions ? 1 : sinSlant, yy < 0 || yy > verticalSubdivisions ? 0 : cos * cosSlant);\n      texcoords.push(ii / radialSubdivisions, 1 - v);\n    }\n  }\n\n  for (var _yy = 0; _yy < verticalSubdivisions + extra; ++_yy) {\n    // eslint-disable-line\n    for (var _ii = 0; _ii < radialSubdivisions; ++_ii) {\n      // eslint-disable-line\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 0) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii);\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 0 + _ii);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Expands RLE data\n * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param {number[]} [padding] value to add each entry with.\n * @return {number[]} the expanded rleData\n */\n\n\nfunction expandRLEData(rleData, padding) {\n  padding = padding || [];\n  var data = [];\n\n  for (var ii = 0; ii < rleData.length; ii += 4) {\n    var runLength = rleData[ii];\n    var element = rleData.slice(ii + 1, ii + 4);\n    element.push.apply(element, padding);\n\n    for (var jj = 0; jj < runLength; ++jj) {\n      data.push.apply(data, element);\n    }\n  }\n\n  return data;\n}\n/**\n * Creates 3D 'F' BufferInfo.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function create3DFBufferInfo\n */\n\n/**\n * Creates 3D 'F' buffers.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function create3DFBuffers\n */\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction create3DFVertices() {\n  var positions = [// left column front\n  0, 0, 0, 0, 150, 0, 30, 0, 0, 0, 150, 0, 30, 150, 0, 30, 0, 0, // top rung front\n  30, 0, 0, 30, 30, 0, 100, 0, 0, 30, 30, 0, 100, 30, 0, 100, 0, 0, // middle rung front\n  30, 60, 0, 30, 90, 0, 67, 60, 0, 30, 90, 0, 67, 90, 0, 67, 60, 0, // left column back\n  0, 0, 30, 30, 0, 30, 0, 150, 30, 0, 150, 30, 30, 0, 30, 30, 150, 30, // top rung back\n  30, 0, 30, 100, 0, 30, 30, 30, 30, 30, 30, 30, 100, 0, 30, 100, 30, 30, // middle rung back\n  30, 60, 30, 67, 60, 30, 30, 90, 30, 30, 90, 30, 67, 60, 30, 67, 90, 30, // top\n  0, 0, 0, 100, 0, 0, 100, 0, 30, 0, 0, 0, 100, 0, 30, 0, 0, 30, // top rung front\n  100, 0, 0, 100, 30, 0, 100, 30, 30, 100, 0, 0, 100, 30, 30, 100, 0, 30, // under top rung\n  30, 30, 0, 30, 30, 30, 100, 30, 30, 30, 30, 0, 100, 30, 30, 100, 30, 0, // between top rung and middle\n  30, 30, 0, 30, 60, 30, 30, 30, 30, 30, 30, 0, 30, 60, 0, 30, 60, 30, // top of middle rung\n  30, 60, 0, 67, 60, 30, 30, 60, 30, 30, 60, 0, 67, 60, 0, 67, 60, 30, // front of middle rung\n  67, 60, 0, 67, 90, 30, 67, 60, 30, 67, 60, 0, 67, 90, 0, 67, 90, 30, // bottom of middle rung.\n  30, 90, 0, 30, 90, 30, 67, 90, 30, 30, 90, 0, 67, 90, 30, 67, 90, 0, // front of bottom\n  30, 90, 0, 30, 150, 30, 30, 90, 30, 30, 90, 0, 30, 150, 0, 30, 150, 30, // bottom\n  0, 150, 0, 0, 150, 30, 30, 150, 30, 0, 150, 0, 30, 150, 30, 30, 150, 0, // left side\n  0, 0, 0, 0, 0, 30, 0, 150, 30, 0, 0, 0, 0, 150, 30, 0, 150, 0];\n  var texcoords = [// left column front\n  0.22, 0.19, 0.22, 0.79, 0.34, 0.19, 0.22, 0.79, 0.34, 0.79, 0.34, 0.19, // top rung front\n  0.34, 0.19, 0.34, 0.31, 0.62, 0.19, 0.34, 0.31, 0.62, 0.31, 0.62, 0.19, // middle rung front\n  0.34, 0.43, 0.34, 0.55, 0.49, 0.43, 0.34, 0.55, 0.49, 0.55, 0.49, 0.43, // left column back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // middle rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // top rung front\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // under top rung\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // between top rung and middle\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // top of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // front of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom of middle rung.\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // front of bottom\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // left side\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0];\n  var normals = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 0, 0, 1, // left column back\n  // top rung back\n  // middle rung back\n  18, 0, 0, -1, // top\n  6, 0, 1, 0, // top rung front\n  6, 1, 0, 0, // under top rung\n  6, 0, -1, 0, // between top rung and middle\n  6, 1, 0, 0, // top of middle rung\n  6, 0, 1, 0, // front of middle rung\n  6, 1, 0, 0, // bottom of middle rung.\n  6, 0, -1, 0, // front of bottom\n  6, 1, 0, 0, // bottom\n  6, 0, -1, 0, // left side\n  6, -1, 0, 0]);\n  var colors = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 200, 70, 120, // left column back\n  // top rung back\n  // middle rung back\n  18, 80, 70, 200, // top\n  6, 70, 200, 210, // top rung front\n  6, 200, 200, 70, // under top rung\n  6, 210, 100, 70, // between top rung and middle\n  6, 210, 160, 70, // top of middle rung\n  6, 70, 180, 210, // front of middle rung\n  6, 100, 70, 210, // bottom of middle rung.\n  6, 76, 210, 100, // front of bottom\n  6, 140, 210, 80, // bottom\n  6, 90, 130, 110, // left side\n  6, 160, 160, 220], [255]);\n  var numVerts = positions.length / 3;\n  var arrays = {\n    position: createAugmentedTypedArray(3, numVerts),\n    texcoord: createAugmentedTypedArray(2, numVerts),\n    normal: createAugmentedTypedArray(3, numVerts),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array)\n  };\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (var ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return arrays;\n}\n/**\n * Creates cresent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCresentBufferInfo\n */\n\n/**\n * Creates cresent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates cresent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCresentVertices(verticalRadius, outerRadius, innerRadius, thickness, subdivisionsDown, startOffset, endOffset) {\n  if (subdivisionsDown <= 0) {\n    throw Error('subdivisionDown must be > 0');\n  }\n\n  startOffset = startOffset || 0;\n  endOffset = endOffset || 1;\n  var subdivisionsThick = 2;\n  var offsetRange = endOffset - startOffset;\n  var numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  function lerp(a, b, s) {\n    return a + (b - a) * s;\n  }\n\n  function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\n    for (var z = 0; z <= subdivisionsDown; z++) {\n      var uBack = x / (subdivisionsThick - 1);\n      var v = z / subdivisionsDown;\n      var xBack = (uBack - 0.5) * 2;\n      var angle = (startOffset + v * offsetRange) * Math.PI;\n      var s = Math.sin(angle);\n      var c = Math.cos(angle);\n      var radius = lerp(verticalRadius, arcRadius, s);\n      var px = xBack * thickness;\n      var py = c * verticalRadius;\n      var pz = s * radius;\n      positions.push(px, py, pz);\n      var n = v3.add(v3.multiply([0, s, c], normalMult), normalAdd);\n      normals.push(n);\n      texcoords.push(uBack * uMult + uAdd, v);\n    }\n  } // Generate the individual vertices in our vertex buffer.\n\n\n  for (var x = 0; x < subdivisionsThick; x++) {\n    var uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\n    createArc(outerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\n    createArc(innerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\n  } // Do outer surface.\n\n\n  var indices = createAugmentedTypedArray(3, subdivisionsDown * 2 * (2 + subdivisionsThick), Uint16Array);\n\n  function createSurface(leftArcOffset, rightArcOffset) {\n    for (var z = 0; z < subdivisionsDown; ++z) {\n      // Make triangle 1 of quad.\n      indices.push(leftArcOffset + z + 0, leftArcOffset + z + 1, rightArcOffset + z + 0); // Make triangle 2 of quad.\n\n      indices.push(leftArcOffset + z + 1, rightArcOffset + z + 1, rightArcOffset + z + 0);\n    }\n  }\n\n  var numVerticesDown = subdivisionsDown + 1; // front\n\n  createSurface(numVerticesDown * 0, numVerticesDown * 4); // right\n\n  createSurface(numVerticesDown * 5, numVerticesDown * 7); // back\n\n  createSurface(numVerticesDown * 6, numVerticesDown * 2); // left\n\n  createSurface(numVerticesDown * 3, numVerticesDown * 1);\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates cylinder BufferInfo. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCylinderBufferInfo\n */\n\n/**\n * Creates cylinder buffers. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCylinderBuffers\n */\n\n/**\n * Creates cylinder vertices. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCylinderVertices(radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap) {\n  return createTruncatedConeVertices(radius, radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap);\n}\n/**\n * Creates BufferInfo for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTorusBufferInfo\n */\n\n/**\n * Creates buffers for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createTorusBuffers\n */\n\n/**\n * Creates vertices for a torus\n *\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTorusVertices(radius, thickness, radialSubdivisions, bodySubdivisions, startAngle, endAngle) {\n  if (radialSubdivisions < 3) {\n    throw Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw Error('verticalSubdivisions must be 3 or greater');\n  }\n\n  startAngle = startAngle || 0;\n  endAngle = endAngle || Math.PI * 2;\n  var range = endAngle - startAngle;\n  var radialParts = radialSubdivisions + 1;\n  var bodyParts = bodySubdivisions + 1;\n  var numVertices = radialParts * bodyParts;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * bodySubdivisions * 2, Uint16Array);\n\n  for (var slice = 0; slice < bodyParts; ++slice) {\n    var v = slice / bodySubdivisions;\n    var sliceAngle = v * Math.PI * 2;\n    var sliceSin = Math.sin(sliceAngle);\n    var ringRadius = radius + sliceSin * thickness;\n    var ny = Math.cos(sliceAngle);\n    var y = ny * thickness;\n\n    for (var ring = 0; ring < radialParts; ++ring) {\n      var u = ring / radialSubdivisions;\n      var ringAngle = startAngle + u * range;\n      var xSin = Math.sin(ringAngle);\n      var zCos = Math.cos(ringAngle);\n      var x = xSin * ringRadius;\n      var z = zCos * ringRadius;\n      var nx = xSin * sliceSin;\n      var nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (var _slice = 0; _slice < bodySubdivisions; ++_slice) {\n    // eslint-disable-line\n    for (var _ring = 0; _ring < radialSubdivisions; ++_ring) {\n      // eslint-disable-line\n      var nextRingIndex = 1 + _ring;\n      var nextSliceIndex = 1 + _slice;\n      indices.push(radialParts * _slice + _ring, radialParts * nextSliceIndex + _ring, radialParts * _slice + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + _ring, radialParts * nextSliceIndex + nextRingIndex, radialParts * _slice + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createDiscBufferInfo\n */\n\n/**\n * Creates disc buffers. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createDiscBuffers\n */\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createDiscVertices(radius, divisions, stacks, innerRadius, stackPower) {\n  if (divisions < 3) {\n    throw Error('divisions must be at least 3');\n  }\n\n  stacks = stacks ? stacks : 1;\n  stackPower = stackPower ? stackPower : 1;\n  innerRadius = innerRadius ? innerRadius : 0; // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n\n  var numVertices = (divisions + 1) * (stacks + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n  var firstIndex = 0;\n  var radiusSpan = radius - innerRadius;\n  var pointsPerStack = divisions + 1; // Build the disk one stack at a time.\n\n  for (var stack = 0; stack <= stacks; ++stack) {\n    var stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (var i = 0; i <= divisions; ++i) {\n      var theta = 2.0 * Math.PI * i / divisions;\n      var x = stackRadius * Math.cos(theta);\n      var z = stackRadius * Math.sin(theta);\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - i / divisions, stack / stacks);\n\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        var a = firstIndex + (i + 1);\n        var b = firstIndex + i;\n        var c = firstIndex + i - pointsPerStack;\n        var d = firstIndex + (i + 1) - pointsPerStack; // Make a quad of the vertices a, b, c, d.\n\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * creates a random integer between 0 and range - 1 inclusive.\n * @param {number} range\n * @return {number} random value between 0 and range - 1 inclusive.\n */\n\n\nfunction randInt(range) {\n  return Math.random() * range | 0;\n}\n/**\n * Used to supply random colors\n * @callback RandomColorFunc\n * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\n * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\n * @return {number} a number from 0 to 255\n * @memberOf module:twgl/primitives\n */\n\n/**\n * @typedef {Object} RandomVerticesOptions\n * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\n * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\n * @memberOf module:twgl/primitives\n */\n\n/**\n * Creates an augmentedTypedArray of random vertex colors.\n * If the vertices are indexed (have an indices array) then will\n * just make random colors. Otherwise assumes they are triangles\n * and makes one random color for every 3 vertices.\n * @param {Object.<string, augmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\n * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\n * @return {Object.<string, augmentedTypedArray>} same vertices as passed in with `color` added.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction makeRandomVertexColors(vertices, options) {\n  options = options || {};\n  var numElements = vertices.position.numElements;\n  var vcolors = createAugmentedTypedArray(4, numElements, Uint8Array);\n\n  var rand = options.rand || function (ndx, channel) {\n    return channel < 3 ? randInt(256) : 255;\n  };\n\n  vertices.color = vcolors;\n\n  if (vertices.indices) {\n    // just make random colors if index\n    for (var ii = 0; ii < numElements; ++ii) {\n      vcolors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\n    }\n  } else {\n    // make random colors per triangle\n    var numVertsPerColor = options.vertsPerColor || 3;\n    var numSets = numElements / numVertsPerColor;\n\n    for (var _ii2 = 0; _ii2 < numSets; ++_ii2) {\n      // eslint-disable-line\n      var color = [rand(_ii2, 0), rand(_ii2, 1), rand(_ii2, 2), rand(_ii2, 3)];\n\n      for (var jj = 0; jj < numVertsPerColor; ++jj) {\n        vcolors.push(color);\n      }\n    }\n  }\n\n  return vertices;\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a buffers for them\n */\n\n\nfunction createBufferFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBuffersFromArrays(gl, arrays);\n  };\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a bufferInfo object for them\n */\n\n\nfunction createBufferInfoFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(null, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBufferInfoFromArrays(gl, arrays);\n  };\n}\n\nvar arraySpecPropertyNames = [\"numComponents\", \"size\", \"type\", \"normalize\", \"stride\", \"offset\", \"attrib\", \"name\", \"attribName\"];\n/**\n * Copy elements from one array to another\n *\n * @param {Array|TypedArray} src source array\n * @param {Array|TypedArray} dst dest array\n * @param {number} dstNdx index in dest to copy src\n * @param {number} [offset] offset to add to copied values\n */\n\nfunction copyElements(src, dst, dstNdx, offset) {\n  offset = offset || 0;\n  var length = src.length;\n\n  for (var ii = 0; ii < length; ++ii) {\n    dst[dstNdx + ii] = src[ii] + offset;\n  }\n}\n/**\n * Creates an array of the same time\n *\n * @param {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} srcArray array who's type to copy\n * @param {number} length size of new array\n * @return {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} array with same type as srcArray\n */\n\n\nfunction createArrayOfSameType(srcArray, length) {\n  var arraySrc = getArray(srcArray);\n  var newArray = new arraySrc.constructor(length);\n  var newArraySpec = newArray; // If it appears to have been augmented make new one augemented\n\n  if (arraySrc.numComponents && arraySrc.numElements) {\n    augmentTypedArray(newArray, arraySrc.numComponents);\n  } // If it was a fullspec make new one a fullspec\n\n\n  if (srcArray.data) {\n    newArraySpec = {\n      data: newArray\n    };\n    helper.copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\n  }\n\n  return newArraySpec;\n}\n/**\n * Concatinates sets of vertices\n *\n * Assumes the vertices match in composition. For example\n * if one set of vertices has positions, normals, and indices\n * all sets of vertices must have positions, normals, and indices\n * and of the same type.\n *\n * Example:\n *\n *      const cubeVertices = twgl.primtiives.createCubeVertices(2);\n *      const sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\n *      // move the sphere 2 units up\n *      twgl.primitives.reorientVertices(\n *          sphereVertices, twgl.m4.translation([0, 2, 0]));\n *      // merge the sphere with the cube\n *      const cubeSphereVertices = twgl.primitives.concatVertices(\n *          [cubeVertices, sphereVertices]);\n *      // turn them into WebGL buffers and attrib data\n *      const bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\n *\n * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\n * @return {module:twgl.Arrays} The concatinated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction concatVertices(arrayOfArrays) {\n  var names = {};\n  var baseName; // get names of all arrays.\n  // and numElements for each set of vertices\n\n  var _loop = function _loop(ii) {\n    var arrays = arrayOfArrays[ii];\n    Object.keys(arrays).forEach(function (name) {\n      // eslint-disable-line\n      if (!names[name]) {\n        names[name] = [];\n      }\n\n      if (!baseName && name !== 'indices') {\n        baseName = name;\n      }\n\n      var arrayInfo = arrays[name];\n      var numComponents = getNumComponents(arrayInfo, name);\n      var array = getArray(arrayInfo);\n      var numElements = array.length / numComponents;\n      names[name].push(numElements);\n    });\n  };\n\n  for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n    _loop(ii);\n  } // compute length of combined array\n  // and return one for reference\n\n\n  function getLengthOfCombinedArrays(name) {\n    var length = 0;\n    var arraySpec;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n      length += array.length;\n\n      if (!arraySpec || arrayInfo.data) {\n        arraySpec = arrayInfo;\n      }\n    }\n\n    return {\n      length: length,\n      spec: arraySpec\n    };\n  }\n\n  function copyArraysToNewArray(name, base, newArray) {\n    var baseIndex = 0;\n    var offset = 0;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n\n      if (name === 'indices') {\n        copyElements(array, newArray, offset, baseIndex);\n        baseIndex += base[ii];\n      } else {\n        copyElements(array, newArray, offset);\n      }\n\n      offset += array.length;\n    }\n  }\n\n  var base = names[baseName];\n  var newArrays = {};\n  Object.keys(names).forEach(function (name) {\n    var info = getLengthOfCombinedArrays(name);\n    var newArraySpec = createArrayOfSameType(info.spec, info.length);\n    copyArraysToNewArray(name, base, getArray(newArraySpec));\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n/**\n * Creates a duplicate set of vertices\n *\n * This is useful for calling reorientVertices when you\n * also want to keep the original available\n *\n * @param {module:twgl.Arrays} arrays of vertices\n * @return {module:twgl.Arrays} The dupilicated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction duplicateVertices(arrays) {\n  var newArrays = {};\n  Object.keys(arrays).forEach(function (name) {\n    var arraySpec = arrays[name];\n    var srcArray = getArray(arraySpec);\n    var newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\n    copyElements(srcArray, getArray(newArraySpec), 0);\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\nvar create3DFBufferInfo = createBufferInfoFunc(create3DFVertices);\nexports.create3DFBufferInfo = create3DFBufferInfo;\nvar create3DFBuffers = createBufferFunc(create3DFVertices);\nexports.create3DFBuffers = create3DFBuffers;\nvar createCubeBufferInfo = createBufferInfoFunc(createCubeVertices);\nexports.createCubeBufferInfo = createCubeBufferInfo;\nvar createCubeBuffers = createBufferFunc(createCubeVertices);\nexports.createCubeBuffers = createCubeBuffers;\nvar createPlaneBufferInfo = createBufferInfoFunc(createPlaneVertices);\nexports.createPlaneBufferInfo = createPlaneBufferInfo;\nvar createPlaneBuffers = createBufferFunc(createPlaneVertices);\nexports.createPlaneBuffers = createPlaneBuffers;\nvar createSphereBufferInfo = createBufferInfoFunc(createSphereVertices);\nexports.createSphereBufferInfo = createSphereBufferInfo;\nvar createSphereBuffers = createBufferFunc(createSphereVertices);\nexports.createSphereBuffers = createSphereBuffers;\nvar createTruncatedConeBufferInfo = createBufferInfoFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBufferInfo = createTruncatedConeBufferInfo;\nvar createTruncatedConeBuffers = createBufferFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBuffers = createTruncatedConeBuffers;\nvar createXYQuadBufferInfo = createBufferInfoFunc(createXYQuadVertices);\nexports.createXYQuadBufferInfo = createXYQuadBufferInfo;\nvar createXYQuadBuffers = createBufferFunc(createXYQuadVertices);\nexports.createXYQuadBuffers = createXYQuadBuffers;\nvar createCresentBufferInfo = createBufferInfoFunc(createCresentVertices);\nexports.createCresentBufferInfo = createCresentBufferInfo;\nvar createCresentBuffers = createBufferFunc(createCresentVertices);\nexports.createCresentBuffers = createCresentBuffers;\nvar createCylinderBufferInfo = createBufferInfoFunc(createCylinderVertices);\nexports.createCylinderBufferInfo = createCylinderBufferInfo;\nvar createCylinderBuffers = createBufferFunc(createCylinderVertices);\nexports.createCylinderBuffers = createCylinderBuffers;\nvar createTorusBufferInfo = createBufferInfoFunc(createTorusVertices);\nexports.createTorusBufferInfo = createTorusBufferInfo;\nvar createTorusBuffers = createBufferFunc(createTorusVertices);\nexports.createTorusBuffers = createTorusBuffers;\nvar createDiscBufferInfo = createBufferInfoFunc(createDiscVertices);\nexports.createDiscBufferInfo = createDiscBufferInfo;\nvar createDiscBuffers = createBufferFunc(createDiscVertices);\nexports.createDiscBuffers = createDiscBuffers;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  addExtensionsToContext: true,\n  getContext: true,\n  getWebGLContext: true,\n  resizeCanvasToDisplaySize: true,\n  setDefaults: true\n};\nexports.addExtensionsToContext = addExtensionsToContext;\nexports.getContext = getContext;\nexports.getWebGLContext = getWebGLContext;\nexports.resizeCanvasToDisplaySize = resizeCanvasToDisplaySize;\nexports.setDefaults = setDefaults;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(7));\n\nObject.keys(attributes).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = attributes[key];\n});\n\nvar textures = _interopRequireWildcard(__webpack_require__(8));\n\nObject.keys(textures).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = textures[key];\n});\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nObject.keys(utils).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = utils[key];\n});\n\nvar _draw = __webpack_require__(12);\n\nObject.keys(_draw).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _draw[key];\n});\n\nvar _framebuffers = __webpack_require__(13);\n\nObject.keys(_framebuffers).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _framebuffers[key];\n});\n\nvar _programs = __webpack_require__(5);\n\nObject.keys(_programs).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _programs[key];\n});\n\nvar _typedarrays = __webpack_require__(1);\n\nObject.keys(_typedarrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _typedarrays[key];\n});\n\nvar _vertexArrays = __webpack_require__(14);\n\nObject.keys(_vertexArrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _vertexArrays[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * The main TWGL module.\n *\n * For most use cases you shouldn't need anything outside this module.\n * Exceptions between the stuff added to twgl-full (v3, m4, primitives)\n *\n * @module twgl\n * @borrows module:twgl/attributes.setAttribInfoBufferFromArray as setAttribInfoBufferFromArray\n * @borrows module:twgl/attributes.createBufferInfoFromArrays as createBufferInfoFromArrays\n * @borrows module:twgl/attributes.createVertexArrayInfo as createVertexArrayInfo\n * @borrows module:twgl/draw.drawBufferInfo as drawBufferInfo\n * @borrows module:twgl/draw.drawObjectList as drawObjectList\n * @borrows module:twgl/framebuffers.createFramebufferInfo as createFramebufferInfo\n * @borrows module:twgl/framebuffers.resizeFramebufferInfo as resizeFramebufferInfo\n * @borrows module:twgl/framebuffers.bindFramebufferInfo as bindFramebufferInfo\n * @borrows module:twgl/programs.createProgramInfo as createProgramInfo\n * @borrows module:twgl/programs.createUniformBlockInfo as createUniformBlockInfo\n * @borrows module:twgl/programs.bindUniformBlock as bindUniformBlock\n * @borrows module:twgl/programs.setUniformBlock as setUniformBlock\n * @borrows module:twgl/programs.setBlockUniforms as setBlockUniforms\n * @borrows module:twgl/programs.setUniforms as setUniforms\n * @borrows module:twgl/programs.setBuffersAndAttributes as setBuffersAndAttributes\n * @borrows module:twgl/textures.setTextureFromArray as setTextureFromArray\n * @borrows module:twgl/textures.createTexture as createTexture\n * @borrows module:twgl/textures.resizeTexture as resizeTexture\n * @borrows module:twgl/textures.createTextures as createTextures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  addExtensionsToContext: true\n};\n/**\n * Various default settings for twgl.\n *\n * Note: You can call this any number of times. Example:\n *\n *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\n *     twgl.setDefaults({ attribPrefix: 'a_' });\n *\n * is equivalent to\n *\n *     twgl.setDefaults({\n *       textureColor: [1, 0, 0, 1],\n *       attribPrefix: 'a_',\n *     });\n *\n * @typedef {Object} Defaults\n * @property {string} attribPrefix The prefix to stick on attributes\n *\n *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n *   as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n *\n *   In otherwords I'll create arrays of geometry like this\n *\n *       const arrays = {\n *         position: ...\n *         normal: ...\n *         texcoord: ...\n *       };\n *\n *   But need those mapped to attributes and my attributes start with `a_`.\n *\n *   Default: `\"\"`\n *\n * @property {number[]} textureColor Array of 4 values in the range 0 to 1\n *\n *   The default texture color is used when loading textures from\n *   urls. Because the URL will be loaded async we'd like to be\n *   able to use the texture immediately. By putting a 1x1 pixel\n *   color in the texture we can start using the texture before\n *   the URL has loaded.\n *\n *   Default: `[0.5, 0.75, 1, 1]`\n *\n * @property {string} crossOrigin\n *\n *   If not undefined sets the crossOrigin attribute on images\n *   that twgl creates when downloading images for textures.\n *\n *   Also see {@link module:twgl.TextureOptions}.\n *\n * @property {bool} addExtensionsToContext\n *\n *   If true, then, when twgl will try to add any supported WebGL extensions\n *   directly to the context under their normal GL names. For example\n *   if ANGLE_instances_arrays exists then twgl would enable it,\n *   add the functions `vertexAttribDivisor`, `drawArraysInstanced`,\n *   `drawElementsInstanced`, and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR`\n *   to the `WebGLRenderingContext`.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets various defaults for twgl.\n *\n * In the interest of terseness which is kind of the point\n * of twgl I've integrated a few of the older functions here\n *\n * @param {module:twgl.Defaults} newDefaults The default settings.\n * @memberOf module:twgl\n */\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n  attributes.setAttributeDefaults_(newDefaults); // eslint-disable-line\n\n  textures.setTextureDefaults_(newDefaults); // eslint-disable-line\n}\n\nvar prefixRE = /^(.*?)_/;\n\nfunction addExtensionToContext(gl, extensionName) {\n  utils.glEnumToString(gl, 0);\n  var ext = gl.getExtension(extensionName);\n\n  if (ext) {\n    var enums = {};\n    var fnSuffix = prefixRE.exec(extensionName)[1];\n    var enumSuffix = '_' + fnSuffix;\n\n    for (var key in ext) {\n      var value = ext[key];\n      var isFunc = typeof value === 'function';\n      var suffix = isFunc ? fnSuffix : enumSuffix;\n      var name = key; // examples of where this is not true are WEBGL_compressed_texture_s3tc\n      // and WEBGL_compressed_texture_pvrtc\n\n      if (key.endsWith(suffix)) {\n        name = key.substring(0, key.length - suffix.length);\n      }\n\n      if (gl[name] !== undefined) {\n        if (!isFunc && gl[name] !== value) {\n          helper.warn(name, gl[name], value, key);\n        }\n      } else {\n        if (isFunc) {\n          gl[name] = function (origFn) {\n            return function () {\n              return origFn.apply(ext, arguments);\n            };\n          }(value);\n        } else {\n          gl[name] = value;\n          enums[name] = value;\n        }\n      }\n    } // pass the modified enums to glEnumToString\n\n\n    enums.constructor = {\n      name: ext.constructor.name\n    };\n    utils.glEnumToString(enums, 0);\n  }\n\n  return ext;\n}\n/*\n * If you're wondering why the code doesn't just iterate\n * over all extensions using `gl.getExtensions` is that it's possible\n * some future extension is incompatible with this code. Rather than\n * have thing suddenly break it seems better to manually add to this\n * list.\n *\n */\n\n\nvar supportedExtensions = ['ANGLE_instanced_arrays', 'EXT_blend_minmax', 'EXT_color_buffer_float', 'EXT_color_buffer_half_float', 'EXT_disjoint_timer_query', 'EXT_disjoint_timer_query_webgl2', 'EXT_frag_depth', 'EXT_sRGB', 'EXT_shader_texture_lod', 'EXT_texture_filter_anisotropic', 'OES_element_index_uint', 'OES_standard_derivatives', 'OES_texture_float', 'OES_texture_float_linear', 'OES_texture_half_float', 'OES_texture_half_float_linear', 'OES_vertex_array_object', 'WEBGL_color_buffer_float', 'WEBGL_compressed_texture_atc', 'WEBGL_compressed_texture_etc1', 'WEBGL_compressed_texture_pvrtc', 'WEBGL_compressed_texture_s3tc', 'WEBGL_compressed_texture_s3tc_srgb', 'WEBGL_depth_texture', 'WEBGL_draw_buffers'];\n/**\n * Attempts to enable all of the following extensions\n * and add their functions and constants to the\n * `WebGLRenderingContext` using their normal non-extension like names.\n *\n *      ANGLE_instanced_arrays\n *      EXT_blend_minmax\n *      EXT_color_buffer_float\n *      EXT_color_buffer_half_float\n *      EXT_disjoint_timer_query\n *      EXT_disjoint_timer_query_webgl2\n *      EXT_frag_depth\n *      EXT_sRGB\n *      EXT_shader_texture_lod\n *      EXT_texture_filter_anisotropic\n *      OES_element_index_uint\n *      OES_standard_derivatives\n *      OES_texture_float\n *      OES_texture_float_linear\n *      OES_texture_half_float\n *      OES_texture_half_float_linear\n *      OES_vertex_array_object\n *      WEBGL_color_buffer_float\n *      WEBGL_compressed_texture_atc\n *      WEBGL_compressed_texture_etc1\n *      WEBGL_compressed_texture_pvrtc\n *      WEBGL_compressed_texture_s3tc\n *      WEBGL_compressed_texture_s3tc_srgb\n *      WEBGL_depth_texture\n *      WEBGL_draw_buffers\n *\n * For example if `ANGLE_instanced_arrays` exists then the functions\n * `drawArraysInstanced`, `drawElementsInstanced`, `vertexAttribDivisor`\n * and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR` are added to the\n * `WebGLRenderingContext`.\n *\n * Note that if you want to know if the extension exists you should\n * probably call `gl.getExtension` for each extension. Alternatively\n * you can check for the existance of the functions or constants that\n * are expected to be added. For example\n *\n *    if (gl.drawBuffers) {\n *      // Either WEBGL_draw_buffers was enabled OR you're running in WebGL2\n *      ....\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @memberOf module:twgl\n */\n\nfunction addExtensionsToContext(gl) {\n  for (var ii = 0; ii < supportedExtensions.length; ++ii) {\n    addExtensionToContext(gl, supportedExtensions[ii]);\n  }\n}\n/**\n * Creates a webgl context.\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\n\n\nfunction create3DContext(canvas, opt_attribs) {\n  var names = [\"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL1 context.\n *\n * Note: Will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextCreationAttirbutes} [opt_attribs] optional webgl context creation attributes\n * @memberOf module:twgl\n */\n\n\nfunction getWebGLContext(canvas, opt_attribs) {\n  var gl = create3DContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Creates a webgl context.\n *\n * Will return a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *     twgl.isWebGL2(gl);\n *\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\n\n\nfunction createContext(canvas, opt_attribs) {\n  var names = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL context.  Will create a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *    function isWebGL2(gl) {\n *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\n *    }\n *\n * Note: For a WebGL1 context will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextCreationAttirbutes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\n\n\nfunction getContext(canvas, opt_attribs) {\n  var gl = createContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Resize a canvas to match the size it's displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` or other scale value if you want to.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:twgl\n */\n\n\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  multiplier = Math.max(0, multiplier);\n  var width = canvas.clientWidth * multiplier | 0;\n  var height = canvas.clientHeight * multiplier | 0;\n\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n\n  return false;\n}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.drawBufferInfo = drawBufferInfo;\nexports.drawObjectList = drawObjectList;\n\nvar programs = _interopRequireWildcard(__webpack_require__(5));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Drawing related functions\n *\n * For backward compatibily they are available at both `twgl.draw` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/draw\n */\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @param {enum} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\n * @memberOf module:twgl/draw\n */\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\n  type = type === undefined ? gl.TRIANGLES : type;\n  var indices = bufferInfo.indices;\n  var elementType = bufferInfo.elementType;\n  var numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n\n  if (elementType || indices) {\n    if (instanceCount !== undefined) {\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset, instanceCount);\n    } else {\n      gl.drawElements(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n}\n/**\n * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\n *\n * You need either a `BufferInfo` or a `VertexArrayInfo`.\n *\n * @typedef {Object} DrawObject\n * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In otherwords `undefined` = `true`\n * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\n * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\n * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @property {Object<string, ?>} uniforms The values for the uniforms.\n *   You can pass multiple objects by putting them in an array. For example\n *\n *     var sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     var localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     var drawObj = {\n *       ...\n *       uniforms: [sharedUniforms, localUniforms],\n *     };\n *\n * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\n * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElemnts`. Defaults to bufferInfo.numElements.\n * @property {number} [instanceCount] the number of instances. Defaults to undefined.\n * @memberOf module:twgl\n */\n\n/**\n * Draws a list of objects\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n * @memberOf module:twgl/draw\n */\n\n\nfunction drawObjectList(gl, objectsToDraw) {\n  var lastUsedProgramInfo = null;\n  var lastUsedBufferInfo = null;\n  objectsToDraw.forEach(function (object) {\n    if (object.active === false) {\n      return;\n    }\n\n    var programInfo = object.programInfo;\n    var bufferInfo = object.vertexArrayInfo || object.bufferInfo;\n    var bindBuffers = false;\n    var type = object.type === undefined ? gl.TRIANGLES : object.type;\n\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program); // We have to rebind buffers when changing programs because we\n      // only bind buffers the program uses. So if 2 programs use the same\n      // bufferInfo but the 1st one uses only positions the when the\n      // we switch to the 2nd one some of the attributes will not be on.\n\n      bindBuffers = true;\n    } // Setup all the needed attributes.\n\n\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\n        gl.bindVertexArray(null);\n      }\n\n      lastUsedBufferInfo = bufferInfo;\n      programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    } // Set the uniforms.\n\n\n    programs.setUniforms(programInfo, object.uniforms); // Draw\n\n    drawBufferInfo(gl, bufferInfo, type, object.count, object.offset, object.instanceCount);\n  });\n\n  if (lastUsedBufferInfo.vertexArrayObject) {\n    gl.bindVertexArray(null);\n  }\n}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.bindFramebufferInfo = bindFramebufferInfo;\nexports.createFramebufferInfo = createFramebufferInfo;\nexports.resizeFramebufferInfo = resizeFramebufferInfo;\n\nvar textures = _interopRequireWildcard(__webpack_require__(8));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Framebuffer related functions\n *\n * For backward compatibily they are available at both `twgl.framebuffer` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/framebuffers\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar UNSIGNED_BYTE = 0x1401;\n/* PixelFormat */\n\nvar DEPTH_COMPONENT = 0x1902;\nvar RGBA = 0x1908;\n/* Framebuffer Object. */\n\nvar RGBA4 = 0x8056;\nvar RGB5_A1 = 0x8057;\nvar RGB565 = 0x8D62;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar STENCIL_INDEX = 0x1901;\nvar STENCIL_INDEX8 = 0x8D48;\nvar DEPTH_STENCIL = 0x84F9;\nvar COLOR_ATTACHMENT0 = 0x8CE0;\nvar DEPTH_ATTACHMENT = 0x8D00;\nvar STENCIL_ATTACHMENT = 0x8D20;\nvar DEPTH_STENCIL_ATTACHMENT = 0x821A;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar CLAMP_TO_EDGE = 0x812F;\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\nvar LINEAR = 0x2601;\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\n/**\n * The options for a framebuffer attachment.\n *\n * Note: For a `format` that is a texture include all the texture\n * options from {@link module:twgl.TextureOptions} for example\n * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\n * `auto` defaults to `false` for attachment textures but `min` and `mag` default\n * to `gl.LINEAR` and `wrap` defaults to `CLAMP_TO_EDGE`\n *\n * @typedef {Object} AttachmentOptions\n * @property {number} [attach] The attachment point. Defaults\n *   to `gl.COLOR_ATTACTMENT0 + ndx` unless type is a depth or stencil type\n *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\n *   on the format or attachment type.\n * @property {number} [format] The format. If one of `gl.RGBA4`,\n *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\n *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\n *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\n * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\n * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\n *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\n * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\n * @property {WebGLObject} [attachment] An existing renderbuffer or texture.\n *    If provided will attach this Object. This allows you to share\n *    attachemnts across framebuffers.\n * @memberOf module:twgl\n */\n\nvar defaultAttachments = [{\n  format: RGBA,\n  type: UNSIGNED_BYTE,\n  min: LINEAR,\n  wrap: CLAMP_TO_EDGE\n}, {\n  format: DEPTH_STENCIL\n}];\nvar attachmentsByFormat = {};\nattachmentsByFormat[DEPTH_STENCIL] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT16] = DEPTH_ATTACHMENT;\n\nfunction getAttachmentPointForFormat(format) {\n  return attachmentsByFormat[format];\n}\n\nvar renderbufferFormats = {};\nrenderbufferFormats[RGBA4] = true;\nrenderbufferFormats[RGB5_A1] = true;\nrenderbufferFormats[RGB565] = true;\nrenderbufferFormats[DEPTH_STENCIL] = true;\nrenderbufferFormats[DEPTH_COMPONENT16] = true;\nrenderbufferFormats[STENCIL_INDEX] = true;\nrenderbufferFormats[STENCIL_INDEX8] = true;\n\nfunction isRenderbufferFormat(format) {\n  return renderbufferFormats[format];\n}\n/**\n * @typedef {Object} FramebufferInfo\n * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\n * @property {WebGLObject[]} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a framebuffer and attachments.\n *\n * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n * Passing in a specific size\n *\n *     const width = 256;\n *     const height = 256;\n *     const fbi = twgl.createFramebufferInfo(gl, attachments, width, height);\n *\n * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\n * [WebGL only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\n *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction createFramebufferInfo(gl, attachments, width, height) {\n  var target = gl.FRAMEBUFFER;\n  var fb = gl.createFramebuffer();\n  gl.bindFramebuffer(target, fb);\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  attachments = attachments || defaultAttachments;\n  var colorAttachmentCount = 0;\n  var framebufferInfo = {\n    framebuffer: fb,\n    attachments: [],\n    width: width,\n    height: height\n  };\n  attachments.forEach(function (attachmentOptions) {\n    var attachment = attachmentOptions.attachment;\n    var format = attachmentOptions.format;\n    var attachmentPoint = getAttachmentPointForFormat(format);\n\n    if (!attachmentPoint) {\n      attachmentPoint = COLOR_ATTACHMENT0 + colorAttachmentCount++;\n    }\n\n    if (!attachment) {\n      if (isRenderbufferFormat(format)) {\n        attachment = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n        gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n      } else {\n        var textureOptions = Object.assign({}, attachmentOptions);\n        textureOptions.width = width;\n        textureOptions.height = height;\n\n        if (textureOptions.auto === undefined) {\n          textureOptions.auto = false;\n          textureOptions.min = textureOptions.min || textureOptions.minMag || gl.LINEAR;\n          textureOptions.mag = textureOptions.mag || textureOptions.minMag || gl.LINEAR;\n          textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n          textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n        }\n\n        attachment = textures.createTexture(gl, textureOptions);\n      }\n    }\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.framebufferRenderbuffer(target, attachmentPoint, gl.RENDERBUFFER, attachment);\n    } else if (helper.isTexture(gl, attachment)) {\n      gl.framebufferTexture2D(target, attachmentPoint, attachmentOptions.texTarget || gl.TEXTURE_2D, attachment, attachmentOptions.level || 0);\n    } else {\n      throw \"unknown attachment type\";\n    }\n\n    framebufferInfo.attachments.push(attachment);\n  });\n  return framebufferInfo;\n}\n/**\n * Resizes the attachments of a framebuffer.\n *\n * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebufferInfo}\n * because TWGL has no idea the format/type of each attachment.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments\n *         twgl.resizeFramebufferInfo(gl, fbi);\n *       }\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments to match\n *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\n *       }\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebufferInfo}.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  framebufferInfo.width = width;\n  framebufferInfo.height = height;\n  attachments = attachments || defaultAttachments;\n  attachments.forEach(function (attachmentOptions, ndx) {\n    var attachment = framebufferInfo.attachments[ndx];\n    var format = attachmentOptions.format;\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n      gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n    } else if (helper.isTexture(gl, attachment)) {\n      textures.resizeTexture(gl, attachment, attachmentOptions, width, height);\n    } else {\n      throw \"unknown attachment type\";\n    }\n  });\n}\n/**\n * Binds a framebuffer\n *\n * This function pretty much soley exists because I spent hours\n * trying to figure out why something I wrote wasn't working only\n * to realize I forget to set the viewport dimensions.\n * My hope is this function will fix that.\n *\n * It is effectively the same as\n *\n *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\n *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n *   If not passed will bind the canvas.\n * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction bindFramebufferInfo(gl, framebufferInfo, target) {\n  target = target || gl.FRAMEBUFFER;\n\n  if (framebufferInfo) {\n    gl.bindFramebuffer(target, framebufferInfo.framebuffer);\n    gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\n  } else {\n    gl.bindFramebuffer(target, null);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createVertexArrayInfo = createVertexArrayInfo;\nexports.createVAOAndSetAttributes = createVAOAndSetAttributes;\nexports.createVAOFromBufferInfo = createVAOFromBufferInfo;\n\nvar programs = _interopRequireWildcard(__webpack_require__(5));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * vertex array object related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/vertexArrays\n */\n\n/**\n * @typedef {Object} VertexArrayInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\n * @memberOf module:twgl\n */\n\n/**\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n *   who's attributes use the same attribute locations for the same purposes.\n *\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n *\n * also\n *\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n *   will affect the Vertex Array Object state.\n *\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n *\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n *    now attribute D's location.\n *\n *    So, you can pass in both shader 1 and shader 2's programInfo\n *\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n\n  if (!programInfos.length) {\n    programInfos = [programInfos];\n  }\n\n  programInfos.forEach(function (programInfo) {\n    programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  });\n  gl.bindVertexArray(null);\n  return {\n    numElements: bufferInfo.numElements,\n    elementType: bufferInfo.elementType,\n    vertexArrayObject: vao\n  };\n}\n/**\n * Creates a vertex array object and then sets the attributes on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOAndSetAttributes(gl, setters, attribs, indices) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  programs.setAttributes(setters, attribs);\n\n  if (indices) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indices);\n  } // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n  // like when creating buffers for other stuff will mess up this VAO's binding\n\n\n  gl.bindVertexArray(null);\n  return vao;\n}\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>| module:twgl.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n  return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n}\n\n/***/ })\n/******/ ]);\n});","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import {_} from 'underscore'\nimport twgl from './twgl';\nimport {gl} from './gl';\n\nfunction getGl() {\n    return gl;\n}\n\ngetGl();\n\nfunction createTextures(opts) {\n    return new Promise(function(resolve, reject) {\n        twgl.createTextures(gl, opts, function(errors, textures, images) {\n            resolve({errors, textures, images});\n        });\n    });\n}\n\nclass Loader {\n    constructor(opts) {\n        this.cache = new Map();\n        this.textureCache = new Map();\n        this.programCache = new Map();\n        this.errors = {\n            programs: new Map(),\n            textures: new Map(),\n            paths: new Map()\n        }\n        this.loading = null;\n        this.load(opts);\n    }\n\n    load(opts) {\n        let {basePath,\n            raiseOnFailure,\n            paths,\n            textures,\n            programs} = ({basePath: '', raiseOnFailure: true, ...opts});\n        // trim trailing slashes\n        basePath = basePath.replace(/\\/+$/, '');\n\n        const loadPromise = new Promise(async (resolve, reject) => {\n            if (paths) {\n                await this.loadPaths(paths, basePath, raiseOnFailure);\n            }\n\n            if (textures) {\n                let {errors, textures: tex, images} = await createTextures(textures);\n                if (errors) {\n                    console.log(errors);\n                }\n                Object.keys(tex).forEach((key) => {\n                    this.textureCache.set(key, tex[key]);\n                });\n            }\n\n            if (programs) {\n                for (let progOpts of programs) {\n                    let name = progOpts;\n                    let opts;\n\n                    if (_.isObject(progOpts)) {\n                        name = progOpts.name;\n                        opts = progOpts.opts;\n                    }\n\n                    if (this.programCache.has(name)) {\n                        console.log(`Warning: attempted to load already loaded program '${name}'`);\n                        continue;\n                    }\n\n                    const fp = _.compact([basePath, name.split('.').join('/')]).join('/');\n\n                    const vsName = `${fp}.vert`;\n                    const fsName = `${fp}.frag`;\n                    await this.loadPaths([vsName, fsName], '', raiseOnFailure);\n                    this.programCache.set(\n                        name,\n                        twgl.createProgramInfo(gl, [this.get(vsName), this.get(fsName)], opts)\n                    );\n                }\n            }\n\n            resolve(this);\n        });\n\n        this.loading = this.loading ? this.loading.then(res => loadPromise) : loadPromise;\n\n        return this.loading;\n    }\n\n    get(path) {\n        const ret = this.cache.get(path);\n        if (ret === undefined) {\n            raise `No value for key ${path}`;\n        }\n        return ret;\n    }\n\n    getTexture(name) {\n        const ret = this.textureCache.get(name);\n        if (ret === undefined) {\n            raise `No texture value for key ${path}`;\n        }\n        return ret;\n    }\n\n    getProgram(name) {\n        return this.programCache.get(name)\n    }\n\n    async loadPaths(paths, basePath, raiseOnFailure = true) {\n        for (let path of paths) {\n            if (this.cache.has(basePath + path)) {\n                console.log(`Warning: attempted to load already loaded path '${basePath + path}'`);\n                continue;\n            }\n            const contents = await this.fetch(basePath + path, raiseOnFailure);\n            if (contents) {\n                this.cache.set(basePath + path, contents);\n            }\n        }\n    }\n\n    async fetch(path, raiseOnFailure = true) {\n        const req = await fetch(path);\n\n        if (req.ok) {\n            return await req.text();\n        } else if (raiseOnFailure) {\n            throw `failed to fetch resource '${path}'; got status ${req.status} '${req.statusText}'`;\n        } else {\n            this.errors.paths.set(path, req.statusText);\n\n            return false;\n        }\n    }\n}\n\nexport {Loader};\n","import {Loader} from 'resource.js';\nimport {CoordinateConversions} from 'graphics.js';\nimport {mat3, mat4} from 'gl-matrix';\nimport {registerContext, gl} from 'gl.js';\nimport {attachFramebuffer} from 'util.js';\nimport 'vendor/webgl-debug.js'\nimport {Sprite} from './graphics/Sprite';\nimport {SpriteRenderer} from './graphics/SpriteRenderer'\nimport {Camera} from \"./graphics/Camera\";\n\n//import * as glMatrix from 'gl-matrix';\n\nfunction logGLCall(functionName, args) {\n    console.log(\"gl.\" + functionName + \"(\" +\n        WebGLDebugUtils.glFunctionArgsToString(functionName, args) + \")\");\n}\n\nfunction throwOnGLError(err, funcName, args) {\n    throw WebGLDebugUtils.glEnumToString(err) + \" was caused by call to: \" + funcName;\n}\n\nconst initCanvas = (containerId, canvasClass) => {\n    if (!containerId) {\n        throw new Error('argument containerId, id of containing element required');\n    }\n    const mountPoint = document.getElementById(containerId);\n    const canvas = document.createElement('canvas');\n    if (canvasClass) {\n        canvas.classList.add(canvasClass);\n    }\n    mountPoint.appendChild(canvas);\n\n    return canvas;\n};\n\n/**\n * options:\n * el\n * debug - default: false\n * clearColor - default: [0.4, 0.4, 0.4, 1]\n * resolution - default: { width: 352, height: 224 }\n * pixelMultiplier - default: 2\n */\nclass App {\n    constructor(options) {\n        this.clearColor = options.clearColor || [0.4, 0.4, 0.4, 1];\n        this.resolution = options.resolution || {width: 352, height: 224};\n        this.pixelMultiplier = options.pixelMultiplier || 2;\n        this.debug = options.debug;\n\n        if (typeof options.el === 'string') {\n            this.canvas = document.getElementById(options.el);\n        } else {\n            this.canvas = options.el;\n        }\n\n        // create rendering context\n        this.gl = this.canvas.getContext('webgl2');\n\n        if (this.debug) {\n            WebGLDebugUtils.init(this.gl);\n            this.gl = WebGLDebugUtils.makeDebugContext(this.gl, undefined, logGLCall);\n        }\n\n        registerContext(this.gl);\n\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n\n        this.framebuffer = attachFramebuffer(gl, this.resolution.width, this.resolution.height);\n        this.framebufferRenderer = new SpriteRenderer({\n            game: this,\n            textureInfo: {\n                texture: this.framebuffer.texture,\n                ...this.resolution\n            }\n        });\n        this.loader = new Loader();\n        this.projection = mat4.ortho(mat4.create(), 0, this.resolution.width, 0, this.resolution.height, -1, 1);\n        this.camera = new Camera(this.resolution);\n        this.cameraEnabled = true;\n        this.updateCanvasSize();\n        this.adjustViewport();\n    }\n\n    updateCanvasSize() {\n        const width = this.resolution.width * this.pixelMultiplier;\n        const height = this.resolution.height * this.pixelMultiplier;\n\n        this.canvas.style.width = `${width}px`;\n        this.canvas.style.height = `${height}px`;\n\n        this.canvas.width = width * (window.devicePixelRatio || 1);\n        this.canvas.height = height * (window.devicePixelRatio || 1);\n    }\n\n    adjustViewport() {\n        // Use device pixels rather than CSS pixels to set viewport\n        // This will handle devicePixelRatios different than 1\n        const canvas_width = this.canvas.width;\n        const canvas_height = this.canvas.height;\n\n        this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n\n        this._canvasToWorld = CoordinateConversions.canvasToWorldMatrix(\n            this.camera.matrix,\n            {width: canvas_width, height: canvas_height},\n            this.resolution\n        );\n    }\n\n    clear() {\n        this.gl.clearColor(...this.clearColor);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n    }\n\n    load(paths) {\n        return this.loader.load(paths);\n    }\n\n    getProgram(key) {\n        const ret = this.loader.getProgram(key);\n\n        if (!ret) {\n            throw `No program loaded for key '${key}'`;\n        }\n\n        return ret;\n    }\n\n    enableCamera() {\n        this.cameraEnabled = true;\n    }\n\n    disableCamera() {\n        this.cameraEnabled = false;\n    }\n\n    get canvasToWorld() {\n        return this._canvasToWorld;\n    }\n\n    get viewMatrix() {\n        let camera = mat4.create();\n        if (this.cameraEnabled) {\n            camera = this.camera.matrix;\n        }\n        return mat4.multiply(mat4.create(), this.projection, camera);\n    }\n\n    beginRenderToTexture() {\n        this.framebuffer.attach();\n        this.clear();\n    }\n\n    endRenderToTexture() {\n        this.framebuffer.detach();\n        this.adjustViewport();\n    }\n\n    start() {\n        let timestamp;\n\n        const update = time => {\n            if (!timestamp) {\n                timestamp = time;\n            }\n\n            let dt = time - timestamp;\n            timestamp = time;\n            //this.framebuffer.attach();\n\n            if (this.stage) {\n                this.stage.prerender(dt);\n\n                this.beginRenderToTexture();\n\n                this.stage.render(dt);\n\n                this.stage.postrender(dt);\n\n                this.endRenderToTexture();\n\n                this.clear();\n\n                this.framebufferRenderer.render(\n                    [new Sprite({\n                        position: [0, 0],\n                        size: [this.resolution.width, this.resolution.height]\n                    })],\n                    this.projection\n                );\n\n                // possible post fullscreen render hook here\n            }\n\n            if (this.running) {\n                requestAnimationFrame(update);\n            }\n        };\n\n        if (!this.running) {\n            requestAnimationFrame(update);\n            this.running = true;\n        }\n    }\n\n    setStage(stage) {\n        this.stage = stage;\n        stage.app = this;\n        stage.init(this);\n    }\n}\n\nexport default App;\n\nexport {\n    App,\n    initCanvas\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Sweep;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\nvar Transform = require('./Transform');\n\n/**\n * This describes the motion of a body/shape for TOI computation. Shapes are\n * defined with respect to the body origin, which may not coincide with the\n * center of mass. However, to support dynamics we must interpolate the center\n * of mass position.\n * \n * @prop {Vec2} localCenter Local center of mass position\n * @prop {Vec2} c World center position\n * @prop {float} a World angle\n * @prop {float} alpha0 Fraction of the current time step in the range [0,1], c0\n *       and a0 are c and a at alpha0.\n */\nfunction Sweep(c, a) {\n  _ASSERT && common.assert(typeof c === 'undefined');\n  _ASSERT && common.assert(typeof a === 'undefined');\n  this.localCenter = Vec2.zero();\n  this.c = Vec2.zero();\n  this.a = 0;\n  this.alpha0 = 0;\n  this.c0 = Vec2.zero();\n  this.a0 = 0;\n}\n\nSweep.prototype.setTransform = function(xf) {\n  var c = Transform.mul(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n\n  this.a = xf.q.getAngle();\n  this.a0 = xf.q.getAngle();\n};\n\nSweep.prototype.setLocalCenter = function(localCenter, xf) {\n  this.localCenter.set(localCenter);\n\n  var c = Transform.mul(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n};\n\n/**\n * Get the interpolated transform at a specific time.\n * \n * @param xf\n * @param beta A factor in [0,1], where 0 indicates alpha0\n */\nSweep.prototype.getTransform = function(xf, beta) {\n  beta = typeof beta === 'undefined' ? 0 : beta;\n  xf.q.setAngle((1.0 - beta) * this.a0 + beta * this.a);\n  xf.p.wSet((1.0 - beta), this.c0, beta, this.c);\n\n  // shift to origin\n  xf.p.sub(Rot.mul(xf.q, this.localCenter));\n};\n\n/**\n * Advance the sweep forward, yielding a new initial state.\n * \n * @param {float} alpha The new initial time\n */\nSweep.prototype.advance = function(alpha) {\n  _ASSERT && common.assert(this.alpha0 < 1.0);\n  var beta = (alpha - this.alpha0) / (1.0 - this.alpha0);\n  this.c0.wSet(beta, this.c, 1 - beta, this.c0);\n  this.a0 = beta * this.a + (1 - beta) * this.a0;\n  this.alpha0 = alpha;\n};\n\nSweep.prototype.forward = function() {\n  this.a0 = this.a;\n  this.c0.set(this.c);\n};\n\n/**\n * normalize the angles in radians to be between -pi and pi.\n */\nSweep.prototype.normalize = function() {\n  var a0 = Math.mod(this.a0, -Math.PI, +Math.PI);\n  this.a -= this.a0 - a0;\n  this.a0 = a0;\n};\n\nSweep.prototype.clone = function() {\n  var clone = new Sweep();\n  clone.localCenter.set(this.localCenter);\n  clone.alpha0 = this.alpha0;\n  clone.a0 = this.a0;\n  clone.a = this.a;\n  clone.c0.set(this.c0);\n  clone.c.set(this.c);\n  return clone;\n};\n\nSweep.prototype.set = function(that) {\n  this.localCenter.set(that.localCenter);\n  this.alpha0 = that.alpha0;\n  this.a0 = that.a0;\n  this.a = that.a;\n  this.c0.set(that.c0);\n  this.c.set(that.c);\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Vec3;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\n\nfunction Vec3(x, y, z) {\n  if (!(this instanceof Vec3)) {\n    return new Vec3(x, y, z);\n  }\n  if (typeof x === 'undefined') {\n    this.x = 0, this.y = 0, this.z = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x, this.y = x.y, this.z = x.z;\n  } else {\n    this.x = x, this.y = y, this.z = z;\n  }\n  _ASSERT && Vec3.assert(this);\n};\n\nVec3.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\n/**\n * Does this vector contain finite coordinates?\n */\nVec3.isValid = function(v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y) && Math.isFinite(v.z);\n}\n\nVec3.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Vec3.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec3!');\n  }\n}\n\nVec3.prototype.setZero = function() {\n  this.x = 0.0;\n  this.y = 0.0;\n  this.z = 0.0;\n  return this;\n}\n\nVec3.prototype.set = function(x, y, z) {\n  this.x = x;\n  this.y = y;\n  this.z = z;\n  return this;\n}\n\nVec3.prototype.add = function(w) {\n  this.x += w.x;\n  this.y += w.y;\n  this.z += w.z;\n  return this;\n}\n\nVec3.prototype.sub = function(w) {\n  this.x -= w.x;\n  this.y -= w.y;\n  this.z -= w.z;\n  return this;\n}\n\nVec3.prototype.mul = function(m) {\n  this.x *= m;\n  this.y *= m;\n  this.z *= m;\n  return this;\n}\n\nVec3.areEqual = function(v, w) {\n  return v == w || typeof w === 'object' && w !== null && v.x == w.x\n      && v.y == w.y && v.z == w.z;\n}\n\n// Perform the dot product on two vectors.\nVec3.dot = function(v, w) {\n  return v.x * w.x + v.y * w.y + v.z * w.z;\n}\n\n// Perform the cross product on two vectors. In 2D this produces a scalar.\nVec3.cross = function(v, w) {\n  return new Vec3(v.y * w.z - v.z * w.y, v.z * w.x - v.x * w.z, v.x * w.y - v.y\n      * w.x);\n}\n\nVec3.add = function(v, w) {\n  return new Vec3(v.x + w.x, v.y + w.y, v.z + w.z);\n}\n\nVec3.sub = function(v, w) {\n  return new Vec3(v.x - w.x, v.y - w.y, v.z - w.z);\n}\n\nVec3.mul = function(v, m) {\n  return new Vec3(m * v.x, m * v.y, m * v.z);\n}\n\nVec3.prototype.neg = function(m) {\n  this.x = -this.x;\n  this.y = -this.y;\n  this.z = -this.z;\n  return this;\n}\n\nVec3.neg = function(v) {\n  return new Vec3(-v.x, -v.y, -v.z);\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Mat22;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\n\n/**\n * A 2-by-2 matrix. Stored in column-major order.\n */\nfunction Mat22(a, b, c, d) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec2.clone(a);\n    this.ey = Vec2.clone(b);\n  } else if (typeof a === 'number') {\n    this.ex = Vec2.neo(a, c);\n    this.ey = Vec2.neo(b, d)\n  } else {\n    this.ex = Vec2.zero();\n    this.ey = Vec2.zero()\n  }\n};\n\nMat22.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\nMat22.isValid = function(o) {\n  return o && Vec2.isValid(o.ex) && Vec2.isValid(o.ey);\n};\n\nMat22.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Mat22.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat22!');\n  }\n};\n\nMat22.prototype.set = function(a, b, c, d) {\n  if (typeof a === 'number' && typeof b === 'number' && typeof c === 'number'\n      && typeof d === 'number') {\n    this.ex.set(a, c);\n    this.ey.set(b, d);\n\n  } else if (typeof a === 'object' && typeof b === 'object') {\n    this.ex.set(a);\n    this.ey.set(b);\n\n  } else if (typeof a === 'object') {\n    _ASSERT && Mat22.assert(a);\n    this.ex.set(a.ex);\n    this.ey.set(a.ey);\n\n  } else {\n    _ASSERT && common.assert(false);\n  }\n}\n\nMat22.prototype.setIdentity = function() {\n  this.ex.x = 1.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 1.0;\n}\n\nMat22.prototype.setZero = function() {\n  this.ex.x = 0.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 0.0;\n}\n\nMat22.prototype.getInverse = function() {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var imx = new Mat22();\n  imx.ex.x = det * d;\n  imx.ey.x = -det * b;\n  imx.ex.y = -det * c;\n  imx.ey.y = det * a;\n  return imx;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n */\nMat22.prototype.solve = function(v) {\n  _ASSERT && Vec2.assert(v);\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var w = Vec2.zero();\n  w.x = det * (d * v.x - b * v.y);\n  w.y = det * (a * v.y - c * v.x);\n  return w;\n}\n\n/**\n * Multiply a matrix times a vector. If a rotation matrix is provided, then this\n * transforms the vector from one frame to another.\n */\nMat22.mul = function(mx, v) {\n\n  if (v && 'x' in v && 'y' in v) { // Vec2\n    _ASSERT && Vec2.assert(v);\n    var x = mx.ex.x * v.x + mx.ey.x * v.y;\n    var y = mx.ex.y * v.x + mx.ey.y * v.y;\n    return Vec2.neo(x, y);\n\n  } else if (v && 'ex' in v && 'ey' in v) { // Mat22\n    _ASSERT && Mat22.assert(v);\n    return new Mat22(Vec2.mul(mx, v.ex), Vec2.mul(mx, v.ey));\n  }\n\n  _ASSERT && common.assert(false);\n}\n\n/**\n * \n * Multiply a matrix transpose times a vector. If a rotation matrix is provided,\n * then this transforms the vector from one frame to another (inverse\n * transform).\n */\nMat22.mulT = function(mx, v) {\n\n  if (v && 'x' in v && 'y' in v) { // Vec2\n    _ASSERT && Vec2.assert(v);\n    return Vec2.neo(Vec2.dot(v, mx.ex), Vec2.dot(v, mx.ey));\n\n  } else if (v && 'ex' in v && 'ey' in v) { // Mat22\n    _ASSERT && Mat22.assert(v);\n    var c1 = Vec2.neo(Vec2.dot(mx.ex, v.ex), Vec2.dot(mx.ey, v.ex));\n    var c2 = Vec2.neo(Vec2.dot(mx.ex, v.ey), Vec2.dot(mx.ey, v.ey));\n    return new Mat22(c1, c2);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat22.abs = function(mx) {\n  _ASSERT && Mat22.assert(mx);\n  return new Mat22(Vec2.abs(mx.ex), Vec2.abs(mx.ey));\n}\n\nMat22.add = function(mx1, mx2) {\n  _ASSERT && Mat22.assert(mx1);\n  _ASSERT && Mat22.assert(mx2);\n  return new Mat22(Vec2.add(mx1.ex + mx2.ex), Vec2.add(mx1.ey + mx2.ey));\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Position;\n\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\n\n/**\n * @prop {Vec2} c location\n * @prop {float} a angle\n */\nfunction Position() {\n  this.c = Vec2.zero();\n  this.a = 0;\n}\n\nPosition.prototype.getTransform = function(xf, p) {\n  xf.q.set(this.a);\n  xf.p.set(Vec2.sub(this.c, Rot.mul(xf.q, p)));\n  return xf;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Velocity;\n\nvar Vec2 = require('./Vec2');\n\n/**\n * @prop {Vec2} v linear\n * @prop {float} w angular\n */\nfunction Velocity() {\n  this.v = Vec2.zero();\n  this.w = 0;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Joint;\n\nvar common = require('./util/common');\n\n/**\n * A joint edge is used to connect bodies and joints together in a joint graph\n * where each body is a node and each joint is an edge. A joint edge belongs to\n * a doubly linked list maintained in each attached body. Each joint has two\n * joint nodes, one for each attached body.\n * \n * @prop {Body} other provides quick access to the other body attached.\n * @prop {Joint} joint the joint\n * @prop {JointEdge} prev the previous joint edge in the body's joint list\n * @prop {JointEdge} next the next joint edge in the body's joint list\n */\nfunction JointEdge() {\n  this.other = null;\n  this.joint = null;\n  this.prev = null;\n  this.next = null;\n};\n\n/**\n * @typedef {Object} JointDef\n *\n * Joint definitions are used to construct joints.\n * \n * @prop userData Use this to attach application specific data to your joints.\n *       void userData;\n * @prop {boolean} collideConnected Set this flag to true if the attached bodies\n *       should collide.\n */\nvar JointDef = {\n  userData : null,\n  collideConnected : false\n};\n\n/**\n * The base joint class. Joints are used to constraint two bodies together in\n * various fashions. Some joints also feature limits and motors.\n * \n * @param {JointDef} def\n * @param {Body} bodyA first attached body.\n * @param {Body} bodyB The second attached body.\n */\nfunction Joint(def, bodyA, bodyB) {\n  bodyA = def.bodyA || bodyA;\n  bodyB = def.bodyB || bodyB;\n\n  _ASSERT && common.assert(bodyA);\n  _ASSERT && common.assert(bodyB);\n  _ASSERT && common.assert(bodyA != bodyB);\n\n  this.m_type = 'unknown-joint';\n\n  this.m_bodyA = bodyA;\n  this.m_bodyB = bodyB;\n\n  this.m_index = 0;\n  this.m_collideConnected = !!def.collideConnected;\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_edgeA = new JointEdge();\n  this.m_edgeB = new JointEdge();\n\n  this.m_islandFlag = false;\n  this.m_userData = def.userData;\n};\n\n/**\n * Short-cut function to determine if either body is inactive.\n * \n * @returns {boolean}\n */\nJoint.prototype.isActive = function() {\n  return this.m_bodyA.isActive() && this.m_bodyB.isActive();\n}\n\n/**\n * Get the type of the concrete joint.\n * \n * @returns JointType\n */\nJoint.prototype.getType = function() {\n  return this.m_type;\n}\n\n/**\n * Get the first body attached to this joint.\n * \n * @returns Body\n */\nJoint.prototype.getBodyA = function() {\n  return this.m_bodyA;\n}\n\n/**\n * Get the second body attached to this joint.\n * \n * @returns Body\n */\nJoint.prototype.getBodyB = function() {\n  return this.m_bodyB;\n}\n\n/**\n * Get the next joint the world joint list.\n * \n * @returns Joint\n */\nJoint.prototype.getNext = function() {\n  return this.m_next;\n}\n\nJoint.prototype.getUserData = function() {\n  return this.m_userData;\n}\n\nJoint.prototype.setUserData = function(data) {\n  this.m_userData = data;\n}\n\n/**\n * Get collide connected. Note: modifying the collide connect flag won't work\n * correctly because the flag is only checked when fixture AABBs begin to\n * overlap.\n * \n * @returns {boolean}\n */\nJoint.prototype.getCollideConnected = function() {\n  return this.m_collideConnected;\n};\n\n/**\n * Get the anchor point on bodyA in world coordinates.\n * \n * @return {Vec2}\n */\nJoint.prototype.getAnchorA = function() {\n};\n\n/**\n * Get the anchor point on bodyB in world coordinates.\n * \n * @return {Vec2}\n */\nJoint.prototype.getAnchorB = function() {\n};\n\n/**\n * Get the reaction force on bodyB at the joint anchor in Newtons.\n * \n * @param {float} inv_dt\n * @return {Vec2}\n */\nJoint.prototype.getReactionForce = function(inv_dt) {\n};\n\n/**\n * Get the reaction torque on bodyB in N*m.\n * \n * @param {float} inv_dt\n * @return {float}\n */\nJoint.prototype.getReactionTorque = function(inv_dt) {\n};\n\n/**\n * Shift the origin for any points stored in world coordinates.\n * \n * @param {Vec2} newOrigin\n */\nJoint.prototype.shiftOrigin = function(newOrigin) {\n};\n\n/**\n */\nJoint.prototype.initVelocityConstraints = function(step) {\n};\n\n/**\n */\nJoint.prototype.solveVelocityConstraints = function(step) {\n};\n\n/**\n * This returns true if the position errors are within tolerance.\n */\nJoint.prototype.solvePositionConstraints = function(step) {\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Mat33;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\nvar Vec3 = require('./Vec3');\n\n/**\n * A 3-by-3 matrix. Stored in column-major order.\n */\nfunction Mat33(a, b, c) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec3.clone(a);\n    this.ey = Vec3.clone(b);\n    this.ez = Vec3.clone(c);\n  } else {\n    this.ex = Vec3();\n    this.ey = Vec3()\n    this.ez = Vec3();\n  }\n};\n\nMat33.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\nMat33.isValid = function(o) {\n  return o && Vec3.isValid(o.ex) && Vec3.isValid(o.ey) && Vec3.isValid(o.ez);\n};\n\nMat33.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Mat33.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat33!');\n  }\n};\n\n/**\n * Set this matrix to all zeros.\n */\nMat33.prototype.setZero = function() {\n  this.ex.setZero();\n  this.ey.setZero();\n  this.ez.setZero();\n  return this;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n * \n * @param {Vec3} v\n * @returns {Vec3}\n */\nMat33.prototype.solve33 = function(v) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var r = new Vec3();\n  r.x = det * Vec3.dot(v, Vec3.cross(this.ey, this.ez));\n  r.y = det * Vec3.dot(this.ex, Vec3.cross(v, this.ez));\n  r.z = det * Vec3.dot(this.ex, Vec3.cross(this.ey, v));\n  return r;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases. Solve only the upper 2-by-2 matrix\n * equation.\n * \n * @param {Vec2} v\n * \n * @returns {Vec2}\n */\nMat33.prototype.solve22 = function(v) {\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a21 = this.ex.y;\n  var a22 = this.ey.y;\n  var det = a11 * a22 - a12 * a21;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var r = Vec2.zero();\n  r.x = det * (a22 * v.x - a12 * v.y);\n  r.y = det * (a11 * v.y - a21 * v.x);\n  return r;\n}\n\n/**\n * Get the inverse of this matrix as a 2-by-2. Returns the zero matrix if\n * singular.\n * \n * @param {Mat33} M\n */\nMat33.prototype.getInverse22 = function(M) {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  M.ex.x = det * d;\n  M.ey.x = -det * b;\n  M.ex.z = 0.0;\n  M.ex.y = -det * c;\n  M.ey.y = det * a;\n  M.ey.z = 0.0;\n  M.ez.x = 0.0;\n  M.ez.y = 0.0;\n  M.ez.z = 0.0;\n}\n\n/**\n * Get the symmetric inverse of this matrix as a 3-by-3. Returns the zero matrix\n * if singular.\n * \n * @param {Mat33} M\n */\nMat33.prototype.getSymInverse33 = function(M) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a13 = this.ez.x;\n  var a22 = this.ey.y;\n  var a23 = this.ez.y;\n  var a33 = this.ez.z;\n\n  M.ex.x = det * (a22 * a33 - a23 * a23);\n  M.ex.y = det * (a13 * a23 - a12 * a33);\n  M.ex.z = det * (a12 * a23 - a13 * a22);\n\n  M.ey.x = M.ex.y;\n  M.ey.y = det * (a11 * a33 - a13 * a13);\n  M.ey.z = det * (a13 * a12 - a11 * a23);\n\n  M.ez.x = M.ex.z;\n  M.ez.y = M.ey.z;\n  M.ez.z = det * (a11 * a22 - a12 * a12);\n}\n\n/**\n * Multiply a matrix times a vector.\n * \n * @param {Mat33} a\n * @param {Vec3|Vec2} b\n * \n * @returns {Vec3|Vec2}\n */\nMat33.mul = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  if (b && 'z' in b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec3.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y + a.ez.x * b.z;\n    var y = a.ex.y * b.x + a.ey.y * b.y + a.ez.y * b.z;\n    var z = a.ex.z * b.x + a.ey.z * b.y + a.ez.z * b.z;\n    return new Vec3(x, y, z);\n\n  } else if (b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y;\n    var y = a.ex.y * b.x + a.ey.y * b.y;\n    return Vec2.neo(x, y);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat33.add = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Mat33.assert(b);\n  return new Vec3(a.x + b.x, a.y + b.y, a.z + b.z);\n}\n","import twgl from '../twgl';\nimport {gl} from '../gl';\n\nimport vs from '../../shaders/grid.vert';\nimport fs from '../../shaders/grid.frag';\n\nexport {Grid};\n\nconst GRID_VERTICES = new Float32Array([\n    0, 0, // bottom left\n    1, 0, // bottom right\n    0, 1, // top left\n    1, 1  // top right\n]);\n\nfunction makeGridVertices({xcells, ycells}, {w, h}, {lineWidth}) {\n    const position = new Float32Array(2 * (xcells + ycells));\n    const size = new Float32Array(2 * (xcells + ycells));\n    const width = w * (xcells + 1);\n    const height = h * (ycells + 1);\n\n    for (let row = 0; row < ycells; ++row) {\n        position[2 * row] = 0;     // pos x\n        position[2 * row + 1] = row * h; // pos y\n        size[2 * row] = width;     // line length\n        size[2 * row + 1] = lineWidth; // line thickness\n    }\n\n    for (let col = 0; col < xcells; ++col) {\n        position[2 * ycells + 2 * col] = col * w; // pos x\n        position[2 * ycells + 2 * col + 1] = 0;     // pos y\n        size[2 * ycells + 2 * col] = lineWidth; // line length\n        size[2 * ycells + 2 * col + 1] = height;    // line thickness\n    }\n\n    return {\n        position,\n        size\n    }\n}\n\nlet sharedProgram = null;\n\nclass Grid {\n    constructor(options) {\n        this.resolution = options.resolution;\n\n        if (!sharedProgram) {\n            sharedProgram = twgl.createProgramInfo(gl, [vs, fs]);\n        }\n        this.programInfo = sharedProgram;\n\n        this.bufferInfo = twgl.createBufferInfoFromArrays(gl, {\n            vertex: {\n                data: GRID_VERTICES,\n                numComponents: 2,\n                divisor: 0,\n                drawType: gl.STATIC_DRAW\n            },\n            position: {\n                numComponents: 2,\n                divisor: 1,\n                drawType: gl.DYNAMIC_DRAW\n            },\n            size: {\n                numComponents: 2,\n                divisor: 1,\n                drawType: gl.DYNAMIC_DRAW\n            },\n            indices: {\n                data: [\n                    0,\n                    1,\n                    2,\n                    3\n                ]\n            }\n        });\n\n        this.vao = twgl.createVertexArrayInfo(gl, this.programInfo, this.bufferInfo);\n\n        this.grids = [];\n    }\n\n    addGrid(sx = 32, sy = 32, lineColor = [1, 1, 1, 1], lineWidth = 2) {\n        const xcells = Math.ceil(this.resolution.width / sx) + 1;\n        const ycells = Math.ceil(this.resolution.height / sy) + 1;\n        const instanceCount = xcells + ycells;\n\n        const {position, size} = makeGridVertices({xcells, ycells}, {w: sx, h: sy}, {lineWidth: lineWidth});\n\n        this.grids.push({\n            position,\n            size,\n            instanceCount,\n            lineColor,\n            sx,\n            sy\n        })\n    }\n\n    render(x, y, projection) {\n        gl.useProgram(this.programInfo.program);\n\n        twgl.setBuffersAndAttributes(gl, this.programInfo, this.vao);\n\n        const cameraPos = [x, y];\n\n        this.grids.forEach(gridInfo => {\n            const {position, size, instanceCount, lineColor, sx, sy} = gridInfo;\n\n            const offset = [cameraPos[0] % sx, cameraPos[1] % sy];\n            if (offset[0] > 0) {\n                offset[0] = offset[0] - sx;\n            }\n\n            if (offset[1] > 0) {\n                offset[1] = offset[1] - sy;\n            }\n\n            twgl.setAttribInfoBufferFromArray(\n                gl,\n                this.bufferInfo.attribs.position,\n                position\n            );\n\n            twgl.setAttribInfoBufferFromArray(\n                gl,\n                this.bufferInfo.attribs.size,\n                size\n            );\n\n            twgl.setUniforms(this.programInfo, {\n                line_color: lineColor,\n                projection: projection,\n                offset: offset\n            });\n\n            twgl.drawBufferInfo(gl, this.vao, gl.TRIANGLE_STRIP, undefined, undefined, instanceCount);\n        });\n    }\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Shape;\n\nvar Math = require('./common/Math');\n\n/**\n * A shape is used for collision detection. You can create a shape however you\n * like. Shapes used for simulation in World are created automatically when a\n * Fixture is created. Shapes may encapsulate one or more child shapes.\n */\nfunction Shape() {\n  this.m_type;\n  this.m_radius;\n}\n\nShape.isValid = function(shape) {\n  return !!shape;\n};\n\nShape.prototype.getRadius = function() {\n  return this.m_radius;\n};\n\n/**\n * Get the type of this shape. You can use this to down cast to the concrete\n * shape.\n * \n * @return the shape type.\n */\nShape.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * @deprecated\n *\n * clone the concrete shape.\n */\nShape.prototype._clone = function() {\n};\n\n/**\n * // Get the number of child primitives.\n */\nShape.prototype.getChildCount = function() {\n};\n\n/**\n * Test a point for containment in this shape. This only works for convex\n * shapes.\n * \n * @param {Transform} xf The shape world transform.\n * @param p A point in world coordinates.\n */\nShape.prototype.testPoint = function(xf, p) {\n};\n\n/**\n * Cast a ray against a child shape.\n * \n * @param {RayCastOutput} output The ray-cast results.\n * @param {RayCastInput} input The ray-cast input parameters.\n * @param {Transform} transform The transform to be applied to the shape.\n * @param childIndex The child shape index\n */\nShape.prototype.rayCast = function(output, input, transform, childIndex) {\n};\n\n/**\n * Given a transform, compute the associated axis aligned bounding box for a\n * child shape.\n * \n * @param {AABB} aabb Returns the axis aligned box.\n * @param {Transform} xf The world transform of the shape.\n * @param childIndex The child shape\n */\nShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n};\n\n/**\n * Compute the mass properties of this shape using its dimensions and density.\n * The inertia tensor is computed about the local origin.\n * \n * @param {MassData} massData Returns the mass data for this shape.\n * @param density The density in kilograms per meter squared.\n */\nShape.prototype.computeMass = function(massData, density) {\n};\n\n/**\n * @param {DistanceProxy} proxy\n */\nShape.prototype.computeDistanceProxy = function(proxy) {\n};\n","module.exports = \"#version 300 es\\n\\nprecision mediump float;\\n\\nuniform vec4 line_color;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n    out_color = line_color;\\n}\\n\"","module.exports = \"#version 300 es\\n\\nlayout(location = 0) in vec2 vertex;\\nlayout(location = 1) in vec2 position;\\nlayout(location = 2) in vec2 size;\\n\\nuniform mat4 projection;\\nuniform vec2 offset;\\n\\nvoid main() {\\n    vec4 transformed_position = projection * vec4(position + size * vertex + offset, 0, 1);\\n    gl_Position = transformed_position;\\n}\\n\"","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\n\nmodule.exports = AABB;\n\nfunction AABB(lower, upper) {\n  if (!(this instanceof AABB)) {\n    return new AABB(lower, upper);\n  }\n\n  this.lowerBound = Vec2.zero();\n  this.upperBound = Vec2.zero();\n\n  if (typeof lower === 'object') {\n    this.lowerBound.set(lower);\n  }\n  if (typeof upper === 'object') {\n    this.upperBound.set(upper);\n  }\n};\n\n/**\n * Verify that the bounds are sorted.\n */\nAABB.prototype.isValid = function() {\n  return AABB.isValid(this);\n}\n\nAABB.isValid = function(aabb) {\n  var d = Vec2.sub(aabb.upperBound, aabb.lowerBound);\n  var valid = d.x >= 0.0 && d.y >= 0.0 && Vec2.isValid(aabb.lowerBound) && Vec2.isValid(aabb.upperBound);\n  return valid;\n}\n\n/**\n * Get the center of the AABB.\n */\nAABB.prototype.getCenter = function() {\n  return Vec2.neo((this.lowerBound.x + this.upperBound.x) * 0.5, (this.lowerBound.y + this.upperBound.y) * 0.5);\n}\n\n/**\n * Get the extents of the AABB (half-widths).\n */\nAABB.prototype.getExtents = function() {\n  return Vec2.neo((this.upperBound.x - this.lowerBound.x) * 0.5, (this.upperBound.y - this.lowerBound.y) * 0.5);\n}\n\n/**\n * Get the perimeter length.\n */\nAABB.prototype.getPerimeter = function() {\n  return 2.0 * (this.upperBound.x - this.lowerBound.x + this.upperBound.y - this.lowerBound.y);\n}\n\n/**\n * Combine one or two AABB into this one.\n */\nAABB.prototype.combine = function(a, b) {\n  b = b || this;\n  this.lowerBound.set(Math.min(a.lowerBound.x, b.lowerBound.x), Math.min(a.lowerBound.y, b.lowerBound.y));\n  this.upperBound.set(Math.max(a.upperBound.x, b.upperBound.x), Math.max(a.upperBound.y, b.upperBound.y));\n}\n\nAABB.prototype.combinePoints = function(a, b) {\n  this.lowerBound.set(Math.min(a.x, b.x), Math.min(a.y, b.y));\n  this.upperBound.set(Math.max(a.x, b.x), Math.max(a.y, b.y));\n}\n\nAABB.prototype.set = function(aabb) {\n  this.lowerBound.set(aabb.lowerBound.x, aabb.lowerBound.y);\n  this.upperBound.set(aabb.upperBound.x, aabb.upperBound.y);\n}\n\nAABB.prototype.contains = function(aabb) {\n  var result = true;\n  result = result && this.lowerBound.x <= aabb.lowerBound.x;\n  result = result && this.lowerBound.y <= aabb.lowerBound.y;\n  result = result && aabb.upperBound.x <= this.upperBound.x;\n  result = result && aabb.upperBound.y <= this.upperBound.y;\n  return result;\n}\n\nAABB.prototype.extend = function(value) {\n  AABB.extend(this, value);\n}\n\nAABB.extend = function(aabb, value) {\n  aabb.lowerBound.x -= value;\n  aabb.lowerBound.y -= value;\n  aabb.upperBound.x += value;\n  aabb.upperBound.y += value;\n}\n\nAABB.testOverlap = function(a, b) {\n  var d1x = b.lowerBound.x - a.upperBound.x;\n  var d2x = a.lowerBound.x - b.upperBound.x;\n\n  var d1y = b.lowerBound.y - a.upperBound.y;\n  var d2y = a.lowerBound.y - b.upperBound.y;\n\n  if (d1x > 0 || d1y > 0 || d2x > 0 || d2y > 0) {\n    return false;\n  }\n  return true;\n}\n\nAABB.areEqual = function(a, b) {\n  return Vec2.areEqual(a.lowerBound, b.lowerBound) && Vec2.areEqual(a.upperBound, b.upperBound);\n}\n\nAABB.diff = function(a, b) {\n  var wD = Math.max(0, Math.min(a.upperBound.x, b.upperBound.x) - Math.max(b.lowerBound.x, a.lowerBound.x))\n  var hD = Math.max(0, Math.min(a.upperBound.y, b.upperBound.y) - Math.max(b.lowerBound.y, a.lowerBound.y));\n\n  var wA = a.upperBound.x - a.lowerBound.x;\n  var hA = a.upperBound.y - a.lowerBound.y;\n\n  var wB = b.upperBound.x - b.lowerBound.x;\n  var hB = b.upperBound.y - b.lowerBound.y;\n\n  return wA * hA + wB * hB - wD * hD;\n};\n\n/**\n * @typedef RayCastInput\n *\n * Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\n *\n * @prop {Vec2} p1\n * @prop {Vec2} p2\n * @prop {number} maxFraction\n */\n\n/**\n * @typedef RayCastInput\n *\n * Ray-cast output data. The ray hits at p1 + fraction * (p2 - p1), where p1 and\n * p2 come from RayCastInput.\n *\n * @prop {Vec2} normal\n * @prop {number} fraction\n */\n\n/**\n * @param {RayCastOutput} output\n * @param {RayCastInput} input\n * @returns {boolean}\n */\nAABB.prototype.rayCast = function(output, input) {\n  // From Real-time Collision Detection, p179.\n\n  var tmin = -Infinity;\n  var tmax = Infinity;\n\n  var p = input.p1;\n  var d = Vec2.sub(input.p2, input.p1);\n  var absD = Vec2.abs(d);\n\n  var normal = Vec2.zero();\n\n  for (var f = 'x'; f !== null; f = (f === 'x' ? 'y' : null)) {\n    if (absD.x < Math.EPSILON) {\n      // Parallel.\n      if (p[f] < this.lowerBound[f] || this.upperBound[f] < p[f]) {\n        return false;\n      }\n    } else {\n      var inv_d = 1.0 / d[f];\n      var t1 = (this.lowerBound[f] - p[f]) * inv_d;\n      var t2 = (this.upperBound[f] - p[f]) * inv_d;\n\n      // Sign of the normal vector.\n      var s = -1.0;\n\n      if (t1 > t2) {\n        var temp = t1;\n        t1 = t2, t2 = temp;\n        s = 1.0;\n      }\n\n      // Push the min up\n      if (t1 > tmin) {\n        normal.setZero();\n        normal[f] = s;\n        tmin = t1;\n      }\n\n      // Pull the max down\n      tmax = Math.min(tmax, t2);\n\n      if (tmin > tmax) {\n        return false;\n      }\n    }\n  }\n\n  // Does the ray start inside the box?\n  // Does the ray intersect beyond the max fraction?\n  if (tmin < 0.0 || input.maxFraction < tmin) {\n    return false;\n  }\n\n  // Intersection.\n  output.fraction = tmin;\n  output.normal = normal;\n  return true;\n}\n\nAABB.prototype.toString = function() {\n  return JSON.stringify(this);\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar DEBUG_SOLVER = false;\n\nvar common = require('./util/common');\n\nvar Math = require('./common/Math');\nvar Vec2 = require('./common/Vec2');\nvar Transform = require('./common/Transform');\nvar Mat22 = require('./common/Mat22');\nvar Rot = require('./common/Rot');\n\nvar Settings = require('./Settings');\nvar Manifold = require('./Manifold');\nvar Distance = require('./collision/Distance');\n\nmodule.exports = Contact;\n\n/**\n * A contact edge is used to connect bodies and contacts together in a contact\n * graph where each body is a node and each contact is an edge. A contact edge\n * belongs to a doubly linked list maintained in each attached body. Each\n * contact has two contact nodes, one for each attached body.\n * \n * @prop {Contact} contact The contact\n * @prop {ContactEdge} prev The previous contact edge in the body's contact list\n * @prop {ContactEdge} next The next contact edge in the body's contact list\n * @prop {Body} other Provides quick access to the other body attached.\n */\nfunction ContactEdge(contact) {\n  this.contact = contact;\n  this.prev;\n  this.next;\n  this.other;\n};\n\n/**\n * @function Contact~evaluate\n * \n * @param manifold\n * @param xfA\n * @param fixtureA\n * @param indexA\n * @param xfB\n * @param fixtureB\n * @param indexB\n */\n\n/**\n * The class manages contact between two shapes. A contact exists for each\n * overlapping AABB in the broad-phase (except if filtered). Therefore a contact\n * object may exist that has no contact points.\n * \n * @param {Fixture} fA\n * @param {int} indexA\n * @param {Fixture} fB\n * @param {int} indexB\n * @param {Contact~evaluate} evaluateFcn\n */\nfunction Contact(fA, indexA, fB, indexB, evaluateFcn) {\n  // Nodes for connecting bodies.\n  this.m_nodeA = new ContactEdge(this);\n  this.m_nodeB = new ContactEdge(this);\n\n  this.m_fixtureA = fA;\n  this.m_fixtureB = fB;\n\n  this.m_indexA = indexA;\n  this.m_indexB = indexB;\n\n  this.m_evaluateFcn = evaluateFcn;\n\n  this.m_manifold = new Manifold();\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_toi = 1.0;\n  this.m_toiCount = 0;\n  // This contact has a valid TOI in m_toi\n  this.m_toiFlag = false;\n\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction,\n      this.m_fixtureB.m_friction);\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution,\n      this.m_fixtureB.m_restitution);\n\n  this.m_tangentSpeed = 0.0;\n\n  // This contact can be disabled (by user)\n  this.m_enabledFlag = true;\n\n  // Used when crawling contact graph when forming islands.\n  this.m_islandFlag = false;\n\n  // Set when the shapes are touching.\n  this.m_touchingFlag = false;\n\n  // This contact needs filtering because a fixture filter was changed.\n  this.m_filterFlag = false;\n\n  // This bullet contact had a TOI event\n  this.m_bulletHitFlag = false;\n\n  this.v_points = []; // VelocityConstraintPoint[maxManifoldPoints]\n  this.v_normal = Vec2.zero();\n  this.v_normalMass = new Mat22();\n  this.v_K = new Mat22();\n  this.v_pointCount;\n\n  this.v_tangentSpeed;\n  this.v_friction;\n  this.v_restitution;\n\n  this.v_invMassA;\n  this.v_invMassB;\n  this.v_invIA;\n  this.v_invIB;\n\n  this.p_localPoints = [] // Vec2[maxManifoldPoints];\n  this.p_localNormal = Vec2.zero();\n  this.p_localPoint = Vec2.zero();\n  this.p_localCenterA = Vec2.zero();\n  this.p_localCenterB = Vec2.zero();\n  this.p_type; // Manifold.Type\n  this.p_radiusA;\n  this.p_radiusB;\n  this.p_pointCount;\n\n  this.p_invMassA;\n  this.p_invMassB;\n  this.p_invIA;\n  this.p_invIB;\n}\n\nContact.prototype.initConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var manifold = this.getManifold();\n\n  var pointCount = manifold.pointCount;\n  _ASSERT && common.assert(pointCount > 0);\n\n  this.v_invMassA = bodyA.m_invMass;\n  this.v_invMassB = bodyB.m_invMass;\n  this.v_invIA = bodyA.m_invI;\n  this.v_invIB = bodyB.m_invI;\n\n  this.v_friction = this.m_friction;\n  this.v_restitution = this.m_restitution;\n  this.v_tangentSpeed = this.m_tangentSpeed;\n\n  this.v_pointCount = pointCount;\n\n  this.v_K.setZero();\n  this.v_normalMass.setZero();\n\n  this.p_invMassA = bodyA.m_invMass;\n  this.p_invMassB = bodyB.m_invMass;\n  this.p_invIA = bodyA.m_invI;\n  this.p_invIB = bodyB.m_invI;\n  this.p_localCenterA = Vec2.clone(bodyA.m_sweep.localCenter);\n  this.p_localCenterB = Vec2.clone(bodyB.m_sweep.localCenter);\n\n  this.p_radiusA = shapeA.m_radius;\n  this.p_radiusB = shapeB.m_radius;\n\n  this.p_type = manifold.type;\n  this.p_localNormal = Vec2.clone(manifold.localNormal);\n  this.p_localPoint = Vec2.clone(manifold.localPoint);\n  this.p_pointCount = pointCount;\n\n  for (var j = 0; j < pointCount; ++j) {\n    var cp = manifold.points[j]; // ManifoldPoint\n    var vcp = this.v_points[j] = new VelocityConstraintPoint();\n\n    if (step.warmStarting) {\n      vcp.normalImpulse = step.dtRatio * cp.normalImpulse;\n      vcp.tangentImpulse = step.dtRatio * cp.tangentImpulse;\n\n    } else {\n      vcp.normalImpulse = 0.0;\n      vcp.tangentImpulse = 0.0;\n    }\n\n    vcp.rA.setZero();\n    vcp.rB.setZero();\n    vcp.normalMass = 0.0;\n    vcp.tangentMass = 0.0;\n    vcp.velocityBias = 0.0;\n\n    this.p_localPoints[j] = Vec2.clone(cp.localPoint);\n\n  }\n};\n\n/**\n * Get the contact manifold. Do not modify the manifold unless you understand\n * the internals of the library.\n */\nContact.prototype.getManifold = function() {\n  return this.m_manifold;\n}\n\n/**\n * Get the world manifold.\n * \n * @param {WorldManifold} [worldManifold]\n */\nContact.prototype.getWorldManifold = function(worldManifold) {\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var shapeA = this.m_fixtureA.getShape();\n  var shapeB = this.m_fixtureB.getShape();\n\n  return this.m_manifold.getWorldManifold(worldManifold, bodyA.getTransform(),\n      shapeA.m_radius, bodyB.getTransform(), shapeB.m_radius);\n}\n\n/**\n * Enable/disable this contact. This can be used inside the pre-solve contact\n * listener. The contact is only disabled for the current time step (or sub-step\n * in continuous collisions).\n */\nContact.prototype.setEnabled = function(flag) {\n  this.m_enabledFlag = !!flag;\n}\n\n/**\n * Has this contact been disabled?\n */\nContact.prototype.isEnabled = function() {\n  return this.m_enabledFlag;\n}\n\n/**\n * Is this contact touching?\n */\nContact.prototype.isTouching = function() {\n  return this.m_touchingFlag;\n}\n\n/**\n * Get the next contact in the world's contact list.\n */\nContact.prototype.getNext = function() {\n  return this.m_next;\n}\n\n/**\n * Get fixture A in this contact.\n */\nContact.prototype.getFixtureA = function() {\n  return this.m_fixtureA;\n}\n\n/**\n * Get fixture B in this contact.\n */\nContact.prototype.getFixtureB = function() {\n  return this.m_fixtureB;\n}\n\n/**\n * Get the child primitive index for fixture A.\n */\nContact.prototype.getChildIndexA = function() {\n  return this.m_indexA;\n}\n\n/**\n * Get the child primitive index for fixture B.\n */\nContact.prototype.getChildIndexB = function() {\n  return this.m_indexB;\n}\n\n/**\n * Flag this contact for filtering. Filtering will occur the next time step.\n */\nContact.prototype.flagForFiltering = function() {\n  this.m_filterFlag = true;\n}\n\n/**\n * Override the default friction mixture. You can call this in\n * ContactListener.preSolve. This value persists until set or reset.\n */\nContact.prototype.setFriction = function(friction) {\n  this.m_friction = friction;\n}\n\n/**\n * Get the friction.\n */\nContact.prototype.getFriction = function() {\n  return this.m_friction;\n}\n\n/**\n * Reset the friction mixture to the default value.\n */\nContact.prototype.resetFriction = function() {\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction,\n      this.m_fixtureB.m_friction);\n}\n\n/**\n * Override the default restitution mixture. You can call this in\n * ContactListener.preSolve. The value persists until you set or reset.\n */\nContact.prototype.setRestitution = function(restitution) {\n  this.m_restitution = restitution;\n}\n\n/**\n * Get the restitution.\n */\nContact.prototype.getRestitution = function() {\n  return this.m_restitution;\n}\n\n/**\n * Reset the restitution to the default value.\n */\nContact.prototype.resetRestitution = function() {\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution,\n      this.m_fixtureB.m_restitution);\n}\n\n/**\n * Set the desired tangent speed for a conveyor belt behavior. In meters per\n * second.\n */\nContact.prototype.setTangentSpeed = function(speed) {\n  this.m_tangentSpeed = speed;\n}\n\n/**\n * Get the desired tangent speed. In meters per second.\n */\nContact.prototype.getTangentSpeed = function() {\n  return this.m_tangentSpeed;\n}\n\n/**\n * Called by Update method, and implemented by subclasses.\n */\nContact.prototype.evaluate = function(manifold, xfA, xfB) {\n  this.m_evaluateFcn(manifold, xfA, this.m_fixtureA, this.m_indexA, xfB,\n      this.m_fixtureB, this.m_indexB);\n};\n\n/**\n * Updates the contact manifold and touching status.\n * \n * Note: do not assume the fixture AABBs are overlapping or are valid.\n * \n * @param {function} listener.beginContact\n * @param {function} listener.endContact\n * @param {function} listener.preSolve\n */\nContact.prototype.update = function(listener) {\n\n  // Re-enable this contact.\n  this.m_enabledFlag = true;\n\n  var touching = false;\n  var wasTouching = this.m_touchingFlag;\n\n  var sensorA = this.m_fixtureA.isSensor();\n  var sensorB = this.m_fixtureB.isSensor();\n  var sensor = sensorA || sensorB;\n\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var xfA = bodyA.getTransform();\n  var xfB = bodyB.getTransform();\n\n  // Is this contact a sensor?\n  if (sensor) {\n    var shapeA = this.m_fixtureA.getShape();\n    var shapeB = this.m_fixtureB.getShape();\n    touching = Distance.testOverlap(shapeA, this.m_indexA, shapeB,\n        this.m_indexB, xfA, xfB);\n\n    // Sensors don't generate manifolds.\n    this.m_manifold.pointCount = 0;\n  } else {\n\n    // TODO reuse manifold\n    var oldManifold = this.m_manifold;\n    this.m_manifold = new Manifold();\n\n    this.evaluate(this.m_manifold, xfA, xfB);\n    touching = this.m_manifold.pointCount > 0;\n\n    // Match old contact ids to new contact ids and copy the\n    // stored impulses to warm start the solver.\n    for (var i = 0; i < this.m_manifold.pointCount; ++i) {\n      var nmp = this.m_manifold.points[i];\n      nmp.normalImpulse = 0.0;\n      nmp.tangentImpulse = 0.0;\n\n      for (var j = 0; j < oldManifold.pointCount; ++j) {\n        var omp = oldManifold.points[j];\n        if (omp.id.key == nmp.id.key) { // ContactID.key\n          nmp.normalImpulse = omp.normalImpulse;\n          nmp.tangentImpulse = omp.tangentImpulse;\n          break;\n        }\n      }\n    }\n\n    if (touching != wasTouching) {\n      bodyA.setAwake(true);\n      bodyB.setAwake(true);\n    }\n  }\n\n  this.m_touchingFlag = touching;\n\n  if (wasTouching == false && touching == true && listener) {\n    listener.beginContact(this);\n  }\n\n  if (wasTouching == true && touching == false && listener) {\n    listener.endContact(this);\n  }\n\n  if (sensor == false && touching && listener) {\n    listener.preSolve(this, oldManifold);\n  }\n}\n\nContact.prototype.solvePositionConstraint = function(step) {\n  return this._solvePositionConstraint(step, false);\n}\n\nContact.prototype.solvePositionConstraintTOI = function(step, toiA, toiB) {\n  return this._solvePositionConstraint(step, true, toiA, toiB);\n}\n\nContact.prototype._solvePositionConstraint = function(step, toi, toiA, toiB) {\n\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n\n  var mA = 0.0;\n  var iA = 0.0;\n  if (!toi || (bodyA == toiA || bodyA == toiB)) {\n    mA = this.p_invMassA;\n    iA = this.p_invIA;\n  }\n\n  var mB = 0.0;\n  var iB = 0.0;\n  if (!toi || (bodyB == toiA || bodyB == toiB)) {\n    mB = this.p_invMassB;\n    iB = this.p_invIB;\n  }\n\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n\n  var minSeparation = 0.0;\n\n  // Solve normal constraints\n  for (var j = 0; j < this.p_pointCount; ++j) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    xfA.q.set(aA);\n    xfB.q.set(aB);\n    xfA.p = Vec2.sub(cA, Rot.mul(xfA.q, localCenterA));\n    xfB.p = Vec2.sub(cB, Rot.mul(xfB.q, localCenterB));\n\n    // PositionSolverManifold\n    var normal, point, separation;\n    switch (this.p_type) {\n    case Manifold.e_circles:\n      var pointA = Transform.mul(xfA, this.p_localPoint);\n      var pointB = Transform.mul(xfB, this.p_localPoints[0]);\n      normal = Vec2.sub(pointB, pointA);\n      normal.normalize();\n      point = Vec2.wAdd(0.5, pointA, 0.5, pointB);\n      separation = Vec2.dot(Vec2.sub(pointB, pointA), normal) - this.p_radiusA\n          - this.p_radiusB;\n      break;\n\n    case Manifold.e_faceA:\n      normal = Rot.mul(xfA.q, this.p_localNormal);\n      var planePoint = Transform.mul(xfA, this.p_localPoint);\n      var clipPoint = Transform.mul(xfB, this.p_localPoints[j]);\n      separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal)\n          - this.p_radiusA - this.p_radiusB;\n      point = clipPoint;\n      break;\n\n    case Manifold.e_faceB:\n      normal = Rot.mul(xfB.q, this.p_localNormal);\n      var planePoint = Transform.mul(xfB, this.p_localPoint);\n      var clipPoint = Transform.mul(xfA, this.p_localPoints[j]);\n      separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal)\n          - this.p_radiusA - this.p_radiusB;\n      point = clipPoint;\n\n      // Ensure normal points from A to B\n      normal.mul(-1);\n      break;\n    }\n\n    var rA = Vec2.sub(point, cA);\n    var rB = Vec2.sub(point, cB);\n\n    // Track max constraint error.\n    minSeparation = Math.min(minSeparation, separation);\n\n    var baumgarte = toi ? Settings.toiBaugarte : Settings.baumgarte;\n    var linearSlop = Settings.linearSlop;\n    var maxLinearCorrection = Settings.maxLinearCorrection;\n\n    // Prevent large corrections and allow slop.\n    var C = Math.clamp(baumgarte * (separation + linearSlop),\n        -maxLinearCorrection, 0.0);\n\n    // Compute the effective mass.\n    var rnA = Vec2.cross(rA, normal);\n    var rnB = Vec2.cross(rB, normal);\n    var K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n    // Compute normal impulse\n    var impulse = K > 0.0 ? -C / K : 0.0;\n\n    var P = Vec2.mul(impulse, normal);\n\n    cA.wSub(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n\n    cB.wAdd(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n\n  positionB.c.set(cB);\n  positionB.a = aB;\n\n  return minSeparation;\n}\n\n// TODO merge with ManifoldPoint\nfunction VelocityConstraintPoint() {\n  this.rA = Vec2.zero();\n  this.rB = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.normalMass = 0;\n  this.tangentMass = 0;\n  this.velocityBias = 0;\n}\n\nContact.prototype.initVelocityConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var radiusA = this.p_radiusA;\n  var radiusB = this.p_radiusB;\n  var manifold = this.getManifold();\n\n  var mA = this.v_invMassA;\n  var mB = this.v_invMassB;\n  var iA = this.v_invIA;\n  var iB = this.v_invIB;\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  _ASSERT && common.assert(manifold.pointCount > 0);\n\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  xfA.q.set(aA);\n  xfB.q.set(aB);\n  xfA.p.wSet(1, cA, -1, Rot.mul(xfA.q, localCenterA));\n  xfB.p.wSet(1, cB, -1, Rot.mul(xfB.q, localCenterB));\n\n  var worldManifold = manifold.getWorldManifold(null, xfA, radiusA, xfB, radiusB);\n\n  this.v_normal.set(worldManifold.normal);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    vcp.rA.set(Vec2.sub(worldManifold.points[j], cA));\n    vcp.rB.set(Vec2.sub(worldManifold.points[j], cB));\n\n    var rnA = Vec2.cross(vcp.rA, this.v_normal);\n    var rnB = Vec2.cross(vcp.rB, this.v_normal);\n\n    var kNormal = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n    vcp.normalMass = kNormal > 0.0 ? 1.0 / kNormal : 0.0;\n\n    var tangent = Vec2.cross(this.v_normal, 1.0);\n\n    var rtA = Vec2.cross(vcp.rA, tangent);\n    var rtB = Vec2.cross(vcp.rB, tangent);\n\n    var kTangent = mA + mB + iA * rtA * rtA + iB * rtB * rtB;\n\n    vcp.tangentMass = kTangent > 0.0 ? 1.0 / kTangent : 0.0;\n\n    // Setup a velocity bias for restitution.\n    vcp.velocityBias = 0.0;\n    var vRel = Vec2.dot(this.v_normal, vB)\n        + Vec2.dot(this.v_normal, Vec2.cross(wB, vcp.rB))\n        - Vec2.dot(this.v_normal, vA)\n        - Vec2.dot(this.v_normal, Vec2.cross(wA, vcp.rA));\n    if (vRel < -Settings.velocityThreshold) {\n      vcp.velocityBias = -this.v_restitution * vRel;\n    }\n  }\n\n  // If we have two points, then prepare the block solver.\n  if (this.v_pointCount == 2 && step.blockSolve) {\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var rn1A = Vec2.cross(vcp1.rA, this.v_normal);\n    var rn1B = Vec2.cross(vcp1.rB, this.v_normal);\n    var rn2A = Vec2.cross(vcp2.rA, this.v_normal);\n    var rn2B = Vec2.cross(vcp2.rB, this.v_normal);\n\n    var k11 = mA + mB + iA * rn1A * rn1A + iB * rn1B * rn1B;\n    var k22 = mA + mB + iA * rn2A * rn2A + iB * rn2B * rn2B;\n    var k12 = mA + mB + iA * rn1A * rn2A + iB * rn1B * rn2B;\n\n    // Ensure a reasonable condition number.\n    var k_maxConditionNumber = 1000.0;\n    if (k11 * k11 < k_maxConditionNumber * (k11 * k22 - k12 * k12)) {\n      // K is safe to invert.\n      this.v_K.ex.set(k11, k12);\n      this.v_K.ey.set(k12, k22);\n      this.v_normalMass.set(this.v_K.getInverse());\n    } else {\n      // The constraints are redundant, just use one.\n      // TODO_ERIN use deepest?\n      this.v_pointCount = 1;\n    }\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n\n  positionB.c.set(cB);\n  positionB.a = aB;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.warmStartConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    var P = Vec2.wAdd(vcp.normalImpulse, normal, vcp.tangentImpulse, tangent);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n    vA.wSub(mA, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n    vB.wAdd(mB, P);\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.storeConstraintImpulses = function(step) {\n  var manifold = this.m_manifold;\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    manifold.points[j].normalImpulse = this.v_points[j].normalImpulse;\n    manifold.points[j].tangentImpulse = this.v_points[j].tangentImpulse;\n  }\n};\n\nContact.prototype.solveVelocityConstraint = function(step) {\n  var bodyA = this.m_fixtureA.m_body;\n  var bodyB = this.m_fixtureB.m_body;\n\n  var velocityA = bodyA.c_velocity;\n  var positionA = bodyA.c_position;\n\n  var velocityB = bodyB.c_velocity;\n  var positionB = bodyB.c_position;\n\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n  var friction = this.v_friction;\n\n  _ASSERT && common.assert(this.v_pointCount == 1 || this.v_pointCount == 2);\n\n  // Solve tangent constraints first because non-penetration is more important\n  // than friction.\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    // Relative velocity at contact\n    var dv = Vec2.zero();\n    dv.wAdd(1, vB, 1, Vec2.cross(wB, vcp.rB));\n    dv.wSub(1, vA, 1, Vec2.cross(wA, vcp.rA));\n\n    // Compute tangent force\n    var vt = Vec2.dot(dv, tangent) - this.v_tangentSpeed;\n    var lambda = vcp.tangentMass * (-vt);\n\n    // Clamp the accumulated force\n    var maxFriction = friction * vcp.normalImpulse;\n    var newImpulse = Math.clamp(vcp.tangentImpulse + lambda, -maxFriction,\n        maxFriction);\n    lambda = newImpulse - vcp.tangentImpulse;\n    vcp.tangentImpulse = newImpulse;\n\n    // Apply contact impulse\n    var P = Vec2.mul(lambda, tangent);\n\n    vA.wSub(mA, P);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n\n    vB.wAdd(mB, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n  }\n\n  // Solve normal constraints\n  if (this.v_pointCount == 1 || step.blockSolve == false) {\n    for (var i = 0; i < this.v_pointCount; ++i) {\n      var vcp = this.v_points[i]; // VelocityConstraintPoint\n\n      // Relative velocity at contact\n      var dv = Vec2.zero();\n      dv.wAdd(1, vB, 1, Vec2.cross(wB, vcp.rB));\n      dv.wSub(1, vA, 1, Vec2.cross(wA, vcp.rA));\n\n      // Compute normal impulse\n      var vn = Vec2.dot(dv, normal);\n      var lambda = -vcp.normalMass * (vn - vcp.velocityBias);\n\n      // Clamp the accumulated impulse\n      var newImpulse = Math.max(vcp.normalImpulse + lambda, 0.0);\n      lambda = newImpulse - vcp.normalImpulse;\n      vcp.normalImpulse = newImpulse;\n\n      // Apply contact impulse\n      var P = Vec2.mul(lambda, normal);\n\n      vA.wSub(mA, P);\n      wA -= iA * Vec2.cross(vcp.rA, P);\n\n      vB.wAdd(mB, P);\n      wB += iB * Vec2.cross(vcp.rB, P);\n    }\n  } else {\n    // Block solver developed in collaboration with Dirk Gregorius (back in\n    // 01/07 on Box2D_Lite).\n    // Build the mini LCP for this contact patch\n    //\n    // vn = A * x + b, vn >= 0, , vn >= 0, x >= 0 and vn_i * x_i = 0 with i =\n    // 1..2\n    //\n    // A = J * W * JT and J = ( -n, -r1 x n, n, r2 x n )\n    // b = vn0 - velocityBias\n    //\n    // The system is solved using the \"Total enumeration method\" (s. Murty).\n    // The complementary constraint vn_i * x_i\n    // implies that we must have in any solution either vn_i = 0 or x_i = 0.\n    // So for the 2D contact problem the cases\n    // vn1 = 0 and vn2 = 0, x1 = 0 and x2 = 0, x1 = 0 and vn2 = 0, x2 = 0 and\n    // vn1 = 0 need to be tested. The first valid\n    // solution that satisfies the problem is chosen.\n    // \n    // In order to account of the accumulated impulse 'a' (because of the\n    // iterative nature of the solver which only requires\n    // that the accumulated impulse is clamped and not the incremental\n    // impulse) we change the impulse variable (x_i).\n    //\n    // Substitute:\n    // \n    // x = a + d\n    // \n    // a := old total impulse\n    // x := new total impulse\n    // d := incremental impulse\n    //\n    // For the current iteration we extend the formula for the incremental\n    // impulse\n    // to compute the new total impulse:\n    //\n    // vn = A * d + b\n    // = A * (x - a) + b\n    // = A * x + b - A * a\n    // = A * x + b'\n    // b' = b - A * a;\n\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var a = Vec2.neo(vcp1.normalImpulse, vcp2.normalImpulse);\n    _ASSERT && common.assert(a.x >= 0.0 && a.y >= 0.0);\n\n    // Relative velocity at contact\n    var dv1 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp1.rB)).sub(vA).sub(Vec2.cross(wA, vcp1.rA));\n    var dv2 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp2.rB)).sub(vA).sub(Vec2.cross(wA, vcp2.rA));\n\n    // Compute normal velocity\n    var vn1 = Vec2.dot(dv1, normal);\n    var vn2 = Vec2.dot(dv2, normal);\n\n    var b = Vec2.neo(vn1 - vcp1.velocityBias, vn2 - vcp2.velocityBias);\n\n    // Compute b'\n    b.sub(Mat22.mul(this.v_K, a));\n\n    var k_errorTol = 1e-3;\n    // NOT_USED(k_errorTol);\n\n    for (;;) {\n      //\n      // Case 1: vn = 0\n      //\n      // 0 = A * x + b'\n      //\n      // Solve for x:\n      //\n      // x = - inv(A) * b'\n      //\n      var x = Vec2.neg(Mat22.mul(this.v_normalMass, b));\n\n      if (x.x >= 0.0 && x.y >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n\n        vA.wSub(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.wAdd(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          dv1 = vB + Vec2.cross(wB, vcp1.rB) - vA - Vec2.cross(wA, vcp1.rA);\n          dv2 = vB + Vec2.cross(wB, vcp2.rB) - vA - Vec2.cross(wA, vcp2.rA);\n\n          // Compute normal velocity\n          vn1 = Dot(dv1, normal);\n          vn2 = Dot(dv2, normal);\n\n          _ASSERT && common.assert(Abs(vn1 - vcp1.velocityBias) < k_errorTol);\n          _ASSERT && common.assert(Abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 2: vn1 = 0 and x2 = 0\n      //\n      // 0 = a11 * x1 + a12 * 0 + b1'\n      // vn2 = a21 * x1 + a22 * 0 + b2'\n      //\n      x.x = -vcp1.normalMass * b.x;\n      x.y = 0.0;\n      vn1 = 0.0;\n      vn2 = this.v_K.ex.y * x.x + b.y;\n\n      if (x.x >= 0.0 && vn2 >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.wSub(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.wAdd(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv1B = Vec2.add(vB, Vec2.cross(wB, vcp1.rB));\n          var dv1A = Vec2.add(vA, Vec2.cross(wA, vcp1.rA));\n          var dv1 = Vec2.sub(dv1B, dv1A);\n\n          // Compute normal velocity\n          vn1 = Vec2.dot(dv1, normal);\n\n          _ASSERT && common.assert(Math.abs(vn1 - vcp1.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 3: vn2 = 0 and x1 = 0\n      //\n      // vn1 = a11 * 0 + a12 * x2 + b1'\n      // 0 = a21 * 0 + a22 * x2 + b2'\n      //\n      x.x = 0.0;\n      x.y = -vcp2.normalMass * b.y;\n      vn1 = this.v_K.ey.x * x.y + b.x;\n      vn2 = 0.0;\n\n      if (x.y >= 0.0 && vn1 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.wSub(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.wAdd(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv2B = Vec2.add(vB, Vec2.cross(wB, vcp2.rB));\n          var dv2A = Vec2.add(vA, Vec2.cross(wA, vcp2.rA));\n          var dv1 = Vec2.sub(dv2B, dv2A);\n\n          // Compute normal velocity\n          vn2 = Vec2.dot(dv2, normal);\n\n          _ASSERT && common.assert(Math.abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 4: x1 = 0 and x2 = 0\n      // \n      // vn1 = b1\n      // vn2 = b2;\n      //\n      x.x = 0.0;\n      x.y = 0.0;\n      vn1 = b.x;\n      vn2 = b.y;\n\n      if (vn1 >= 0.0 && vn2 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.wSub(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.wAdd(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        break;\n      }\n\n      // No solution, give up. This is hit sometimes, but it doesn't seem to\n      // matter.\n      break;\n    }\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\n/**\n * Friction mixing law. The idea is to allow either fixture to drive the\n * restitution to zero. For example, anything slides on ice.\n */\nfunction mixFriction(friction1, friction2) {\n  return Math.sqrt(friction1 * friction2);\n}\n\n/**\n * Restitution mixing law. The idea is allow for anything to bounce off an\n * inelastic surface. For example, a superball bounces on anything.\n */\nfunction mixRestitution(restitution1, restitution2) {\n  return restitution1 > restitution2 ? restitution1 : restitution2;\n}\n\nvar s_registers = [];\n\n/**\n * @param fn function(fixtureA, indexA, fixtureB, indexB) Contact\n */\nContact.addType = function(type1, type2, callback) {\n\n  s_registers[type1] = s_registers[type1] || {};\n  s_registers[type1][type2] = callback;\n}\n\nContact.create = function(fixtureA, indexA, fixtureB, indexB) {\n  var typeA = fixtureA.getType(); // Shape.Type\n  var typeB = fixtureB.getType(); // Shape.Type\n\n  // TODO: pool contacts\n  var contact, evaluateFcn;\n  if (evaluateFcn = s_registers[typeA] && s_registers[typeA][typeB]) {\n    contact = new Contact(fixtureA, indexA, fixtureB, indexB, evaluateFcn);\n  } else if (evaluateFcn = s_registers[typeB] && s_registers[typeB][typeA]) {\n    contact = new Contact(fixtureB, indexB, fixtureA, indexA, evaluateFcn);\n  } else {\n    return null;\n  }\n\n  // Contact creation may swap fixtures.\n  fixtureA = contact.getFixtureA();\n  fixtureB = contact.getFixtureB();\n  indexA = contact.getChildIndexA();\n  indexB = contact.getChildIndexB();\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  // Connect to body A\n  contact.m_nodeA.contact = contact;\n  contact.m_nodeA.other = bodyB;\n\n  contact.m_nodeA.prev = null;\n  contact.m_nodeA.next = bodyA.m_contactList;\n  if (bodyA.m_contactList != null) {\n    bodyA.m_contactList.prev = contact.m_nodeA;\n  }\n  bodyA.m_contactList = contact.m_nodeA;\n\n  // Connect to body B\n  contact.m_nodeB.contact = contact;\n  contact.m_nodeB.other = bodyA;\n\n  contact.m_nodeB.prev = null;\n  contact.m_nodeB.next = bodyB.m_contactList;\n  if (bodyB.m_contactList != null) {\n    bodyB.m_contactList.prev = contact.m_nodeB;\n  }\n  bodyB.m_contactList = contact.m_nodeB;\n\n  // Wake up the bodies\n  if (fixtureA.isSensor() == false && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  return contact;\n}\n\nContact.destroy = function(contact, listener) {\n  var fixtureA = contact.m_fixtureA;\n  var fixtureB = contact.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  if (contact.isTouching()) {\n    listener.endContact(contact);\n  }\n\n  // Remove from body 1\n  if (contact.m_nodeA.prev) {\n    contact.m_nodeA.prev.next = contact.m_nodeA.next;\n  }\n\n  if (contact.m_nodeA.next) {\n    contact.m_nodeA.next.prev = contact.m_nodeA.prev;\n  }\n\n  if (contact.m_nodeA == bodyA.m_contactList) {\n    bodyA.m_contactList = contact.m_nodeA.next;\n  }\n\n  // Remove from body 2\n  if (contact.m_nodeB.prev) {\n    contact.m_nodeB.prev.next = contact.m_nodeB.next;\n  }\n\n  if (contact.m_nodeB.next) {\n    contact.m_nodeB.next.prev = contact.m_nodeB.prev;\n  }\n\n  if (contact.m_nodeB == bodyB.m_contactList) {\n    bodyB.m_contactList = contact.m_nodeB.next;\n  }\n\n  if (contact.m_manifold.pointCount > 0 && fixtureA.isSensor() == false\n      && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  var typeA = fixtureA.getType(); // Shape.Type\n  var typeB = fixtureB.getType(); // Shape.Type\n\n  var destroyFcn = s_registers[typeA][typeB].destroyFcn;\n  if (typeof destroyFcn === 'function') {\n    destroyFcn(contact);\n  }\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('./util/common');\n\nvar Vec2 = require('./common/Vec2');\nvar Transform = require('./common/Transform');\nvar Math = require('./common/Math');\nvar Rot = require('./common/Rot');\n\nmodule.exports = Manifold;\nmodule.exports.clipSegmentToLine = clipSegmentToLine;\nmodule.exports.clipVertex = ClipVertex;\nmodule.exports.getPointStates = getPointStates;\nmodule.exports.PointState = PointState;\n\n// Manifold Type\nManifold.e_circles = 0;\nManifold.e_faceA = 1;\nManifold.e_faceB = 2;\n\n// ContactFeature Type\nManifold.e_vertex = 0;\nManifold.e_face = 1;\n\n/**\n * A manifold for two touching convex shapes. Manifolds are created in `evaluate`\n * method of Contact subclasses.\n * \n * Supported manifold types are e_faceA or e_faceB for clip point versus plane\n * with radius and e_circles point versus point with radius.\n * \n * We store contacts in this way so that position correction can account for\n * movement, which is critical for continuous physics. All contact scenarios\n * must be expressed in one of these types. This structure is stored across time\n * steps, so we keep it small.\n * \n * @prop type e_circle, e_faceA, e_faceB\n * @prop localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleA <br>\n *       e_faceA: the center of faceA <br>\n *       e_faceB: the center of faceB\n * @prop localNormal Usage depends on manifold type:<br>\n *       e_circles: not used <br>\n *       e_faceA: the normal on polygonA <br>\n *       e_faceB: the normal on polygonB\n * @prop points The points of contact {ManifoldPoint[]}\n * @prop pointCount The number of manifold points\n */\nfunction Manifold() {\n  this.type;\n  this.localNormal = Vec2.zero();\n  this.localPoint = Vec2.zero();\n  this.points = [ new ManifoldPoint(), new ManifoldPoint() ];\n  this.pointCount = 0;\n};\n\n/**\n * A manifold point is a contact point belonging to a contact manifold. It holds\n * details related to the geometry and dynamics of the contact points.\n * \n * This structure is stored across time steps, so we keep it small.\n * \n * Note: impulses are used for internal caching and may not provide reliable\n * contact forces, especially for high speed collisions.\n * \n * @prop {Vec2} localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleB<br>\n *       e_faceA: the local center of cirlceB or the clip point of polygonB<br>\n *       e_faceB: the clip point of polygonA.\n * @prop normalImpulse The non-penetration impulse\n * @prop tangentImpulse The friction impulse\n * @prop {ContactID} id Uniquely identifies a contact point between two shapes\n *       to facilatate warm starting\n */\nfunction ManifoldPoint() {\n  this.localPoint = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.id = new ContactID();\n};\n\n/**\n * Contact ids to facilitate warm starting.\n * \n * @prop {ContactFeature} cf\n * @prop key Used to quickly compare contact ids.\n * \n */\nfunction ContactID() {\n  this.cf = new ContactFeature();\n  var key = '';\n  Object.defineProperty(this, 'key', {\n    get: function() {\n      return this.cf.indexA + this.cf.indexB * 4 + this.cf.typeA * 16 + this.cf.typeB * 64;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  // this.key;\n};\n\nContactID.prototype.set = function(o) {\n  // this.key = o.key;\n  this.cf.set(o.cf);\n};\n\n/**\n * The features that intersect to form the contact point.\n * \n * @prop indexA Feature index on shapeA\n * @prop indexB Feature index on shapeB\n * @prop typeA The feature type on shapeA\n * @prop typeB The feature type on shapeB\n */\nfunction ContactFeature() {\n  this.indexA;\n  this.indexB;\n  this.typeA;\n  this.typeB;\n};\n\nContactFeature.prototype.set = function(o) {\n  this.indexA = o.indexA;\n  this.indexB = o.indexB;\n  this.typeA = o.typeA;\n  this.typeB = o.typeB;\n};\n\n/**\n * This is used to compute the current state of a contact manifold.\n * \n * @prop normal World vector pointing from A to B\n * @prop points World contact point (point of intersection)\n * @prop separations A negative value indicates overlap, in meters\n */\nfunction WorldManifold() {\n  this.normal;\n  this.points = []; // [maxManifoldPoints]\n  this.separations = []; // float[maxManifoldPoints]\n};\n\n/**\n * Evaluate the manifold with supplied transforms. This assumes modest motion\n * from the original state. This does not change the point count, impulses, etc.\n * The radii must come from the shapes that generated the manifold.\n * \n * @param {WorldManifold} [wm]\n */\nManifold.prototype.getWorldManifold = function(wm, xfA, radiusA, xfB, radiusB) {\n  if (this.pointCount == 0) {\n    return;\n  }\n\n  wm = wm || new WorldManifold();\n\n  var normal = wm.normal;\n  var points = wm.points;\n  var separations = wm.separations;\n\n  // TODO: improve\n  switch (this.type) {\n  case Manifold.e_circles:\n    normal = Vec2.neo(1.0, 0.0);\n    var pointA = Transform.mul(xfA, this.localPoint);\n    var pointB = Transform.mul(xfB, this.points[0].localPoint);\n    var dist = Vec2.sub(pointB, pointA);\n    if (Vec2.lengthSquared(dist) > Math.EPSILON * Math.EPSILON) {\n      normal.set(dist);\n      normal.normalize();\n    }\n    points[0] = Vec2.mid(pointA, pointB);\n    separations[0] = -radiusB - radiusA;\n    points.length = 1;\n    separations.length = 1;\n    break;\n\n  case Manifold.e_faceA:\n    normal = Rot.mul(xfA.q, this.localNormal);\n    var planePoint = Transform.mul(xfA, this.localPoint);\n\n    for (var i = 0; i < this.pointCount; ++i) {\n      var clipPoint = Transform.mul(xfB, this.points[i].localPoint);\n      var cA = Vec2.clone(clipPoint).wAdd(radiusA - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n      var cB = Vec2.clone(clipPoint).wSub(radiusB, normal);\n      points[i] = Vec2.mid(cA, cB);\n      separations[i] = Vec2.dot(Vec2.sub(cB, cA), normal);\n    }\n    points.length = this.pointCount;\n    separations.length = this.pointCount;\n    break;\n\n  case Manifold.e_faceB:\n    normal = Rot.mul(xfB.q, this.localNormal);\n    var planePoint = Transform.mul(xfB, this.localPoint);\n\n    for (var i = 0; i < this.pointCount; ++i) {\n      var clipPoint = Transform.mul(xfA, this.points[i].localPoint);\n      var cB = Vec2.zero().wSet(1, clipPoint, radiusB - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n      var cA = Vec2.zero().wSet(1, clipPoint, -radiusA, normal);\n      points[i] = Vec2.mid(cA, cB);\n      separations[i] = Vec2.dot(Vec2.sub(cA, cB), normal);\n    }\n    points.length = this.pointCount;\n    separations.length = this.pointCount;\n    // Ensure normal points from A to B.\n    normal.mul(-1);\n    break;\n  }\n\n  wm.normal = normal;\n  wm.points = points;\n  wm.separations = separations;\n  return wm;\n}\n\n/**\n * This is used for determining the state of contact points.\n * \n * @prop {0} nullState Point does not exist\n * @prop {1} addState Point was added in the update\n * @prop {2} persistState Point persisted across the update\n * @prop {3} removeState Point was removed in the update\n */\nvar PointState = {\n  // TODO: use constants\n  nullState : 0,\n  addState : 1,\n  persistState : 2,\n  removeState : 3\n};\n\n/**\n * Compute the point states given two manifolds. The states pertain to the\n * transition from manifold1 to manifold2. So state1 is either persist or remove\n * while state2 is either add or persist.\n * \n * @param {PointState[Settings.maxManifoldPoints]} state1\n * @param {PointState[Settings.maxManifoldPoints]} state2\n */\nfunction getPointStates(state1, state2, manifold1, manifold2) {\n  // for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n  // state1[i] = PointState.nullState;\n  // state2[i] = PointState.nullState;\n  // }\n\n  // Detect persists and removes.\n  for (var i = 0; i < manifold1.pointCount; ++i) {\n    var id = manifold1.points[i].id;// ContactID\n\n    state1[i] = PointState.removeState;\n\n    for (var j = 0; j < manifold2.pointCount; ++j) {\n      if (manifold2.points[j].id.key == id.key) {\n        state1[i] = PointState.persistState;\n        break;\n      }\n    }\n  }\n\n  // Detect persists and adds.\n  for (var i = 0; i < manifold2.pointCount; ++i) {\n    var id = manifold2.points[i].id;// ContactID\n\n    state2[i] = PointState.addState;\n\n    for (var j = 0; j < manifold1.pointCount; ++j) {\n      if (manifold1.points[j].id.key == id.key) {\n        state2[i] = PointState.persistState;\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Used for computing contact manifolds.\n * \n * @prop {Vec2} v\n * @prop {ContactID} id\n */\nfunction ClipVertex() {\n  this.v = Vec2.zero();\n  this.id = new ContactID();\n};\n\nClipVertex.prototype.set = function(o) {\n  this.v.set(o.v);\n  this.id.set(o.id);\n};\n\n/**\n * Clipping for contact manifolds. Sutherland-Hodgman clipping.\n * \n * @param {ClipVertex[2]} vOut\n * @param {ClipVertex[2]} vIn\n */\nfunction clipSegmentToLine(vOut, vIn, normal, offset, vertexIndexA) {\n  // Start with no output points\n  var numOut = 0;\n\n  // Calculate the distance of end points to the line\n  var distance0 = Vec2.dot(normal, vIn[0].v) - offset;\n  var distance1 = Vec2.dot(normal, vIn[1].v) - offset;\n\n  // If the points are behind the plane\n  if (distance0 <= 0.0)\n    vOut[numOut++].set(vIn[0]);\n  if (distance1 <= 0.0)\n    vOut[numOut++].set(vIn[1]);\n\n  // If the points are on different sides of the plane\n  if (distance0 * distance1 < 0.0) {\n    // Find intersection point of edge and plane\n    var interp = distance0 / (distance0 - distance1);\n    vOut[numOut].v.wSet(1 - interp, vIn[0].v, interp, vIn[1].v);\n\n    // VertexA is hitting edgeB.\n    vOut[numOut].id.cf.indexA = vertexIndexA;\n    vOut[numOut].id.cf.indexB = vIn[0].id.cf.indexB;\n    vOut[numOut].id.cf.typeA = Manifold.e_vertex;\n    vOut[numOut].id.cf.typeB = Manifold.e_face;\n    ++numOut;\n  }\n\n  return numOut;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PolygonShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\n\nPolygonShape._super = Shape;\nPolygonShape.prototype = create(PolygonShape._super.prototype);\n\nPolygonShape.TYPE = 'polygon';\n\n/**\n * A convex polygon. It is assumed that the interior of the polygon is to the\n * left of each edge. Polygons have a maximum number of vertices equal to\n * Settings.maxPolygonVertices. In most cases you should not need many vertices\n * for a convex polygon. extends Shape\n */\nfunction PolygonShape(vertices) {\n  if (!(this instanceof PolygonShape)) {\n    return new PolygonShape(vertices);\n  }\n\n  PolygonShape._super.call(this);\n\n  this.m_type = PolygonShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_centroid = Vec2.zero();\n  this.m_vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_normals = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_count = 0;\n\n  if (vertices && vertices.length) {\n    this._set(vertices);\n  }\n}\n\nPolygonShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\nPolygonShape.prototype._clone = function() {\n  var clone = new PolygonShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_count = this.m_count;\n  clone.m_centroid.set(this.m_centroid);\n  for (var i = 0; i < this.m_count; i++) {\n    clone.m_vertices.push(this.m_vertices[i].clone());\n  }\n  for (var i = 0; i < this.m_normals.length; i++) {\n    clone.m_normals.push(this.m_normals[i].clone());\n  }\n  return clone;\n}\n\nPolygonShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nfunction ComputeCentroid(vs, count) {\n  _ASSERT && common.assert(count >= 3);\n\n  var c = Vec2.zero();\n  var area = 0.0;\n\n  // pRef is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var pRef = Vec2.zero();\n  if (false) {\n    // This code would put the reference point inside the polygon.\n    for (var i = 0; i < count; ++i) {\n      pRef.add(vs[i]);\n    }\n    pRef.mul(1.0 / count);\n  }\n\n  var inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < count; ++i) {\n    // Triangle vertices.\n    var p1 = pRef;\n    var p2 = vs[i];\n    var p3 = i + 1 < count ? vs[i + 1] : vs[0];\n\n    var e1 = Vec2.sub(p2, p1);\n    var e2 = Vec2.sub(p3, p1);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    c.wAdd(triangleArea * inv3, p1);\n    c.wAdd(triangleArea * inv3, p2);\n    c.wAdd(triangleArea * inv3, p3);\n  }\n\n  // Centroid\n  _ASSERT && common.assert(area > Math.EPSILON);\n  c.mul(1.0 / area);\n  return c;\n}\n\n/**\n * @private\n *\n * Create a convex hull from the given array of local points. The count must be\n * in the range [3, Settings.maxPolygonVertices].\n * \n * Warning: the points may be re-ordered, even if they form a convex polygon\n * Warning: collinear points are handled but not removed. Collinear points may\n * lead to poor stacking behavior.\n */\nPolygonShape.prototype._set = function(vertices) {\n  _ASSERT && common.assert(3 <= vertices.length && vertices.length <= Settings.maxPolygonVertices);\n  if (vertices.length < 3) {\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  var n = Math.min(vertices.length, Settings.maxPolygonVertices);\n\n  // Perform welding and copy vertices into local buffer.\n  var ps = [];// [Settings.maxPolygonVertices];\n  var tempCount = 0;\n  for (var i = 0; i < n; ++i) {\n    var v = vertices[i];\n\n    var unique = true;\n    for (var j = 0; j < tempCount; ++j) {\n      if (Vec2.distanceSquared(v, ps[j]) < 0.25 * Settings.linearSlopSquared) {\n        unique = false;\n        break;\n      }\n    }\n\n    if (unique) {\n      ps[tempCount++] = v;\n    }\n  }\n\n  n = tempCount;\n  if (n < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  // Create the convex hull using the Gift wrapping algorithm\n  // http://en.wikipedia.org/wiki/Gift_wrapping_algorithm\n\n  // Find the right most point on the hull\n  var i0 = 0;\n  var x0 = ps[0].x;\n  for (var i = 1; i < n; ++i) {\n    var x = ps[i].x;\n    if (x > x0 || (x == x0 && ps[i].y < ps[i0].y)) {\n      i0 = i;\n      x0 = x;\n    }\n  }\n\n  var hull = [];// [Settings.maxPolygonVertices];\n  var m = 0;\n  var ih = i0;\n\n  for (;;) {\n    hull[m] = ih;\n\n    var ie = 0;\n    for (var j = 1; j < n; ++j) {\n      if (ie == ih) {\n        ie = j;\n        continue;\n      }\n\n      var r = Vec2.sub(ps[ie], ps[hull[m]]);\n      var v = Vec2.sub(ps[j], ps[hull[m]]);\n      var c = Vec2.cross(r, v);\n      if (c < 0.0) {\n        ie = j;\n      }\n\n      // Collinearity check\n      if (c == 0.0 && v.lengthSquared() > r.lengthSquared()) {\n        ie = j;\n      }\n    }\n\n    ++m;\n    ih = ie;\n\n    if (ie == i0) {\n      break;\n    }\n  }\n\n  if (m < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  this.m_count = m;\n\n  // Copy vertices.\n  for (var i = 0; i < m; ++i) {\n    this.m_vertices[i] = ps[hull[i]];\n  }\n\n  // Compute normals. Ensure the edges have non-zero length.\n  for (var i = 0; i < m; ++i) {\n    var i1 = i;\n    var i2 = i + 1 < m ? i + 1 : 0;\n    var edge = Vec2.sub(this.m_vertices[i2], this.m_vertices[i1]);\n    _ASSERT && common.assert(edge.lengthSquared() > Math.EPSILON * Math.EPSILON);\n    this.m_normals[i] = Vec2.cross(edge, 1.0);\n    this.m_normals[i].normalize();\n  }\n\n  // Compute the polygon centroid.\n  this.m_centroid = ComputeCentroid(this.m_vertices, m);\n}\n\n/**\n * @private\n */\nPolygonShape.prototype._setAsBox = function(hx, hy, center, angle) {\n  this.m_vertices[0] = Vec2.neo(-hx, -hy);\n  this.m_vertices[1] = Vec2.neo(hx, -hy);\n  this.m_vertices[2] = Vec2.neo(hx, hy);\n  this.m_vertices[3] = Vec2.neo(-hx, hy);\n\n  this.m_normals[0] = Vec2.neo(0.0, -1.0);\n  this.m_normals[1] = Vec2.neo(1.0, 0.0);\n  this.m_normals[2] = Vec2.neo(0.0, 1.0);\n  this.m_normals[3] = Vec2.neo(-1.0, 0.0);\n\n  this.m_count = 4;\n\n  if (Vec2.isValid(center)) {\n    angle = angle || 0;\n\n    this.m_centroid.set(center);\n\n    var xf = Transform.identity();\n    xf.p.set(center);\n    xf.q.set(angle);\n\n    // Transform vertices and normals.\n    for (var i = 0; i < this.m_count; ++i) {\n      this.m_vertices[i] = Transform.mul(xf, this.m_vertices[i]);\n      this.m_normals[i] = Rot.mul(xf.q, this.m_normals[i]);\n    }\n  }\n}\n\nPolygonShape.prototype.testPoint = function(xf, p) {\n  var pLocal = Rot.mulT(xf.q, Vec2.sub(p, xf.p));\n\n  for (var i = 0; i < this.m_count; ++i) {\n    var dot = Vec2.dot(this.m_normals[i], Vec2.sub(pLocal, this.m_vertices[i]));\n    if (dot > 0.0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  // Put the ray into the polygon's frame of reference.\n  var p1 = Rot.mulT(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulT(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var lower = 0.0;\n  var upper = input.maxFraction;\n\n  var index = -1;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // p = p1 + a * d\n    // dot(normal, p - v) = 0\n    // dot(normal, p1 - v) + a * dot(normal, d) = 0\n    var numerator = Vec2.dot(this.m_normals[i], Vec2.sub(this.m_vertices[i], p1));\n    var denominator = Vec2.dot(this.m_normals[i], d);\n\n    if (denominator == 0.0) {\n      if (numerator < 0.0) {\n        return false;\n      }\n    } else {\n      // Note: we want this predicate without division:\n      // lower < numerator / denominator, where denominator < 0\n      // Since denominator < 0, we have to flip the inequality:\n      // lower < numerator / denominator <==> denominator * lower > numerator.\n      if (denominator < 0.0 && numerator < lower * denominator) {\n        // Increase lower.\n        // The segment enters this half-space.\n        lower = numerator / denominator;\n        index = i;\n      } else if (denominator > 0.0 && numerator < upper * denominator) {\n        // Decrease upper.\n        // The segment exits this half-space.\n        upper = numerator / denominator;\n      }\n    }\n\n    // The use of epsilon here causes the assert on lower to trip\n    // in some cases. Apparently the use of epsilon was to make edge\n    // shapes work, but now those are handled separately.\n    // if (upper < lower - Math.EPSILON)\n    if (upper < lower) {\n      return false;\n    }\n  }\n\n  _ASSERT && common.assert(0.0 <= lower && lower <= input.maxFraction);\n\n  if (index >= 0) {\n    output.fraction = lower;\n    output.normal = Rot.mul(xf.q, this.m_normals[index]);\n    return true;\n  }\n\n  return false;\n};\n\nPolygonShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var minX = Infinity, minY = Infinity;\n  var maxX = -Infinity, maxY = -Infinity;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = Transform.mul(xf, this.m_vertices[i]);\n    minX = Math.min(minX, v.x);\n    maxX = Math.max(maxX, v.x);\n    minY = Math.min(minY, v.y);\n    maxY = Math.max(maxY, v.y);\n  }\n\n  aabb.lowerBound.set(minX, minY);\n  aabb.upperBound.set(maxX, maxY);\n  aabb.extend(this.m_radius);\n}\n\nPolygonShape.prototype.computeMass = function(massData, density) {\n  // Polygon mass, centroid, and inertia.\n  // Let rho be the polygon density in mass per unit area.\n  // Then:\n  // mass = rho * int(dA)\n  // centroid.x = (1/mass) * rho * int(x * dA)\n  // centroid.y = (1/mass) * rho * int(y * dA)\n  // I = rho * int((x*x + y*y) * dA)\n  //\n  // We can compute these integrals by summing all the integrals\n  // for each triangle of the polygon. To evaluate the integral\n  // for a single triangle, we make a change of variables to\n  // the (u,v) coordinates of the triangle:\n  // x = x0 + e1x * u + e2x * v\n  // y = y0 + e1y * u + e2y * v\n  // where 0 <= u && 0 <= v && u + v <= 1.\n  //\n  // We integrate u from [0,1-v] and then v from [0,1].\n  // We also need to use the Jacobian of the transformation:\n  // D = cross(e1, e2)\n  //\n  // Simplification: triangle centroid = (1/3) * (p1 + p2 + p3)\n  //\n  // The rest of the derivation is handled by computer algebra.\n\n  _ASSERT && common.assert(this.m_count >= 3);\n\n  var center = Vec2.zero();\n  var area = 0.0;\n  var I = 0.0;\n\n  // s is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var s = Vec2.zero();\n\n  // This code would put the reference point inside the polygon.\n  for (var i = 0; i < this.m_count; ++i) {\n    s.add(this.m_vertices[i]);\n  }\n  s.mul(1.0 / this.m_count);\n\n  var k_inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // Triangle vertices.\n    var e1 = Vec2.sub(this.m_vertices[i], s);\n    var e2 = i + 1 < this.m_count ? Vec2.sub(this.m_vertices[i + 1], s) : Vec2\n        .sub(this.m_vertices[0], s);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    center.wAdd(triangleArea * k_inv3, e1, triangleArea * k_inv3, e2);\n\n    var ex1 = e1.x;\n    var ey1 = e1.y;\n    var ex2 = e2.x;\n    var ey2 = e2.y;\n\n    var intx2 = ex1 * ex1 + ex2 * ex1 + ex2 * ex2;\n    var inty2 = ey1 * ey1 + ey2 * ey1 + ey2 * ey2;\n\n    I += (0.25 * k_inv3 * D) * (intx2 + inty2);\n  }\n\n  // Total mass\n  massData.mass = density * area;\n\n  // Center of mass\n  _ASSERT && common.assert(area > Math.EPSILON);\n  center.mul(1.0 / area);\n  massData.center.wSet(1, center, 1, s);\n\n  // Inertia tensor relative to the local origin (point s).\n  massData.I = density * I;\n\n  // Shift to center of mass then to original body origin.\n  massData.I += massData.mass\n      * (Vec2.dot(massData.center, massData.center) - Vec2.dot(center, center));\n}\n\n// Validate convexity. This is a very time consuming operation.\n// @returns true if valid\nPolygonShape.prototype.validate = function() {\n  for (var i = 0; i < this.m_count; ++i) {\n    var i1 = i;\n    var i2 = i < this.m_count - 1 ? i1 + 1 : 0;\n    var p = this.m_vertices[i1];\n    var e = Vec2.sub(this.m_vertices[i2], p);\n\n    for (var j = 0; j < this.m_count; ++j) {\n      if (j == i1 || j == i2) {\n        continue;\n      }\n\n      var v = Vec2.sub(this.m_vertices[j], p);\n      var c = Vec2.cross(e, v);\n      if (c < 0.0) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices = this.m_vertices;\n  proxy.m_count = this.m_count;\n  proxy.m_radius = this.m_radius;\n};","import {vec3, vec4} from 'gl-matrix';\n\nconst MouseDrawingEvents = [\n    'vertexadded',\n    'lineadded',\n    'drawingstart',\n    'drawingend'\n];\n\nclass MouseDrawing {\n\n    constructor(options) {\n        this.game = options.game;\n        this.connected = options.connected || true;\n        this.endKeys = options.endKeys || ['Shift'];\n\n        if (!this.endKeys.length) {\n            this.endKeys = [this.endKeys];\n        }\n\n        this.listeners = MouseDrawingEvents.reduce((acc, evt) => {\n            acc[evt] = [];\n            return acc;\n        }, {});\n\n        if (options.listeners) {\n            Object.keys(options.listeners).forEach(key => this.addListener(key, options.listeners[key]));\n        }\n\n        this._lineData = new Float32Array(2 * 2 * 1024);\n        this.currentLineIdx = 0;\n        this.available = 0;\n        this.isDrawing = false;\n\n        this.game.canvas.addEventListener('mousemove', (evt) => {\n            this.update(this.convertMouseCoordinates({x: evt.offsetX, y: evt.offsetY}));\n        });\n\n        this.game.canvas.addEventListener('mousedown', (evt) => {\n            if (!this.isDrawing) {\n                this.startLine(this.convertMouseCoordinates({x: evt.offsetX, y: evt.offsetY}));\n            } else {\n                this.endLine(this.convertMouseCoordinates({x: evt.offsetX, y: evt.offsetY}));\n            }\n        });\n\n        window.addEventListener('keydown', (evt) => {\n            if (this.endKeys.includes(evt.key) && this.isDrawing) {\n                this.endDrawing(evt);\n            }\n        });\n    }\n\n    addListener(evt, listener) {\n        if (!this.listeners[evt]) {\n            this.listeners[evt] = [];\n        }\n        this.listeners[evt].push(listener);\n    }\n\n    notifyListeners(evt, ...args) {\n        this.listeners[evt].forEach(listener => listener(...args));\n    }\n\n    convertMouseCoordinates(coord) {\n        const mvec = vec4.fromValues(coord.x, coord.y, 0, 1);\n\n        vec4.transformMat4(mvec, mvec, this.game.canvasToWorld);\n\n        return {x: mvec[0], y: mvec[1]};\n    }\n\n    inBounds(coord) {\n        return true;\n    }\n\n    startLine(coord) {\n        if (this.inBounds(coord) && !this.isDrawing) {\n            this.isDrawing = true;\n            this.available++;\n\n            this._lineData[this.lineIndex + 0] = coord.x;\n            this._lineData[this.lineIndex + 1] = coord.y;\n\n            this.update(coord);\n\n            this.notifyListeners('drawingstart', {});\n            this.notifyListeners('vertexadded', this.currentLineStart);\n        }\n    }\n\n    get lineIndex() {\n        return this.currentLineIdx * 4;\n    }\n\n    get lineData() {\n        return this._lineData.slice(0, this.available * 4);\n    }\n\n    get currentLine() {\n        return {\n            start: this.currentLineStart,\n            end: this.currentLineEnd\n        }\n    }\n\n    get currentLineStart() {\n        return {\n            x: this._lineData[this.lineIndex],\n            y: this._lineData[this.lineIndex + 1]\n        };\n    }\n\n    get currentLineEnd() {\n        return {\n            x: this._lineData[this.lineIndex + 2],\n            y: this._lineData[this.lineIndex + 3]\n        }\n    }\n\n    endLine(coord) {\n        if (this.isDrawing) {\n            this._lineData[this.lineIndex + 2] = coord.x;\n            this._lineData[this.lineIndex + 3] = coord.y;\n\n            this.notifyListeners('lineadded', this.currentLine);\n            this.notifyListeners('vertexadded', this.currentLineEnd);\n\n            this.currentLineIdx++;\n\n            if (!this.connected) {\n                this.isDrawing = false;\n            } else {\n                this.available++;\n\n                this._lineData[this.lineIndex + 0] = coord.x;\n                this._lineData[this.lineIndex + 1] = coord.y;\n\n                this.update(coord);\n            }\n        }\n    }\n\n    endDrawing(evt) {\n        this.isDrawing = false;\n\n        this.notifyListeners('drawingend', evt);\n    }\n\n    update(coord) {\n        if (this.isDrawing) {\n            this._lineData[this.lineIndex + 2] = coord.x;\n            this._lineData[this.lineIndex + 3] = coord.y;\n        }\n    }\n\n    clear() {\n        this.available = 0;\n        this.currentLineIdx = 0;\n        this._lineData.fill(0);\n    }\n}\n\nclass Keyboard {\n    constructor(options) {\n        this.keys = new Map();\n        document.addEventListener('keydown', this.keydown.bind(this));\n        document.addEventListener('keyup', this.keyup.bind(this))\n    }\n\n    keydown(evt) {\n        this.keys.set(evt.key, true);\n\n        if (evt.key.startsWith('Arrow')) {\n            evt.preventDefault();\n        }\n    }\n\n    keyup(evt) {\n        this.keys.delete(evt.key);\n    }\n\n    isdown(key) {\n        return this.keys.get(key);\n    }\n}\n\nclass CameraPan {\n    constructor(app) {\n        this.pandir = [0, 0];\n        this.speed = 200;\n        this.keyboard = new Keyboard();\n\n        let loopStartTime = null;\n\n        const loop = now => {\n            if (!loopStartTime) {\n                loopStartTime = now;\n            }\n            let delta = (now - loopStartTime) / 1000;\n            loopStartTime = now;\n\n            this.pandir = [\n                this.keyboard.isdown('ArrowLeft') ? -1 : this.keyboard.isdown('ArrowRight') ? 1 : 0,\n                this.keyboard.isdown('ArrowDown') ? -1 : this.keyboard.isdown('ArrowUp') ? 1 : 0,\n            ];\n\n            if (this.keyboard.isdown('+')) {\n                this.speed += 10;\n            } else if (this.keyboard.isdown('-')) {\n                this.speed -= 10;\n                this.speed = Math.max(200, this.speed);\n            }\n\n            if (this.pandir[0] !== 0 || this.pandir[1] !== 0) {\n                app.camera.translate(this.speed * delta * this.pandir[0], this.speed * delta * this.pandir[1])\n            }\n\n            this.loopId = requestAnimationFrame(loop);\n        };\n\n        this.loopId = requestAnimationFrame(loop);\n    }\n}\n\nclass CameraBodyTracker {\n    constructor(game, body) {\n        this.body = body;\n        this.game = game;\n        this.loopId = null;\n    }\n\n    start() {\n        if (!this.loopId) {\n            this.loopId = requestAnimationFrame(this.loop.bind(this));\n        }\n    }\n\n    stop() {\n        cancelAnimationFrame(this.loopId);\n        this.loopId = null;\n    }\n\n    loop() {\n        if (this.body) {\n            this.game.camera.centerAt(this.body.position.x, this.body.position.y);\n        }\n\n        this.loopId = requestAnimationFrame(this.loop.bind(this));\n    }\n}\n\nexport {\n    CameraPan,\n    CameraBodyTracker,\n    MouseDrawing,\n    Keyboard\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = EdgeShape;\n\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\n\nEdgeShape._super = Shape;\nEdgeShape.prototype = create(EdgeShape._super.prototype);\n\nEdgeShape.TYPE = 'edge';\n\n/**\n * A line segment (edge) shape. These can be connected in chains or loops to\n * other edge shapes. The connectivity information is used to ensure correct\n * contact normals.\n */\nfunction EdgeShape(v1, v2) {\n  if (!(this instanceof EdgeShape)) {\n    return new EdgeShape(v1, v2);\n  }\n\n  EdgeShape._super.call(this);\n\n  this.m_type = EdgeShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n\n  // These are the edge vertices\n  this.m_vertex1 = v1 ? Vec2.clone(v1) : Vec2.zero();\n  this.m_vertex2 = v2 ? Vec2.clone(v2) : Vec2.zero();\n\n  // Optional adjacent vertices. These are used for smooth collision.\n  // Used by chain shape.\n  this.m_vertex0 = Vec2.zero();\n  this.m_vertex3 = Vec2.zero();\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n}\n\nEdgeShape.prototype.setNext = function(v3) {\n  if (v3) {\n    this.m_vertex3.set(v3);\n    this.m_hasVertex3 = true;\n  } else {\n    this.m_vertex3.setZero();\n    this.m_hasVertex3 = false;\n  }\n  return this;\n};\n\nEdgeShape.prototype.setPrev = function(v0) {\n  if (v0) {\n    this.m_vertex0.set(v0);\n    this.m_hasVertex0 = true;\n  } else {\n    this.m_vertex0.setZero();\n    this.m_hasVertex0 = false;\n  }\n  return this;\n};\n\n/**\n * Set this as an isolated edge.\n */\nEdgeShape.prototype._set = function(v1, v2) {\n  this.m_vertex1.set(v1);\n  this.m_vertex2.set(v2);\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n  return this;\n}\n\nEdgeShape.prototype._clone = function() {\n  var clone = new EdgeShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_vertex1.set(this.m_vertex1);\n  clone.m_vertex2.set(this.m_vertex2);\n  clone.m_vertex0.set(this.m_vertex0);\n  clone.m_vertex3.set(this.m_vertex3);\n  clone.m_hasVertex0 = this.m_hasVertex0;\n  clone.m_hasVertex3 = this.m_hasVertex3;\n  return clone;\n}\n\nEdgeShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nEdgeShape.prototype.testPoint = function(xf, p) {\n  return false;\n}\n\n// p = p1 + t * d\n// v = v1 + s * e\n// p1 + t * d = v1 + s * e\n// s * e - t * d = p1 - v1\nEdgeShape.prototype.rayCast = function(output, input, xf, childIndex) {\n  // NOT_USED(childIndex);\n\n  // Put the ray into the edge's frame of reference.\n  var p1 = Rot.mulT(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulT(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var v1 = this.m_vertex1;\n  var v2 = this.m_vertex2;\n  var e = Vec2.sub(v2, v1);\n  var normal = Vec2.neo(e.y, -e.x);\n  normal.normalize();\n\n  // q = p1 + t * d\n  // dot(normal, q - v1) = 0\n  // dot(normal, p1 - v1) + t * dot(normal, d) = 0\n  var numerator = Vec2.dot(normal, Vec2.sub(v1, p1));\n  var denominator = Vec2.dot(normal, d);\n\n  if (denominator == 0.0) {\n    return false;\n  }\n\n  var t = numerator / denominator;\n  if (t < 0.0 || input.maxFraction < t) {\n    return false;\n  }\n\n  var q = Vec2.add(p1, Vec2.mul(t, d));\n\n  // q = v1 + s * r\n  // s = dot(q - v1, r) / dot(r, r)\n  var r = Vec2.sub(v2, v1);\n  var rr = Vec2.dot(r, r);\n  if (rr == 0.0) {\n    return false;\n  }\n\n  var s = Vec2.dot(Vec2.sub(q, v1), r) / rr;\n  if (s < 0.0 || 1.0 < s) {\n    return false;\n  }\n\n  output.fraction = t;\n  if (numerator > 0.0) {\n    output.normal = Rot.mul(xf.q, normal).neg();\n  } else {\n    output.normal = Rot.mul(xf.q, normal);\n  }\n  return true;\n}\n\nEdgeShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var v1 = Transform.mul(xf, this.m_vertex1);\n  var v2 = Transform.mul(xf, this.m_vertex2);\n\n  aabb.combinePoints(v1, v2);\n  aabb.extend(this.m_radius)\n}\n\nEdgeShape.prototype.computeMass = function(massData, density) {\n  massData.mass = 0.0;\n  massData.center.wSet(0.5, this.m_vertex1, 0.5, this.m_vertex2);\n  massData.I = 0.0;\n}\n\nEdgeShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices.push(this.m_vertex1);\n  proxy.m_vertices.push(this.m_vertex2);\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = CircleShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\n\nCircleShape._super = Shape;\nCircleShape.prototype = create(CircleShape._super.prototype);\n\nCircleShape.TYPE = 'circle';\n\nfunction CircleShape(a, b) {\n  if (!(this instanceof CircleShape)) {\n    return new CircleShape(a, b);\n  }\n\n  CircleShape._super.call(this);\n\n  this.m_type = CircleShape.TYPE;\n  this.m_p = Vec2.zero();\n  this.m_radius = 1;\n\n  if (typeof a === 'object' && Vec2.isValid(a)) {\n    this.m_p.set(a);\n\n    if (typeof b === 'number') {\n      this.m_radius = b;\n    }\n\n  } else if (typeof a === 'number') {\n    this.m_radius = a;\n  }\n}\n\nCircleShape.prototype.getRadius = function() {\n  return this.m_radius;\n}\n\nCircleShape.prototype.getCenter = function() {\n  return this.m_p;\n}\n\nCircleShape.prototype.getSupportVertex = function(d) {\n  return this.m_p;\n}\n\nCircleShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(index == 0);\n  return this.m_p;\n}\n\nCircleShape.prototype.getVertexCount = function(index) {\n  return 1;\n}\n\nCircleShape.prototype._clone = function() {\n  var clone = new CircleShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_p = this.m_p.clone();\n  return clone;\n}\n\nCircleShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nCircleShape.prototype.testPoint = function(xf, p) {\n  var center = Vec2.add(xf.p, Rot.mul(xf.q, this.m_p));\n  var d = Vec2.sub(p, center);\n  return Vec2.dot(d, d) <= this.m_radius * this.m_radius;\n}\n\n// Collision Detection in Interactive 3D Environments by Gino van den Bergen\n// From Section 3.1.2\n// x = s + a * r\n// norm(x) = radius\nCircleShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  var position = Vec2.add(xf.p, Rot.mul(xf.q, this.m_p));\n  var s = Vec2.sub(input.p1, position);\n  var b = Vec2.dot(s, s) - this.m_radius * this.m_radius;\n\n  // Solve quadratic equation.\n  var r = Vec2.sub(input.p2, input.p1);\n  var c = Vec2.dot(s, r);\n  var rr = Vec2.dot(r, r);\n  var sigma = c * c - rr * b;\n\n  // Check for negative discriminant and short segment.\n  if (sigma < 0.0 || rr < Math.EPSILON) {\n    return false;\n  }\n\n  // Find the point of intersection of the line with the circle.\n  var a = -(c + Math.sqrt(sigma));\n\n  // Is the intersection point on the segment?\n  if (0.0 <= a && a <= input.maxFraction * rr) {\n    a /= rr;\n    output.fraction = a;\n    output.normal = Vec2.add(s, Vec2.mul(a, r));\n    output.normal.normalize();\n    return true;\n  }\n\n  return false;\n}\n\nCircleShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var p = Vec2.add(xf.p, Rot.mul(xf.q, this.m_p));\n  aabb.lowerBound.set(p.x - this.m_radius, p.y - this.m_radius);\n  aabb.upperBound.set(p.x + this.m_radius, p.y + this.m_radius);\n}\n\nCircleShape.prototype.computeMass = function(massData, density) {\n  massData.mass = density * Math.PI * this.m_radius * this.m_radius;\n  massData.center = this.m_p;\n  // inertia about the local origin\n  massData.I = massData.mass\n      * (0.5 * this.m_radius * this.m_radius + Vec2.dot(this.m_p, this.m_p));\n}\n\nCircleShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices.push(this.m_p);\n  proxy.m_count = 1;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Distance;\n\nmodule.exports.Input = DistanceInput;\nmodule.exports.Output = DistanceOutput;\nmodule.exports.Proxy = DistanceProxy;\nmodule.exports.Cache = SimplexCache;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\n\nvar stats = require('../common/stats');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\n/**\n * GJK using Voronoi regions (Christer Ericson) and Barycentric coordinates.\n */\n\nstats.gjkCalls = 0;\nstats.gjkIters = 0;\nstats.gjkMaxIters = 0;\n\n/**\n * Input for Distance. You have to option to use the shape radii in the\n * computation. Even\n */\nfunction DistanceInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.transformA = null;\n  this.transformB = null;\n  this.useRadii = false;\n};\n\n/**\n * Output for Distance.\n *\n * @prop {Vec2} pointA closest point on shapeA\n * @prop {Vec2} pointB closest point on shapeB\n * @prop distance\n * @prop iterations number of GJK iterations used\n */\nfunction DistanceOutput() {\n  this.pointA = Vec2.zero();\n  this.pointB = Vec2.zero();\n  this.distance;\n  this.iterations;\n}\n\n/**\n * Used to warm start Distance. Set count to zero on first call.\n *\n * @prop {number} metric length or area\n * @prop {array} indexA vertices on shape A\n * @prop {array} indexB vertices on shape B\n * @prop {number} count\n */\nfunction SimplexCache() {\n  this.metric = 0;\n  this.indexA = [];\n  this.indexB = [];\n  this.count = 0;\n};\n\n/**\n * Compute the closest points between two shapes. Supports any combination of:\n * CircleShape, PolygonShape, EdgeShape. The simplex cache is input/output. On\n * the first call set SimplexCache.count to zero.\n *\n * @param {DistanceOutput} output\n * @param {SimplexCache} cache\n * @param {DistanceInput} input\n */\nfunction Distance(output, cache, input) {\n  ++stats.gjkCalls;\n\n  var proxyA = input.proxyA;\n  var proxyB = input.proxyB;\n  var xfA = input.transformA;\n  var xfB = input.transformB;\n\n  // Initialize the simplex.\n  var simplex = new Simplex();\n  simplex.readCache(cache, proxyA, xfA, proxyB, xfB);\n\n  // Get simplex vertices as an array.\n  var vertices = simplex.m_v;// SimplexVertex\n  var k_maxIters = Settings.maxDistnceIterations;\n\n  // These store the vertices of the last simplex so that we\n  // can check for duplicates and prevent cycling.\n  var saveA = [];\n  var saveB = []; // int[3]\n  var saveCount = 0;\n\n  var distanceSqr1 = Infinity;\n  var distanceSqr2 = Infinity;\n\n  // Main iteration loop.\n  var iter = 0;\n  while (iter < k_maxIters) {\n    // Copy simplex so we can identify duplicates.\n    saveCount = simplex.m_count;\n    for (var i = 0; i < saveCount; ++i) {\n      saveA[i] = vertices[i].indexA;\n      saveB[i] = vertices[i].indexB;\n    }\n\n    simplex.solve();\n\n    // If we have 3 points, then the origin is in the corresponding triangle.\n    if (simplex.m_count == 3) {\n      break;\n    }\n\n    // Compute closest point.\n    var p = simplex.getClosestPoint();\n    distanceSqr2 = p.lengthSquared();\n\n    // Ensure progress\n    if (distanceSqr2 >= distanceSqr1) {\n      // break;\n    }\n    distanceSqr1 = distanceSqr2;\n\n    // Get search direction.\n    var d = simplex.getSearchDirection();\n\n    // Ensure the search direction is numerically fit.\n    if (d.lengthSquared() < Math.EPSILON * Math.EPSILON) {\n      // The origin is probably contained by a line segment\n      // or triangle. Thus the shapes are overlapped.\n\n      // We can't return zero here even though there may be overlap.\n      // In case the simplex is a point, segment, or triangle it is difficult\n      // to determine if the origin is contained in the CSO or very close to it.\n      break;\n    }\n\n    // Compute a tentative new simplex vertex using support points.\n    var vertex = vertices[simplex.m_count]; // SimplexVertex\n\n    vertex.indexA = proxyA.getSupport(Rot.mulT(xfA.q, Vec2.neg(d)));\n    vertex.wA = Transform.mul(xfA, proxyA.getVertex(vertex.indexA));\n\n    vertex.indexB = proxyB.getSupport(Rot.mulT(xfB.q, d));\n    vertex.wB = Transform.mul(xfB, proxyB.getVertex(vertex.indexB));\n\n    vertex.w = Vec2.sub(vertex.wB, vertex.wA);\n\n    // Iteration count is equated to the number of support point calls.\n    ++iter;\n    ++stats.gjkIters;\n\n    // Check for duplicate support points. This is the main termination\n    // criteria.\n    var duplicate = false;\n    for (var i = 0; i < saveCount; ++i) {\n      if (vertex.indexA == saveA[i] && vertex.indexB == saveB[i]) {\n        duplicate = true;\n        break;\n      }\n    }\n\n    // If we found a duplicate support point we must exit to avoid cycling.\n    if (duplicate) {\n      break;\n    }\n\n    // New vertex is ok and needed.\n    ++simplex.m_count;\n  }\n\n  stats.gjkMaxIters = Math.max(stats.gjkMaxIters, iter);\n\n  // Prepare output.\n  simplex.getWitnessPoints(output.pointA, output.pointB);\n  output.distance = Vec2.distance(output.pointA, output.pointB);\n  output.iterations = iter;\n\n  // Cache the simplex.\n  simplex.writeCache(cache);\n\n  // Apply radii if requested.\n  if (input.useRadii) {\n    var rA = proxyA.m_radius;\n    var rB = proxyB.m_radius;\n\n    if (output.distance > rA + rB && output.distance > Math.EPSILON) {\n      // Shapes are still no overlapped.\n      // Move the witness points to the outer surface.\n      output.distance -= rA + rB;\n      var normal = Vec2.sub(output.pointB, output.pointA);\n      normal.normalize();\n      output.pointA.wAdd(rA, normal);\n      output.pointB.wSub(rB, normal);\n    } else {\n      // Shapes are overlapped when radii are considered.\n      // Move the witness points to the middle.\n      var p = Vec2.mid(output.pointA, output.pointB);\n      output.pointA.set(p);\n      output.pointB.set(p);\n      output.distance = 0.0;\n    }\n  }\n}\n\n/**\n * A distance proxy is used by the GJK algorithm. It encapsulates any shape.\n */\nfunction DistanceProxy() {\n  this.m_buffer = []; // Vec2[2]\n  this.m_vertices = []; // Vec2[]\n  this.m_count = 0;\n  this.m_radius = 0;\n};\n\n/**\n * Get the vertex count.\n */\nDistanceProxy.prototype.getVertexCount = function() {\n  return this.m_count;\n}\n\n/**\n * Get a vertex by index. Used by Distance.\n */\nDistanceProxy.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\n/**\n * Get the supporting vertex index in the given direction.\n */\nDistanceProxy.prototype.getSupport = function(d) {\n  var bestIndex = 0;\n  var bestValue = Vec2.dot(this.m_vertices[0], d);\n  for (var i = 0; i < this.m_count; ++i) {\n    var value = Vec2.dot(this.m_vertices[i], d);\n    if (value > bestValue) {\n      bestIndex = i;\n      bestValue = value;\n    }\n  }\n  return bestIndex;\n}\n\n/**\n * Get the supporting vertex in the given direction.\n */\nDistanceProxy.prototype.getSupportVertex = function(d) {\n  return this.m_vertices[this.getSupport(d)];\n}\n\n/**\n * Initialize the proxy using the given shape. The shape must remain in scope\n * while the proxy is in use.\n */\nDistanceProxy.prototype.set = function(shape, index) {\n  // TODO remove, use shape instead\n  _ASSERT && common.assert(typeof shape.computeDistanceProxy === 'function');\n  shape.computeDistanceProxy(this, index);\n}\n\nfunction SimplexVertex() {\n  this.indexA; // wA index\n  this.indexB; // wB index\n  this.wA = Vec2.zero(); // support point in proxyA\n  this.wB = Vec2.zero(); // support point in proxyB\n  this.w = Vec2.zero(); // wB - wA\n  this.a; // barycentric coordinate for closest point\n};\n\nSimplexVertex.prototype.set = function(v) {\n  this.indexA = v.indexA;\n  this.indexB = v.indexB;\n  this.wA = Vec2.clone(v.wA);\n  this.wB = Vec2.clone(v.wB);\n  this.w = Vec2.clone(v.w);\n  this.a = v.a;\n};\n\nfunction Simplex() {\n  this.m_v1 = new SimplexVertex();\n  this.m_v2 = new SimplexVertex();\n  this.m_v3 = new SimplexVertex();\n  this.m_v = [ this.m_v1, this.m_v2, this.m_v3 ];\n  this.m_count;\n};\n\nSimplex.prototype.print = function() {\n  if (this.m_count == 3) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y,\n      this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y,\n      this.m_v3.a, this.m_v3.wA.x, this.m_v3.wA.y, this.m_v3.wB.x, this.m_v3.wB.y\n    ].toString();\n\n  } else if (this.m_count == 2) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y,\n      this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y\n    ].toString();\n\n  } else if (this.m_count == 1) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y\n    ].toString();\n\n  } else {\n    return \"+\" + this.m_count;\n  }\n};\n\n// (SimplexCache, DistanceProxy, ...)\nSimplex.prototype.readCache = function(cache, proxyA, transformA, proxyB, transformB) {\n  _ASSERT && common.assert(cache.count <= 3);\n\n  // Copy data from cache.\n  this.m_count = cache.count;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = this.m_v[i];\n    v.indexA = cache.indexA[i];\n    v.indexB = cache.indexB[i];\n    var wALocal = proxyA.getVertex(v.indexA);\n    var wBLocal = proxyB.getVertex(v.indexB);\n    v.wA = Transform.mul(transformA, wALocal);\n    v.wB = Transform.mul(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 0.0;\n  }\n\n  // Compute the new simplex metric, if it is substantially different than\n  // old metric then flush the simplex.\n  if (this.m_count > 1) {\n    var metric1 = cache.metric;\n    var metric2 = this.getMetric();\n    if (metric2 < 0.5 * metric1 || 2.0 * metric1 < metric2\n        || metric2 < Math.EPSILON) {\n      // Reset the simplex.\n      this.m_count = 0;\n    }\n  }\n\n  // If the cache is empty or invalid...\n  if (this.m_count == 0) {\n    var v = this.m_v[0];// SimplexVertex\n    v.indexA = 0;\n    v.indexB = 0;\n    var wALocal = proxyA.getVertex(0);\n    var wBLocal = proxyB.getVertex(0);\n    v.wA = Transform.mul(transformA, wALocal);\n    v.wB = Transform.mul(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 1.0;\n    this.m_count = 1;\n  }\n}\n\n// (SimplexCache)\nSimplex.prototype.writeCache = function(cache) {\n  cache.metric = this.getMetric();\n  cache.count = this.m_count;\n  for (var i = 0; i < this.m_count; ++i) {\n    cache.indexA[i] = this.m_v[i].indexA;\n    cache.indexB[i] = this.m_v[i].indexB;\n  }\n}\n\nSimplex.prototype.getSearchDirection = function() {\n  switch (this.m_count) {\n  case 1:\n    return Vec2.neg(this.m_v1.w);\n\n  case 2: {\n    var e12 = Vec2.sub(this.m_v2.w, this.m_v1.w);\n    var sgn = Vec2.cross(e12, Vec2.neg(this.m_v1.w));\n    if (sgn > 0.0) {\n      // Origin is left of e12.\n      return Vec2.cross(1.0, e12);\n    } else {\n      // Origin is right of e12.\n      return Vec2.cross(e12, 1.0);\n    }\n  }\n\n  default:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n  }\n}\n\nSimplex.prototype.getClosestPoint = function() {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n\n  case 1:\n    return Vec2.clone(this.m_v1.w);\n\n  case 2:\n    return Vec2.wAdd(this.m_v1.a, this.m_v1.w, this.m_v2.a, this.m_v2.w);\n\n  case 3:\n    return Vec2.zero();\n\n  default:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n  }\n}\n\nSimplex.prototype.getWitnessPoints = function(pA, pB) {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    break;\n\n  case 1:\n    pA.set(this.m_v1.wA);\n    pB.set(this.m_v1.wB);\n    break;\n\n  case 2:\n    pA.wSet(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n    pB.wSet(this.m_v1.a, this.m_v1.wB, this.m_v2.a, this.m_v2.wB);\n    break;\n\n  case 3:\n    pA.wSet(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n    pA.wAdd(this.m_v3.a, this.m_v3.wA);\n    pB.set(pA);\n    break;\n\n  default:\n    _ASSERT && common.assert(false);\n    break;\n  }\n}\n\nSimplex.prototype.getMetric = function() {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    return 0.0;\n\n  case 1:\n    return 0.0;\n\n  case 2:\n    return Vec2.distance(this.m_v1.w, this.m_v2.w);\n\n  case 3:\n    return Vec2.cross(Vec2.sub(this.m_v2.w, this.m_v1.w), Vec2.sub(this.m_v3.w,\n        this.m_v1.w));\n\n  default:\n    _ASSERT && common.assert(false);\n    return 0.0;\n  }\n}\n\nSimplex.prototype.solve = function() {\n  switch (this.m_count) {\n  case 1:\n    break;\n\n  case 2:\n    this.solve2();\n    break;\n\n  case 3:\n    this.solve3();\n    break;\n\n  default:\n    _ASSERT && common.assert(false);\n  }\n}\n\n// Solve a line segment using barycentric coordinates.\n//\n// p = a1 * w1 + a2 * w2\n// a1 + a2 = 1\n//\n// The vector from the origin to the closest point on the line is\n// perpendicular to the line.\n// e12 = w2 - w1\n// dot(p, e) = 0\n// a1 * dot(w1, e) + a2 * dot(w2, e) = 0\n//\n// 2-by-2 linear system\n// [1 1 ][a1] = [1]\n// [w1.e12 w2.e12][a2] = [0]\n//\n// Define\n// d12_1 = dot(w2, e12)\n// d12_2 = -dot(w1, e12)\n// d12 = d12_1 + d12_2\n//\n// Solution\n// a1 = d12_1 / d12\n// a2 = d12_2 / d12\nSimplex.prototype.solve2 = function() {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var e12 = Vec2.sub(w2, w1);\n\n  // w1 region\n  var d12_2 = -Vec2.dot(w1, e12);\n  if (d12_2 <= 0.0) {\n    // a2 <= 0, so we clamp it to 0\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  }\n\n  // w2 region\n  var d12_1 = Vec2.dot(w2, e12);\n  if (d12_1 <= 0.0) {\n    // a1 <= 0, so we clamp it to 0\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  }\n\n  // Must be in e12 region.\n  var inv_d12 = 1.0 / (d12_1 + d12_2);\n  this.m_v1.a = d12_1 * inv_d12;\n  this.m_v2.a = d12_2 * inv_d12;\n  this.m_count = 2;\n}\n\n// Possible regions:\n// - points[2]\n// - edge points[0]-points[2]\n// - edge points[1]-points[2]\n// - inside the triangle\nSimplex.prototype.solve3 = function() {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var w3 = this.m_v3.w;\n\n  // Edge12\n  // [1 1 ][a1] = [1]\n  // [w1.e12 w2.e12][a2] = [0]\n  // a3 = 0\n  var e12 = Vec2.sub(w2, w1);\n  var w1e12 = Vec2.dot(w1, e12);\n  var w2e12 = Vec2.dot(w2, e12);\n  var d12_1 = w2e12;\n  var d12_2 = -w1e12;\n\n  // Edge13\n  // [1 1 ][a1] = [1]\n  // [w1.e13 w3.e13][a3] = [0]\n  // a2 = 0\n  var e13 = Vec2.sub(w3, w1);\n  var w1e13 = Vec2.dot(w1, e13);\n  var w3e13 = Vec2.dot(w3, e13);\n  var d13_1 = w3e13;\n  var d13_2 = -w1e13;\n\n  // Edge23\n  // [1 1 ][a2] = [1]\n  // [w2.e23 w3.e23][a3] = [0]\n  // a1 = 0\n  var e23 = Vec2.sub(w3, w2);// Vec2\n  var w2e23 = Vec2.dot(w2, e23);\n  var w3e23 = Vec2.dot(w3, e23);\n  var d23_1 = w3e23;\n  var d23_2 = -w2e23;\n\n  // Triangle123\n  var n123 = Vec2.cross(e12, e13);\n\n  var d123_1 = n123 * Vec2.cross(w2, w3);\n  var d123_2 = n123 * Vec2.cross(w3, w1);\n  var d123_3 = n123 * Vec2.cross(w1, w2);\n\n  // w1 region\n  if (d12_2 <= 0.0 && d13_2 <= 0.0) {\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  }\n\n  // e12\n  if (d12_1 > 0.0 && d12_2 > 0.0 && d123_3 <= 0.0) {\n    var inv_d12 = 1.0 / (d12_1 + d12_2);\n    this.m_v1.a = d12_1 * inv_d12;\n    this.m_v2.a = d12_2 * inv_d12;\n    this.m_count = 2;\n    return;\n  }\n\n  // e13\n  if (d13_1 > 0.0 && d13_2 > 0.0 && d123_2 <= 0.0) {\n    var inv_d13 = 1.0 / (d13_1 + d13_2);\n    this.m_v1.a = d13_1 * inv_d13;\n    this.m_v3.a = d13_2 * inv_d13;\n    this.m_count = 2;\n    this.m_v2.set(this.m_v3);\n    return;\n  }\n\n  // w2 region\n  if (d12_1 <= 0.0 && d23_2 <= 0.0) {\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  }\n\n  // w3 region\n  if (d13_1 <= 0.0 && d23_1 <= 0.0) {\n    this.m_v3.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v3);\n    return;\n  }\n\n  // e23\n  if (d23_1 > 0.0 && d23_2 > 0.0 && d123_1 <= 0.0) {\n    var inv_d23 = 1.0 / (d23_1 + d23_2);\n    this.m_v2.a = d23_1 * inv_d23;\n    this.m_v3.a = d23_2 * inv_d23;\n    this.m_count = 2;\n    this.m_v1.set(this.m_v3);\n    return;\n  }\n\n  // Must be in triangle123\n  var inv_d123 = 1.0 / (d123_1 + d123_2 + d123_3);\n  this.m_v1.a = d123_1 * inv_d123;\n  this.m_v2.a = d123_2 * inv_d123;\n  this.m_v3.a = d123_3 * inv_d123;\n  this.m_count = 3;\n}\n\n/**\n * Determine if two generic shapes overlap.\n */\nDistance.testOverlap = function(shapeA, indexA, shapeB, indexB, xfA, xfB) {\n  var input = new DistanceInput();\n  input.proxyA.set(shapeA, indexA);\n  input.proxyB.set(shapeB, indexB);\n  input.transformA = xfA;\n  input.transformB = xfB;\n  input.useRadii = true;\n\n  var cache = new SimplexCache();\n\n  var output = new DistanceOutput();\n  Distance(output, cache, input);\n\n  return output.distance < 10.0 * Math.EPSILON;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = ChainShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar EdgeShape = require('./EdgeShape');\n\nChainShape._super = Shape;\nChainShape.prototype = create(ChainShape._super.prototype);\n\nChainShape.TYPE = 'chain';\n\n/**\n * A chain shape is a free form sequence of line segments. The chain has\n * two-sided collision, so you can use inside and outside collision. Therefore,\n * you may use any winding order. Connectivity information is used to create\n * smooth collisions.\n * \n * WARNING: The chain will not collide properly if there are self-intersections.\n */\nfunction ChainShape(vertices, loop) {\n  if (!(this instanceof ChainShape)) {\n    return new ChainShape(vertices, loop);\n  }\n\n  ChainShape._super.call(this);\n\n  this.m_type = ChainShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_vertices = [];\n  this.m_count = 0;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n\n  if (vertices && vertices.length) {\n    if (loop) {\n      this._createLoop(vertices);\n    } else {\n      this._createChain(vertices);\n    }\n  }\n}\n\n// ChainShape.clear = function() {\n// this.m_vertices.length = 0;\n// this.m_count = 0;\n// }\n\n/**\n * Create a loop. This automatically adjusts connectivity.\n * \n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\nChainShape.prototype._createLoop = function(vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 3);\n  for (var i = 1; i < vertices.length; ++i) {\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i];\n    // If the code crashes here, it means your vertices are too close together.\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_vertices.length = 0;\n  this.m_count = vertices.length + 1;\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = vertices[i].clone();\n  }\n  this.m_vertices[vertices.length] = vertices[0].clone();\n\n  this.m_prevVertex = this.m_vertices[this.m_count - 2];\n  this.m_nextVertex = this.m_vertices[1];\n  this.m_hasPrevVertex = true;\n  this.m_hasNextVertex = true;\n  return this;\n}\n\n/**\n * Create a chain with isolated end vertices.\n * \n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\nChainShape.prototype._createChain = function(vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 2);\n  for (var i = 1; i < vertices.length; ++i) {\n    // If the code crashes here, it means your vertices are too close together.\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i];\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_count = vertices.length;\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = vertices[i].clone();\n  }\n\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  return this;\n}\n\n/**\n * Establish connectivity to a vertex that precedes the first vertex. Don't call\n * this for loops.\n */\nChainShape.prototype._setPrevVertex = function(prevVertex) {\n  this.m_prevVertex = prevVertex;\n  this.m_hasPrevVertex = true;\n}\n\n/**\n * Establish connectivity to a vertex that follows the last vertex. Don't call\n * this for loops.\n */\nChainShape.prototype._setNextVertex = function(nextVertex) {\n  this.m_nextVertex = nextVertex;\n  this.m_hasNextVertex = true;\n}\n\nChainShape.prototype._clone = function() {\n  var clone = new ChainShape();\n  clone.createChain(this.m_vertices);\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_prevVertex = this.m_prevVertex;\n  clone.m_nextVertex = this.m_nextVertex;\n  clone.m_hasPrevVertex = this.m_hasPrevVertex;\n  clone.m_hasNextVertex = this.m_hasNextVertex;\n  return clone;\n}\n\nChainShape.prototype.getChildCount = function() {\n  // edge count = vertex count - 1\n  return this.m_count - 1;\n}\n\n// Get a child edge.\nChainShape.prototype.getChildEdge = function(edge, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count - 1);\n  edge.m_type = EdgeShape.TYPE;\n  edge.m_radius = this.m_radius;\n\n  edge.m_vertex1 = this.m_vertices[childIndex];\n  edge.m_vertex2 = this.m_vertices[childIndex + 1];\n\n  if (childIndex > 0) {\n    edge.m_vertex0 = this.m_vertices[childIndex - 1];\n    edge.m_hasVertex0 = true;\n  } else {\n    edge.m_vertex0 = this.m_prevVertex;\n    edge.m_hasVertex0 = this.m_hasPrevVertex;\n  }\n\n  if (childIndex < this.m_count - 2) {\n    edge.m_vertex3 = this.m_vertices[childIndex + 2];\n    edge.m_hasVertex3 = true;\n  } else {\n    edge.m_vertex3 = this.m_nextVertex;\n    edge.m_hasVertex3 = this.m_hasNextVertex;\n  }\n}\n\nChainShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index <= this.m_count);\n  if (index < this.m_count) {\n    return this.m_vertices[index];\n  } else {\n    return this.m_vertices[0];\n  }\n}\n\n/**\n * This always return false.\n */\nChainShape.prototype.testPoint = function(xf, p) {\n  return false;\n}\n\nChainShape.prototype.rayCast = function(output, input, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n\n  var edgeShape = new EdgeShape(this.getVertex(childIndex), this.getVertex(childIndex + 1));\n  return edgeShape.rayCast(output, input, xf, 0);\n}\n\nChainShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n\n  var v1 = Transform.mul(xf, this.getVertex(childIndex));\n  var v2 = Transform.mul(xf, this.getVertex(childIndex + 1));\n\n  aabb.combinePoints(v1, v2);\n}\n\n/**\n * Chains have zero mass.\n */\nChainShape.prototype.computeMass = function(massData, density) {\n  massData.mass = 0.0;\n  massData.center = Vec2.neo();\n  massData.I = 0.0;\n}\n\nChainShape.prototype.computeDistanceProxy = function(proxy, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n  proxy.m_buffer[0] = this.getVertex(childIndex);\n  proxy.m_buffer[1] = this.getVertex(childIndex + 1);\n  proxy.m_vertices = proxy.m_buffer;\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexports.toString = function(newline) {\n  newline = typeof newline === 'string' ? newline : '\\n';\n  var string = \"\";\n  for (var name in this) {\n    if (typeof this[name] !== 'function' && typeof this[name] !== 'object') {\n      string += name + ': ' + this[name] + newline;\n    }\n  }\n  return string;\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Body;\n\nvar common = require('./util/common');\nvar options = require('./util/options');\n\nvar Vec2 = require('./common/Vec2');\nvar Rot = require('./common/Rot');\nvar Math = require('./common/Math');\nvar Sweep = require('./common/Sweep');\nvar Transform = require('./common/Transform');\nvar Velocity = require('./common/Velocity');\nvar Position = require('./common/Position');\n\nvar Fixture = require('./Fixture');\nvar Shape = require('./Shape');\nvar World = require('./World');\n\nvar staticBody = Body.STATIC = 'static';\nvar kinematicBody = Body.KINEMATIC = 'kinematic';\nvar dynamicBody = Body.DYNAMIC = 'dynamic';\n\n/**\n * @typedef {Object} BodyDef\n *\n * @prop type Body types are static, kinematic, or dynamic. Note: if a dynamic\n *       body would have zero mass, the mass is set to one.\n *\n * @prop position The world position of the body. Avoid creating bodies at the\n *       origin since this can lead to many overlapping shapes.\n *\n * @prop angle The world angle of the body in radians.\n *\n * @prop linearVelocity The linear velocity of the body's origin in world\n *       co-ordinates.\n *\n * @prop linearDamping Linear damping is use to reduce the linear velocity. The\n *       damping parameter can be larger than 1.0 but the damping effect becomes\n *       sensitive to the time step when the damping parameter is large.\n *\n * @prop angularDamping Angular damping is use to reduce the angular velocity.\n *       The damping parameter can be larger than 1.0 but the damping effect\n *       becomes sensitive to the time step when the damping parameter is large.\n *\n * @prop fixedRotation Should this body be prevented from rotating? Useful for\n *       characters.\n *\n * @prop bullet Is this a fast moving body that should be prevented from\n *       tunneling through other moving bodies? Note that all bodies are\n *       prevented from tunneling through kinematic and static bodies. This\n *       setting is only considered on dynamic bodies. Warning: You should use\n *       this flag sparingly since it increases processing time.\n *\n * @prop active Does this body start out active?\n *\n * @prop awake Is this body initially awake or sleeping?\n *\n * @prop allowSleep Set this flag to false if this body should never fall\n *       asleep. Note that this increases CPU usage.\n */\nvar BodyDef = {\n  type : staticBody,\n  position : Vec2.zero(),\n  angle : 0.0,\n\n  linearVelocity : Vec2.zero(),\n  angularVelocity : 0.0,\n\n  linearDamping : 0.0,\n  angularDamping : 0.0,\n\n  fixedRotation : false,\n  bullet : false,\n  gravityScale : 1.0,\n\n  allowSleep : true,\n  awake : true,\n  active : true,\n\n  userData : null\n};\n\n/**\n * @class\n * \n * A rigid body composed of one or more fixtures.\n * \n * @param {BodyDef} def\n */\nfunction Body(world, def) {\n\n  def = options(def, BodyDef);\n\n  _ASSERT && common.assert(Vec2.isValid(def.position));\n  _ASSERT && common.assert(Vec2.isValid(def.linearVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angle));\n  _ASSERT && common.assert(Math.isFinite(def.angularVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angularDamping) && def.angularDamping >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.linearDamping) && def.linearDamping >= 0.0);\n\n  this.m_world = world;\n\n  this.m_awakeFlag = def.awake;\n  this.m_autoSleepFlag = def.allowSleep;\n  this.m_bulletFlag = def.bullet;\n  this.m_fixedRotationFlag = def.fixedRotation;\n  this.m_activeFlag = def.active;\n\n  this.m_islandFlag = false;\n  this.m_toiFlag = false;\n\n  this.m_userData = def.userData;\n  this.m_type = def.type;\n\n  if (this.m_type == dynamicBody) {\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  } else {\n    this.m_mass = 0.0;\n    this.m_invMass = 0.0;\n  }\n\n  // Rotational inertia about the center of mass.\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  // the body origin transform\n  this.m_xf = Transform.identity();\n  this.m_xf.p = Vec2.clone(def.position);\n  this.m_xf.q.setAngle(def.angle);\n\n  // the swept motion for CCD\n  this.m_sweep = new Sweep();\n  this.m_sweep.setTransform(this.m_xf);\n\n  // position and velocity correction\n  this.c_velocity = new Velocity();\n  this.c_position = new Position();\n\n  this.m_force = Vec2.zero();\n  this.m_torque = 0.0;\n\n  this.m_linearVelocity = Vec2.clone(def.linearVelocity);\n  this.m_angularVelocity = def.angularVelocity;\n\n  this.m_linearDamping = def.linearDamping;\n  this.m_angularDamping = def.angularDamping;\n  this.m_gravityScale = def.gravityScale;\n\n  this.m_sleepTime = 0.0;\n\n  this.m_jointList = null;\n  this.m_contactList = null;\n  this.m_fixtureList = null;\n\n  this.m_prev = null;\n  this.m_next = null;\n}\n\nBody.prototype.isWorldLocked = function() {\n  return this.m_world && this.m_world.isLocked() ? true : false;\n};\n\nBody.prototype.getWorld = function() {\n  return this.m_world;\n};\n\nBody.prototype.getNext = function() {\n  return this.m_next;\n};\n\nBody.prototype.setUserData = function(data) {\n  this.m_userData = data;\n};\n\nBody.prototype.getUserData = function() {\n  return this.m_userData;\n};\n\nBody.prototype.getFixtureList = function() {\n  return this.m_fixtureList;\n};\n\nBody.prototype.getJointList = function() {\n  return this.m_jointList;\n};\n\n/**\n * Warning: this list changes during the time step and you may miss some\n * collisions if you don't use ContactListener.\n */\nBody.prototype.getContactList = function() {\n  return this.m_contactList;\n};\n\nBody.prototype.isStatic = function() {\n  return this.m_type == staticBody;\n};\n\nBody.prototype.isDynamic = function() {\n  return this.m_type == dynamicBody;\n};\n\nBody.prototype.isKinematic = function() {\n  return this.m_type == kinematicBody;\n};\n\n/**\n * This will alter the mass and velocity.\n */\nBody.prototype.setStatic = function() {\n  this.setType(staticBody);\n  return this;\n};\n\nBody.prototype.setDynamic = function() {\n  this.setType(dynamicBody);\n  return this;\n};\n\nBody.prototype.setKinematic = function() {\n  this.setType(kinematicBody);\n  return this;\n};\n\n/**\n * @private\n */\nBody.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * \n * @private\n */\nBody.prototype.setType = function(type) {\n  _ASSERT && common.assert(type === staticBody || type === kinematicBody || type === dynamicBody);\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type == type) {\n    return;\n  }\n\n  this.m_type = type;\n\n  this.resetMassData();\n\n  if (this.m_type == staticBody) {\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_sweep.forward();\n    this.synchronizeFixtures();\n  }\n\n  this.setAwake(true);\n\n  this.m_force.setZero();\n  this.m_torque = 0.0;\n\n  // Delete the attached contacts.\n  var ce = this.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n    this.m_world.destroyContact(ce0.contact);\n  }\n  this.m_contactList = null;\n\n  // Touch the proxies so that new contacts will be created (when appropriate)\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    var proxyCount = f.m_proxyCount;\n    for (var i = 0; i < proxyCount; ++i) {\n      broadPhase.touchProxy(f.m_proxies[i].proxyId);\n    }\n  }\n};\n\nBody.prototype.isBullet = function() {\n  return this.m_bulletFlag;\n};\n\n/**\n * Should this body be treated like a bullet for continuous collision detection?\n */\nBody.prototype.setBullet = function(flag) {\n  this.m_bulletFlag = !!flag;\n};\n\nBody.prototype.isSleepingAllowed = function() {\n  return this.m_autoSleepFlag;\n};\n\nBody.prototype.setSleepingAllowed = function(flag) {\n  this.m_autoSleepFlag = !!flag;\n  if (this.m_autoSleepFlag == false) {\n    this.setAwake(true);\n  }\n};\n\nBody.prototype.isAwake = function() {\n  return this.m_awakeFlag;\n};\n\n/**\n * Set the sleep state of the body. A sleeping body has very low CPU cost.\n * \n * @param flag Set to true to wake the body, false to put it to sleep.\n */\nBody.prototype.setAwake = function(flag) {\n  if (flag) {\n    if (this.m_awakeFlag == false) {\n      this.m_awakeFlag = true;\n      this.m_sleepTime = 0.0;\n    }\n  } else {\n    this.m_awakeFlag = false;\n    this.m_sleepTime = 0.0;\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_force.setZero();\n    this.m_torque = 0.0;\n  }\n};\n\nBody.prototype.isActive = function() {\n  return this.m_activeFlag;\n};\n\n/**\n * Set the active state of the body. An inactive body is not simulated and\n * cannot be collided with or woken up. If you pass a flag of true, all fixtures\n * will be added to the broad-phase. If you pass a flag of false, all fixtures\n * will be removed from the broad-phase and all contacts will be destroyed.\n * Fixtures and joints are otherwise unaffected.\n * \n * You may continue to create/destroy fixtures and joints on inactive bodies.\n * Fixtures on an inactive body are implicitly inactive and will not participate\n * in collisions, ray-casts, or queries. Joints connected to an inactive body\n * are implicitly inactive. An inactive body is still owned by a World object\n * and remains\n */\nBody.prototype.setActive = function(flag) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (flag == this.m_activeFlag) {\n    return;\n  }\n\n  this.m_activeFlag = !!flag;\n\n  if (this.m_activeFlag) {\n    // Create all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.createProxies(broadPhase, this.m_xf);\n    }\n    // Contacts are created the next time step.\n\n  } else {\n    // Destroy all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.destroyProxies(broadPhase);\n    }\n\n    // Destroy the attached contacts.\n    var ce = this.m_contactList;\n    while (ce) {\n      var ce0 = ce;\n      ce = ce.next;\n      this.m_world.destroyContact(ce0.contact);\n    }\n    this.m_contactList = null;\n  }\n};\n\nBody.prototype.isFixedRotation = function() {\n  return this.m_fixedRotationFlag;\n};\n\n/**\n * Set this body to have fixed rotation. This causes the mass to be reset.\n */\nBody.prototype.setFixedRotation = function(flag) {\n  if (this.m_fixedRotationFlag == flag) {\n    return;\n  }\n\n  this.m_fixedRotationFlag = !!flag;\n\n  this.m_angularVelocity = 0.0;\n\n  this.resetMassData();\n};\n\n/**\n * Get the world transform for the body's origin.\n */\nBody.prototype.getTransform = function() {\n  return this.m_xf;\n};\n\n/**\n * Set the position of the body's origin and rotation. Manipulating a body's\n * transform may cause non-physical behavior. Note: contacts are updated on the\n * next call to World.step.\n * \n * @param position The world position of the body's local origin.\n * @param angle The world rotation in radians.\n */\nBody.prototype.setTransform = function(position, angle) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  this.m_xf.set(position, angle);\n  this.m_sweep.setTransform(this.m_xf);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, this.m_xf, this.m_xf);\n  }\n};\n\nBody.prototype.synchronizeTransform = function() {\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Update fixtures in broad-phase.\n */\nBody.prototype.synchronizeFixtures = function() {\n  var xf = Transform.identity();\n\n  this.m_sweep.getTransform(xf, 0);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, xf, this.m_xf);\n  }\n};\n\n/**\n * Used in TOI.\n */\nBody.prototype.advance = function(alpha) {\n  // Advance to the new safe time. This doesn't sync the broad-phase.\n  this.m_sweep.advance(alpha);\n  this.m_sweep.c.set(this.m_sweep.c0);\n  this.m_sweep.a = this.m_sweep.a0;\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Get the world position for the body's origin.\n */\nBody.prototype.getPosition = function() {\n  return this.m_xf.p;\n};\n\nBody.prototype.setPosition = function(p) {\n  this.setTransform(p, this.m_sweep.a);\n};\n\n/**\n * Get the current world rotation angle in radians.\n */\nBody.prototype.getAngle = function() {\n  return this.m_sweep.a;\n};\n\nBody.prototype.setAngle = function(angle) {\n  this.setTransform(this.m_xf.p, angle);\n};\n\n/**\n * Get the world position of the center of mass.\n */\nBody.prototype.getWorldCenter = function() {\n  return this.m_sweep.c;\n};\n\n/**\n * Get the local position of the center of mass.\n */\nBody.prototype.getLocalCenter = function() {\n  return this.m_sweep.localCenter;\n};\n\n/**\n * Get the linear velocity of the center of mass.\n * \n * @return the linear velocity of the center of mass.\n */\nBody.prototype.getLinearVelocity = function() {\n  return this.m_linearVelocity;\n};\n\n/**\n * Get the world linear velocity of a world point attached to this body.\n * \n * @param worldPoint A point in world coordinates.\n */\nBody.prototype.getLinearVelocityFromWorldPoint = function(worldPoint) {\n  var localCenter = Vec2.sub(worldPoint, this.m_sweep.c);\n  return Vec2.add(this.m_linearVelocity, Vec2.cross(this.m_angularVelocity,\n      localCenter));\n};\n\n/**\n * Get the world velocity of a local point.\n * \n * @param localPoint A point in local coordinates.\n */\nBody.prototype.getLinearVelocityFromLocalPoint = function(localPoint) {\n  return this.getLinearVelocityFromWorldPoint(this.getWorldPoint(localPoint));\n};\n\n/**\n * Set the linear velocity of the center of mass.\n * \n * @param v The new linear velocity of the center of mass.\n */\nBody.prototype.setLinearVelocity = function(v) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (Vec2.dot(v, v) > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_linearVelocity.set(v);\n};\n\n/**\n * Get the angular velocity.\n * \n * @returns the angular velocity in radians/second.\n */\nBody.prototype.getAngularVelocity = function() {\n  return this.m_angularVelocity;\n};\n\n/**\n * Set the angular velocity.\n * \n * @param omega The new angular velocity in radians/second.\n */\nBody.prototype.setAngularVelocity = function(w) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (w * w > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_angularVelocity = w;\n};\n\nBody.prototype.getLinearDamping = function() {\n  return this.m_linearDamping;\n};\n\nBody.prototype.setLinearDamping = function(linearDamping) {\n  this.m_linearDamping = linearDamping;\n};\n\nBody.prototype.getAngularDamping = function() {\n  return this.m_angularDamping;\n};\n\nBody.prototype.setAngularDamping = function(angularDamping) {\n  this.m_angularDamping = angularDamping;\n};\n\nBody.prototype.getGravityScale = function() {\n  return this.m_gravityScale;\n};\n\n/**\n * Scale the gravity applied to this body.\n */\nBody.prototype.setGravityScale = function(scale) {\n  this.m_gravityScale = scale;\n};\n\n/**\n * Get the total mass of the body.\n * \n * @returns The mass, usually in kilograms (kg).\n */\nBody.prototype.getMass = function() {\n  return this.m_mass;\n};\n\n/**\n * Get the rotational inertia of the body about the local origin.\n * \n * @return the rotational inertia, usually in kg-m^2.\n */\nBody.prototype.getInertia = function() {\n  return this.m_I + this.m_mass\n      * Vec2.dot(this.m_sweep.localCenter, this.m_sweep.localCenter);\n};\n\n/**\n * @typedef {Object} MassData This holds the mass data computed for a shape.\n * \n * @prop mass The mass of the shape, usually in kilograms.\n * @prop center The position of the shape's centroid relative to the shape's\n *       origin.\n * @prop I The rotational inertia of the shape about the local origin.\n */\nfunction MassData() {\n  this.mass = 0;\n  this.center = Vec2.zero();\n  this.I = 0;\n};\n\n/**\n * Copy the mass data of the body to data.\n */\nBody.prototype.getMassData = function(data) {\n  data.mass = this.m_mass;\n  data.I = this.getInertia();\n  data.center.set(this.m_sweep.localCenter);\n};\n\n/**\n * This resets the mass properties to the sum of the mass properties of the\n * fixtures. This normally does not need to be called unless you called\n * SetMassData to override the mass and you later want to reset the mass.\n */\nBody.prototype.resetMassData = function() {\n  // Compute mass data from shapes. Each shape has its own density.\n  this.m_mass = 0.0;\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n  this.m_sweep.localCenter.setZero();\n\n  // Static and kinematic bodies have zero mass.\n  if (this.isStatic() || this.isKinematic()) {\n    this.m_sweep.c0.set(this.m_xf.p);\n    this.m_sweep.c.set(this.m_xf.p);\n    this.m_sweep.a0 = this.m_sweep.a;\n    return;\n  }\n\n  _ASSERT && common.assert(this.isDynamic());\n\n  // Accumulate mass over all fixtures.\n  var localCenter = Vec2.zero();\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    if (f.m_density == 0.0) {\n      continue;\n    }\n\n    var massData = new MassData();\n    f.getMassData(massData);\n    this.m_mass += massData.mass;\n    localCenter.wAdd(massData.mass, massData.center);\n    this.m_I += massData.I;\n  }\n\n  // Compute center of mass.\n  if (this.m_mass > 0.0) {\n    this.m_invMass = 1.0 / this.m_mass;\n    localCenter.mul(this.m_invMass);\n\n  } else {\n    // Force all dynamic bodies to have a positive mass.\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  }\n\n  if (this.m_I > 0.0 && this.m_fixedRotationFlag == false) {\n    // Center the inertia about the center of mass.\n    this.m_I -= this.m_mass * Vec2.dot(localCenter, localCenter);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n\n  } else {\n    this.m_I = 0.0;\n    this.m_invI = 0.0;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(localCenter, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Set the mass properties to override the mass properties of the fixtures. Note\n * that this changes the center of mass position. Note that creating or\n * destroying fixtures can also alter the mass. This function has no effect if\n * the body isn't dynamic.\n * \n * @param massData The mass properties.\n */\nBody.prototype.setMassData = function(massData) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  this.m_mass = massData.mass;\n  if (this.m_mass <= 0.0) {\n    this.m_mass = 1.0;\n  }\n\n  this.m_invMass = 1.0 / this.m_mass;\n\n  if (massData.I > 0.0 && this.m_fixedRotationFlag == false) {\n    this.m_I = massData.I - this.m_mass\n        * Vec2.dot(massData.center, massData.center);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(massData.center, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Apply a force at a world point. If the force is not applied at the center of\n * mass, it will generate a torque and affect the angular velocity. This wakes\n * up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyForce = function(force, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping.\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n    this.m_torque += Vec2.cross(Vec2.sub(point, this.m_sweep.c), force);\n  }\n};\n\n/**\n * Apply a force to the center of mass. This wakes up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param wake Also wake up the body\n */\nBody.prototype.applyForceToCenter = function(force, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n  }\n};\n\n/**\n * Apply a torque. This affects the angular velocity without affecting the\n * linear velocity of the center of mass. This wakes up the body.\n * \n * @param torque About the z-axis (out of the screen), usually in N-m.\n * @param wake Also wake up the body\n */\nBody.prototype.applyTorque = function(torque, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_torque += torque;\n  }\n};\n\n/**\n * Apply an impulse at a point. This immediately modifies the velocity. It also\n * modifies the angular velocity if the point of application is not at the\n * center of mass. This wakes up the body.\n * \n * @param impulse The world impulse vector, usually in N-seconds or kg-m/s.\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyLinearImpulse = function(impulse, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_linearVelocity.wAdd(this.m_invMass, impulse);\n    this.m_angularVelocity += this.m_invI * Vec2.cross(Vec2.sub(point, this.m_sweep.c), impulse);\n  }\n};\n\n/**\n * Apply an angular impulse.\n * \n * @param impulse The angular impulse in units of kg*m*m/s\n * @param wake Also wake up the body\n */\nBody.prototype.applyAngularImpulse = function(impulse, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_angularVelocity += this.m_invI * impulse;\n  }\n};\n\n/**\n * This is used to prevent connected bodies (by joints) from colliding,\n * depending on the joint's collideConnected flag.\n */\nBody.prototype.shouldCollide = function(that) {\n  // At least one body should be dynamic.\n  if (this.m_type != dynamicBody && that.m_type != dynamicBody) {\n    return false;\n  }\n  // Does a joint prevent collision?\n  for (var jn = this.m_jointList; jn; jn = jn.next) {\n    if (jn.other == that) {\n      if (jn.joint.m_collideConnected == false) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Creates a fixture and attach it to this body.\n * \n * If the density is non-zero, this function automatically updates the mass of\n * the body.\n * \n * Contacts are not created until the next time step.\n * \n * Warning: This function is locked during callbacks.\n\n * @param {Shape|FixtureDef} shape Shape or fixture definition.\n * @param {FixtureDef|number} fixdef Fixture definition or just density.\n */\nBody.prototype.createFixture = function(shape, fixdef) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  var fixture = new Fixture(this, shape, fixdef);\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.createProxies(broadPhase, this.m_xf);\n  }\n\n  fixture.m_next = this.m_fixtureList;\n  this.m_fixtureList = fixture;\n\n  // Adjust mass properties if needed.\n  if (fixture.m_density > 0.0) {\n    this.resetMassData();\n  }\n\n  // Let the world know we have a new fixture. This will cause new contacts\n  // to be created at the beginning of the next time step.\n  this.m_world.m_newFixture = true;\n\n  return fixture\n};\n\n/**\n * Destroy a fixture. This removes the fixture from the broad-phase and destroys\n * all contacts associated with this fixture. This will automatically adjust the\n * mass of the body if the body is dynamic and the fixture has positive density.\n * All fixtures attached to a body are implicitly destroyed when the body is\n * destroyed.\n * \n * Warning: This function is locked during callbacks.\n * \n * @param fixture The fixture to be removed.\n */\nBody.prototype.destroyFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  _ASSERT && common.assert(fixture.m_body == this);\n\n  // Remove the fixture from this body's singly linked list.\n  var found = false;\n  if (this.m_fixtureList === fixture) {\n    this.m_fixtureList = fixture.m_next;\n    found = true;\n\n  } else {\n    var node = this.m_fixtureList;\n    while (node != null) {\n      if (node.m_next === fixture) {\n        node.m_next = fixture.m_next;\n        found = true;\n        break;\n      }\n      node = node.m_next;\n    }\n  }\n\n  // You tried to remove a shape that is not attached to this body.\n  _ASSERT && common.assert(found);\n\n  // Destroy any contacts associated with the fixture.\n  var edge = this.m_contactList;\n  while (edge) {\n    var c = edge.contact;\n    edge = edge.next;\n\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n\n    if (fixture == fixtureA || fixture == fixtureB) {\n      // This destroys the contact and removes it from\n      // this body's contact list.\n      this.m_world.destroyContact(c);\n    }\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.destroyProxies(broadPhase);\n  }\n\n  fixture.m_body = null;\n  fixture.m_next = null;\n\n  this.m_world.publish('remove-fixture', fixture);\n\n  // Reset the mass data.\n  this.resetMassData();\n};\n\n/**\n * Get the corresponding world point of a local point.\n */\nBody.prototype.getWorldPoint = function(localPoint) {\n  return Transform.mul(this.m_xf, localPoint);\n};\n\n/**\n * Get the corresponding world vector of a local vector.\n */\nBody.prototype.getWorldVector = function(localVector) {\n  return Rot.mul(this.m_xf.q, localVector);\n};\n\n/**\n * Gets the corresponding local point of a world point.\n */\nBody.prototype.getLocalPoint = function(worldPoint) {\n  return Transform.mulT(this.m_xf, worldPoint);\n};\n\n/**\n * \n * Gets the corresponding local vector of a world vector.\n */\nBody.prototype.getLocalVector = function(worldVector) {\n  return Rot.mulT(this.m_xf.q, worldVector);\n};\n","module.exports = \"#version 300 es\\n\\nprecision mediump float;\\nprecision mediump int;\\n\\nout vec4 out_color;\\n\\nuniform highp vec4 color;\\n\\nvoid main() {\\n    out_color = color;\\n}\\n\"","module.exports = \"#version 300 es\\n\\nlayout(location = 0) in vec2 position;\\n\\nuniform mat4 projection;\\n\\nvoid main() {\\n    vec4 transformed_position = projection * vec4(position, 0, 1);\\n    gl_Position = transformed_position;\\n}\\n\"","import twgl from \"../twgl\";\nimport {gl} from \"../gl\";\nimport {arraySetter} from \"../util\";\nimport vs from '../../shaders/lines.vert';\nimport fs from '../../shaders/lines.frag';\n\nexport {LineRenderer};\n\nlet sharedProgram = null;\n\nclass LineRenderer {\n\n    constructor(opts) {\n\n        const {game, maxLines} = {\n            maxLines: 32768,\n            ...opts\n        };\n\n        this.game = game;\n        this.maxLines = maxLines;\n\n        // Share program between renderer instances\n        if (!sharedProgram) {\n            sharedProgram = twgl.createProgramInfo(gl, [vs, fs]);\n        }\n\n        this.programInfo = sharedProgram;\n\n        this.setup();\n    }\n\n    setup() {\n        this.bufferInfo = twgl.createBufferInfoFromArrays(gl, {\n            position: {\n                numComponents: 2,\n                drawType: gl.DYNAMIC_DRAW\n            },\n            translation: {\n                numComponents: 2,\n                drawType: gl.DYNAMIC_DRAW\n            }\n        });\n\n        this.arrays = {\n            position: new Float32Array(2 * 2 * this.maxLines)\n        };\n\n        this.vao = twgl.createVertexArrayInfo(gl, this.programInfo, this.bufferInfo);\n        twgl.setBuffersAndAttributes(gl, this.programInfo, this.vao);\n    }\n\n    render(lines, color = [1, 1, 1, 1]) {\n        // copy data from lines to this.arrays.position\n        this.arrays.position.set(lines);\n\n        //gl.enable(gl.LINES);\n\n        gl.useProgram(this.programInfo.program);\n\n        twgl.setUniforms(this.programInfo, {\n            projection: this.game.viewMatrix,\n            color: color\n        });\n\n        twgl.setAttribInfoBufferFromArray(\n            gl,\n            this.bufferInfo.attribs.position,\n            this.arrays.position\n        );\n\n        twgl.setBuffersAndAttributes(gl, this.programInfo, this.vao);\n        twgl.drawBufferInfo(gl, this.vao, gl.LINES, lines.length / 2);\n    }\n\n    renderPolygons(polygons, color = [1, 1, 1, 1]) {\n        const setter = arraySetter(this.arrays.position);\n\n        let lineCount = 0;\n        polygons.forEach(polygon => {\n            setter(polygon.vertices[0]);\n            polygon.vertices.slice(1).forEach(vtx => setter(vtx.concat(vtx)));\n            setter(polygon.vertices[0]);\n            lineCount += polygon.vertices.length;\n        });\n\n        twgl.setAttribInfoBufferFromArray(\n            gl,\n            this.bufferInfo.attribs.position,\n            this.arrays.position\n        );\n\n        gl.useProgram(this.programInfo.program);\n\n        twgl.setUniforms(this.programInfo, {\n            projection: this.game.viewMatrix,\n            color: color\n        });\n\n        twgl.setBuffersAndAttributes(gl, this.programInfo, this.vao);\n        twgl.drawBufferInfo(gl, this.vao, gl.LINES, lineCount * 2);\n    }\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PrismaticJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nPrismaticJoint.TYPE = 'prismatic-joint';\n\nPrismaticJoint._super = Joint;\nPrismaticJoint.prototype = create(PrismaticJoint._super.prototype);\n\n/**\n * @typedef {Object} PrismaticJointDef\n *\n * Prismatic joint definition. This requires defining a line of motion using an\n * axis and an anchor point. The definition uses local anchor points and a local\n * axis so that the initial configuration can violate the constraint slightly.\n * The joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n * \n * @prop {boolean} enableLimit Enable/disable the joint limit.\n * @prop {float} lowerTranslation The lower translation limit, usually in\n *       meters.\n * @prop {float} upperTranslation The upper translation limit, usually in\n *       meters.\n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorForce The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n */\nvar PrismaticJointDef = {\n  enableLimit : false,\n  lowerTranslation : 0.0,\n  upperTranslation : 0.0,\n  enableMotor : false,\n  maxMotorForce : 0.0,\n  motorSpeed : 0.0\n};\n\n/**\n * A prismatic joint. This joint provides one degree of freedom: translation\n * along an axis fixed in bodyA. Relative rotation is prevented. You can use a\n * joint limit to restrict the range of motion and a joint motor to drive the\n * motion or to model joint friction.\n * \n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation unit axis in bodyA.\n * @prop {float} referenceAngle The constrained angle between the bodies:\n *       bodyB_angle - bodyA_angle.\n */\nfunction PrismaticJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof PrismaticJoint)) {\n    return new PrismaticJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, PrismaticJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  this.m_type = PrismaticJoint.TYPE;\n\n  this.m_localAnchorA = def.localAnchorA || bodyA.getLocalPoint(anchor);\n  this.m_localAnchorB = def.localAnchorB || bodyB.getLocalPoint(anchor);\n  this.m_localXAxisA = def.localAxisA || bodyA.getLocalVector(axis);\n  this.m_localXAxisA.normalize();\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n  this.m_referenceAngle = bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_impulse = Vec3();\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n\n  this.m_lowerTranslation = def.lowerTranslation;\n  this.m_upperTranslation = def.upperTranslation;\n  this.m_maxMotorForce = def.maxMotorForce;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor;\n  this.m_limitState = inactiveLimit;\n\n  this.m_axis = Vec2.zero();\n  this.m_perp = Vec2.zero();\n\n  // Solver temp\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_axis, this.m_perp; // Vec2\n  this.m_s1, this.m_s2; // float\n  this.m_a1, this.m_a2; // float\n  this.m_K = new Mat33();\n  this.m_motorMass; // float\n\n  // Linear constraint (point-to-line)\n  // d = p2 - p1 = x2 + r2 - x1 - r1\n  // C = dot(perp, d)\n  // Cdot = dot(d, cross(w1, perp)) + dot(perp, v2 + cross(w2, r2) - v1 -\n  // cross(w1, r1))\n  // = -dot(perp, v1) - dot(cross(d + r1, perp), w1) + dot(perp, v2) +\n  // dot(cross(r2, perp), v2)\n  // J = [-perp, -cross(d + r1, perp), perp, cross(r2,perp)]\n  //\n  // Angular constraint\n  // C = a2 - a1 + a_initial\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  //\n  // K = J * invM * JT\n  //\n  // J = [-a -s1 a s2]\n  // [0 -1 0 1]\n  // a = perp\n  // s1 = cross(d + r1, a) = cross(p2 - x1, a)\n  // s2 = cross(r2, a) = cross(p2 - x2, a)\n\n  // Motor/Limit linear constraint\n  // C = dot(ax1, d)\n  // Cdot = = -dot(ax1, v1) - dot(cross(d + r1, ax1), w1) + dot(ax1, v2) +\n  // dot(cross(r2, ax1), v2)\n  // J = [-ax1 -cross(d+r1,ax1) ax1 cross(r2,ax1)]\n\n  // Block Solver\n  // We develop a block solver that includes the joint limit. This makes the\n  // limit stiff (inelastic) even\n  // when the mass has poor distribution (leading to large torques about the\n  // joint anchor points).\n  //\n  // The Jacobian has 3 rows:\n  // J = [-uT -s1 uT s2] // linear\n  // [0 -1 0 1] // angular\n  // [-vT -a1 vT a2] // limit\n  //\n  // u = perp\n  // v = axis\n  // s1 = cross(d + r1, u), s2 = cross(r2, u)\n  // a1 = cross(d + r1, v), a2 = cross(r2, v)\n\n  // M * (v2 - v1) = JT * df\n  // J * v2 = bias\n  //\n  // v2 = v1 + invM * JT * df\n  // J * (v1 + invM * JT * df) = bias\n  // K * df = bias - J * v1 = -Cdot\n  // K = J * invM * JT\n  // Cdot = J * v1 - bias\n  //\n  // Now solve for f2.\n  // df = f2 - f1\n  // K * (f2 - f1) = -Cdot\n  // f2 = invK * (-Cdot) + f1\n  //\n  // Clamp accumulated limit impulse.\n  // lower: f2(3) = max(f2(3), 0)\n  // upper: f2(3) = min(f2(3), 0)\n  //\n  // Solve for correct f2(1:2)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:3) * f1\n  // = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:2) * f1(1:2) + K(1:2,3) * f1(3)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3)) +\n  // K(1:2,1:2) * f1(1:2)\n  // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n  // f1(1:2)\n  //\n  // Now compute impulse to be applied:\n  // df = f2 - f1\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nPrismaticJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nPrismaticJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * The local joint axis relative to bodyA.\n */\nPrismaticJoint.prototype.getLocalAxisA = function() {\n  return this.m_localXAxisA;\n}\n\n/**\n * Get the reference angle.\n */\nPrismaticJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n}\n\n/**\n * Get the current joint translation, usually in meters.\n */\nPrismaticJoint.prototype.getJointTranslation = function() {\n  var pA = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var pB = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var d = Vec2.sub(pB, pA);\n  var axis = this.m_bodyA.getWorldVector(this.m_localXAxisA);\n\n  var translation = Vec2.dot(d, axis);\n  return translation;\n}\n\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\nPrismaticJoint.prototype.getJointSpeed = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n\n  var rA = Mul(bA.m_xf.q, this.m_localAnchorA - bA.m_sweep.localCenter); // Vec2\n  var rB = Mul(bB.m_xf.q, this.m_localAnchorB - bB.m_sweep.localCenter); // Vec2\n  var p1 = bA.m_sweep.c + rA; // Vec2\n  var p2 = bB.m_sweep.c + rB; // Vec2\n  var d = p2 - p1; // Vec2\n  var axis = Mul(bA.m_xf.q, this.m_localXAxisA); // Vec2\n\n  var vA = bA.m_linearVelocity; // Vec2\n  var vB = bB.m_linearVelocity; // Vec2\n  var wA = bA.m_angularVelocity; // float\n  var wB = bB.m_angularVelocity; // float\n\n  var speed = Dot(d, Cross(wA, axis))\n      + Dot(axis, vB + Cross(wB, rB) - vA - Cross(wA, rA)); // float\n  return speed;\n}\n\n/**\n * Is the joint limit enabled?\n */\nPrismaticJoint.prototype.isLimitEnabled = function() {\n  return this.m_enableLimit;\n}\n\n/**\n * Enable/disable the joint limit.\n */\nPrismaticJoint.prototype.enableLimit = function(flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Get the lower joint limit, usually in meters.\n */\nPrismaticJoint.prototype.getLowerLimit = function() {\n  return this.m_lowerTranslation;\n}\n\n/**\n * Get the upper joint limit, usually in meters.\n */\nPrismaticJoint.prototype.getUpperLimit = function() {\n  return this.m_upperTranslation;\n}\n\n/**\n * Set the joint limits, usually in meters.\n */\nPrismaticJoint.prototype.setLimits = function(lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n  if (lower != this.m_lowerTranslation || upper != this.m_upperTranslation) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_lowerTranslation = lower;\n    this.m_upperTranslation = upper;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Is the joint motor enabled?\n */\nPrismaticJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nPrismaticJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Set the motor speed, usually in meters per second.\n */\nPrismaticJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Set the maximum motor force, usually in N.\n */\nPrismaticJoint.prototype.setMaxMotorForce = function(force) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorForce = force;\n}\n\n/**\n * Get the motor speed, usually in meters per second.\n */\nPrismaticJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Get the current motor force given the inverse time step, usually in N.\n */\nPrismaticJoint.prototype.getMotorForce = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\nPrismaticJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nPrismaticJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nPrismaticJoint.prototype.getReactionForce = function(inv_dt) {\n  return inv_dt * (this.m_impulse.x * this.m_perp + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis);\n}\n\nPrismaticJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.y;\n}\n\nPrismaticJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  // Compute the effective masses.\n  var rA = Rot.mul(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mul(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.wAdd(1, cB, 1, rB);\n  d.wSub(1, cA, 1, rA);\n\n  var mA = this.m_invMassA, mB = this.m_invMassB;\n  var iA = this.m_invIA, iB = this.m_invIB;\n\n  // Compute motor Jacobian and effective mass.\n  {\n    this.m_axis = Rot.mul(qA, this.m_localXAxisA);\n    this.m_a1 = Vec2.cross(Vec2.add(d, rA), this.m_axis);\n    this.m_a2 = Vec2.cross(rB, this.m_axis);\n\n    this.m_motorMass = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2\n        * this.m_a2;\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  }\n\n  // Prismatic constraint.\n  {\n    this.m_perp = Rot.mul(qA, this.m_localYAxisA);\n\n    this.m_s1 = Vec2.cross(Vec2.add(d, rA), this.m_perp);\n    this.m_s2 = Vec2.cross(rB, this.m_perp);\n\n    var s1test = Vec2.cross(rA, this.m_perp);\n\n    var k11 = mA + mB + iA * this.m_s1 * this.m_s1 + iB * this.m_s2 * this.m_s2;\n    var k12 = iA * this.m_s1 + iB * this.m_s2;\n    var k13 = iA * this.m_s1 * this.m_a1 + iB * this.m_s2 * this.m_a2;\n    var k22 = iA + iB;\n    if (k22 == 0.0) {\n      // For bodies with fixed rotation.\n      k22 = 1.0;\n    }\n    var k23 = iA * this.m_a1 + iB * this.m_a2;\n    var k33 = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\n\n    this.m_K.ex.set(k11, k12, k13);\n    this.m_K.ey.set(k12, k22, k23);\n    this.m_K.ez.set(k13, k23, k33);\n  }\n\n  // Compute motor and limit terms.\n  if (this.m_enableLimit) {\n\n    var jointTranslation = Vec2.dot(this.m_axis, d); // float\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * Settings.linearSlop) {\n      this.m_limitState = equalLimits;\n\n    } else if (jointTranslation <= this.m_lowerTranslation) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_limitState = atLowerLimit;\n        this.m_impulse.z = 0.0;\n      }\n\n    } else if (jointTranslation >= this.m_upperTranslation) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_limitState = atUpperLimit;\n        this.m_impulse.z = 0.0;\n      }\n\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n\n  } else {\n    this.m_limitState = inactiveLimit;\n    this.m_impulse.z = 0.0;\n  }\n\n  if (this.m_enableMotor == false) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.wAdd(this.m_impulse.x, this.m_perp, this.m_motorImpulse\n        + this.m_impulse.z, this.m_axis);\n    var LA = this.m_impulse.x * this.m_s1 + this.m_impulse.y\n        + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1;\n    var LB = this.m_impulse.x * this.m_s2 + this.m_impulse.y\n        + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;\n\n    vA.wSub(mA, P);\n    wA -= iA * LA;\n\n    vB.wAdd(mB, P);\n    wB += iB * LB;\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPrismaticJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  // Solve linear motor constraint.\n  if (this.m_enableMotor && this.m_limitState != equalLimits) {\n    var Cdot = Vec2.dot(this.m_axis, Vec2.sub(vB, vA)) + this.m_a2 * wB\n        - this.m_a1 * wA;\n    var impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\n    var oldImpulse = this.m_motorImpulse;\n    var maxImpulse = step.dt * this.m_maxMotorForce;\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    var P = Vec2.zero().wSet(impulse, this.m_axis);\n    var LA = impulse * this.m_a1;\n    var LB = impulse * this.m_a2;\n\n    vA.wSub(mA, P);\n    wA -= iA * LA;\n\n    vB.wAdd(mB, P);\n    wB += iB * LB;\n  }\n\n  var Cdot1 = Vec2.zero();\n  Cdot1.x += Vec2.dot(this.m_perp, vB) + this.m_s2 * wB;\n  Cdot1.x -= Vec2.dot(this.m_perp, vA) + this.m_s1 * wA;\n  Cdot1.y = wB - wA;\n\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit) {\n    // Solve prismatic and limit constraint in block form.\n    var Cdot2 = 0;\n    Cdot2 += Vec2.dot(this.m_axis, vB) + this.m_a2 * wB;\n    Cdot2 -= Vec2.dot(this.m_axis, vA) + this.m_a1 * wA;\n\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n\n    var f1 = Vec3(this.m_impulse);\n    var df = this.m_K.solve33(Vec3.neg(Cdot)); // Vec3\n    this.m_impulse.add(df);\n\n    if (this.m_limitState == atLowerLimit) {\n      this.m_impulse.z = Math.max(this.m_impulse.z, 0.0);\n    } else if (this.m_limitState == atUpperLimit) {\n      this.m_impulse.z = Math.min(this.m_impulse.z, 0.0);\n    }\n\n    // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n    // f1(1:2)\n    var b = Vec2.wAdd(-1, Cdot1, -(this.m_impulse.z - f1.z), Vec2.neo(this.m_K.ez.x, this.m_K.ez.y)); // Vec2\n    var f2r = Vec2.add(this.m_K.solve22(b), Vec2.neo(f1.x, f1.y)); // Vec2\n    this.m_impulse.x = f2r.x;\n    this.m_impulse.y = f2r.y;\n\n    df = Vec3.sub(this.m_impulse, f1);\n\n    var P = Vec2.wAdd(df.x, this.m_perp, df.z, this.m_axis); // Vec2\n    var LA = df.x * this.m_s1 + df.y + df.z * this.m_a1; // float\n    var LB = df.x * this.m_s2 + df.y + df.z * this.m_a2; // float\n\n    vA.wSub(mA, P);\n    wA -= iA * LA;\n\n    vB.wAdd(mB, P);\n    wB += iB * LB;\n  } else {\n    // Limit is inactive, just solve the prismatic constraint in block form.\n    var df = this.m_K.solve22(Vec2.neg(Cdot1)); // Vec2\n    this.m_impulse.x += df.x;\n    this.m_impulse.y += df.y;\n\n    var P = Vec2.zero().wAdd(df.x, this.m_perp); // Vec2\n    var LA = df.x * this.m_s1 + df.y; // float\n    var LB = df.x * this.m_s2 + df.y; // float\n\n    vA.wSub(mA, P);\n    wA -= iA * LA;\n\n    vB.wAdd(mB, P);\n    wB += iB * LB;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPrismaticJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  // Compute fresh Jacobians\n  var rA = Rot.mul(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n  var rB = Rot.mul(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n  var d = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA)); // Vec2\n\n  var axis = Rot.mul(qA, this.m_localXAxisA); // Vec2\n  var a1 = Vec2.cross(Vec2.add(d, rA), axis); // float\n  var a2 = Vec2.cross(rB, axis); // float\n  var perp = Rot.mul(qA, this.m_localYAxisA); // Vec2\n\n  var s1 = Vec2.cross(Vec2.add(d, rA), perp); // float\n  var s2 = Vec2.cross(rB, perp); // float\n\n  var impulse = Vec3();\n  var C1 = Vec2.zero(); // Vec2\n  C1.x = Vec2.dot(perp, d);\n  C1.y = aB - aA - this.m_referenceAngle;\n\n  var linearError = Math.abs(C1.x); // float\n  var angularError = Math.abs(C1.y); // float\n\n  var linearSlop = Settings.linearSlop;\n  var maxLinearCorrection = Settings.maxLinearCorrection;\n\n  var active = false; // bool\n  var C2 = 0.0; // float\n  if (this.m_enableLimit) {\n\n    var translation = Vec2.dot(axis, d); // float\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * linearSlop) {\n      // Prevent large angular corrections\n      C2 = Math.clamp(translation, -maxLinearCorrection, maxLinearCorrection);\n      linearError = Math.max(linearError, Math.abs(translation));\n      active = true;\n\n    } else if (translation <= this.m_lowerTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_lowerTranslation + linearSlop,\n          -maxLinearCorrection, 0.0);\n      linearError = Math\n          .max(linearError, this.m_lowerTranslation - translation);\n      active = true;\n\n    } else if (translation >= this.m_upperTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_upperTranslation - linearSlop, 0.0,\n          maxLinearCorrection);\n      linearError = Math\n          .max(linearError, translation - this.m_upperTranslation);\n      active = true;\n    }\n  }\n\n  if (active) {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n    var k12 = iA * s1 + iB * s2; // float\n    var k13 = iA * s1 * a1 + iB * s2 * a2; // float\n    var k22 = iA + iB; // float\n    if (k22 == 0.0) {\n      // For fixed rotation\n      k22 = 1.0;\n    }\n    var k23 = iA * a1 + iB * a2; // float\n    var k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2; // float\n\n    var K = new Mat33()\n    K.ex.set(k11, k12, k13);\n    K.ey.set(k12, k22, k23);\n    K.ez.set(k13, k23, k33);\n\n    var C = Vec3();\n    C.x = C1.x;\n    C.y = C1.y;\n    C.z = C2;\n\n    impulse = K.solve33(Vec3.neg(C));\n  } else {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n    var k12 = iA * s1 + iB * s2; // float\n    var k22 = iA + iB; // float\n    if (k22 == 0.0) {\n      k22 = 1.0;\n    }\n\n    var K = new Mat22();\n    K.ex.set(k11, k12);\n    K.ey.set(k12, k22);\n\n    var impulse1 = K.solve(Vec2.neg(C1)); // Vec2\n    impulse.x = impulse1.x;\n    impulse.y = impulse1.y;\n    impulse.z = 0.0;\n  }\n\n  var P = Vec2.wAdd(impulse.x, perp, impulse.z, axis); // Vec2\n  var LA = impulse.x * s1 + impulse.y + impulse.z * a1; // float\n  var LB = impulse.x * s2 + impulse.y + impulse.z * a2; // float\n\n  cA.wSub(mA, P);\n  aA -= iA * LA;\n  cB.wAdd(mB, P);\n  aB += iB * LB;\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return linearError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = RevoluteJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nRevoluteJoint.TYPE = 'revolute-joint';\n\nRevoluteJoint._super = Joint;\nRevoluteJoint.prototype = create(RevoluteJoint._super.prototype);\n\n/**\n * @typedef {Object} RevoluteJointDef\n *\n * Revolute joint definition. This requires defining an anchor point where the\n * bodies are joined. The definition uses local anchor points so that the\n * initial configuration can violate the constraint slightly. You also need to\n * specify the initial relative angle for joint limits. This helps when saving\n * and loading a game.\n * \n * The local anchor points are measured from the body's origin rather than the\n * center of mass because: 1. you might not know where the center of mass will\n * be. 2. if you add/remove shapes from a body and recompute the mass, the\n * joints will be broken.\n * \n * @prop {bool} enableLimit A flag to enable joint limits.\n * @prop {bool} enableMotor A flag to enable the joint motor.\n * @prop {float} lowerAngle The lower angle for the joint limit (radians).\n * @prop {float} upperAngle The upper angle for the joint limit (radians).\n * @prop {float} motorSpeed The desired motor speed. Usually in radians per\n *       second.\n * @prop {float} maxMotorTorque The maximum motor torque used to achieve the\n *       desired motor speed. Usually in N-m.\n */\nvar RevoluteJointDef = {\n  lowerAngle : 0.0,\n  upperAngle : 0.0,\n  maxMotorTorque : 0.0,\n  motorSpeed : 0.0,\n  enableLimit : false,\n  enableMotor : false\n};\n\n/**\n * A revolute joint constrains two bodies to share a common point while they are\n * free to rotate about the point. The relative rotation about the shared point\n * is the joint angle. You can limit the relative rotation with a joint limit\n * that specifies a lower and upper angle. You can use a motor to drive the\n * relative rotation about the shared point. A maximum motor torque is provided\n * so that infinite forces are not generated.\n * \n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\nfunction RevoluteJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RevoluteJoint)) {\n    return new RevoluteJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, RevoluteJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  this.m_type = RevoluteJoint.TYPE;\n\n  this.m_localAnchorA = def.localAnchorA || bodyA.getLocalPoint(anchor);\n  this.m_localAnchorB = def.localAnchorB || bodyB.getLocalPoint(anchor);\n  this.m_referenceAngle = bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_impulse = Vec3();\n  this.m_motorImpulse = 0.0;\n\n  this.m_lowerAngle = def.lowerAngle;\n  this.m_upperAngle = def.upperAngle;\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  // effective mass for point-to-point constraint.\n  this.m_mass = new Mat33();\n  // effective mass for motor/limit angular constraint.\n  this.m_motorMass; // float\n  this.m_limitState = inactiveLimit;\n\n  // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Motor constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nRevoluteJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nRevoluteJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Get the reference angle.\n */\nRevoluteJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n}\n\n/**\n * Get the current joint angle in radians.\n */\nRevoluteJoint.prototype.getJointAngle = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_sweep.a - bA.m_sweep.a - this.m_referenceAngle;\n}\n\n/**\n * Get the current joint angle speed in radians per second.\n */\nRevoluteJoint.prototype.getJointSpeed = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_angularVelocity - bA.m_angularVelocity;\n}\n\n/**\n * Is the joint motor enabled?\n */\nRevoluteJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nRevoluteJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Get the current motor torque given the inverse time step. Unit is N*m.\n */\nRevoluteJoint.prototype.getMotorTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\n/**\n * Set the motor speed in radians per second.\n */\nRevoluteJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Get the motor speed in radians per second.\n */\nRevoluteJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Set the maximum motor torque, usually in N-m.\n */\nRevoluteJoint.prototype.setMaxMotorTorque = function(torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n}\n\n/**\n * Is the joint limit enabled?\n */\nRevoluteJoint.prototype.isLimitEnabled = function() {\n  return this.m_enableLimit;\n}\n\n/**\n * Enable/disable the joint limit.\n */\nRevoluteJoint.prototype.enableLimit = function(flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Get the lower joint limit in radians.\n */\nRevoluteJoint.prototype.getLowerLimit = function() {\n  return this.m_lowerAngle;\n}\n\n/**\n * Get the upper joint limit in radians.\n */\nRevoluteJoint.prototype.getUpperLimit = function() {\n  return this.m_upperAngle;\n}\n\n/**\n * Set the joint limits in radians.\n */\nRevoluteJoint.prototype.setLimits = function(lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n\n  if (lower != this.m_lowerAngle || upper != this.m_upperAngle) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_impulse.z = 0.0;\n    this.m_lowerAngle = lower;\n    this.m_upperAngle = upper;\n  }\n}\n\nRevoluteJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nRevoluteJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\n/**\n * Get the reaction force given the inverse time step. Unit is N.\n */\nRevoluteJoint.prototype.getReactionForce = function(inv_dt) {\n  var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n  return inv_dt * P;\n}\n\n/**\n * Get the reaction torque due to the joint limit given the inverse time step.\n * Unit is N*m.\n */\nRevoluteJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.z;\n}\n\nRevoluteJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mul(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mul(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = (iA + iB == 0.0); // bool\n\n  this.m_mass.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y\n      * this.m_rB.y * iB;\n  this.m_mass.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y\n      * this.m_rB.x * iB;\n  this.m_mass.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  this.m_mass.ex.y = this.m_mass.ey.x;\n  this.m_mass.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x\n      * this.m_rB.x * iB;\n  this.m_mass.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  this.m_mass.ex.z = this.m_mass.ez.x;\n  this.m_mass.ey.z = this.m_mass.ez.y;\n  this.m_mass.ez.z = iA + iB;\n\n  this.m_motorMass = iA + iB;\n  if (this.m_motorMass > 0.0) {\n    this.m_motorMass = 1.0 / this.m_motorMass;\n  }\n\n  if (this.m_enableMotor == false || fixedRotation) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (this.m_enableLimit && fixedRotation == false) {\n    var jointAngle = aB - aA - this.m_referenceAngle; // float\n\n    if (Math.abs(this.m_upperAngle - this.m_lowerAngle) < 2.0 * Settings.angularSlop) {\n      this.m_limitState = equalLimits;\n\n    } else if (jointAngle <= this.m_lowerAngle) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_impulse.z = 0.0;\n      }\n      this.m_limitState = atLowerLimit;\n\n    } else if (jointAngle >= this.m_upperAngle) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_impulse.z = 0.0;\n      }\n      this.m_limitState = atUpperLimit;\n\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n\n  } else {\n    this.m_limitState = inactiveLimit;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n\n    vA.wSub(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_motorImpulse + this.m_impulse.z);\n\n    vB.wAdd(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_motorImpulse + this.m_impulse.z);\n\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRevoluteJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = (iA + iB == 0.0); // bool\n\n  // Solve motor constraint.\n  if (this.m_enableMotor && this.m_limitState != equalLimits\n      && fixedRotation == false) {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n    var impulse = -this.m_motorMass * Cdot; // float\n    var oldImpulse = this.m_motorImpulse; // float\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve limit constraint.\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit\n      && fixedRotation == false) {\n    var Cdot1 = Vec2.zero();\n    Cdot1.wAdd(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.wSub(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var Cdot2 = wB - wA; // float\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n\n    var impulse = Vec3.neg(this.m_mass.solve33(Cdot)); // Vec3\n\n    if (this.m_limitState == equalLimits) {\n      this.m_impulse.add(impulse);\n\n    } else if (this.m_limitState == atLowerLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse < 0.0) {\n        var rhs = Vec2.wAdd(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n\n      } else {\n        this.m_impulse.add(impulse);\n      }\n\n    } else if (this.m_limitState == atUpperLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse > 0.0) {\n        var rhs = Vec2.wAdd(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n\n      } else {\n        this.m_impulse.add(impulse);\n      }\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    vA.wSub(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n\n    vB.wAdd(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n\n  } else {\n    // Solve point-to-point constraint\n    var Cdot = Vec2.zero();\n    Cdot.wAdd(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.wSub(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var impulse = this.m_mass.solve22(Vec2.neg(Cdot)); // Vec2\n\n    this.m_impulse.x += impulse.x;\n    this.m_impulse.y += impulse.y;\n\n    vA.wSub(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.wAdd(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRevoluteJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var angularError = 0.0; // float\n  var positionError = 0.0; // float\n\n  var fixedRotation = (this.m_invIA + this.m_invIB == 0.0); // bool\n\n  // Solve angular limit constraint.\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit\n      && fixedRotation == false) {\n    var angle = aB - aA - this.m_referenceAngle; // float\n    var limitImpulse = 0.0; // float\n\n    if (this.m_limitState == equalLimits) {\n      // Prevent large angular corrections\n      var C = Math.clamp(angle - this.m_lowerAngle,\n          -Settings.maxAngularCorrection, Settings.maxAngularCorrection); // float\n      limitImpulse = -this.m_motorMass * C;\n      angularError = Math.abs(C);\n\n    } else if (this.m_limitState == atLowerLimit) {\n      var C = angle - this.m_lowerAngle; // float\n      angularError = -C;\n\n      // Prevent large angular corrections and allow some slop.\n      C = Math.clamp(C + Settings.angularSlop, -Settings.maxAngularCorrection,\n          0.0);\n      limitImpulse = -this.m_motorMass * C;\n\n    } else if (this.m_limitState == atUpperLimit) {\n      var C = angle - this.m_upperAngle; // float\n      angularError = C;\n\n      // Prevent large angular corrections and allow some slop.\n      C = Math.clamp(C - Settings.angularSlop, 0.0,\n          Settings.maxAngularCorrection);\n      limitImpulse = -this.m_motorMass * C;\n    }\n\n    aA -= this.m_invIA * limitImpulse;\n    aB += this.m_invIB * limitImpulse;\n  }\n\n  // Solve point-to-point constraint.\n  {\n    qA.set(aA);\n    qB.set(aB);\n    var rA = Rot.mul(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n    var rB = Rot.mul(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n\n    var C = Vec2.zero();\n    C.wAdd(1, cB, 1, rB);\n    C.wSub(1, cA, 1, rA);\n    positionError = C.length();\n\n    var mA = this.m_invMassA;\n    var mB = this.m_invMassB; // float\n    var iA = this.m_invIA;\n    var iB = this.m_invIB; // float\n\n    var K = new Mat22();\n    K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\n    K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\n    K.ey.x = K.ex.y;\n    K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\n\n    var impulse = Vec2.neg(K.solve(C)); // Vec2\n\n    cA.wSub(mA, impulse);\n    aA -= iA * Vec2.cross(rA, impulse);\n\n    cB.wAdd(mB, impulse);\n    aB += iB * Vec2.cross(rB, impulse);\n  }\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return positionError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = TimeOfImpact;\nmodule.exports.Input = TOIInput;\nmodule.exports.Output = TOIOutput;\n\nvar Settings = require('../Settings');\n\nvar common = require('../util/common');\nvar Timer = require('../util/Timer');\n\nvar stats = require('../common/stats');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Distance = require('./Distance');\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n\n/**\n * Input parameters for TimeOfImpact.\n * \n * @prop {DistanceProxy} proxyA\n * @prop {DistanceProxy} proxyB\n * @prop {Sweep} sweepA\n * @prop {Sweep} sweepB\n * @prop tMax defines sweep interval [0, tMax]\n */\nfunction TOIInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.sweepA = new Sweep();\n  this.sweepB = new Sweep();\n  this.tMax;\n};\n\n// TOIOutput State\nTOIOutput.e_unknown = 0;\nTOIOutput.e_failed = 1;\nTOIOutput.e_overlapped = 2;\nTOIOutput.e_touching = 3;\nTOIOutput.e_separated = 4;\n\n/**\n * Output parameters for TimeOfImpact.\n * \n * @prop state\n * @prop t\n */\nfunction TOIOutput() {\n  this.state;\n  this.t;\n};\n\nstats.toiTime = 0;\nstats.toiMaxTime = 0;\nstats.toiCalls = 0;\nstats.toiIters = 0;\nstats.toiMaxIters = 0;\nstats.toiRootIters = 0;\nstats.toiMaxRootIters = 0;\n\n/**\n * Compute the upper bound on time before two shapes penetrate. Time is\n * represented as a fraction between [0,tMax]. This uses a swept separating axis\n * and may miss some intermediate, non-tunneling collision. If you change the\n * time interval, you should call this function again.\n * \n * Note: use Distance to compute the contact point and normal at the time of\n * impact.\n * \n * CCD via the local separating axis method. This seeks progression by computing\n * the largest time at which separation is maintained.\n */\nfunction TimeOfImpact(output, input) {\n  var timer = Timer.now();\n\n  ++stats.toiCalls;\n\n  output.state = TOIOutput.e_unknown;\n  output.t = input.tMax;\n\n  var proxyA = input.proxyA; // DistanceProxy\n  var proxyB = input.proxyB; // DistanceProxy\n\n  var sweepA = input.sweepA; // Sweep\n  var sweepB = input.sweepB; // Sweep\n\n  // Large rotations can make the root finder fail, so we normalize the\n  // sweep angles.\n  sweepA.normalize();\n  sweepB.normalize();\n\n  var tMax = input.tMax;\n\n  var totalRadius = proxyA.m_radius + proxyB.m_radius;\n  var target = Math.max(Settings.linearSlop, totalRadius - 3.0 * Settings.linearSlop);\n  var tolerance = 0.25 * Settings.linearSlop;\n  _ASSERT && common.assert(target > tolerance);\n\n  var t1 = 0.0;\n  var k_maxIterations = Settings.maxTOIIterations;\n  var iter = 0;\n\n  // Prepare input for distance query.\n  var cache = new SimplexCache();\n\n  var distanceInput = new DistanceInput();\n  distanceInput.proxyA = input.proxyA;\n  distanceInput.proxyB = input.proxyB;\n  distanceInput.useRadii = false;\n\n  // The outer loop progressively attempts to compute new separating axes.\n  // This loop terminates when an axis is repeated (no progress is made).\n  for (;;) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    sweepA.getTransform(xfA, t1);\n    sweepB.getTransform(xfB, t1);\n\n    // Get the distance between shapes. We can also use the results\n    // to get a separating axis.\n    distanceInput.transformA = xfA;\n    distanceInput.transformB = xfB;\n    var distanceOutput = new DistanceOutput();\n    Distance(distanceOutput, cache, distanceInput);\n\n    // If the shapes are overlapped, we give up on continuous collision.\n    if (distanceOutput.distance <= 0.0) {\n      // Failure!\n      output.state = TOIOutput.e_overlapped;\n      output.t = 0.0;\n      break;\n    }\n\n    if (distanceOutput.distance < target + tolerance) {\n      // Victory!\n      output.state = TOIOutput.e_touching;\n      output.t = t1;\n      break;\n    }\n\n    // Initialize the separating axis.\n    var fcn = new SeparationFunction();\n    fcn.initialize(cache, proxyA, sweepA, proxyB, sweepB, t1);\n\n    if (false) {\n      // Dump the curve seen by the root finder\n      var N = 100;\n      var dx = 1.0 / N;\n      var xs = []; // [ N + 1 ];\n      var fs = []; // [ N + 1 ];\n      var x = 0.0;\n      for (var i = 0; i <= N; ++i) {\n        sweepA.getTransform(xfA, x);\n        sweepB.getTransform(xfB, x);\n        var f = fcn.evaluate(xfA, xfB) - target;\n        printf(\"%g %g\\n\", x, f);\n        xs[i] = x;\n        fs[i] = f;\n        x += dx;\n      }\n    }\n\n    // Compute the TOI on the separating axis. We do this by successively\n    // resolving the deepest point. This loop is bounded by the number of\n    // vertices.\n    var done = false;\n    var t2 = tMax;\n    var pushBackIter = 0;\n    for (;;) {\n      // Find the deepest point at t2. Store the witness point indices.\n      var s2 = fcn.findMinSeparation(t2);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB;\n\n      // Is the final configuration separated?\n      if (s2 > target + tolerance) {\n        // Victory!\n        output.state = TOIOutput.e_separated;\n        output.t = tMax;\n        done = true;\n        break;\n      }\n\n      // Has the separation reached tolerance?\n      if (s2 > target - tolerance) {\n        // Advance the sweeps\n        t1 = t2;\n        break;\n      }\n\n      // Compute the initial separation of the witness points.\n      var s1 = fcn.evaluate(t1);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB;\n\n      // Check for initial overlap. This might happen if the root finder\n      // runs out of iterations.\n      if (s1 < target - tolerance) {\n        output.state = TOIOutput.e_failed;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Check for touching\n      if (s1 <= target + tolerance) {\n        // Victory! t1 should hold the TOI (could be 0.0).\n        output.state = TOIOutput.e_touching;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Compute 1D root of: f(x) - target = 0\n      var rootIterCount = 0;\n      var a1 = t1, a2 = t2;\n      for (;;) {\n        // Use a mix of the secant rule and bisection.\n        var t;\n        if (rootIterCount & 1) {\n          // Secant rule to improve convergence.\n          t = a1 + (target - s1) * (a2 - a1) / (s2 - s1);\n        } else {\n          // Bisection to guarantee progress.\n          t = 0.5 * (a1 + a2);\n        }\n\n        ++rootIterCount;\n        ++stats.toiRootIters;\n\n        var s = fcn.evaluate(t);\n        var indexA = fcn.indexA;\n        var indexB = fcn.indexB;\n\n        if (Math.abs(s - target) < tolerance) {\n          // t2 holds a tentative value for t1\n          t2 = t;\n          break;\n        }\n\n        // Ensure we continue to bracket the root.\n        if (s > target) {\n          a1 = t;\n          s1 = s;\n        } else {\n          a2 = t;\n          s2 = s;\n        }\n\n        if (rootIterCount == 50) {\n          break;\n        }\n      }\n\n      stats.toiMaxRootIters = Math.max(stats.toiMaxRootIters, rootIterCount);\n\n      ++pushBackIter;\n\n      if (pushBackIter == Settings.maxPolygonVertices) {\n        break;\n      }\n    }\n\n    ++iter;\n    ++stats.toiIters;\n\n    if (done) {\n      break;\n    }\n\n    if (iter == k_maxIterations) {\n      // Root finder got stuck. Semi-victory.\n      output.state = TOIOutput.e_failed;\n      output.t = t1;\n      break;\n    }\n  }\n\n  stats.toiMaxIters = Math.max(stats.toiMaxIters, iter);\n\n  var time = Timer.diff(timer);\n  stats.toiMaxTime = Math.max(stats.toiMaxTime, time);\n  stats.toiTime += time;\n}\n\n// SeparationFunction Type\nvar e_points = 1;\nvar e_faceA = 2;\nvar e_faceB = 3;\n\nfunction SeparationFunction() {\n  this.m_proxyA = new DistanceProxy();\n  this.m_proxyB = new DistanceProxy();\n  this.m_sweepA;// Sweep\n  this.m_sweepB;// Sweep\n  this.m_type;\n  this.m_localPoint = Vec2.zero();\n  this.m_axis = Vec2.zero();\n};\n\n// TODO_ERIN might not need to return the separation\n\n/**\n * @param {SimplexCache} cache\n * @param {DistanceProxy} proxyA\n * @param {Sweep} sweepA\n * @param {DistanceProxy} proxyB\n * @param {Sweep} sweepB\n * @param {float} t1\n */\nSeparationFunction.prototype.initialize = function(cache, proxyA, sweepA, proxyB, sweepB, t1) {\n  this.m_proxyA = proxyA;\n  this.m_proxyB = proxyB;\n  var count = cache.count;\n  _ASSERT && common.assert(0 < count && count < 3);\n\n  this.m_sweepA = sweepA;\n  this.m_sweepB = sweepB;\n\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t1);\n  this.m_sweepB.getTransform(xfB, t1);\n\n  if (count == 1) {\n    this.m_type = e_points;\n    var localPointA = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointA = Transform.mul(xfA, localPointA);\n    var pointB = Transform.mul(xfB, localPointB);\n    this.m_axis.wSet(1, pointB, -1, pointA);\n    var s = this.m_axis.normalize();\n    return s;\n\n  } else if (cache.indexA[0] == cache.indexA[1]) {\n    // Two points on B and one on A.\n    this.m_type = e_faceB;\n    var localPointB1 = proxyB.getVertex(cache.indexB[0]);\n    var localPointB2 = proxyB.getVertex(cache.indexB[1]);\n\n    this.m_axis = Vec2.cross(Vec2.sub(localPointB2, localPointB1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mul(xfB.q, this.m_axis);\n\n    this.m_localPoint = Vec2.mid(localPointB1, localPointB2);\n    var pointB = Transform.mul(xfB, this.m_localPoint);\n\n    var localPointA = proxyA.getVertex(cache.indexA[0]);\n    var pointA = Transform.mul(xfA, localPointA);\n\n    var s = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n    return s;\n\n  } else {\n    // Two points on A and one or two points on B.\n    this.m_type = e_faceA;\n    var localPointA1 = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointA2 = this.m_proxyA.getVertex(cache.indexA[1]);\n\n    this.m_axis = Vec2.cross(Vec2.sub(localPointA2, localPointA1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mul(xfA.q, this.m_axis);\n\n    this.m_localPoint = Vec2.mid(localPointA1, localPointA2);\n    var pointA = Transform.mul(xfA, this.m_localPoint);\n\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointB = Transform.mul(xfB, localPointB);\n\n    var s = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n    return s;\n  }\n};\n\nSeparationFunction.prototype.compute = function(find, t) {\n  // It was findMinSeparation and evaluate\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t);\n  this.m_sweepB.getTransform(xfB, t);\n\n  switch (this.m_type) {\n  case e_points: {\n    if (find) {\n      var axisA = Rot.mulT(xfA.q, this.m_axis);\n      var axisB = Rot.mulT(xfB.q, Vec2.neg(this.m_axis));\n\n      this.indexA = this.m_proxyA.getSupport(axisA);\n      this.indexB = this.m_proxyB.getSupport(axisB);\n    }\n\n    var localPointA = this.m_proxyA.getVertex(this.indexA);\n    var localPointB = this.m_proxyB.getVertex(this.indexB);\n\n    var pointA = Transform.mul(xfA, localPointA);\n    var pointB = Transform.mul(xfB, localPointB);\n\n    var sep = Vec2.dot(pointB, this.m_axis) - Vec2.dot(pointA, this.m_axis);\n    return sep;\n  }\n\n  case e_faceA: {\n    var normal = Rot.mul(xfA.q, this.m_axis);\n    var pointA = Transform.mul(xfA, this.m_localPoint);\n\n    if (find) {\n      var axisB = Rot.mulT(xfB.q, Vec2.neg(normal));\n\n      this.indexA = -1;\n      this.indexB = this.m_proxyB.getSupport(axisB);\n    }\n\n    var localPointB = this.m_proxyB.getVertex(this.indexB);\n    var pointB = Transform.mul(xfB, localPointB);\n\n    var sep = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n    return sep;\n  }\n\n  case e_faceB: {\n    var normal = Rot.mul(xfB.q, this.m_axis);\n    var pointB = Transform.mul(xfB, this.m_localPoint);\n\n    if (find) {\n      var axisA = Rot.mulT(xfA.q, Vec2.neg(normal));\n\n      this.indexB = -1;\n      this.indexA = this.m_proxyA.getSupport(axisA);\n    }\n\n    var localPointA = this.m_proxyA.getVertex(this.indexA);\n    var pointA = Transform.mul(xfA, localPointA);\n\n    var sep = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n    return sep;\n  }\n\n  default:\n    _ASSERT && common.assert(false);\n    if (find) {\n      this.indexA = -1;\n      this.indexB = -1;\n    }\n    return 0.0;\n  }\n};\n\nSeparationFunction.prototype.findMinSeparation = function(t) {\n  return this.compute(true, t);\n};\n\nSeparationFunction.prototype.evaluate = function(t) {\n  return this.compute(false, t);\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Pool = require('../util/Pool');\nvar Vec2 = require('../common/Vec2');\nvar Math = require('../common/Math');\nvar AABB = require('./AABB');\n\nmodule.exports = DynamicTree;\n\n/**\n * A node in the dynamic tree. The client does not interact with this directly.\n * \n * @prop {AABB} aabb Enlarged AABB\n * @prop {integer} height 0: leaf, -1: free node\n */\nfunction TreeNode(id) {\n  this.id = id;\n  this.aabb = new AABB();\n  this.userData = null;\n  this.parent = null;\n  this.child1 = null;\n  this.child2 = null;\n  this.height = -1;\n\n  this.toString = function() {\n    return this.id + \": \" + this.userData;\n  }\n};\n\nTreeNode.prototype.isLeaf = function() {\n  return this.child1 == null;\n}\n/**\n * A dynamic AABB tree broad-phase, inspired by Nathanael Presson's btDbvt. A\n * dynamic tree arranges data in a binary tree to accelerate queries such as\n * volume queries and ray casts. Leafs are proxies with an AABB. In the tree we\n * expand the proxy AABB by `aabbExtension` so that the proxy AABB is bigger\n * than the client object. This allows the client object to move by small\n * amounts without triggering a tree update.\n * \n * Nodes are pooled and relocatable, so we use node indices rather than\n * pointers.\n */\nfunction DynamicTree() {\n  this.m_root = null;\n  this.m_nodes = {}\n  this.m_lastProxyId = 0;\n\n  this.m_pool = new Pool({\n    create : function() {\n      return new TreeNode();\n    }\n  });\n};\n\n/**\n * Get proxy user data.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\nDynamicTree.prototype.getUserData = function(id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.userData;\n}\n\n/**\n * Get the fat AABB for a node id.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\nDynamicTree.prototype.getFatAABB = function(id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.aabb;\n}\n\nDynamicTree.prototype.allocateNode = function() {\n  var node = this.m_pool.allocate();\n  node.id = ++this.m_lastProxyId;\n  node.userData = null;\n  node.parent = null;\n  node.child1 = null;\n  node.child2 = null;\n  node.height = -1;\n  this.m_nodes[node.id] = node;\n  return node;\n}\n\nDynamicTree.prototype.freeNode = function(node) {\n  this.m_pool.release(node);\n  node.height = -1;\n  delete this.m_nodes[node.id];\n}\n\n/**\n * Create a proxy in the tree as a leaf node. We return the index of the node\n * instead of a pointer so that we can grow the node pool.\n * \n * Create a proxy. Provide a tight fitting AABB and a userData pointer.\n */\nDynamicTree.prototype.createProxy = function(aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb))\n\n  var node = this.allocateNode()\n\n  node.aabb.set(aabb);\n\n  // Fatten the aabb.\n  AABB.extend(node.aabb, Settings.aabbExtension);\n\n  node.userData = userData;\n  node.height = 0;\n\n  this.insertLeaf(node);\n\n  return node.id;\n}\n\n/**\n * Destroy a proxy. This asserts if the id is invalid.\n */\nDynamicTree.prototype.destroyProxy = function(id) {\n  var node = this.m_nodes[id];\n\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n\n  this.removeLeaf(node);\n  this.freeNode(node);\n}\n\n/**\n * Move a proxy with a swepted AABB. If the proxy has moved outside of its\n * fattened AABB, then the proxy is removed from the tree and re-inserted.\n * Otherwise the function returns immediately.\n * \n * @param id\n * @param aabb\n * @param {Vec2} d Displacement\n * \n * @return true if the proxy was re-inserted.\n */\nDynamicTree.prototype.moveProxy = function(id, aabb, d) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  _ASSERT && common.assert(!d || Vec2.isValid(d));\n\n  var node = this.m_nodes[id];\n\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n\n  if (node.aabb.contains(aabb)) {\n    return false;\n  }\n\n  this.removeLeaf(node);\n\n  node.aabb.set(aabb)\n\n  // Extend AABB.\n  aabb = node.aabb;\n  AABB.extend(aabb, Settings.aabbExtension);\n\n  // Predict AABB displacement.\n  // var d = Vec2.mul(Settings.aabbMultiplier, displacement);\n\n  if (d.x < 0.0) {\n    aabb.lowerBound.x += d.x * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.x += d.x * Settings.aabbMultiplier;\n  }\n\n  if (d.y < 0.0) {\n    aabb.lowerBound.y += d.y * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.y += d.y * Settings.aabbMultiplier;\n  }\n\n  this.insertLeaf(node);\n\n  return true;\n}\n\nDynamicTree.prototype.insertLeaf = function(leaf) {\n  _ASSERT && common.assert(AABB.isValid(leaf.aabb));\n\n  if (this.m_root == null) {\n    this.m_root = leaf;\n    this.m_root.parent = null;\n    return;\n  }\n\n  // Find the best sibling for this node\n  var leafAABB = leaf.aabb;\n  var index = this.m_root;\n  while (index.isLeaf() == false) {\n    var child1 = index.child1;\n    var child2 = index.child2;\n\n    var area = index.aabb.getPerimeter();\n\n    var combinedAABB = new AABB();\n    combinedAABB.combine(index.aabb, leafAABB);\n    var combinedArea = combinedAABB.getPerimeter();\n\n    // Cost of creating a new parent for this node and the new leaf\n    var cost = 2.0 * combinedArea;\n\n    // Minimum cost of pushing the leaf further down the tree\n    var inheritanceCost = 2.0 * (combinedArea - area);\n\n    // Cost of descending into child1\n    var cost1;\n    if (child1.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      cost1 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      var oldArea = child1.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost1 = (newArea - oldArea) + inheritanceCost;\n    }\n\n    // Cost of descending into child2\n    var cost2;\n    if (child2.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      cost2 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      var oldArea = child2.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost2 = newArea - oldArea + inheritanceCost;\n    }\n\n    // Descend according to the minimum cost.\n    if (cost < cost1 && cost < cost2) {\n      break;\n    }\n\n    // Descend\n    if (cost1 < cost2) {\n      index = child1;\n    } else {\n      index = child2;\n    }\n  }\n\n  var sibling = index;\n\n  // Create a new parent.\n  var oldParent = sibling.parent;\n  var newParent = this.allocateNode();\n  newParent.parent = oldParent;\n  newParent.userData = null;\n  newParent.aabb.combine(leafAABB, sibling.aabb);\n  newParent.height = sibling.height + 1;\n\n  if (oldParent != null) {\n    // The sibling was not the root.\n    if (oldParent.child1 == sibling) {\n      oldParent.child1 = newParent;\n    } else {\n      oldParent.child2 = newParent;\n    }\n\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n  } else {\n    // The sibling was the root.\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n    this.m_root = newParent;\n  }\n\n  // Walk back up the tree fixing heights and AABBs\n  index = leaf.parent;\n  while (index != null) {\n    index = this.balance(index);\n\n    var child1 = index.child1;\n    var child2 = index.child2;\n\n    _ASSERT && common.assert(child1 != null);\n    _ASSERT && common.assert(child2 != null);\n\n    index.height = 1 + Math.max(child1.height, child2.height);\n    index.aabb.combine(child1.aabb, child2.aabb);\n\n    index = index.parent;\n  }\n\n  // validate();\n}\n\nDynamicTree.prototype.removeLeaf = function(leaf) {\n  if (leaf == this.m_root) {\n    this.m_root = null;\n    return;\n  }\n\n  var parent = leaf.parent;\n  var grandParent = parent.parent;\n  var sibling;\n  if (parent.child1 == leaf) {\n    sibling = parent.child2;\n  } else {\n    sibling = parent.child1;\n  }\n\n  if (grandParent != null) {\n    // Destroy parent and connect sibling to grandParent.\n    if (grandParent.child1 == parent) {\n      grandParent.child1 = sibling;\n    } else {\n      grandParent.child2 = sibling;\n    }\n    sibling.parent = grandParent;\n    this.freeNode(parent);\n\n    // Adjust ancestor bounds.\n    var index = grandParent;\n    while (index != null) {\n      index = this.balance(index);\n\n      var child1 = index.child1;\n      var child2 = index.child2;\n\n      index.aabb.combine(child1.aabb, child2.aabb);\n      index.height = 1 + Math.max(child1.height, child2.height);\n\n      index = index.parent;\n    }\n  } else {\n    this.m_root = sibling;\n    sibling.parent = null;\n    this.freeNode(parent);\n  }\n\n  // validate();\n}\n\n/**\n * Perform a left or right rotation if node A is imbalanced. Returns the new\n * root index.\n */\nDynamicTree.prototype.balance = function(iA) {\n  _ASSERT && common.assert(iA != null);\n\n  var A = iA;\n  if (A.isLeaf() || A.height < 2) {\n    return iA;\n  }\n\n  var B = A.child1;\n  var C = A.child2;\n\n  var balance = C.height - B.height;\n\n  // Rotate C up\n  if (balance > 1) {\n    var F = C.child1;\n    var G = C.child2;\n\n    // Swap A and C\n    C.child1 = A;\n    C.parent = A.parent;\n    A.parent = C;\n\n    // A's old parent should point to C\n    if (C.parent != null) {\n      if (C.parent.child1 == iA) {\n        C.parent.child1 = C;\n      } else {\n        C.parent.child2 = C;\n      }\n    } else {\n      this.m_root = C;\n    }\n\n    // Rotate\n    if (F.height > G.height) {\n      C.child2 = F;\n      A.child2 = G;\n      G.parent = A;\n      A.aabb.combine(B.aabb, G.aabb);\n      C.aabb.combine(A.aabb, F.aabb);\n\n      A.height = 1 + Math.max(B.height, G.height);\n      C.height = 1 + Math.max(A.height, F.height);\n    } else {\n      C.child2 = G;\n      A.child2 = F;\n      F.parent = A;\n      A.aabb.combine(B.aabb, F.aabb);\n      C.aabb.combine(A.aabb, G.aabb);\n\n      A.height = 1 + Math.max(B.height, F.height);\n      C.height = 1 + Math.max(A.height, G.height);\n    }\n\n    return C;\n  }\n\n  // Rotate B up\n  if (balance < -1) {\n    var D = B.child1;\n    var E = B.child2;\n\n    // Swap A and B\n    B.child1 = A;\n    B.parent = A.parent;\n    A.parent = B;\n\n    // A's old parent should point to B\n    if (B.parent != null) {\n      if (B.parent.child1 == A) {\n        B.parent.child1 = B;\n      } else {\n        B.parent.child2 = B;\n      }\n    } else {\n      this.m_root = B;\n    }\n\n    // Rotate\n    if (D.height > E.height) {\n      B.child2 = D;\n      A.child1 = E;\n      E.parent = A;\n      A.aabb.combine(C.aabb, E.aabb);\n      B.aabb.combine(A.aabb, D.aabb);\n\n      A.height = 1 + Math.max(C.height, E.height);\n      B.height = 1 + Math.max(A.height, D.height);\n    } else {\n      B.child2 = E;\n      A.child1 = D;\n      D.parent = A;\n      A.aabb.combine(C.aabb, D.aabb);\n      B.aabb.combine(A.aabb, E.aabb);\n\n      A.height = 1 + Math.max(C.height, D.height);\n      B.height = 1 + Math.max(A.height, E.height);\n    }\n\n    return B;\n  }\n\n  return A;\n}\n\n/**\n * Compute the height of the binary tree in O(N) time. Should not be called\n * often.\n */\nDynamicTree.prototype.getHeight = function() {\n  if (this.m_root == null) {\n    return 0;\n  }\n\n  return this.m_root.height;\n}\n\n/**\n * Get the ratio of the sum of the node areas to the root area.\n */\nDynamicTree.prototype.getAreaRatio = function() {\n  if (this.m_root == null) {\n    return 0.0;\n  }\n\n  var root = this.m_root;\n  var rootArea = root.aabb.getPerimeter();\n\n  var totalArea = 0.0;\n  var node, it = iteratorPool.allocate().preorder();\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // Free node in pool\n      continue;\n    }\n\n    totalArea += node.aabb.getPerimeter();\n  }\n\n  iteratorPool.release(it);\n\n  return totalArea / rootArea;\n}\n\n/**\n * Compute the height of a sub-tree.\n */\nDynamicTree.prototype.computeHeight = function(id) {\n  var node;\n  if (typeof id !== 'undefined') {\n    node = this.m_nodes[id];\n  } else {\n    node = this.m_root;\n  }\n\n  // _ASSERT && common.assert(0 <= id && id < this.m_nodeCapacity);\n\n  if (node.isLeaf()) {\n    return 0;\n  }\n\n  var height1 = ComputeHeight(node.child1);\n  var height2 = ComputeHeight(node.child2);\n  return 1 + Math.max(height1, height2);\n}\n\nDynamicTree.prototype.validateStructure = function(node) {\n  if (node == null) {\n    return;\n  }\n\n  if (node == this.m_root) {\n    _ASSERT && common.assert(node.parent == null);\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  }\n\n  // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n  _ASSERT && common.assert(child1.parent == node);\n  _ASSERT && common.assert(child2.parent == node);\n\n  this.validateStructure(child1);\n  this.validateStructure(child2);\n}\n\nDynamicTree.prototype.validateMetrics = function(node) {\n  if (node == null) {\n    return;\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  }\n\n  // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n  var height1 = this.m_nodes[child1].height;\n  var height2 = this.m_nodes[child2].height;\n  var height = 1 + Math.max(height1, height2);\n  _ASSERT && common.assert(node.height == height);\n\n  var aabb = new AABB();\n  aabb.combine(child1.aabb, child2.aabb);\n\n  _ASSERT && common.assert(AABB.areEqual(aabb, node.aabb));\n\n  this.validateMetrics(child1);\n  this.validateMetrics(child2);\n}\n\n// Validate this tree. For testing.\nDynamicTree.prototype.validate = function() {\n  ValidateStructure(this.m_root);\n  ValidateMetrics(this.m_root);\n\n  _ASSERT && common.assert(this.getHeight() == this.computeHeight());\n}\n\n/**\n * Get the maximum balance of an node in the tree. The balance is the difference\n * in height of the two children of a node.\n */\nDynamicTree.prototype.getMaxBalance = function() {\n  var maxBalance = 0;\n  var node, it = iteratorPool.allocate().preorder();\n  while (node = it.next()) {\n    if (node.height <= 1) {\n      continue;\n    }\n\n    _ASSERT && common.assert(node.isLeaf() == false);\n\n    var balance = Math.abs(node.child2.height - node.child1.height);\n    maxBalance = Math.max(maxBalance, balance);\n  }\n  iteratorPool.release(it);\n\n  return maxBalance;\n}\n\n/**\n * Build an optimal tree. Very expensive. For testing.\n */\nDynamicTree.prototype.rebuildBottomUp = function() {\n  var nodes = [];\n  var count = 0;\n\n  // Build array of leaves. Free the rest.\n  var node, it = iteratorPool.allocate().preorder();\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // free node in pool\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      node.parent = null;\n      nodes[count] = node;\n      ++count;\n    } else {\n      this.freeNode(node);\n    }\n  }\n  iteratorPool.release(it);\n\n  while (count > 1) {\n    var minCost = Infinity;\n    var iMin = -1, jMin = -1;\n    for (var i = 0; i < count; ++i) {\n      var aabbi = nodes[i].aabb;\n      for (var j = i + 1; j < count; ++j) {\n        var aabbj = nodes[j].aabb;\n        var b = new AABB();\n        b.combine(aabbi, aabbj);\n        var cost = b.getPerimeter();\n        if (cost < minCost) {\n          iMin = i;\n          jMin = j;\n          minCost = cost;\n        }\n      }\n    }\n\n    var child1 = nodes[iMin];\n    var child2 = nodes[jMin];\n\n    var parent = this.allocateNode();\n    parent.child1 = child1;\n    parent.child2 = child2;\n    parent.height = 1 + Math.max(child1.height, child2.height);\n    parent.aabb.combine(child1.aabb, child2.aabb);\n    parent.parent = null;\n\n    child1.parent = parent;\n    child2.parent = parent;\n\n    nodes[jMin] = nodes[count - 1];\n    nodes[iMin] = parent;\n    --count;\n  }\n\n  this.m_root = nodes[0];\n\n  this.validate();\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\nDynamicTree.prototype.shiftOrigin = function(newOrigin) {\n  // Build array of leaves. Free the rest.\n  var node, it = iteratorPool.allocate().preorder();\n  while (node = it.next()) {\n    var aabb = node.aabb;\n    aabb.lowerBound.x -= newOrigin.x;\n    aabb.lowerBound.y -= newOrigin.y;\n    aabb.lowerBound.x -= newOrigin.x;\n    aabb.lowerBound.y -= newOrigin.y;\n  }\n  iteratorPool.release(it);\n}\n\n/**\n * @function {DynamicTree~queryCallback}\n * \n * @param id Node id.\n */\n\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n * \n * @param {DynamicTree~queryCallback} queryCallback\n */\nDynamicTree.prototype.query = function(aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function')\n  var stack = stackPool.allocate();\n\n  stack.push(this.m_root);\n  while (stack.length > 0) {\n    var node = stack.pop();\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, aabb)) {\n      if (node.isLeaf()) {\n        var proceed = queryCallback(node.id);\n        if (proceed == false) {\n          return;\n        }\n      } else {\n        stack.push(node.child1);\n        stack.push(node.child2);\n      }\n    }\n  }\n\n  stackPool.release(stack);\n}\n\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\nDynamicTree.prototype.rayCast = function(input, rayCastCallback) { // TODO GC\n  _ASSERT && common.assert(typeof rayCastCallback === 'function')\n  var p1 = input.p1;\n  var p2 = input.p2;\n  var r = Vec2.sub(p2, p1);\n  _ASSERT && common.assert(r.lengthSquared() > 0.0);\n  r.normalize();\n\n  // v is perpendicular to the segment.\n  var v = Vec2.cross(1.0, r);\n  var abs_v = Vec2.abs(v);\n\n  // Separating axis for segment (Gino, p80).\n  // |dot(v, p1 - c)| > dot(|v|, h)\n\n  var maxFraction = input.maxFraction;\n\n  // Build a bounding box for the segment.\n  var segmentAABB = new AABB();\n  var t = Vec2.wAdd((1 - maxFraction), p1, maxFraction, p2);\n  segmentAABB.combinePoints(p1, t);\n\n  var stack = stackPool.allocate();\n  var subInput = inputPool.allocate();\n\n  stack.push(this.m_root);\n  while (stack.length > 0) {\n    var node = stack.pop();\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, segmentAABB) == false) {\n      continue;\n    }\n\n    // Separating axis for segment (Gino, p80).\n    // |dot(v, p1 - c)| > dot(|v|, h)\n    var c = node.aabb.getCenter();\n    var h = node.aabb.getExtents();\n    var separation = Math.abs(Vec2.dot(v, Vec2.sub(p1, c)))\n        - Vec2.dot(abs_v, h);\n    if (separation > 0.0) {\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      subInput.p1 = Vec2.clone(input.p1);\n      subInput.p2 = Vec2.clone(input.p2);\n      subInput.maxFraction = maxFraction;\n\n      var value = rayCastCallback(subInput, node.id);\n\n      if (value == 0.0) {\n        // The client has terminated the ray cast.\n        return;\n      }\n\n      if (value > 0.0) {\n        // update segment bounding box.\n        maxFraction = value;\n        t = Vec2.wAdd((1 - maxFraction), p1, maxFraction, p2);\n        segmentAABB.combinePoints(p1, t);\n      }\n    } else {\n      stack.push(node.child1);\n      stack.push(node.child2);\n    }\n  }\n\n  stackPool.release(stack);\n  inputPool.release(subInput);\n}\n\nvar inputPool = new Pool({\n  create : function() {\n    return {};\n  },\n  release : function(stack) {\n  }\n});\n\nvar stackPool = new Pool({\n  create : function() {\n    return [];\n  },\n  release : function(stack) {\n    stack.length = 0;\n  }\n});\n\nvar iteratorPool = new Pool({\n  create : function() {\n    return new Iterator();\n  },\n  release : function(iterator) {\n    iterator.close();\n  }\n});\n\nfunction Iterator() {\n  var parents = [];\n  var states = [];\n  return {\n    preorder : function(root) {\n      parents.length = 0;\n      parents.push(root);\n      states.length = 0;\n      states.push(0);\n      return this;\n    },\n    next : function() {\n      while (parents.length > 0) {\n        var i = parents.length - 1;\n        var node = parents[i];\n        if (states[i] === 0) {\n          states[i] = 1;\n          return node;\n        }\n        if (states[i] === 1) {\n          states[i] = 2;\n          if (node.child1) {\n            parents.push(node.child1);\n            states.push(1);\n            return node.child1;\n          }\n        }\n        if (states[i] === 2) {\n          states[i] = 3;\n          if (node.child2) {\n            parents.push(node.child2);\n            states.push(1);\n            return node.child2;\n          }\n        }\n        parents.pop();\n        states.pop();\n      }\n    },\n    close : function() {\n      parents.length = 0;\n    }\n  };\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = World;\n\nvar options = require('./util/options');\nvar common = require('./util/common');\nvar Vec2 = require('./common/Vec2');\nvar BroadPhase = require('./collision/BroadPhase');\nvar Solver = require('./Solver');\nvar Body = require('./Body');\nvar Contact = require('./Contact');\n\n/**\n * @typedef {Object} WorldDef\n *\n * @prop {Vec2} [gravity = { x : 0, y : 0}]\n * @prop {boolean} [allowSleep = true]\n * @prop {boolean} [warmStarting = false]\n * @prop {boolean} [continuousPhysics = false]\n * @prop {boolean} [subStepping = false]\n * @prop {boolean} [blockSolve = true]\n * @prop {int} [velocityIterations = 8] For the velocity constraint solver.\n * @prop {int} [positionIterations = 3] For the position constraint solver.\n */\nvar WorldDef = {\n  gravity : Vec2.zero(),\n  allowSleep : true,\n  warmStarting : true,\n  continuousPhysics : true,\n  subStepping : false,\n  blockSolve : true,\n  velocityIterations : 8,\n  positionIterations : 3\n};\n\n/**\n * @param {WordDef|Vec2} def World definition or gravity vector.\n */\nfunction World(def) {\n  if (!(this instanceof World)) {\n    return new World(def);\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {gravity : def};\n  }\n\n  def = options(def, WorldDef);\n\n  this.m_solver = new Solver(this);\n\n  this.m_broadPhase = new BroadPhase();\n\n  this.m_contactList = null;\n  this.m_contactCount = 0;\n\n  this.m_bodyList = null;\n  this.m_bodyCount = 0;\n\n  this.m_jointList = null;\n  this.m_jointCount = 0;\n\n  this.m_stepComplete = true;\n\n  this.m_allowSleep = def.allowSleep;\n  this.m_gravity = Vec2.clone(def.gravity);\n\n  this.m_clearForces = true;\n  this.m_newFixture = false;\n  this.m_locked = false;\n\n  // These are for debugging the solver.\n  this.m_warmStarting = def.warmStarting;\n  this.m_continuousPhysics = def.continuousPhysics;\n  this.m_subStepping = def.subStepping;\n\n  this.m_blockSolve = def.blockSolve;\n  this.m_velocityIterations = def.velocityIterations;\n  this.m_positionIterations = def.positionIterations;\n\n  this.m_t = 0;\n\n  this.m_stepCount = 0;\n\n  // Broad-phase callback.\n  this.addPair = this.createContact.bind(this);\n}\n\n/**\n * Get the world body list. With the returned body, use Body.getNext to get the\n * next body in the world list. A null body indicates the end of the list.\n *\n * @return the head of the world body list.\n */\nWorld.prototype.getBodyList = function() {\n  return this.m_bodyList;\n}\n\n/**\n * Get the world joint list. With the returned joint, use Joint.getNext to get\n * the next joint in the world list. A null joint indicates the end of the list.\n *\n * @return the head of the world joint list.\n */\nWorld.prototype.getJointList = function() {\n  return this.m_jointList;\n}\n\n/**\n * Get the world contact list. With the returned contact, use Contact.getNext to\n * get the next contact in the world list. A null contact indicates the end of\n * the list.\n *\n * @return the head of the world contact list. Warning: contacts are created and\n *         destroyed in the middle of a time step. Use ContactListener to avoid\n *         missing contacts.\n */\nWorld.prototype.getContactList = function() {\n  return this.m_contactList;\n}\n\nWorld.prototype.getBodyCount = function() {\n  return this.m_bodyCount;\n}\n\nWorld.prototype.getJointCount = function() {\n  return this.m_jointCount;\n}\n\n/**\n * Get the number of contacts (each may have 0 or more contact points).\n */\nWorld.prototype.getContactCount = function() {\n  return this.m_contactCount;\n}\n\n/**\n * Change the global gravity vector.\n */\nWorld.prototype.setGravity = function(gravity) {\n  this.m_gravity = gravity;\n}\n\n/**\n * Get the global gravity vector.\n */\nWorld.prototype.getGravity = function() {\n  return this.m_gravity;\n}\n\n/**\n * Is the world locked (in the middle of a time step).\n */\nWorld.prototype.isLocked = function() {\n  return this.m_locked;\n}\n\n/**\n * Enable/disable sleep.\n */\nWorld.prototype.setAllowSleeping = function(flag) {\n  if (flag == this.m_allowSleep) {\n    return;\n  }\n\n  this.m_allowSleep = flag;\n  if (this.m_allowSleep == false) {\n    for (var b = this.m_bodyList; b; b = b.m_next) {\n      b.setAwake(true);\n    }\n  }\n}\n\nWorld.prototype.getAllowSleeping = function() {\n  return this.m_allowSleep;\n}\n\n/**\n * Enable/disable warm starting. For testing.\n */\nWorld.prototype.setWarmStarting = function(flag) {\n  this.m_warmStarting = flag;\n}\n\nWorld.prototype.getWarmStarting = function() {\n  return this.m_warmStarting;\n}\n\n/**\n * Enable/disable continuous physics. For testing.\n */\nWorld.prototype.setContinuousPhysics = function(flag) {\n  this.m_continuousPhysics = flag;\n}\n\nWorld.prototype.getContinuousPhysics = function() {\n  return this.m_continuousPhysics;\n}\n\n/**\n * Enable/disable single stepped continuous physics. For testing.\n */\nWorld.prototype.setSubStepping = function(flag) {\n  this.m_subStepping = flag;\n}\n\nWorld.prototype.getSubStepping = function() {\n  return this.m_subStepping;\n}\n\n/**\n * Set flag to control automatic clearing of forces after each time step.\n */\nWorld.prototype.setAutoClearForces = function(flag) {\n  this.m_clearForces = flag;\n}\n\n/**\n * Get the flag that controls automatic clearing of forces after each time step.\n */\nWorld.prototype.getAutoClearForces = function() {\n  return this.m_clearForces;\n}\n\n/**\n * Manually clear the force buffer on all bodies. By default, forces are cleared\n * automatically after each call to step. The default behavior is modified by\n * calling setAutoClearForces. The purpose of this function is to support\n * sub-stepping. Sub-stepping is often used to maintain a fixed sized time step\n * under a variable frame-rate. When you perform sub-stepping you will disable\n * auto clearing of forces and instead call clearForces after all sub-steps are\n * complete in one pass of your game loop.\n *\n * @see setAutoClearForces\n */\nWorld.prototype.clearForces = function() {\n  for (var body = this.m_bodyList; body; body = body.getNext()) {\n    body.m_force.setZero();\n    body.m_torque = 0.0;\n  }\n}\n\n/**\n * @function World~rayCastCallback\n *\n * @param fixture\n */\n\n/**\n * Query the world for all fixtures that potentially overlap the provided AABB.\n *\n * @param {World~queryCallback} queryCallback Called for each fixture\n *          found in the query AABB. It may return `false` to terminate the\n *          query.\n *\n * @param aabb The query box.\n */\nWorld.prototype.queryAABB = function(aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n  this.m_broadPhase.query(aabb, function(proxyId) { //TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n    return queryCallback(proxy.fixture);\n  });\n}\n\n/**\n * @function World~rayCastCallback\n *\n * Callback class for ray casts. See World.rayCast\n *\n * Called for each fixture found in the query. You control how the ray cast\n * proceeds by returning a float: return -1: ignore this fixture and continue\n * return 0: terminate the ray cast return fraction: clip the ray to this point\n * return 1: don't clip the ray and continue\n *\n * @param fixture The fixture hit by the ray\n * @param point The point of initial intersection\n * @param normal The normal vector at the point of intersection\n * @param fraction\n *\n * @return {float} -1 to filter, 0 to terminate, fraction to clip the ray for\n *         closest hit, 1 to continue\n */\n\n/**\n *\n * Ray-cast the world for all fixtures in the path of the ray. Your callback\n * controls whether you get the closest point, any point, or n-points. The\n * ray-cast ignores shapes that contain the starting point.\n *\n * @param {World~RayCastCallback} reportFixtureCallback A user implemented\n *          callback function.\n * @param point1 The ray starting point\n * @param point2 The ray ending point\n */\nWorld.prototype.rayCast = function(point1, point2, reportFixtureCallback) {\n  _ASSERT && common.assert(typeof reportFixtureCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n\n  this.m_broadPhase.rayCast({\n    maxFraction : 1.0,\n    p1 : point1,\n    p2 : point2\n  }, function(input, proxyId) { // TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n    var fixture = proxy.fixture;\n    var index = proxy.childIndex;\n    var output = {}; // TODO GC\n    var hit = fixture.rayCast(output, input, index);\n    if (hit) {\n      var fraction = output.fraction;\n      var point = Vec2.add(Vec2.mul((1.0 - fraction), input.p1), Vec2.mul(fraction, input.p2));\n      return reportFixtureCallback(fixture, point, output.normal, fraction);\n    }\n    return input.maxFraction;\n  });\n}\n\n/**\n * Get the number of broad-phase proxies.\n */\nWorld.prototype.getProxyCount = function() {\n  return this.m_broadPhase.getProxyCount();\n}\n\n/**\n * Get the height of broad-phase dynamic tree.\n */\nWorld.prototype.getTreeHeight = function() {\n  return this.m_broadPhase.getTreeHeight();\n}\n\n/**\n * Get the balance of broad-phase dynamic tree.\n *\n * @returns {int}\n */\nWorld.prototype.getTreeBalance = function() {\n  return this.m_broadPhase.getTreeBalance();\n}\n\n/**\n * Get the quality metric of broad-phase dynamic tree. The smaller the better.\n * The minimum is 1.\n *\n * @returns {float}\n */\nWorld.prototype.getTreeQuality = function() {\n  return this.m_broadPhase.getTreeQuality();\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The body shift formula is:\n * position -= newOrigin\n *\n * @param {Vec2} newOrigin The new origin with respect to the old origin\n */\nWorld.prototype.shiftOrigin = function(newOrigin) {\n  _ASSERT && common.assert(this.m_locked == false);\n  if (this.m_locked) {\n    return;\n  }\n\n  for (var b = this.m_bodyList; b; b = b.m_next) {\n    b.m_xf.p.sub(newOrigin);\n    b.m_sweep.c0.sub(newOrigin);\n    b.m_sweep.c.sub(newOrigin);\n  }\n\n  for (var j = this.m_jointList; j; j = j.m_next) {\n    j.shiftOrigin(newOrigin);\n  }\n\n  this.m_broadPhase.shiftOrigin(newOrigin);\n}\n\n/**\n * Create a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {BodyDef|Vec2} def Body definition or position.\n * @param {float} angle Body angle if def is position.\n */\nWorld.prototype.createBody = function(def, angle) {\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return null;\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {\n      position : def,\n      angle : angle\n    };\n  }\n\n  var body = new Body(this, def);\n\n  // Add to world doubly linked list.\n  body.m_prev = null;\n  body.m_next = this.m_bodyList;\n  if (this.m_bodyList) {\n    this.m_bodyList.m_prev = body;\n  }\n  this.m_bodyList = body;\n  ++this.m_bodyCount;\n\n  return body;\n}\n\nWorld.prototype.createDynamicBody = function(def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = { position : def, angle : angle };\n  }\n  def.type = 'dynamic';\n  return this.createBody(def);\n}\n\nWorld.prototype.createKinematicBody = function(def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = { position : def, angle : angle };\n  }\n  def.type = 'kinematic';\n  return this.createBody(def);\n}\n\n/**\n * Destroy a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This automatically deletes all associated shapes and joints.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Body} b\n */\nWorld.prototype.destroyBody = function(b) {\n  _ASSERT && common.assert(this.m_bodyCount > 0);\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  if (b.m_destroyed) {\n    return false;\n  }\n\n  // Delete the attached joints.\n  var je = b.m_jointList;\n  while (je) {\n    var je0 = je;\n    je = je.next;\n\n    this.publish('remove-joint', je0.joint);\n    this.destroyJoint(je0.joint);\n\n    b.m_jointList = je;\n  }\n  b.m_jointList = null;\n\n  // Delete the attached contacts.\n  var ce = b.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n\n    this.destroyContact(ce0.contact);\n\n    b.m_contactList = ce;\n  }\n  b.m_contactList = null;\n\n  // Delete the attached fixtures. This destroys broad-phase proxies.\n  var f = b.m_fixtureList;\n  while (f) {\n    var f0 = f;\n    f = f.m_next;\n\n    this.publish('remove-fixture', f0);\n    f0.destroyProxies(this.m_broadPhase);\n\n    b.m_fixtureList = f;\n  }\n  b.m_fixtureList = null;\n\n  // Remove world body list.\n  if (b.m_prev) {\n    b.m_prev.m_next = b.m_next;\n  }\n\n  if (b.m_next) {\n    b.m_next.m_prev = b.m_prev;\n  }\n\n  if (b == this.m_bodyList) {\n    this.m_bodyList = b.m_next;\n  }\n\n  b.m_destroyed = true;\n\n  --this.m_bodyCount;\n  return true;\n}\n\n/**\n * Create a joint to constrain bodies together. No reference to the definition\n * is retained. This may cause the connected bodies to cease colliding.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n * @param {Body} bodyB\n * @param {Body} bodyA\n */\nWorld.prototype.createJoint = function(joint) {\n  _ASSERT && common.assert(!!joint.m_bodyA);\n  _ASSERT && common.assert(!!joint.m_bodyB);\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return null;\n  }\n\n  // Connect to the world list.\n  joint.m_prev = null;\n  joint.m_next = this.m_jointList;\n  if (this.m_jointList) {\n    this.m_jointList.m_prev = joint;\n  }\n  this.m_jointList = joint;\n  ++this.m_jointCount;\n\n  // Connect to the bodies' doubly linked lists.\n  joint.m_edgeA.joint = joint;\n  joint.m_edgeA.other = joint.m_bodyB;\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = joint.m_bodyA.m_jointList;\n  if (joint.m_bodyA.m_jointList)\n    joint.m_bodyA.m_jointList.prev = joint.m_edgeA;\n  joint.m_bodyA.m_jointList = joint.m_edgeA;\n\n  joint.m_edgeB.joint = joint;\n  joint.m_edgeB.other = joint.m_bodyA;\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = joint.m_bodyB.m_jointList;\n  if (joint.m_bodyB.m_jointList)\n    joint.m_bodyB.m_jointList.prev = joint.m_edgeB;\n  joint.m_bodyB.m_jointList = joint.m_edgeB;\n\n  // If the joint prevents collisions, then flag any contacts for filtering.\n  if (joint.m_collideConnected == false) {\n    for (var edge = joint.m_bodyB.getContactList(); edge; edge = edge.next) {\n      if (edge.other == joint.m_bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n    }\n  }\n\n  // Note: creating a joint doesn't wake the bodies.\n\n  return joint;\n}\n\n/**\n * Destroy a joint. This may cause the connected bodies to begin colliding.\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n */\nWorld.prototype.destroyJoint = function(joint) {\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  // Remove from the doubly linked list.\n  if (joint.m_prev) {\n    joint.m_prev.m_next = joint.m_next;\n  }\n\n  if (joint.m_next) {\n    joint.m_next.m_prev = joint.m_prev;\n  }\n\n  if (joint == this.m_jointList) {\n    this.m_jointList = joint.m_next;\n  }\n\n  // Disconnect from bodies.\n  var bodyA = joint.m_bodyA;\n  var bodyB = joint.m_bodyB;\n\n  // Wake up connected bodies.\n  bodyA.setAwake(true);\n  bodyB.setAwake(true);\n\n  // Remove from body 1.\n  if (joint.m_edgeA.prev) {\n    joint.m_edgeA.prev.next = joint.m_edgeA.next;\n  }\n\n  if (joint.m_edgeA.next) {\n    joint.m_edgeA.next.prev = joint.m_edgeA.prev;\n  }\n\n  if (joint.m_edgeA == bodyA.m_jointList) {\n    bodyA.m_jointList = joint.m_edgeA.next;\n  }\n\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = null;\n\n  // Remove from body 2\n  if (joint.m_edgeB.prev) {\n    joint.m_edgeB.prev.next = joint.m_edgeB.next;\n  }\n\n  if (joint.m_edgeB.next) {\n    joint.m_edgeB.next.prev = joint.m_edgeB.prev;\n  }\n\n  if (joint.m_edgeB == bodyB.m_jointList) {\n    bodyB.m_jointList = joint.m_edgeB.next;\n  }\n\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = null;\n\n  _ASSERT && common.assert(this.m_jointCount > 0);\n  --this.m_jointCount;\n\n  // If the joint prevents collisions, then flag any contacts for filtering.\n  if (joint.m_collideConnected == false) {\n    var edge = bodyB.getContactList();\n    while (edge) {\n      if (edge.other == bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n\n      edge = edge.next;\n    }\n  }\n\n  this.publish('remove-joint', joint);\n}\n\nvar s_step = new Solver.TimeStep(); // reuse\n\n/**\n * Take a time step. This performs collision detection, integration, and\n * constraint solution.\n *\n * Broad-phase, narrow-phase, solve and solve time of impacts.\n *\n * @param {float} timeStep Time step, this should not vary.\n * @param {int} velocityIterations\n * @param {int} positionIterations\n */\nWorld.prototype.step = function(timeStep, velocityIterations, positionIterations) {\n\n  if ((velocityIterations | 0) !== velocityIterations) {\n    // TODO: remove this in future\n    velocityIterations = 0;\n  }\n\n  velocityIterations = velocityIterations || this.m_velocityIterations;\n  positionIterations = positionIterations || this.m_positionIterations;\n\n  // TODO: move this to testbed\n  this.m_stepCount++;\n\n  // If new fixtures were added, we need to find the new contacts.\n  if (this.m_newFixture) {\n    this.findNewContacts();\n    this.m_newFixture = false;\n  }\n\n  this.m_locked = true;\n\n  s_step.reset(timeStep);\n  s_step.velocityIterations = velocityIterations;\n  s_step.positionIterations = positionIterations;\n  s_step.warmStarting = this.m_warmStarting;\n  s_step.blockSolve = this.m_blockSolve;\n\n  // Update contacts. This is where some contacts are destroyed.\n  this.updateContacts();\n\n  // Integrate velocities, solve velocity constraints, and integrate positions.\n  if (this.m_stepComplete && timeStep > 0.0) {\n    this.m_solver.solveWorld(s_step);\n\n    // Synchronize fixtures, check for out of range bodies.\n    for (var b = this.m_bodyList; b; b = b.getNext()) {\n      // If a body was not in an island then it did not move.\n      if (b.m_islandFlag == false) {\n        continue;\n      }\n\n      if (b.isStatic()) {\n        continue;\n      }\n\n      // Update fixtures (for broad-phase).\n      b.synchronizeFixtures();\n    }\n    // Look for new contacts.\n    this.findNewContacts();\n  }\n\n  // Handle TOI events.\n  if (this.m_continuousPhysics && timeStep > 0.0) {\n    this.m_solver.solveWorldTOI(s_step);\n  }\n\n  if (this.m_clearForces) {\n    this.clearForces();\n  }\n\n  this.m_locked = false;\n}\n\n/**\n * Call this method to find new contacts.\n */\nWorld.prototype.findNewContacts = function() {\n  this.m_broadPhase.updatePairs(this.addPair);\n}\n\n/**\n * @private\n *\n * @param {FixtureProxy} proxyA\n * @param {FixtureProxy} proxyB\n */\nWorld.prototype.createContact = function(proxyA, proxyB) {\n  var fixtureA = proxyA.fixture;\n  var fixtureB = proxyB.fixture;\n\n  var indexA = proxyA.childIndex;\n  var indexB = proxyB.childIndex;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  // Are the fixtures on the same body?\n  if (bodyA == bodyB) {\n    return;\n  }\n\n  // TODO_ERIN use a hash table to remove a potential bottleneck when both\n  // bodies have a lot of contacts.\n  // Does a contact already exist?\n  var edge = bodyB.getContactList(); // ContactEdge\n  while (edge) {\n    if (edge.other == bodyA) {\n      var fA = edge.contact.getFixtureA();\n      var fB = edge.contact.getFixtureB();\n      var iA = edge.contact.getChildIndexA();\n      var iB = edge.contact.getChildIndexB();\n\n      if (fA == fixtureA && fB == fixtureB && iA == indexA && iB == indexB) {\n        // A contact already exists.\n        return;\n      }\n\n      if (fA == fixtureB && fB == fixtureA && iA == indexB && iB == indexA) {\n        // A contact already exists.\n        return;\n      }\n    }\n\n    edge = edge.next;\n  }\n\n  if (bodyB.shouldCollide(bodyA) == false) {\n    return;\n  }\n  if (fixtureB.shouldCollide(fixtureA) == false) {\n    return;\n  }\n\n  // Call the factory.\n  var contact = Contact.create(fixtureA, indexA, fixtureB, indexB);\n  if (contact == null) {\n    return;\n  }\n\n  // Insert into the world.\n  contact.m_prev = null;\n  if (this.m_contactList != null) {\n    contact.m_next = this.m_contactList;\n    this.m_contactList.m_prev = contact;\n  }\n  this.m_contactList = contact;\n\n  ++this.m_contactCount;\n}\n\n/**\n * Removes old non-overlapping contacts, applies filters and updates contacts.\n */\nWorld.prototype.updateContacts = function() {\n  // Update awake contacts.\n  var c, next_c = this.m_contactList;\n  while (c = next_c) {\n    next_c = c.getNext()\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n    var indexA = c.getChildIndexA();\n    var indexB = c.getChildIndexB();\n    var bodyA = fixtureA.getBody();\n    var bodyB = fixtureB.getBody();\n\n    // Is this contact flagged for filtering?\n    if (c.m_filterFlag) {\n      if (bodyB.shouldCollide(bodyA) == false) {\n        this.destroyContact(c);\n        continue;\n      }\n\n      if (fixtureB.shouldCollide(fixtureA) == false) {\n        this.destroyContact(c);\n        continue;\n      }\n\n      // Clear the filtering flag.\n      c.m_filterFlag = false;\n    }\n\n    var activeA = bodyA.isAwake() && !bodyA.isStatic();\n    var activeB = bodyB.isAwake() && !bodyB.isStatic();\n\n    // At least one body must be awake and it must be dynamic or kinematic.\n    if (activeA == false && activeB == false) {\n      continue;\n    }\n\n    var proxyIdA = fixtureA.m_proxies[indexA].proxyId;\n    var proxyIdB = fixtureB.m_proxies[indexB].proxyId;\n    var overlap = this.m_broadPhase.testOverlap(proxyIdA, proxyIdB);\n\n    // Here we destroy contacts that cease to overlap in the broad-phase.\n    if (overlap == false) {\n      this.destroyContact(c);\n      continue;\n    }\n\n    // The contact persists.\n    c.update(this);\n  }\n}\n\n/**\n * @param {Contact} contact\n */\nWorld.prototype.destroyContact = function(contact) {\n  Contact.destroy(contact, this);\n\n  // Remove from the world.\n  if (contact.m_prev) {\n    contact.m_prev.m_next = contact.m_next;\n  }\n  if (contact.m_next) {\n    contact.m_next.m_prev = contact.m_prev;\n  }\n  if (contact == this.m_contactList) {\n    this.m_contactList = contact.m_next;\n  }\n\n  --this.m_contactCount;\n}\n\nWorld.prototype._listeners = null;\n\n/**\n * Register an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\nWorld.prototype.on = function(name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n  if (!this._listeners) {\n    this._listeners = {};\n  }\n  if (!this._listeners[name]) {\n    this._listeners[name] = [];\n  }\n  this._listeners[name].push(listener);\n  return this;\n};\n\n/**\n * Remove an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\nWorld.prototype.off = function(name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n  var listeners = this._listeners && this._listeners[name];\n  if (!listeners || !listeners.length) {\n    return this;\n  }\n  var index = listeners.indexOf(listener);\n  if (index >= 0) {\n    listeners.splice(index, 1);\n  }\n  return this;\n};\n\nWorld.prototype.publish = function(name, arg1, arg2, arg3) {\n  var listeners = this._listeners && this._listeners[name];\n  if (!listeners || !listeners.length) {\n    return 0;\n  }\n  for (var l = 0; l < listeners.length; l++) {\n    listeners[l].call(this, arg1, arg2, arg3);\n  }\n  return listeners.length;\n};\n\n/**\n * @event World#remove-body\n * @event World#remove-joint\n * @event World#remove-fixture\n *\n * Joints and fixtures are destroyed when their associated body is destroyed.\n * Register a destruction listener so that you may nullify references to these\n * joints and shapes.\n *\n * `function(object)` is called when any joint or fixture is about to\n * be destroyed due to the destruction of one of its attached or parent bodies.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\nWorld.prototype.beginContact = function(contact) {\n  this.publish('begin-contact', contact);\n};\n\n/**\n * @event World#begin-contact\n *\n * Called when two fixtures begin to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\nWorld.prototype.endContact = function(contact) {\n  this.publish('end-contact', contact);\n};\n\n/**\n * @event World#end-contact\n *\n * Called when two fixtures cease to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {Manifold} oldManifold\n */\nWorld.prototype.preSolve = function(contact, oldManifold) {\n  this.publish('pre-solve', contact, oldManifold);\n};\n\n/**\n * @event World#pre-solve\n *\n * This is called after a contact is updated. This allows you to inspect a\n * contact before it goes to the solver. If you are careful, you can modify the\n * contact manifold (e.g. disable contact). A copy of the old manifold is\n * provided so that you can detect changes. Note: this is called only for awake\n * bodies. Note: this is called even when the number of contact points is zero.\n * Note: this is not called for sensors. Note: if you set the number of contact\n * points to zero, you will not get an endContact callback. However, you may get\n * a beginContact callback the next step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {ContactImpulse} impulse\n */\nWorld.prototype.postSolve = function(contact, impulse) {\n  this.publish('post-solve', contact, impulse);\n};\n\n/**\n * @event World#post-solve\n *\n * This lets you inspect a contact after the solver is finished. This is useful\n * for inspecting impulses. Note: the contact manifold does not include time of\n * impact impulses, which can be arbitrarily large if the sub-step is small.\n * Hence the impulse is provided explicitly in a separate data structure. Note:\n * this is only called for contacts that are touching, solid, and awake.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * Register a contact filter to provide specific control over collision.\n * Otherwise the default filter is used (defaultFilter). The listener is owned\n * by you and must remain in scope.\n *\n * Moved to Fixture.\n */\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Fixture;\n\nvar common = require('./util/common');\nvar options = require('./util/options');\n\nvar Math = require('./common/Math');\nvar Vec2 = require('./common/Vec2');\n\nvar AABB = require('./collision/AABB');\n\n/**\n * @typedef {Object} FixtureDef\n *\n * A fixture definition is used to create a fixture. This class defines an\n * abstract fixture definition. You can reuse fixture definitions safely.\n * \n * @prop friction The friction coefficient, usually in the range [0,1]\n * @prop restitution The restitution (elasticity) usually in the range [0,1]\n * @prop density The density, usually in kg/m^2\n * @prop isSensor A sensor shape collects contact information but never\n *       generates a collision response\n * @prop userData\n * @prop filterGroupIndex Zero, positive or negative collision group. Fixtures with same positive groupIndex always collide and fixtures with same\n * negative groupIndex never collide.\n * @prop filterCategoryBits Collision category bit or bits that this fixture belongs\n *       to. If groupIndex is zero or not matching, then at least one bit in this fixture\n * categoryBits should match other fixture maskBits and vice versa.\n * @prop filterMaskBits Collision category bit or bits that this fixture accept for\n *       collision.\n */\nvar FixtureDef = {\n  userData : null,\n  friction : 0.2,\n  restitution : 0.0,\n  density : 0.0,\n  isSensor : false,\n\n  filterGroupIndex : 0,\n  filterCategoryBits : 0x0001,\n  filterMaskBits : 0xFFFF\n};\n\n/**\n * This proxy is used internally to connect shape children to the broad-phase.\n */\nfunction FixtureProxy(fixture, childIndex) {\n  this.aabb = new AABB();\n  this.fixture = fixture;\n  this.childIndex = childIndex;\n  this.proxyId;\n};\n\n/**\n * A fixture is used to attach a shape to a body for collision detection. A\n * fixture inherits its transform from its parent. Fixtures hold additional\n * non-geometric data such as friction, collision filters, etc. Fixtures are\n * created via Body.createFixture.\n * \n * @param {Shape|FixtureDef} shape Shape of fixture definition.\n * @param {FixtureDef|number} def Fixture definition or number.\n */\nfunction Fixture(body, shape, def) {\n  if (shape.shape) {\n    def = shape;\n    shape = shape.shape;\n\n  } else if (typeof def === 'number') {\n    def = {density : def};\n  }\n\n  def = options(def, FixtureDef);\n\n  this.m_body = body;\n\n  this.m_friction = def.friction;\n  this.m_restitution = def.restitution;\n  this.m_density = def.density;\n  this.m_isSensor = def.isSensor;\n\n  this.m_filterGroupIndex = def.filterGroupIndex;\n  this.m_filterCategoryBits = def.filterCategoryBits;\n  this.m_filterMaskBits = def.filterMaskBits;\n\n  // TODO validate shape\n  this.m_shape = shape; //.clone();\n\n  this.m_next = null;\n\n  this.m_proxies = [];\n  this.m_proxyCount = 0;\n\n  var childCount = this.m_shape.getChildCount();\n  for (var i = 0; i < childCount; ++i) {\n    this.m_proxies[i] = new FixtureProxy(this, i);\n  }\n\n  this.m_userData = def.userData;\n};\n\n/**\n * Get the type of the child shape. You can use this to down cast to the\n * concrete shape.\n */\nFixture.prototype.getType = function() {\n  return this.m_shape.getType();\n}\n\n/**\n * Get the child shape. You can modify the child shape, however you should not\n * change the number of vertices because this will crash some collision caching\n * mechanisms. Manipulating the shape may lead to non-physical behavior.\n */\nFixture.prototype.getShape = function() {\n  return this.m_shape;\n}\n/**\n * A sensor shape collects contact information but never generates a collision\n * response.\n */\nFixture.prototype.isSensor = function() {\n  return this.m_isSensor;\n}\n\n/**\n * Set if this fixture is a sensor.\n */\nFixture.prototype.setSensor = function(sensor) {\n  if (sensor != this.m_isSensor) {\n    this.m_body.setAwake(true);\n    this.m_isSensor = sensor;\n  }\n}\n\n/**\n * Get the contact filtering data.\n */\n// Fixture.prototype.getFilterData = function() {\n//   return this.m_filter;\n// }\n\n/**\n * Get the user data that was assigned in the fixture definition. Use this to\n * store your application specific data.\n */\nFixture.prototype.getUserData = function() {\n  return this.m_userData;\n}\n\n/**\n * Set the user data. Use this to store your application specific data.\n */\nFixture.prototype.setUserData = function(data) {\n  this.m_userData = data;\n}\n\n/**\n * Get the parent body of this fixture. This is null if the fixture is not\n * attached.\n */\nFixture.prototype.getBody = function() {\n  return this.m_body;\n}\n\n/**\n * Get the next fixture in the parent body's fixture list.\n */\nFixture.prototype.getNext = function() {\n  return this.m_next;\n}\n\n/**\n * Get the density of this fixture.\n */\nFixture.prototype.getDensity = function() {\n  return this.m_density;\n}\n\n/**\n * Set the density of this fixture. This will _not_ automatically adjust the\n * mass of the body. You must call Body.resetMassData to update the body's mass.\n */\nFixture.prototype.setDensity = function(density) {\n  _ASSERT && common.assert(Math.isFinite(density) && density >= 0.0);\n  this.m_density = density;\n}\n\n/**\n * Get the coefficient of friction, usually in the range [0,1].\n */\nFixture.prototype.getFriction = function() {\n  return this.m_friction;\n}\n\n/**\n * Set the coefficient of friction. This will not change the friction of\n * existing contacts.\n */\nFixture.prototype.setFriction = function(friction) {\n  this.m_friction = friction;\n}\n\n/**\n * Get the coefficient of restitution.\n */\nFixture.prototype.getRestitution = function() {\n  return this.m_restitution;\n}\n\n/**\n * Set the coefficient of restitution. This will not change the restitution of\n * existing contacts.\n */\nFixture.prototype.setRestitution = function(restitution) {\n  this.m_restitution = restitution;\n}\n\n/**\n * Test a point in world coordinates for containment in this fixture.\n */\nFixture.prototype.testPoint = function(p) {\n  return this.m_shape.testPoint(this.m_body.getTransform(), p);\n}\n\n/**\n * Cast a ray against this shape.\n */\nFixture.prototype.rayCast = function(output, input, childIndex) {\n  return this.m_shape.rayCast(output, input, this.m_body.getTransform(), childIndex);\n}\n\n/**\n * Get the mass data for this fixture. The mass data is based on the density and\n * the shape. The rotational inertia is about the shape's origin. This operation\n * may be expensive.\n */\nFixture.prototype.getMassData = function(massData) {\n  this.m_shape.computeMass(massData, this.m_density);\n}\n\n/**\n * Get the fixture's AABB. This AABB may be enlarge and/or stale. If you need a\n * more accurate AABB, compute it using the shape and the body transform.\n */\nFixture.prototype.getAABB = function(childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_proxyCount);\n  return this.m_proxies[childIndex].aabb;\n}\n\n/**\n * These support body activation/deactivation.\n */\nFixture.prototype.createProxies = function(broadPhase, xf) {\n  _ASSERT && common.assert(this.m_proxyCount == 0);\n\n  // Create proxies in the broad-phase.\n  this.m_proxyCount = this.m_shape.getChildCount();\n\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    this.m_shape.computeAABB(proxy.aabb, xf, i);\n    proxy.proxyId = broadPhase.createProxy(proxy.aabb, proxy);\n  }\n}\n\nFixture.prototype.destroyProxies = function(broadPhase) {\n  // Destroy proxies in the broad-phase.\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    broadPhase.destroyProxy(proxy.proxyId);\n    proxy.proxyId = null;\n  }\n\n  this.m_proxyCount = 0;\n}\n\n/**\n * Updates this fixture proxy in broad-phase (with combined AABB of current and\n * next transformation).\n */\nFixture.prototype.synchronize = function(broadPhase, xf1, xf2) {\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    // Compute an AABB that covers the swept shape (may miss some rotation\n    // effect).\n    var aabb1 = new AABB();\n    var aabb2 = new AABB();\n    this.m_shape.computeAABB(aabb1, xf1, proxy.childIndex);\n    this.m_shape.computeAABB(aabb2, xf2, proxy.childIndex);\n\n    proxy.aabb.combine(aabb1, aabb2);\n\n    var displacement = Vec2.sub(xf2.p, xf1.p);\n\n    broadPhase.moveProxy(proxy.proxyId, proxy.aabb, displacement);\n  }\n}\n\n/**\n * Set the contact filtering data. This will not update contacts until the next\n * time step when either parent body is active and awake. This automatically\n * calls refilter.\n */\nFixture.prototype.setFilterData = function(filter) {\n  this.m_filterGroupIndex = filter.groupIndex;\n  this.m_filterCategoryBits = filter.categoryBits;\n  this.m_filterMaskBits = filter.maskBits;\n  this.refilter();\n}\n\nFixture.prototype.getFilterGroupIndex = function() {\n  return this.m_filterGroupIndex;\n}\n\nFixture.prototype.getFilterCategoryBits = function() {\n  return this.m_filterCategoryBits;\n}\n\nFixture.prototype.getFilterMaskBits = function() {\n  return this.m_filterMaskBits;\n}\n\n/**\n * Call this if you want to establish collision that was previously disabled by\n * ContactFilter.\n */\nFixture.prototype.refilter = function() {\n  if (this.m_body == null) {\n    return;\n  }\n\n  // Flag associated contacts for filtering.\n  var edge = this.m_body.getContactList();\n  while (edge) {\n    var contact = edge.contact;\n    var fixtureA = contact.getFixtureA();\n    var fixtureB = contact.getFixtureB();\n    if (fixtureA == this || fixtureB == this) {\n      contact.flagForFiltering();\n    }\n\n    edge = edge.next;\n  }\n\n  var world = this.m_body.getWorld();\n\n  if (world == null) {\n    return;\n  }\n\n  // Touch each proxy so that new pairs may be created\n  var broadPhase = world.m_broadPhase;\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    broadPhase.touchProxy(this.m_proxies[i].proxyId);\n  }\n}\n\n/**\n * Implement this method to provide collision filtering, if you want finer\n * control over contact creation.\n * \n * Return true if contact calculations should be performed between these two\n * fixtures.\n * \n * Warning: for performance reasons this is only called when the AABBs begin to\n * overlap.\n * \n * @param {Fixture} fixtureA\n * @param {Fixture} fixtureB\n */\nFixture.prototype.shouldCollide = function(that) {\n\n  if (that.m_filterGroupIndex == this.m_filterGroupIndex && that.m_filterGroupIndex != 0) {\n    return that.m_filterGroupIndex > 0;\n  }\n\n  var collide = (that.m_filterMaskBits & this.m_filterCategoryBits) != 0\n      && (that.m_filterCategoryBits & this.m_filterMaskBits) != 0;\n  return collide;\n}\n","exports.internal = {};\n\nexports.Math = require('./common/Math');\nexports.Vec2 = require('./common/Vec2');\nexports.Transform = require('./common/Transform');\nexports.Rot = require('./common/Rot');\n\nexports.AABB = require('./collision/AABB');\n\nexports.Shape = require('./Shape');\nexports.Fixture = require('./Fixture');\nexports.Body = require('./Body');\nexports.Contact = require('./Contact');\nexports.Joint = require('./Joint');\nexports.World = require('./World');\n\nexports.Circle = require('./shape/CircleShape');\nexports.Edge = require('./shape/EdgeShape');\nexports.Polygon = require('./shape/PolygonShape');\nexports.Chain = require('./shape/ChainShape');\nexports.Box = require('./shape/BoxShape');\n\nrequire('./shape/CollideCircle');\nrequire('./shape/CollideEdgeCircle');\nexports.internal.CollidePolygons = require('./shape/CollidePolygon');\nrequire('./shape/CollideCirclePolygone');\nrequire('./shape/CollideEdgePolygon');\n\nexports.DistanceJoint = require('./joint/DistanceJoint');\nexports.FrictionJoint = require('./joint/FrictionJoint');\nexports.GearJoint = require('./joint/GearJoint');\nexports.MotorJoint = require('./joint/MotorJoint');\nexports.MouseJoint = require('./joint/MouseJoint');\nexports.PrismaticJoint = require('./joint/PrismaticJoint');\nexports.PulleyJoint = require('./joint/PulleyJoint');\nexports.RevoluteJoint = require('./joint/RevoluteJoint');\nexports.RopeJoint = require('./joint/RopeJoint');\nexports.WeldJoint = require('./joint/WeldJoint');\nexports.WheelJoint = require('./joint/WheelJoint');\n\nexports.internal.Sweep= require('./common/Sweep');\nexports.internal.stats = require('./common/stats');\nexports.internal.Manifold = require('./Manifold');\nexports.internal.Distance = require('./collision/Distance');\nexports.internal.TimeOfImpact = require('./collision/TimeOfImpact');\nexports.internal.DynamicTree = require('./collision/DynamicTree');\nexports.internal.Settings = require('./Settings');\n","import {mat3, vec3, vec2} from 'gl-matrix';\nimport {Vec2} from 'planck-js';\nimport {LineRenderer} from \"./LineRenderer\";\n\nexport {WorldRenderer}\n\nconst WORLD_RENDERER_DEFAULTS = {\n    game: null,\n    pixelScale: 20\n};\n\nclass WorldRenderer {\n    constructor(opts) {\n        const options = {...WORLD_RENDERER_DEFAULTS, ...opts};\n        this.game = options.game;\n        this.pixelScale = options.pixelScale;\n        this.lineRenderer = options.lineRenderer || new LineRenderer({game: options.game});\n    }\n\n    transformVertices(vertices, transform) {\n        return vertices.map(vertex => {\n            const out = vec2.fromValues(vertex.x, vertex.y);\n            vec2.transformMat3(out, out, transform);\n            return {x: out[0], y: out[1]};\n        });\n    }\n\n    circle(shape, transform, segments = 10) {\n        const radius = shape.m_radius;\n        const vertices = [];\n\n        vertices.push(Vec2(0, 0));\n\n        vertices.push(Vec2(radius, 0));\n\n        for (let i = 1; i < segments; i++) {\n            const x = radius * Math.cos(2 * Math.PI / segments * i);\n            const y = radius * Math.sin(2 * Math.PI / segments * i);\n            vertices.push(Vec2(x, y));\n        }\n\n        const scaledVertices = this.transformVertices(vertices, transform);\n        vertices.length = 0;\n\n        scaledVertices.forEach((vertex, index) => {\n            vertices.push(vertex.x, vertex.y);\n\n            if (index > 0) {\n                vertices.push(vertex.x, vertex.y);\n            }\n        });\n\n        const firstVertex = scaledVertices[1];\n\n        vertices.push(firstVertex.x, firstVertex.y);\n\n        return vertices;\n    }\n\n    edge(shape, transform) {\n        const vertices = [];\n\n        const scaledVertices = this.transformVertices([shape.m_vertex1, shape.m_vertex2], transform);\n\n        scaledVertices.forEach((vertex, index) => {\n            vertices.push(vertex.x, vertex.y);\n\n            if (index > 0 && index < scaledVertices.length - 1) {\n                vertices.push(vertex.x, vertex.y);\n            }\n        });\n\n        return vertices;\n    }\n\n    polygon(shape, transform) {\n        const vertices = [];\n\n        const scaledVertices = this.transformVertices(shape.m_vertices, transform);\n\n        scaledVertices.forEach((vertex, index) => {\n            vertices.push(vertex.x, vertex.y);\n\n            if (index > 0) {\n                vertices.push(vertex.x, vertex.y);\n            }\n        });\n\n        const firstVertex = scaledVertices[0];\n\n        vertices.push(firstVertex.x, firstVertex.y);\n\n        return vertices;\n    }\n\n\n    polygon(shape, transform) {\n        const vertices = [];\n\n        const scaledVertices = this.transformVertices(shape.m_vertices, transform);\n\n        scaledVertices.forEach((vertex, index) => {\n            vertices.push(vertex.x, vertex.y);\n\n            if (index > 0) {\n                vertices.push(vertex.x, vertex.y);\n            }\n        });\n\n        const firstVertex = scaledVertices[0];\n\n        vertices.push(firstVertex.x, firstVertex.y);\n\n        return vertices;\n    }\n\n    chain(shape, transform) {\n        const vertices = [];\n\n        const scaledVertices = this.transformVertices(shape.m_vertices, transform);\n\n        scaledVertices.forEach((vertex, index) => {\n            vertices.push(vertex.x, vertex.y);\n\n            if (index > 0 && index < scaledVertices.length - 1) {\n                vertices.push(vertex.x, vertex.y);\n            }\n        });\n\n        return vertices;\n    }\n\n    render(world, projection, viewRect) {\n        const lines = [];\n        for (let b = world.getBodyList(); b; b = b.getNext()) {\n            const p = b.getPosition();\n            const angle = b.getAngle();\n\n            const modelTransform = mat3.fromScaling(mat3.create(), [this.pixelScale, this.pixelScale]);\n            mat3.translate(modelTransform, modelTransform, [p.x, p.y]);\n            mat3.rotate(modelTransform, modelTransform, angle);\n\n            for (let f = b.getFixtureList(); f; f = f.getNext()) {\n                const type = f.getType();\n                const shape = f.getShape();\n                if (type === 'circle') {\n                    lines.push(...this.circle(shape, modelTransform));\n                }\n                if (type === 'edge') {\n                    lines.push(...this.edge(shape, modelTransform));\n                }\n                if (type === 'polygon') {\n                    lines.push(...this.polygon(shape, modelTransform));\n                }\n                if (type === 'chain') {\n                    lines.push(...this.chain(shape, modelTransform));\n                }\n            }\n        }\n\n        this.lineRenderer.render(lines, undefined);\n    }\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = WheelJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nWheelJoint.TYPE = 'wheel-joint';\n\nWheelJoint._super = Joint;\nWheelJoint.prototype = create(WheelJoint._super.prototype);\n\n/**\n * @typedef {Object} WheelJointDef\n *\n * Wheel joint definition. This requires defining a line of motion using an axis\n * and an anchor point. The definition uses local anchor points and a local axis\n * so that the initial configuration can violate the constraint slightly. The\n * joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n * \n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorTorque The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n * @prop {float} frequencyHz Suspension frequency, zero indicates no suspension\n * @prop {float} dampingRatio Suspension damping ratio, one indicates critical\n *       damping\n */\nvar WheelJointDef = {\n  enableMotor : false,\n  maxMotorTorque : 0.0,\n  motorSpeed : 0.0,\n  frequencyHz : 2.0,\n  dampingRatio : 0.7\n};\n\n/**\n * A wheel joint. This joint provides two degrees of freedom: translation along\n * an axis fixed in bodyA and rotation in the plane. In other words, it is a\n * point to line constraint with a rotational motor and a linear spring/damper.\n * This joint is designed for vehicle suspensions.\n * \n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation axis in bodyA.\n */\nfunction WheelJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof WheelJoint)) {\n    return new WheelJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, WheelJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  this.m_type = WheelJoint.TYPE;\n\n  this.m_localAnchorA = bodyA.getLocalPoint(anchor);\n  this.m_localAnchorB = bodyB.getLocalPoint(anchor);\n\n  this.m_localXAxisA = bodyA.getLocalVector(axis || Vec2.neo(1.0, 0.0));\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n  this.m_springMass = 0.0;\n  this.m_springImpulse = 0.0;\n\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableMotor = def.enableMotor;\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n\n  this.m_ax = Vec2.zero();\n  this.m_ay = Vec2.zero(); // Vec2\n  this.m_sAx;\n  this.m_sBx; // float\n  this.m_sAy;\n  this.m_sBy; // float\n\n  // Linear constraint (point-to-line)\n  // d = pB - pA = xB + rB - xA - rA\n  // C = dot(ay, d)\n  // Cdot = dot(d, cross(wA, ay)) + dot(ay, vB + cross(wB, rB) - vA - cross(wA,\n  // rA))\n  // = -dot(ay, vA) - dot(cross(d + rA, ay), wA) + dot(ay, vB) + dot(cross(rB,\n  // ay), vB)\n  // J = [-ay, -cross(d + rA, ay), ay, cross(rB, ay)]\n\n  // Spring linear constraint\n  // C = dot(ax, d)\n  // Cdot = = -dot(ax, vA) - dot(cross(d + rA, ax), wA) + dot(ax, vB) +\n  // dot(cross(rB, ax), vB)\n  // J = [-ax -cross(d+rA, ax) ax cross(rB, ax)]\n\n  // Motor rotational constraint\n  // Cdot = wB - wA\n  // J = [0 0 -1 0 0 1]\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nWheelJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nWheelJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * The local joint axis relative to bodyA.\n */\nWheelJoint.prototype.getLocalAxisA = function() {\n  return this.m_localXAxisA;\n}\n\n/**\n * Get the current joint translation, usually in meters.\n */\nWheelJoint.prototype.getJointTranslation = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n\n  var pA = bA.getWorldPoint(this.m_localAnchorA); // Vec2\n  var pB = bB.getWorldPoint(this.m_localAnchorB); // Vec2\n  var d = pB - pA; // Vec2\n  var axis = bA.getWorldVector(this.m_localXAxisA); // Vec2\n\n  var translation = Dot(d, axis); // float\n  return translation;\n}\n\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\nWheelJoint.prototype.getJointSpeed = function() {\n  var wA = this.m_bodyA.m_angularVelocity;\n  var wB = this.m_bodyB.m_angularVelocity;\n  return wB - wA;\n}\n\n/**\n * Is the joint motor enabled?\n */\nWheelJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nWheelJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Set the motor speed, usually in radians per second.\n */\nWheelJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Get the motor speed, usually in radians per second.\n */\nWheelJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Set/Get the maximum motor force, usually in N-m.\n */\nWheelJoint.prototype.setMaxMotorTorque = function(torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n}\n\nWheelJoint.prototype.getMaxMotorTorque = function() {\n  return this.m_maxMotorTorque;\n}\n\n/**\n * Get the current motor torque given the inverse time step, usually in N-m.\n */\nWheelJoint.prototype.getMotorTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\n/**\n * Set/Get the spring frequency in hertz. Setting the frequency to zero disables\n * the spring.\n */\nWheelJoint.prototype.setSpringFrequencyHz = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nWheelJoint.prototype.getSpringFrequencyHz = function() {\n  return this.m_frequencyHz;\n}\n\n/**\n * Set/Get the spring damping ratio\n */\nWheelJoint.prototype.setSpringDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nWheelJoint.prototype.getSpringDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nWheelJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nWheelJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nWheelJoint.prototype.getReactionForce = function(inv_dt) {\n  return inv_dt\n      * (this.m_impulse * this.m_ay + this.m_springImpulse * this.m_ax);\n}\n\nWheelJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\nWheelJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  // Compute the effective masses.\n  var rA = Rot.mul(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n  var rB = Rot.mul(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n  var d = Vec2.zero();\n  d.wAdd(1, cB, 1, rB);\n  d.wSub(1, cA, 1, rA); // Vec2\n\n  // Point to line constraint\n  {\n    this.m_ay = Rot.mul(qA, this.m_localYAxisA);\n    this.m_sAy = Vec2.cross(Vec2.add(d, rA), this.m_ay);\n    this.m_sBy = Vec2.cross(rB, this.m_ay);\n\n    this.m_mass = mA + mB + iA * this.m_sAy * this.m_sAy + iB * this.m_sBy\n        * this.m_sBy;\n\n    if (this.m_mass > 0.0) {\n      this.m_mass = 1.0 / this.m_mass;\n    }\n  }\n\n  // Spring constraint\n  this.m_springMass = 0.0;\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n  if (this.m_frequencyHz > 0.0) {\n    this.m_ax = Rot.mul(qA, this.m_localXAxisA);\n    this.m_sAx = Vec2.cross(Vec2.add(d, rA), this.m_ax);\n    this.m_sBx = Vec2.cross(rB, this.m_ax);\n\n    var invMass = mA + mB + iA * this.m_sAx * this.m_sAx + iB * this.m_sBx\n        * this.m_sBx; // float\n\n    if (invMass > 0.0) {\n      this.m_springMass = 1.0 / invMass;\n\n      var C = Vec2.dot(d, this.m_ax); // float\n\n      // Frequency\n      var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n\n      // Damping coefficient\n      var d = 2.0 * this.m_springMass * this.m_dampingRatio * omega; // float\n\n      // Spring stiffness\n      var k = this.m_springMass * omega * omega; // float\n\n      // magic formulas\n      var h = step.dt; // float\n      this.m_gamma = h * (d + h * k);\n      if (this.m_gamma > 0.0) {\n        this.m_gamma = 1.0 / this.m_gamma;\n      }\n\n      this.m_bias = C * h * k * this.m_gamma;\n\n      this.m_springMass = invMass + this.m_gamma;\n      if (this.m_springMass > 0.0) {\n        this.m_springMass = 1.0 / this.m_springMass;\n      }\n    }\n  } else {\n    this.m_springImpulse = 0.0;\n  }\n\n  // Rotational motor\n  if (this.m_enableMotor) {\n    this.m_motorMass = iA + iB;\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  } else {\n    this.m_motorMass = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse *= step.dtRatio;\n    this.m_springImpulse *= step.dtRatio;\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.wAdd(this.m_impulse, this.m_ay, this.m_springImpulse, this.m_ax);\n    var LA = this.m_impulse * this.m_sAy + this.m_springImpulse * this.m_sAx + this.m_motorImpulse;\n    var LB = this.m_impulse * this.m_sBy + this.m_springImpulse * this.m_sBx + this.m_motorImpulse;\n\n    vA.wSub(this.m_invMassA, P);\n    wA -= this.m_invIA * LA;\n\n    vB.wAdd(this.m_invMassB, P);\n    wB += this.m_invIB * LB;\n\n  } else {\n    this.m_impulse = 0.0;\n    this.m_springImpulse = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWheelJoint.prototype.solveVelocityConstraints = function(step) {\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Solve spring constraint\n  {\n    var Cdot = Vec2.dot(this.m_ax, vB) - Vec2.dot(this.m_ax, vA) + this.m_sBx\n        * wB - this.m_sAx * wA; // float\n    var impulse = -this.m_springMass\n        * (Cdot + this.m_bias + this.m_gamma * this.m_springImpulse); // float\n    this.m_springImpulse += impulse;\n\n    var P = Vec2.zero().wSet(impulse, this.m_ax); // Vec2\n    var LA = impulse * this.m_sAx; // float\n    var LB = impulse * this.m_sBx; // float\n\n    vA.wSub(mA, P);\n    wA -= iA * LA;\n\n    vB.wAdd(mB, P);\n    wB += iB * LB;\n  }\n\n  // Solve rotational motor constraint\n  {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n    var impulse = -this.m_motorMass * Cdot; // float\n\n    var oldImpulse = this.m_motorImpulse; // float\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve point to line constraint\n  {\n    var Cdot = Vec2.dot(this.m_ay, vB) - Vec2.dot(this.m_ay, vA) + this.m_sBy\n        * wB - this.m_sAy * wA; // float\n    var impulse = -this.m_mass * Cdot; // float\n    this.m_impulse += impulse;\n\n    var P = Vec2.zero().wSet(impulse, this.m_ay); // Vec2\n    var LA = impulse * this.m_sAy; // float\n    var LB = impulse * this.m_sBy; // float\n\n    vA.wSub(mA, P);\n    wA -= iA * LA;\n\n    vB.wAdd(mB, P);\n    wB += iB * LB;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWheelJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mul(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n  var rB = Rot.mul(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n  var d = Vec2.zero();\n  d.wAdd(1, cB, 1, rB);\n  d.wSub(1, cA, 1, rA); // Vec2\n\n  var ay = Rot.mul(qA, this.m_localYAxisA); // Vec2\n\n  var sAy = Vec2.cross(Vec2.add(d, rA), ay); // float\n  var sBy = Vec2.cross(rB, ay); // float\n\n  var C = Vec2.dot(d, ay); // float\n\n  var k = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy\n      * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy; // float\n\n  var impulse; // float\n  if (k != 0.0) {\n    impulse = -C / k;\n  } else {\n    impulse = 0.0;\n  }\n\n  var P = Vec2.zero().wSet(impulse, ay); // Vec2\n  var LA = impulse * sAy; // float\n  var LB = impulse * sBy; // float\n\n  cA.wSub(this.m_invMassA, P);\n  aA -= this.m_invIA * LA;\n  cB.wAdd(this.m_invMassB, P);\n  aB += this.m_invIB * LB;\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return Math.abs(C) <= Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = WeldJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nWeldJoint.TYPE = 'weld-joint';\n\nWeldJoint._super = Joint;\nWeldJoint.prototype = create(WeldJoint._super.prototype);\n\n/**\n * @typedef {Object} WeldJointDef\n *\n * Weld joint definition. You need to specify local anchor points where they are\n * attached and the relative body angle. The position of the anchor points is\n * important for computing the reaction torque.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. Rotation\n *       only. Disable softness with a value of 0.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n */\nvar WeldJointDef = {\n  frequencyHz : 0.0,\n  dampingRatio : 0.0\n}\n\n/**\n * A weld joint essentially glues two bodies together. A weld joint may distort\n * somewhat because the island constraint solver is approximate.\n * \n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\nfunction WeldJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof WeldJoint)) {\n    return new WeldJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, WeldJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  this.m_type = WeldJoint.TYPE;\n\n  this.m_localAnchorA = bodyA.getLocalPoint(anchor);\n  this.m_localAnchorB = bodyB.getLocalPoint(anchor);\n  this.m_referenceAngle = bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_impulse = Vec3();\n\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass = new Mat33();\n\n  // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // / = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // C = angle2 - angle1 - referenceAngle\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nWeldJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n};\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nWeldJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n};\n\n/**\n * Get the reference angle.\n */\nWeldJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n};\n\n/**\n * Set/get frequency in Hz.\n */\nWeldJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n};\n\nWeldJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n};\n\n/**\n * Set/get damping ratio.\n */\nWeldJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n};\n\nWeldJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n};\n\nWeldJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n};\n\nWeldJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n\nWeldJoint.prototype.getReactionForce = function(inv_dt) {\n  var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n  return inv_dt * P;\n};\n\nWeldJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.z;\n};\n\nWeldJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mul(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mul(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y\n      * iB;\n  K.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\n  K.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x\n      * iB;\n  K.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    K.getInverse22(this.m_mass);\n\n    var invM = iA + iB; // float\n    var m = invM > 0.0 ? 1.0 / invM : 0.0; // float\n\n    var C = aB - aA - this.m_referenceAngle; // float\n\n    // Frequency\n    var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n\n    // Damping coefficient\n    var d = 2.0 * m * this.m_dampingRatio * omega; // float\n\n    // Spring stiffness\n    var k = m * omega * omega; // float\n\n    // magic formulas\n    var h = step.dt; // float\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n\n    invM += this.m_gamma;\n    this.m_mass.ez.z = invM != 0.0 ? 1.0 / invM : 0.0;\n  } else if (K.ez.z == 0.0) {\n    K.getInverse22(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  } else {\n    K.getSymInverse33(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n\n    vA.wSub(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_impulse.z);\n\n    vB.wAdd(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_impulse.z);\n\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWeldJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  if (this.m_frequencyHz > 0.0) {\n    var Cdot2 = wB - wA; // float\n\n    var impulse2 = -this.m_mass.ez.z\n        * (Cdot2 + this.m_bias + this.m_gamma * this.m_impulse.z); // float\n    this.m_impulse.z += impulse2;\n\n    wA -= iA * impulse2;\n    wB += iB * impulse2;\n\n    var Cdot1 = Vec2.zero();\n    Cdot1.wAdd(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.wSub(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n\n    var impulse1 = Vec2.neg(Mat33.mul(this.m_mass, Cdot1)); // Vec2\n    this.m_impulse.x += impulse1.x;\n    this.m_impulse.y += impulse1.y;\n\n    var P = Vec2.clone(impulse1); // Vec2\n\n    vA.wSub(mA, P);\n    wA -= iA * Vec2.cross(this.m_rA, P);\n\n    vB.wAdd(mB, P);\n    wB += iB * Vec2.cross(this.m_rB, P);\n  } else {\n    var Cdot1 = Vec2.zero();\n    Cdot1.wAdd(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.wSub(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n    var Cdot2 = wB - wA; // float\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2); // Vec3\n\n    var impulse = Vec3.neg(Mat33.mul(this.m_mass, Cdot)); // Vec3\n    this.m_impulse.add(impulse);\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    vA.wSub(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n\n    vB.wAdd(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWeldJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var rA = Rot.mul(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mul(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  var positionError, angularError; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + rA.y * rA.y * iA + rB.y * rB.y * iB;\n  K.ey.x = -rA.y * rA.x * iA - rB.y * rB.x * iB;\n  K.ez.x = -rA.y * iA - rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + rA.x * rA.x * iA + rB.x * rB.x * iB;\n  K.ez.y = rA.x * iA + rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C1 = Vec2.zero();\n    C1.wAdd(1, cB, 1, rB);\n    C1.wSub(1, cA, 1, rA); // Vec2\n\n    positionError = C1.length();\n    angularError = 0.0;\n\n    var P = Vec2.neg(K.solve22(C1)); // Vec2\n\n    cA.wSub(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n\n    cB.wAdd(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  } else {\n    var C1 = Vec2.zero();\n    C1.wAdd(1, cB, 1, rB);\n    C1.wSub(1, cA, 1, rA);\n\n    var C2 = aB - aA - this.m_referenceAngle; // float\n\n    positionError = C1.length();\n    angularError = Math.abs(C2);\n\n    var C = Vec3(C1.x, C1.y, C2);\n\n    var impulse = Vec3();\n    if (K.ez.z > 0.0) {\n      impulse = Vec3.neg(K.solve33(C));\n    } else {\n      var impulse2 = Vec2.neg(K.solve22(C1));\n      impulse.set(impulse2.x, impulse2.y, 0.0);\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    cA.wSub(mA, P);\n    aA -= iA * (Vec2.cross(rA, P) + impulse.z);\n\n    cB.wAdd(mB, P);\n    aB += iB * (Vec2.cross(rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return positionError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = RopeJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nRopeJoint.TYPE = 'rope-joint';\n\nRopeJoint._super = Joint;\nRopeJoint.prototype = create(RopeJoint._super.prototype);\n\n/**\n * @typedef {Object} RopeJointDef\n *\n * Rope joint definition. This requires two body anchor points and a maximum\n * lengths. Note: by default the connected objects will not collide. see\n * collideConnected in JointDef.\n * \n * @prop {float} maxLength The maximum length of the rope. Warning: this must be\n *       larger than linearSlop or the joint will have no effect.\n */\nvar RopeJointDef = {\n  maxLength : 0.0\n};\n\n/**\n * A rope joint enforces a maximum distance between two points on two bodies. It\n * has no other effect.\n * \n * Warning: if you attempt to change the maximum length during the simulation\n * you will get some non-physical behavior.\n * \n * A model that would allow you to dynamically modify the length would have some\n * sponginess, so I chose not to implement it that way. See DistanceJoint if you\n * want to dynamically control length.\n * \n * @prop {Vec2} def.localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} def.localAnchorB The local anchor point relative to bodyB's origin.\n */\nfunction RopeJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RopeJoint)) {\n    return new RopeJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, RopeJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  this.m_type = RopeJoint.TYPE;\n\n  this.m_localAnchorA = def.localAnchorA || bodyA.getLocalPoint(anchor);\n  this.m_localAnchorB = def.localAnchorB || bodyB.getLocalPoint(anchor);\n\n  this.m_maxLength = def.maxLength;\n\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_length = 0.0;\n  this.m_state = inactiveLimit;\n\n  // Solver temp\n  this.m_u; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass; // float\n\n  // Limit:\n  // C = norm(pB - pA) - L\n  // u = (pB - pA) / norm(pB - pA)\n  // Cdot = dot(u, vB + cross(wB, rB) - vA - cross(wA, rA))\n  // J = [-u -cross(rA, u) u cross(rB, u)]\n  // K = J * invM * JT\n  // = invMassA + invIA * cross(rA, u)^2 + invMassB + invIB * cross(rB, u)^2\n};\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nRopeJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nRopeJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set/Get the maximum length of the rope.\n */\nRopeJoint.prototype.setMaxLength = function(length) {\n  this.m_maxLength = length;\n}\n\nRopeJoint.prototype.getMaxLength = function() {\n  return this.m_maxLength;\n}\n\nRopeJoint.prototype.getLimitState = function() {\n  // TODO LimitState\n  return this.m_state;\n}\n\nRopeJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nRopeJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nRopeJoint.prototype.getReactionForce = function(inv_dt) {\n  var F = (inv_dt * this.m_impulse) * this.m_u; // Vec2\n  return F;\n}\n\nRopeJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nRopeJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  this.m_rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  this.m_u = Vec2.zero();\n  this.m_u.wAdd(1, cB, 1, this.m_rB);\n  this.m_u.wSub(1, cA, 1, this.m_rA); // Vec2\n\n  this.m_length = this.m_u.length();\n\n  var C = this.m_length - this.m_maxLength; // float\n  if (C > 0.0) {\n    this.m_state = atUpperLimit;\n  } else {\n    this.m_state = inactiveLimit;\n  }\n\n  if (this.m_length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / this.m_length);\n  } else {\n    this.m_u.setZero();\n    this.m_mass = 0.0;\n    this.m_impulse = 0.0;\n    return;\n  }\n\n  // Compute effective mass.\n  var crA = Vec2.cross(this.m_rA, this.m_u); // float\n  var crB = Vec2.cross(this.m_rB, this.m_u); // float\n  var invMass = this.m_invMassA + this.m_invIA * crA * crA + this.m_invMassB\n      + this.m_invIB * crB * crB; // float\n\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n    \n    vA.wSub(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n    \n    vB.wAdd(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n    \n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRopeJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Cdot = dot(u, v + cross(w, r))\n  var vpA = Vec2.addCross(vA, wA, this.m_rA); // Vec2\n  var vpB = Vec2.addCross(vB, wB, this.m_rB); // Vec2\n  var C = this.m_length - this.m_maxLength; // float\n  var Cdot = Vec2.dot(this.m_u, Vec2.sub(vpB, vpA)); // float\n\n  // Predictive constraint.\n  if (C < 0.0) {\n    Cdot += step.inv_dt * C;\n  }\n\n  var impulse = -this.m_mass * Cdot; // float\n  var oldImpulse = this.m_impulse; // float\n  this.m_impulse = Math.min(0.0, this.m_impulse + impulse);\n  impulse = this.m_impulse - oldImpulse;\n\n  var P = Vec2.mul(impulse, this.m_u); // Vec2\n  vA.wSub(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.wAdd(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRopeJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c; // Vec2\n  var aA = this.m_bodyA.c_position.a; // float\n  var cB = this.m_bodyB.c_position.c; // Vec2\n  var aB = this.m_bodyB.c_position.a; // float\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.zero();\n  u.wAdd(1, cB, 1, rB);\n  u.wSub(1, cA, 1, rA); // Vec2\n\n  var length = u.normalize(); // float\n  var C = length - this.m_maxLength; // float\n\n  C = Math.clamp(C, 0.0, Settings.maxLinearCorrection);\n\n  var impulse = -this.m_mass * C; // float\n  var P = Vec2.mul(impulse, u); // Vec2\n\n  cA.wSub(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.wAdd(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return length - this.m_maxLength < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PulleyJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nPulleyJoint.TYPE = 'pulley-joint';\nPulleyJoint.MIN_PULLEY_LENGTH = 2.0; // minPulleyLength\n\nPulleyJoint._super = Joint;\nPulleyJoint.prototype = create(PulleyJoint._super.prototype);\n\n/**\n * @typedef {Object} PulleyJointDef\n *\n * Pulley joint definition. This requires two ground anchors, two dynamic body\n * anchor points, and a pulley ratio.\n */\nvar PulleyJointDef = {\n  collideConnected : true\n};\n\n/**\n * The pulley joint is connected to two bodies and two fixed ground points. The\n * pulley supports a ratio such that: length1 + ratio * length2 <= constant\n * \n * Yes, the force transmitted is scaled by the ratio.\n * \n * Warning: the pulley joint can get a bit squirrelly by itself. They often work\n * better when combined with prismatic joints. You should also cover the the\n * anchor points with static shapes to prevent one side from going to zero\n * length.\n * \n * @param {Vec2} groundAnchorA The first ground anchor in world coordinates.\n *          This point never moves.\n * @param {Vec2} groundAnchorB The second ground anchor in world coordinates.\n *          This point never moves.\n * @param {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @param {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @param {float} ratio The pulley ratio, used to simulate a block-and-tackle.\n * \n * @prop {float} lengthA The reference length for the segment attached to bodyA.\n * @prop {float} lengthB The reference length for the segment attached to bodyB.\n */\nfunction PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA, anchorB,\n    ratio) {\n  if (!(this instanceof PulleyJoint)) {\n    return new PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA,\n        anchorB, ratio);\n  }\n\n  def = options(def, PulleyJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  this.m_type = PulleyJoint.TYPE;\n\n  this.m_groundAnchorA = groundA;\n  this.m_groundAnchorB = groundB;\n  this.m_localAnchorA = bodyA.getLocalPoint(anchorA);\n  this.m_localAnchorB = bodyB.getLocalPoint(anchorB);\n  this.m_lengthA = Vec2.distance(anchorA, groundA);\n  this.m_lengthB = Vec2.distance(anchorB, groundB);\n  this.m_ratio = def.ratio || ratio;\n  _ASSERT && common.assert(ratio > Math.EPSILON);\n\n  this.m_constant = this.m_lengthA + this.m_ratio * this.m_lengthB;\n\n  this.m_impulse = 0.0;\n\n  // Solver temp\n  this.m_uA; // Vec2\n  this.m_uB; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass; // float\n\n  // Pulley:\n  // length1 = norm(p1 - s1)\n  // length2 = norm(p2 - s2)\n  // C0 = (length1 + ratio * length2)_initial\n  // C = C0 - (length1 + ratio * length2)\n  // u1 = (p1 - s1) / norm(p1 - s1)\n  // u2 = (p2 - s2) / norm(p2 - s2)\n  // Cdot = -dot(u1, v1 + cross(w1, r1)) - ratio * dot(u2, v2 + cross(w2, r2))\n  // J = -[u1 cross(r1, u1) ratio * u2 ratio * cross(r2, u2)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u1)^2 + ratio^2 * (invMass2 + invI2 *\n  // cross(r2, u2)^2)\n}\n\n/**\n * Get the first ground anchor.\n */\nPulleyJoint.prototype.getGroundAnchorA = function() {\n  return this.m_groundAnchorA;\n}\n\n/**\n * Get the second ground anchor.\n */\nPulleyJoint.prototype.getGroundAnchorB = function() {\n  return this.m_groundAnchorB;\n}\n\n/**\n * Get the current length of the segment attached to bodyA.\n */\nPulleyJoint.prototype.getLengthA = function() {\n  return this.m_lengthA;\n}\n\n/**\n * Get the current length of the segment attached to bodyB.\n */\nPulleyJoint.prototype.getLengthB = function() {\n  return this.m_lengthB;\n}\n\n/**\n * Get the pulley ratio.\n */\nPulleyJoint.prototype.getRatio = function() {\n  return this.m_ratio;\n}\n\n/**\n * Get the current length of the segment attached to bodyA.\n */\nPulleyJoint.prototype.getCurrentLengthA = function() {\n  var p = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var s = this.m_groundAnchorA;\n  return Vec2.distance(p, s);\n}\n\n/**\n * Get the current length of the segment attached to bodyB.\n */\nPulleyJoint.prototype.getCurrentLengthB = function() {\n  var p = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var s = this.m_groundAnchorB;\n  return Vec2.distance(p, s);\n}\n\nPulleyJoint.prototype.shiftOrigin = function(newOrigin) {\n  this.m_groundAnchorA -= newOrigin;\n  this.m_groundAnchorB -= newOrigin;\n}\n\nPulleyJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nPulleyJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nPulleyJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec3.mul(inv_dt * this.m_impulse, this.m_uB);\n}\n\nPulleyJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nPulleyJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mul(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mul(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // Get the pulley axes.\n  this.m_uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  this.m_uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n\n  var lengthA = this.m_uA.length();\n  var lengthB = this.m_uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    this.m_uA.mul(1.0 / lengthA);\n  } else {\n    this.m_uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    this.m_uB.mul(1.0 / lengthB);\n  } else {\n    this.m_uB.setZero();\n  }\n\n  // Compute effective mass.\n  var ruA = Vec2.cross(this.m_rA, this.m_uA); // float\n  var ruB = Vec2.cross(this.m_rB, this.m_uB); // float\n\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  this.m_mass = mA + this.m_ratio * this.m_ratio * mB;\n\n  if (this.m_mass > 0.0) {\n    this.m_mass = 1.0 / this.m_mass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support variable time steps.\n    this.m_impulse *= step.dtRatio;\n\n    // Warm starting.\n    var PA = Vec2.mul(-this.m_impulse, this.m_uA);\n    var PB = Vec2.mul(-this.m_ratio * this.m_impulse, this.m_uB);\n\n    vA.wAdd(this.m_invMassA, PA);\n    wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n\n    vB.wAdd(this.m_invMassB, PB);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPulleyJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n\n  var Cdot = -Vec2.dot(this.m_uA, vpA) - this.m_ratio\n      * Vec2.dot(this.m_uB, vpB); // float\n  var impulse = -this.m_mass * Cdot; // float\n  this.m_impulse += impulse;\n\n  var PA = Vec2.zero().wSet(-impulse, this.m_uA); // Vec2\n  var PB = Vec2.zero().wSet(-this.m_ratio * impulse, this.m_uB); // Vec2\n  vA.wAdd(this.m_invMassA, PA);\n  wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n  vB.wAdd(this.m_invMassB, PB);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPulleyJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  var rA = Rot.mul(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mul(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // Get the pulley axes.\n  var uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  var uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n\n  var lengthA = uA.length();\n  var lengthB = uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    uA.mul(1.0 / lengthA);\n  } else {\n    uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    uB.mul(1.0 / lengthB);\n  } else {\n    uB.setZero();\n  }\n\n  // Compute effective mass.\n  var ruA = Vec2.cross(rA, uA);\n  var ruB = Vec2.cross(rB, uB);\n\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  var mass = mA + this.m_ratio * this.m_ratio * mB; // float\n\n  if (mass > 0.0) {\n    mass = 1.0 / mass;\n  }\n\n  var C = this.m_constant - lengthA - this.m_ratio * lengthB; // float\n  var linearError = Math.abs(C); // float\n\n  var impulse = -mass * C; // float\n\n  var PA = Vec2.zero().wSet(-impulse, uA); // Vec2\n  var PB = Vec2.zero().wSet(-this.m_ratio * impulse, uB); // Vec2\n\n  cA.wAdd(this.m_invMassA, PA);\n  aA += this.m_invIA * Vec2.cross(rA, PA);\n  cB.wAdd(this.m_invMassB, PB);\n  aB += this.m_invIB * Vec2.cross(rB, PB);\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return linearError < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = MouseJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nMouseJoint.TYPE = 'mouse-joint';\n\nMouseJoint._super = Joint;\nMouseJoint.prototype = create(MouseJoint._super.prototype);\n\n/**\n * @typedef {Object} MouseJointDef\n *\n * Mouse joint definition. This requires a world target point, tuning\n * parameters, and the time step.\n * \n * @prop [maxForce = 0.0] The maximum constraint force that can be exerted to\n *       move the candidate body. Usually you will express as some multiple of\n *       the weight (multiplier * mass * gravity).\n * @prop [frequencyHz = 5.0] The response speed.\n * @prop [dampingRatio = 0.7] The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n */\nvar MouseJointDef = {\n  maxForce : 0.0,\n  frequencyHz : 5.0,\n  dampingRatio : 0.7\n};\n\n/**\n * A mouse joint is used to make a point on a body track a specified world\n * point. This a soft constraint with a maximum force. This allows the\n * constraint to stretch and without applying huge forces.\n * \n * NOTE: this joint is not documented in the manual because it was developed to\n * be used in the testbed. If you want to learn how to use the mouse joint, look\n * at the testbed.\n * \n * @prop {Vec2} target The initial world target point. This is assumed to\n *       coincide with the body anchor initially.\n */\nfunction MouseJoint(def, bodyA, bodyB, target) {\n  if (!(this instanceof MouseJoint)) {\n    return new MouseJoint(def, bodyA, bodyB, target);\n  }\n\n  def = options(def, MouseJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  this.m_type = MouseJoint.TYPE;\n\n  _ASSERT && common.assert(Math.isFinite(def.maxForce) && def.maxForce >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.frequencyHz) && def.frequencyHz >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.dampingRatio) && def.dampingRatio >= 0.0);\n\n  this.m_targetA = Vec2.clone(target);\n  this.m_localAnchorB = Transform.mulT(this.m_bodyB.getTransform(), this.m_targetA);\n\n  this.m_maxForce = def.maxForce;\n  this.m_impulse = Vec2.zero();\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_beta = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_rB = Vec2.zero();\n  this.m_localCenterB = Vec2.zero();\n  this.m_invMassB = 0.0;\n  this.m_invIB = 0.0;\n  this.mass = new Mat22()\n  this.m_C = Vec2.zero();\n\n  // p = attached point, m = mouse point\n  // C = p - m\n  // Cdot = v\n  // = v + cross(w, r)\n  // J = [I r_skew]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n}\n\n/**\n * Use this to update the target point.\n */\nMouseJoint.prototype.setTarget = function(target) {\n  if (this.m_bodyB.isAwake() == false) {\n    this.m_bodyB.setAwake(true);\n  }\n  this.m_targetA = Vec2.clone(target);\n}\n\nMouseJoint.prototype.getTarget = function() {\n  return this.m_targetA;\n}\n\n/**\n * Set/get the maximum force in Newtons.\n */\nMouseJoint.prototype.setMaxForce = function(force) {\n  this.m_maxForce = force;\n}\n\nMouseJoint.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set/get the frequency in Hertz.\n */\nMouseJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nMouseJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n}\n\n/**\n * Set/get the damping ratio (dimensionless).\n */\nMouseJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nMouseJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nMouseJoint.prototype.getAnchorA = function() {\n  return Vec2.clone(this.m_targetA);\n}\n\nMouseJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nMouseJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_impulse);\n}\n\nMouseJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * 0.0;\n}\n\nMouseJoint.prototype.shiftOrigin = function(newOrigin) {\n  this.m_targetA.sub(newOrigin);\n}\n\nMouseJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var position = this.m_bodyB.c_position;\n  var velocity = this.m_bodyB.c_velocity;\n\n  var cB = position.c;\n  var aB = position.a;\n  var vB = velocity.v;\n  var wB = velocity.w;\n\n  var qB = Rot.neo(aB);\n\n  var mass = this.m_bodyB.getMass();\n\n  // Frequency\n  var omega = 2.0 * Math.PI * this.m_frequencyHz;\n\n  // Damping coefficient\n  var d = 2.0 * mass * this.m_dampingRatio * omega;\n\n  // Spring stiffness\n  var k = mass * (omega * omega);\n\n  // magic formulas\n  // gamma has units of inverse mass.\n  // beta has units of inverse time.\n  var h = step.dt;\n  _ASSERT && common.assert(d + h * k > Math.EPSILON);\n  this.m_gamma = h * (d + h * k);\n  if (this.m_gamma != 0.0) {\n    this.m_gamma = 1.0 / this.m_gamma;\n  }\n  this.m_beta = h * k * this.m_gamma;\n\n  // Compute the effective mass matrix.\n  this.m_rB = Rot.mul(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // K = [(1/m1 + 1/m2) * eye(2) - skew(r1) * invI1 * skew(r1) - skew(r2) *\n  // invI2 * skew(r2)]\n  // = [1/m1+1/m2 0 ] + invI1 * [r1.y*r1.y -r1.x*r1.y] + invI2 * [r1.y*r1.y\n  // -r1.x*r1.y]\n  // [ 0 1/m1+1/m2] [-r1.x*r1.y r1.x*r1.x] [-r1.x*r1.y r1.x*r1.x]\n  var K = new Mat22();\n  K.ex.x = this.m_invMassB + this.m_invIB * this.m_rB.y * this.m_rB.y\n      + this.m_gamma;\n  K.ex.y = -this.m_invIB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = this.m_invMassB + this.m_invIB * this.m_rB.x * this.m_rB.x\n      + this.m_gamma;\n\n  this.m_mass = K.getInverse();\n\n  this.m_C.set(cB);\n  this.m_C.wAdd(1, this.m_rB, -1, this.m_targetA);\n  this.m_C.mul(this.m_beta);\n\n  // Cheat with some damping\n  wB *= 0.98;\n\n  if (step.warmStarting) {\n    this.m_impulse.mul(step.dtRatio);\n    vB.wAdd(this.m_invMassB, this.m_impulse);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, this.m_impulse);\n\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  velocity.v.set(vB);\n  velocity.w = wB;\n}\n\nMouseJoint.prototype.solveVelocityConstraints = function(step) {\n  var velocity = this.m_bodyB.c_velocity;\n  var vB = Vec2.clone(velocity.v);\n  var wB = velocity.w;\n\n  // Cdot = v + cross(w, r)\n\n  var Cdot = Vec2.cross(wB, this.m_rB);\n  Cdot.add(vB);\n\n  Cdot.wAdd(1, this.m_C, this.m_gamma, this.m_impulse);\n  Cdot.neg();\n\n  var impulse = Mat22.mul(this.m_mass, Cdot);\n\n  var oldImpulse = Vec2.clone(this.m_impulse);\n  this.m_impulse.add(impulse);\n  var maxImpulse = step.dt * this.m_maxForce;\n  this.m_impulse.clamp(maxImpulse);\n  impulse = Vec2.sub(this.m_impulse, oldImpulse);\n\n  vB.wAdd(this.m_invMassB, impulse);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, impulse);\n\n  velocity.v.set(vB);\n  velocity.w = wB;\n}\n\nMouseJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = MotorJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nMotorJoint.TYPE = 'motor-joint';\n\nMotorJoint._super = Joint;\nMotorJoint.prototype = create(MotorJoint._super.prototype);\n\n/**\n * @typedef {Object} MotorJointDef\n *\n * Motor joint definition.\n * \n * @prop {float} angularOffset The bodyB angle minus bodyA angle in radians.\n * @prop {float} maxForce The maximum motor force in N.\n * @prop {float} maxTorque The maximum motor torque in N-m.\n * @prop {float} correctionFactor Position correction factor in the range [0,1].\n */\nvar MotorJointDef = {\n  maxForce : 1.0,\n  maxTorque : 1.0,\n  correctionFactor : 0.3\n};\n\n/**\n * A motor joint is used to control the relative motion between two bodies. A\n * typical usage is to control the movement of a dynamic body with respect to\n * the ground.\n * \n * @prop {Vec2} linearOffset Position of bodyB minus the position of bodyA, in\n *       bodyA's frame, in meters.\n */\nfunction MotorJoint(def, bodyA, bodyB) {\n  if (!(this instanceof MotorJoint)) {\n    return new MotorJoint(def, bodyA, bodyB);\n  }\n\n  def = options(def, MotorJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  this.m_type = MotorJoint.TYPE;\n\n  var xB = bodyB.getPosition();\n  this.m_linearOffset = bodyA.getLocalPoint(xB);\n\n  var angleA = bodyA.getAngle();\n  var angleB = bodyB.getAngle();\n  this.m_angularOffset = angleB - angleA;\n\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque;\n  this.m_correctionFactor = def.correctionFactor;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_linearError; // Vec2\n  this.m_angularError; // float\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_linearMass; // Mat22\n  this.m_angularMass; // float\n\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\n/**\n * Set the maximum friction force in N.\n */\nMotorJoint.prototype.setMaxForce = function(force) {\n  _ASSERT && common.assert(IsValid(force) && force >= 0.0);\n  this.m_maxForce = force;\n}\n\n/**\n * Get the maximum friction force in N.\n */\nMotorJoint.prototype.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set the maximum friction torque in N*m.\n */\nMotorJoint.prototype.setMaxTorque = function(torque) {\n  _ASSERT && common.assert(IsValid(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n}\n\n/**\n * Get the maximum friction torque in N*m.\n */\nMotorJoint.prototype.getMaxTorque = function() {\n  return this.m_maxTorque;\n}\n\n/**\n * Set the position correction factor in the range [0,1].\n */\nMotorJoint.prototype.setCorrectionFactor = function(factor) {\n  _ASSERT && common.assert(IsValid(factor) && 0.0 <= factor && factor <= 1.0);\n  this.m_correctionFactor = factor;\n}\n\n/**\n * Get the position correction factor in the range [0,1].\n */\nMotorJoint.prototype.getCorrectionFactor = function() {\n  return this.m_correctionFactor;\n}\n\n/**\n * Set/get the target linear offset, in frame A, in meters.\n */\nMotorJoint.prototype.setLinearOffset = function(/* Vec2& */linearOffset) {\n  if (linearOffset.x != this.m_linearOffset.x\n      || linearOffset.y != this.m_linearOffset.y) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_linearOffset = linearOffset;\n  }\n}\n\nMotorJoint.prototype.getLinearOffset = function() {\n  return this.m_linearOffset;\n}\n\n/**\n * Set/get the target angular offset, in radians.\n */\nMotorJoint.prototype.setAngularOffset = function(angularOffset) {\n  if (angularOffset != this.m_angularOffset) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_angularOffset = angularOffset;\n  }\n}\n\nMotorJoint.prototype.getAngularOffset = function() {\n  return this.m_angularOffset;\n}\n\nMotorJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getPosition();\n}\n\nMotorJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getPosition();\n}\n\nMotorJoint.prototype.getReactionForce = function(inv_dt) {\n  return inv_dt * this.m_linearImpulse;\n}\n\nMotorJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n}\n\nMotorJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  // Compute the effective mass matrix.\n  this.m_rA = Rot.mul(qA, Vec2.neg(this.m_localCenterA));\n  this.m_rB = Rot.mul(qB, Vec2.neg(this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  var K = new Mat22();\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y\n      * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x\n      * this.m_rB.x;\n\n  this.m_linearMass = K.getInverse();\n\n  this.m_angularMass = iA + iB;\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  this.m_linearError = Vec2.zero();\n  this.m_linearError.wAdd(1, cB, 1, this.m_rB);\n  this.m_linearError.wSub(1, cA, 1, this.m_rA);\n  this.m_linearError.sub(Rot.mul(qA, this.m_linearOffset));\n\n  this.m_angularError = aB - aA - this.m_angularOffset;\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n\n    vA.wSub(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n\n    vB.wAdd(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nMotorJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA, mB = this.m_invMassB;\n  var iA = this.m_invIA, iB = this.m_invIB;\n\n  var h = step.dt;\n  var inv_h = step.inv_dt;\n\n  // Solve angular friction\n  {\n    var Cdot = wB - wA + inv_h * this.m_correctionFactor * this.m_angularError;\n    var impulse = -this.m_angularMass * Cdot;\n\n    var oldImpulse = this.m_angularImpulse;\n    var maxImpulse = h * this.m_maxTorque;\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve linear friction\n  {\n    var Cdot = Vec2.zero();\n    Cdot.wAdd(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.wSub(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    Cdot.wAdd(inv_h * this.m_correctionFactor, this.m_linearError);\n\n    var impulse = Vec2.neg(Mat22.mul(this.m_linearMass, Cdot));\n    var oldImpulse = Vec2.clone(this.m_linearImpulse);\n    this.m_linearImpulse.add(impulse);\n\n    var maxImpulse = h * this.m_maxForce;\n\n    this.m_linearImpulse.clamp(maxImpulse);\n\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n\n    vA.wSub(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.wAdd(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nMotorJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = GearJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar RevoluteJoint = require('./RevoluteJoint');\nvar PrismaticJoint = require('./PrismaticJoint');\n\nGearJoint.TYPE = 'gear-joint';\n\nGearJoint._super = Joint;\nGearJoint.prototype = create(GearJoint._super.prototype);\n\n/**\n * @typedef {Object} GearJointDef\n *\n * Gear joint definition.\n * \n * @prop {float} ratio The gear ratio. See GearJoint for explanation.\n */\nvar GearJointDef = {\n  ratio : 1.0\n};\n\n/**\n * A gear joint is used to connect two joints together. Either joint can be a\n * revolute or prismatic joint. You specify a gear ratio to bind the motions\n * together: coordinate1 + ratio * coordinate2 = constant\n * \n * The ratio can be negative or positive. If one joint is a revolute joint and\n * the other joint is a prismatic joint, then the ratio will have units of\n * length or units of 1/length. Warning: You have to manually destroy the gear\n * joint if joint1 or joint2 is destroyed.\n * \n * This definition requires two existing revolute or prismatic joints (any\n * combination will work).\n * \n * @param {RevoluteJoint|PrismaticJoint} joint1 The first revolute/prismatic\n *          joint attached to the gear joint.\n * @param {PrismaticJoint|RevoluteJoint} joint2 The second prismatic/revolute\n *          joint attached to the gear joint.\n */\nfunction GearJoint(def, bodyA, bodyB, joint1, joint2, ratio) {\n  if (!(this instanceof GearJoint)) {\n    return new GearJoint(def, bodyA, bodyB, joint1, joint2, ratio);\n  }\n  \n  def = options(def, GearJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  this.m_type = GearJoint.TYPE;\n\n  _ASSERT && common.assert(joint1.m_type == RevoluteJoint.TYPE\n      || joint1.m_type == PrismaticJoint.TYPE);\n  _ASSERT && common.assert(joint2.m_type == RevoluteJoint.TYPE\n      || joint2.m_type == PrismaticJoint.TYPE);\n\n  this.m_joint1 = joint1;\n  this.m_joint2 = joint2;\n\n  this.m_type1 = this.m_joint1.getType();\n  this.m_type2 = this.m_joint2.getType();\n\n  // joint1 connects body A to body C\n  // joint2 connects body B to body D\n\n  var coordinateA, coordinateB; // float\n\n  // TODO_ERIN there might be some problem with the joint edges in Joint.\n\n  this.m_bodyC = this.m_joint1.getBodyA();\n  this.m_bodyA = this.m_joint1.getBodyB();\n\n  // Get geometry of joint1\n  var xfA = this.m_bodyA.m_xf;\n  var aA = this.m_bodyA.m_sweep.a;\n  var xfC = this.m_bodyC.m_xf;\n  var aC = this.m_bodyC.m_sweep.a;\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    var revolute = joint1;// RevoluteJoint\n    this.m_localAnchorC = revolute.m_localAnchorA;\n    this.m_localAnchorA = revolute.m_localAnchorB;\n    this.m_referenceAngleA = revolute.m_referenceAngle;\n    this.m_localAxisC = Vec2.zero();\n\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var prismatic = joint1; // PrismaticJoint\n    this.m_localAnchorC = prismatic.m_localAnchorA;\n    this.m_localAnchorA = prismatic.m_localAnchorB;\n    this.m_referenceAngleA = prismatic.m_referenceAngle;\n    this.m_localAxisC = prismatic.m_localXAxisA;\n\n    var pC = this.m_localAnchorC;\n    var pA = Rot.mulT(xfC.q, Vec2.add(Rot.mul(xfA.q, this.m_localAnchorA), Vec2.sub(xfA.p, xfC.p)));\n    coordinateA = Vec2.dot(pA, this.m_localAxisC) - Vec2.dot(pC, this.m_localAxisC);\n  }\n\n  this.m_bodyD = this.m_joint2.getBodyA();\n  this.m_bodyB = this.m_joint2.getBodyB();\n\n  // Get geometry of joint2\n  var xfB = this.m_bodyB.m_xf;\n  var aB = this.m_bodyB.m_sweep.a;\n  var xfD = this.m_bodyD.m_xf;\n  var aD = this.m_bodyD.m_sweep.a;\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    var revolute = joint2; // RevoluteJoint\n    this.m_localAnchorD = revolute.m_localAnchorA;\n    this.m_localAnchorB = revolute.m_localAnchorB;\n    this.m_referenceAngleB = revolute.m_referenceAngle;\n    this.m_localAxisD = Vec2.zero();\n\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var prismatic = joint2; // PrismaticJoint\n    this.m_localAnchorD = prismatic.m_localAnchorA;\n    this.m_localAnchorB = prismatic.m_localAnchorB;\n    this.m_referenceAngleB = prismatic.m_referenceAngle;\n    this.m_localAxisD = prismatic.m_localXAxisA;\n\n    var pD = this.m_localAnchorD;\n    var pB = Rot.mulT(xfD.q, Vec2.add(Rot.mul(xfB.q, this.m_localAnchorB), Vec2.sub(xfB.p, xfD.p)));\n    coordinateB = Vec2.dot(pB, this.m_localAxisD) - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  this.m_ratio = ratio || def.ratio;\n\n  this.m_constant = coordinateA + this.m_ratio * coordinateB;\n\n  this.m_impulse = 0.0;\n\n  // Solver temp\n  this.m_lcA, this.m_lcB, this.m_lcC, this.m_lcD; // Vec2\n  this.m_mA, this.m_mB, this.m_mC, this.m_mD; // float\n  this.m_iA, this.m_iB, this.m_iC, this.m_iD; // float\n  this.m_JvAC, this.m_JvBD; // Vec2\n  this.m_JwA, this.m_JwB, this.m_JwC, this.m_JwD; // float\n  this.m_mass; // float\n\n  // Gear Joint:\n  // C0 = (coordinate1 + ratio * coordinate2)_initial\n  // C = (coordinate1 + ratio * coordinate2) - C0 = 0\n  // J = [J1 ratio * J2]\n  // K = J * invM * JT\n  // = J1 * invM1 * J1T + ratio * ratio * J2 * invM2 * J2T\n  //\n  // Revolute:\n  // coordinate = rotation\n  // Cdot = angularVelocity\n  // J = [0 0 1]\n  // K = J * invM * JT = invI\n  //\n  // Prismatic:\n  // coordinate = dot(p - pg, ug)\n  // Cdot = dot(v + cross(w, r), ug)\n  // J = [ug cross(r, ug)]\n  // K = J * invM * JT = invMass + invI * cross(r, ug)^2\n};\n\n/**\n * Get the first joint.\n */\nGearJoint.prototype.getJoint1 = function() {\n  return this.m_joint1;\n}\n\n/**\n * Get the second joint.\n */\nGearJoint.prototype.getJoint2 = function() {\n  return this.m_joint2;\n}\n\n/**\n * Set/Get the gear ratio.\n */\nGearJoint.prototype.setRatio = function(ratio) {\n  _ASSERT && common.assert(Math.isFinite(ratio));\n  this.m_ratio = ratio;\n}\n\nGearJoint.prototype.getRatio = function() {\n  return this.m_ratio;\n}\n\nGearJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nGearJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nGearJoint.prototype.getReactionForce = function(inv_dt) {\n  var P = this.m_impulse * this.m_JvAC; // Vec2\n  return inv_dt * P;\n}\n\nGearJoint.prototype.getReactionTorque = function(inv_dt) {\n  var L = this.m_impulse * this.m_JwA; // float\n  return inv_dt * L;\n}\n\nGearJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_lcA = this.m_bodyA.m_sweep.localCenter;\n  this.m_lcB = this.m_bodyB.m_sweep.localCenter;\n  this.m_lcC = this.m_bodyC.m_sweep.localCenter;\n  this.m_lcD = this.m_bodyD.m_sweep.localCenter;\n  this.m_mA = this.m_bodyA.m_invMass;\n  this.m_mB = this.m_bodyB.m_invMass;\n  this.m_mC = this.m_bodyC.m_invMass;\n  this.m_mD = this.m_bodyD.m_invMass;\n  this.m_iA = this.m_bodyA.m_invI;\n  this.m_iB = this.m_bodyB.m_invI;\n  this.m_iC = this.m_bodyC.m_invI;\n  this.m_iD = this.m_bodyD.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var aC = this.m_bodyC.c_position.a;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n\n  var aD = this.m_bodyD.c_position.a;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n\n  this.m_mass = 0.0;\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    this.m_JvAC = Vec2.zero();\n    this.m_JwA = 1.0;\n    this.m_JwC = 1.0;\n    this.m_mass += this.m_iA + this.m_iC;\n  } else {\n    var u = Rot.mul(qC, this.m_localAxisC); // Vec2\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n    this.m_JvAC = u;\n    this.m_JwC = Vec2.cross(rC, u);\n    this.m_JwA = Vec2.cross(rA, u);\n    this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    this.m_JvBD = Vec2.zero();\n    this.m_JwB = this.m_ratio;\n    this.m_JwD = this.m_ratio;\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n  } else {\n    var u = Rot.mul(qD, this.m_localAxisD); // Vec2\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD); // Vec2\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB); // Vec2\n    this.m_JvBD = Vec2.mul(this.m_ratio, u);\n    this.m_JwD = this.m_ratio * Vec2.cross(rD, u);\n    this.m_JwB = this.m_ratio * Vec2.cross(rB, u);\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;\n  }\n\n  // Compute effective mass.\n  this.m_mass = this.m_mass > 0.0 ? 1.0 / this.m_mass : 0.0;\n\n  if (step.warmStarting) {\n    vA.wAdd(this.m_mA * this.m_impulse, this.m_JvAC);\n    wA += this.m_iA * this.m_impulse * this.m_JwA;\n    \n    vB.wAdd(this.m_mB * this.m_impulse, this.m_JvBD);\n    wB += this.m_iB * this.m_impulse * this.m_JwB;\n    \n    vC.wSub(this.m_mC * this.m_impulse, this.m_JvAC);\n    wC -= this.m_iC * this.m_impulse * this.m_JwC;\n  \n    vD.wSub(this.m_mD * this.m_impulse, this.m_JvBD);\n    wD -= this.m_iD * this.m_impulse * this.m_JwD;\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n}\n\nGearJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n\n  var Cdot = Vec2.dot(this.m_JvAC, vA) - Vec2.dot(this.m_JvAC, vC)\n      + Vec2.dot(this.m_JvBD, vB) - Vec2.dot(this.m_JvBD, vD); // float\n  Cdot += (this.m_JwA * wA - this.m_JwC * wC)\n      + (this.m_JwB * wB - this.m_JwD * wD);\n\n  var impulse = -this.m_mass * Cdot; // float\n  this.m_impulse += impulse;\n\n  vA.wAdd(this.m_mA * impulse, this.m_JvAC);\n  wA += this.m_iA * impulse * this.m_JwA;\n  vB.wAdd(this.m_mB * impulse, this.m_JvBD);\n  wB += this.m_iB * impulse * this.m_JwB;\n  vC.wSub(this.m_mC * impulse, this.m_JvAC);\n  wC -= this.m_iC * impulse * this.m_JwC;\n  vD.wSub(this.m_mD * impulse, this.m_JvBD);\n  wD -= this.m_iD * impulse * this.m_JwD;\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n}\n\nGearJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var cC = this.m_bodyC.c_position.c;\n  var aC = this.m_bodyC.c_position.a;\n  var cD = this.m_bodyD.c_position.c;\n  var aD = this.m_bodyD.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n\n  var linearError = 0.0; // float\n\n  var coordinateA, coordinateB; // float\n\n  var JvAC, JvBD; // Vec2\n  var JwA, JwB, JwC, JwD; // float\n  var mass = 0.0; // float\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    JvAC = Vec2.zero();\n    JwA = 1.0;\n    JwC = 1.0;\n    mass += this.m_iA + this.m_iC;\n\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var u = Rot.mul(qC, this.m_localAxisC); // Vec2\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n    JvAC = u;\n    JwC = Vec2.cross(rC, u);\n    JwA = Vec2.cross(rA, u);\n    mass += this.m_mC + this.m_mA + this.m_iC * JwC * JwC + this.m_iA * JwA * JwA;\n\n    var pC = Vec2.sub(this.m_localAnchorC, this.m_lcC); // Vec2\n    var pA = Rot.mulT(qC, Vec2.add(rA, Vec2.sub(cA, cC))); // Vec2\n    coordinateA = Vec2.dot(Vec2.sub(pA, pC), this.m_localAxisC);\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    JvBD = Vec2.zero();\n    JwB = this.m_ratio;\n    JwD = this.m_ratio;\n    mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var u = Rot.mul(qD, this.m_localAxisD);\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD);\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB);\n    JvBD = Vec2.mul(this.m_ratio, u);\n    JwD = this.m_ratio * Vec2.cross(rD, u);\n    JwB = this.m_ratio * Vec2.cross(rB, u);\n    mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD\n        * JwD * JwD + this.m_iB * JwB * JwB;\n\n    var pD = Vec2.sub(this.m_localAnchorD, this.m_lcD); // Vec2\n    var pB = Rot.mulT(qD, Vec2.add(rB, Vec2.sub(cB, cD))); // Vec2\n    coordinateB = Vec2.dot(pB, this.m_localAxisD)\n        - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  var C = (coordinateA + this.m_ratio * coordinateB) - this.m_constant; // float\n\n  var impulse = 0.0; // float\n  if (mass > 0.0) {\n    impulse = -C / mass;\n  }\n\n  cA.wAdd(this.m_mA * impulse, JvAC);\n  aA += this.m_iA * impulse * JwA;\n  cB.wAdd(this.m_mB * impulse, JvBD);\n  aB += this.m_iB * impulse * JwB;\n  cC.wSub(this.m_mC * impulse, JvAC);\n  aC -= this.m_iC * impulse * JwC;\n  cD.wSub(this.m_mD * impulse, JvBD);\n  aD -= this.m_iD * impulse * JwD;\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n  this.m_bodyC.c_position.c.set(cC);\n  this.m_bodyC.c_position.a = aC;\n  this.m_bodyD.c_position.c.set(cD);\n  this.m_bodyD.c_position.a = aD;\n\n  // TODO_ERIN not implemented\n  return linearError < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = FrictionJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nFrictionJoint.TYPE = 'friction-joint';\n\nFrictionJoint._super = Joint;\nFrictionJoint.prototype = create(FrictionJoint._super.prototype);\n\n/**\n * @typedef {Object} FrictionJointDef\n *\n * Friction joint definition.\n * \n * @prop {float} maxForce The maximum friction force in N.\n * @prop {float} maxTorque The maximum friction torque in N-m.\n */\nvar FrictionJointDef = {\n  maxForce : 0.0,\n  maxTorque : 0.0\n};\n\n/**\n * Friction joint. This is used for top-down friction. It provides 2D\n * translational friction and angular friction.\n * \n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n */\nfunction FrictionJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof FrictionJoint)) {\n    return new FrictionJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, FrictionJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  this.m_type = FrictionJoint.TYPE;\n\n  if (anchor) {\n    this.m_localAnchorA = bodyA.getLocalPoint(anchor);\n    this.m_localAnchorB = bodyB.getLocalPoint(anchor);\n  } else {\n    this.m_localAnchorA = Vec2.zero();\n    this.m_localAnchorB = Vec2.zero();\n  }\n\n  // Solver shared\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_linearMass; // Mat22\n  this.m_angularMass; // float\n\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nFrictionJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nFrictionJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set the maximum friction force in N.\n */\nFrictionJoint.prototype.setMaxForce = function(force) {\n  _ASSERT && common.assert(IsValid(force) && force >= 0.0);\n  this.m_maxForce = force;\n}\n\n/**\n * Get the maximum friction force in N.\n */\nFrictionJoint.prototype.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set the maximum friction torque in N*m.\n */\nFrictionJoint.prototype.setMaxTorque = function(torque) {\n  _ASSERT && common.assert(IsValid(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n}\n\n/**\n * Get the maximum friction torque in N*m.\n */\nFrictionJoint.prototype.getMaxTorque = function() {\n  return this.m_maxTorque;\n}\n\nFrictionJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nFrictionJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nFrictionJoint.prototype.getReactionForce = function(inv_dt) {\n  return inv_dt * this.m_linearImpulse;\n}\n\nFrictionJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n}\n\nFrictionJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  // Compute the effective mass matrix.\n  this.m_rA = Rot.mul(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mul(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var K = new Mat22()\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y\n      * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x\n      * this.m_rB.x;\n\n  this.m_linearMass = K.getInverse();\n\n  this.m_angularMass = iA + iB;\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n\n    vA.wSub(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n\n    vB.wAdd(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nFrictionJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var h = step.dt; // float\n\n  // Solve angular friction\n  {\n    var Cdot = wB - wA; // float\n    var impulse = -this.m_angularMass * Cdot; // float\n\n    var oldImpulse = this.m_angularImpulse; // float\n    var maxImpulse = h * this.m_maxTorque; // float\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve linear friction\n  {\n    var Cdot = Vec2.sub(Vec2.add(vB, Vec2.cross(wB, this.m_rB)), Vec2.add(vA,\n        Vec2.cross(wA, this.m_rA))); // Vec2\n\n    var impulse = Vec2.neg(Mat22.mul(this.m_linearMass, Cdot)); // Vec2\n    var oldImpulse = this.m_linearImpulse; // Vec2\n    this.m_linearImpulse.add(impulse);\n\n    var maxImpulse = h * this.m_maxForce; // float\n\n    if (this.m_linearImpulse.lengthSquared() > maxImpulse * maxImpulse) {\n      this.m_linearImpulse.normalize();\n      this.m_linearImpulse.mul(maxImpulse);\n    }\n\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n\n    vA.wSub(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.wAdd(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nFrictionJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = DistanceJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nDistanceJoint.TYPE = 'distance-joint';\n\nDistanceJoint._super = Joint;\nDistanceJoint.prototype = create(DistanceJoint._super.prototype);\n\n/**\n * @typedef {Object} DistanceJointDef\n *\n * Distance joint definition. This requires defining an anchor point on both\n * bodies and the non-zero length of the distance joint. The definition uses\n * local anchor points so that the initial configuration can violate the\n * constraint slightly. This helps when saving and loading a game. Warning: Do\n * not use a zero or short length.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. A value\n *       of 0 disables softness.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n */\nvar DistanceJointDef = {\n  frequencyHz : 0.0,\n  dampingRatio : 0.0\n};\n\n/**\n * A distance joint constrains two points on two bodies to remain at a fixed\n * distance from each other. You can view this as a massless, rigid rod.\n * \n * @param {Vec2} def.localAnchorA The local anchor point relative to bodyA's origin.\n * @param {Vec2} def.localAnchorB The local anchor point relative to bodyB's origin.\n */\nfunction DistanceJoint(def, bodyA, anchorA, bodyB, anchorB) {\n  if (!(this instanceof DistanceJoint)) {\n    return new DistanceJoint(def, bodyA, anchorA, bodyB, anchorB);\n  }\n\n  def = options(def, DistanceJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  this.m_type = DistanceJoint.TYPE;\n\n  // Solver shared\n  this.m_localAnchorA = def.localAnchorA || bodyA.getLocalPoint(anchorA);\n  this.m_localAnchorB = def.localAnchorB || bodyB.getLocalPoint(anchorB);\n  this.m_length = Vec2.distance(anchorB, anchorA);\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n  this.m_impulse = 0.0;\n  this.m_gamma = 0.0;\n  this.m_bias = 0.0;\n\n  // Solver temp\n  this.m_u; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA;\n  this.m_invMassB;\n  this.m_invIA;\n  this.m_invIB;\n  this.m_mass;\n\n  // 1-D constrained system\n  // m (v2 - v1) = lambda\n  // v2 + (beta/h) * x1 + gamma * lambda = 0, gamma has units of inverse mass.\n  // x2 = x1 + h * v2\n\n  // 1-D mass-damper-spring system\n  // m (v2 - v1) + h * d * v2 + h * k *\n\n  // C = norm(p2 - p1) - L\n  // u = (p2 - p1) / norm(p2 - p1)\n  // Cdot = dot(u, v2 + cross(w2, r2) - v1 - cross(w1, r1))\n  // J = [-u -cross(r1, u) u cross(r2, u)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u)^2 + invMass2 + invI2 * cross(r2, u)^2\n};\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nDistanceJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nDistanceJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set/get the natural length. Manipulating the length can lead to non-physical\n * behavior when the frequency is zero.\n */\nDistanceJoint.prototype.setLength = function(length) {\n  this.m_length = length;\n}\n\nDistanceJoint.prototype.getLength = function() {\n  return this.m_length;\n}\n\nDistanceJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nDistanceJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n}\n\nDistanceJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nDistanceJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nDistanceJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nDistanceJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nDistanceJoint.prototype.getReactionForce = function(inv_dt) {\n  var F = Vec2.mul(inv_dt * this.m_impulse, this.m_u);\n  return F;\n}\n\nDistanceJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nDistanceJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mul(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mul(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  this.m_u = Vec2.sub(Vec2.add(cB, this.m_rB), Vec2.add(cA, this.m_rA));\n\n  // Handle singularity.\n  var length = this.m_u.length();\n  if (length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / length);\n  } else {\n    this.m_u.set(0.0, 0.0);\n  }\n\n  var crAu = Vec2.cross(this.m_rA, this.m_u);\n  var crBu = Vec2.cross(this.m_rB, this.m_u);\n  var invMass = this.m_invMassA + this.m_invIA * crAu * crAu + this.m_invMassB\n      + this.m_invIB * crBu * crBu;\n\n  // Compute the effective mass matrix.\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C = length - this.m_length;\n\n    // Frequency\n    var omega = 2.0 * Math.PI * this.m_frequencyHz;\n\n    // Damping coefficient\n    var d = 2.0 * this.m_mass * this.m_dampingRatio * omega;\n\n    // Spring stiffness\n    var k = this.m_mass * omega * omega;\n\n    // magic formulas\n    var h = step.dt;\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n\n    invMass += this.m_gamma;\n    this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n  } else {\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n\n    vA.wSub(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n\n    vB.wAdd(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nDistanceJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Cdot = dot(u, v + cross(w, r))\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n  var Cdot = Vec2.dot(this.m_u, vpB) - Vec2.dot(this.m_u, vpA);\n\n  var impulse = -this.m_mass\n      * (Cdot + this.m_bias + this.m_gamma * this.m_impulse);\n  this.m_impulse += impulse;\n\n  var P = Vec2.mul(impulse, this.m_u);\n  vA.wSub(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.wAdd(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nDistanceJoint.prototype.solvePositionConstraints = function(step) {\n  if (this.m_frequencyHz > 0.0) {\n    // There is no position correction for soft distance constraints.\n    return true;\n  }\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA));\n\n  var length = u.normalize();\n  var C = length - this.m_length;\n  C = Math\n      .clamp(C, -Settings.maxLinearCorrection, Settings.maxLinearCorrection);\n\n  var impulse = -this.m_mass * C;\n  var P = Vec2.mul(impulse, u);\n\n  cA.wSub(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.wAdd(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return Math.abs(C) < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Rot = require('../common/Rot');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar EdgeShape = require('./EdgeShape');\nvar ChainShape = require('./ChainShape');\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(EdgeShape.TYPE, PolygonShape.TYPE, EdgePolygonContact);\nContact.addType(ChainShape.TYPE, PolygonShape.TYPE, ChainPolygonContact);\n\nfunction EdgePolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  CollideEdgePolygon(manifold, fA.getShape(), xfA, fB.getShape(), xfB);\n}\n\nfunction ChainPolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  var chain = fA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  CollideEdgePolygon(manifold, edge, xfA, fB.getShape(), xfB);\n}\n\n// EPAxis Type\nvar e_unknown = -1;\nvar e_edgeA = 1;\nvar e_edgeB = 2;\n\n// VertexType unused?\nvar e_isolated = 0;\nvar e_concave = 1;\nvar e_convex = 2;\n\n// This structure is used to keep track of the best separating axis.\nfunction EPAxis() {\n  this.type; // Type\n  this.index;\n  this.separation;\n};\n\n// This holds polygon B expressed in frame A.\nfunction TempPolygon() {\n  this.vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.normals = []; // Vec2[Settings.maxPolygonVertices];\n  this.count = 0;\n};\n\n// Reference face used for clipping\nfunction ReferenceFace() {\n  this.i1, this.i2; // int\n  this.v1, this.v2; // v\n  this.normal = Vec2.zero();\n  this.sideNormal1 = Vec2.zero();\n  this.sideOffset1; // float\n  this.sideNormal2 = Vec2.zero();\n  this.sideOffset2; // float\n};\n\n// reused\nvar edgeAxis = new EPAxis();\nvar polygonAxis = new EPAxis();\nvar polygonBA = new TempPolygon();\nvar rf = new ReferenceFace();\n\n/**\n * This function collides and edge and a polygon, taking into account edge\n * adjacency.\n */\nfunction CollideEdgePolygon(manifold, edgeA, xfA, polygonB, xfB) {\n  // Algorithm:\n  // 1. Classify v1 and v2\n  // 2. Classify polygon centroid as front or back\n  // 3. Flip normal if necessary\n  // 4. Initialize normal range to [-pi, pi] about face normal\n  // 5. Adjust normal range according to adjacent edges\n  // 6. Visit each separating axes, only accept axes within the range\n  // 7. Return if _any_ axis indicates separation\n  // 8. Clip\n\n  var m_type1, m_type2; // VertexType unused?\n\n  var xf = Transform.mulT(xfA, xfB);\n\n  var centroidB = Transform.mul(xf, polygonB.m_centroid);\n\n  var v0 = edgeA.m_vertex0;\n  var v1 = edgeA.m_vertex1;\n  var v2 = edgeA.m_vertex2;\n  var v3 = edgeA.m_vertex3;\n\n  var hasVertex0 = edgeA.m_hasVertex0;\n  var hasVertex3 = edgeA.m_hasVertex3;\n\n  var edge1 = Vec2.sub(v2, v1);\n  edge1.normalize();\n  var normal1 = Vec2.neo(edge1.y, -edge1.x);\n  var offset1 = Vec2.dot(normal1, Vec2.sub(centroidB, v1));\n  var offset0 = 0.0;\n  var offset2 = 0.0;\n  var convex1 = false;\n  var convex2 = false;\n\n  // Is there a preceding edge?\n  if (hasVertex0) {\n    var edge0 = Vec2.sub(v1, v0);\n    edge0.normalize();\n    var normal0 = Vec2.neo(edge0.y, -edge0.x);\n    convex1 = Vec2.cross(edge0, edge1) >= 0.0;\n    offset0 = Vec2.dot(normal0, centroidB) - Vec2.dot(normal0, v0);\n  }\n\n  // Is there a following edge?\n  if (hasVertex3) {\n    var edge2 = Vec2.sub(v3, v2);\n    edge2.normalize();\n    var normal2 = Vec2.neo(edge2.y, -edge2.x);\n    convex2 = Vec2.cross(edge1, edge2) > 0.0;\n    offset2 = Vec2.dot(normal2, centroidB) - Vec2.dot(normal2, v2);\n  }\n\n  var front;\n  var normal = Vec2.zero();\n  var lowerLimit = Vec2.zero();\n  var upperLimit = Vec2.zero();\n\n  // Determine front or back collision. Determine collision normal limits.\n  if (hasVertex0 && hasVertex3) {\n    if (convex1 && convex2) {\n      front = offset0 >= 0.0 || offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal2);\n      } else {\n        normal.wSet(-1, normal1);\n        lowerLimit.wSet(-1, normal1);\n        upperLimit.wSet(-1, normal1);\n      }\n    } else if (convex1) {\n      front = offset0 >= 0.0 || (offset1 >= 0.0 && offset2 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal1);\n      } else {\n        normal.wSet(-1, normal1);\n        lowerLimit.wSet(-1, normal2);\n        upperLimit.wSet(-1, normal1);\n      }\n    } else if (convex2) {\n      front = offset2 >= 0.0 || (offset0 >= 0.0 && offset1 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.wSet(-1, normal1);\n        lowerLimit.wSet(-1, normal1);\n        upperLimit.wSet(-1, normal0);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.wSet(-1, normal1);\n        lowerLimit.wSet(-1, normal2);\n        upperLimit.wSet(-1, normal0);\n      }\n    }\n  } else if (hasVertex0) {\n    if (convex1) {\n      front = offset0 >= 0.0 || offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.wSet(-1, normal1);\n      } else {\n        normal.wSet(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.wSet(-1, normal1);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.wSet(-1, normal1);\n      } else {\n        normal.wSet(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.wSet(-1, normal0);\n      }\n    }\n  } else if (hasVertex3) {\n    if (convex2) {\n      front = offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.wSet(-1, normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.wSet(-1, normal1);\n        lowerLimit.wSet(-1, normal1);\n        upperLimit.set(normal1);\n      }\n    } else {\n      front = offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.wSet(-1, normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.wSet(-1, normal1);\n        lowerLimit.wSet(-1, normal2);\n        upperLimit.set(normal1);\n      }\n    }\n  } else {\n    front = offset1 >= 0.0;\n    if (front) {\n      normal.set(normal1);\n      lowerLimit.wSet(-1, normal1);\n      upperLimit.wSet(-1, normal1);\n    } else {\n      normal.wSet(-1, normal1);\n      lowerLimit.set(normal1);\n      upperLimit.set(normal1);\n    }\n  }\n\n  // Get polygonB in frameA\n  polygonBA.count = polygonB.m_count;\n  for (var i = 0; i < polygonB.m_count; ++i) {\n    polygonBA.vertices[i] = Transform.mul(xf, polygonB.m_vertices[i]);\n    polygonBA.normals[i] = Rot.mul(xf.q, polygonB.m_normals[i]);\n  }\n\n  var radius = 2.0 * Settings.polygonRadius;\n\n  manifold.pointCount = 0;\n\n  { // ComputeEdgeSeparation\n    edgeAxis.type = e_edgeA;\n    edgeAxis.index = front ? 0 : 1;\n    edgeAxis.separation = Infinity;\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var s = Vec2.dot(normal, Vec2.sub(polygonBA.vertices[i], v1));\n      if (s < edgeAxis.separation) {\n        edgeAxis.separation = s;\n      }\n    }\n  }\n\n  // If no valid normal can be found than this edge should not collide.\n  if (edgeAxis.type == e_unknown) {\n    return;\n  }\n\n  if (edgeAxis.separation > radius) {\n    return;\n  }\n\n  { // ComputePolygonSeparation\n    polygonAxis.type = e_unknown;\n    polygonAxis.index = -1;\n    polygonAxis.separation = -Infinity;\n\n    var perp = Vec2.neo(-normal.y, normal.x);\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var n = Vec2.neg(polygonBA.normals[i]);\n\n      var s1 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v1));\n      var s2 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v2));\n      var s = Math.min(s1, s2);\n\n      if (s > radius) {\n        // No collision\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n        break;\n      }\n\n      // Adjacency\n      if (Vec2.dot(n, perp) >= 0.0) {\n        if (Vec2.dot(Vec2.sub(n, upperLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      } else {\n        if (Vec2.dot(Vec2.sub(n, lowerLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      }\n\n      if (s > polygonAxis.separation) {\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n      }\n    }\n  }\n\n  if (polygonAxis.type != e_unknown && polygonAxis.separation > radius) {\n    return;\n  }\n\n  // Use hysteresis for jitter reduction.\n  var k_relativeTol = 0.98;\n  var k_absoluteTol = 0.001;\n\n  var primaryAxis;\n  if (polygonAxis.type == e_unknown) {\n    primaryAxis = edgeAxis;\n  } else if (polygonAxis.separation > k_relativeTol * edgeAxis.separation + k_absoluteTol) {\n    primaryAxis = polygonAxis;\n  } else {\n    primaryAxis = edgeAxis;\n  }\n\n  var ie = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  if (primaryAxis.type == e_edgeA) {\n    manifold.type = Manifold.e_faceA;\n\n    // Search for the polygon normal that is most anti-parallel to the edge\n    // normal.\n    var bestIndex = 0;\n    var bestValue = Vec2.dot(normal, polygonBA.normals[0]);\n    for (var i = 1; i < polygonBA.count; ++i) {\n      var value = Vec2.dot(normal, polygonBA.normals[i]);\n      if (value < bestValue) {\n        bestValue = value;\n        bestIndex = i;\n      }\n    }\n\n    var i1 = bestIndex;\n    var i2 = i1 + 1 < polygonBA.count ? i1 + 1 : 0;\n\n    ie[0].v = polygonBA.vertices[i1];\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = i1;\n    ie[0].id.cf.typeA = Manifold.e_face;\n    ie[0].id.cf.typeB = Manifold.e_vertex;\n\n    ie[1].v = polygonBA.vertices[i2];\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = i2;\n    ie[1].id.cf.typeA = Manifold.e_face;\n    ie[1].id.cf.typeB = Manifold.e_vertex;\n\n    if (front) {\n      rf.i1 = 0;\n      rf.i2 = 1;\n      rf.v1 = v1;\n      rf.v2 = v2;\n      rf.normal.set(normal1);\n    } else {\n      rf.i1 = 1;\n      rf.i2 = 0;\n      rf.v1 = v2;\n      rf.v2 = v1;\n      rf.normal.wSet(-1, normal1);\n    }\n  } else {\n    manifold.type = Manifold.e_faceB;\n\n    ie[0].v = v1;\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = primaryAxis.index;\n    ie[0].id.cf.typeA = Manifold.e_vertex;\n    ie[0].id.cf.typeB = Manifold.e_face;\n\n    ie[1].v = v2;\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = primaryAxis.index;\n    ie[1].id.cf.typeA = Manifold.e_vertex;\n    ie[1].id.cf.typeB = Manifold.e_face;\n\n    rf.i1 = primaryAxis.index;\n    rf.i2 = rf.i1 + 1 < polygonBA.count ? rf.i1 + 1 : 0;\n    rf.v1 = polygonBA.vertices[rf.i1];\n    rf.v2 = polygonBA.vertices[rf.i2];\n    rf.normal.set(polygonBA.normals[rf.i1]);\n  }\n\n  rf.sideNormal1.set(rf.normal.y, -rf.normal.x);\n  rf.sideNormal2.wSet(-1, rf.sideNormal1);\n  rf.sideOffset1 = Vec2.dot(rf.sideNormal1, rf.v1);\n  rf.sideOffset2 = Vec2.dot(rf.sideNormal2, rf.v2);\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var clipPoints2 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, ie, rf.sideNormal1, rf.sideOffset1, rf.i1);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, rf.sideNormal2, rf.sideOffset2, rf.i2);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  if (primaryAxis.type == e_edgeA) {\n    manifold.localNormal = Vec2.clone(rf.normal);\n    manifold.localPoint = Vec2.clone(rf.v1);\n  } else {\n    manifold.localNormal = Vec2.clone(polygonB.m_normals[rf.i1]);\n    manifold.localPoint = Vec2.clone(polygonB.m_vertices[rf.i1]);\n  }\n\n  var pointCount = 0;\n  for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n    var separation = Vec2.dot(rf.normal, Vec2.sub(clipPoints2[i].v, rf.v1));\n\n    if (separation <= radius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n\n      if (primaryAxis.type == e_edgeA) {\n        cp.localPoint = Transform.mulT(xf, clipPoints2[i].v);\n        cp.id = clipPoints2[i].id;\n      } else {\n        cp.localPoint = clipPoints2[i].v;\n        cp.id.cf.typeA = clipPoints2[i].id.cf.typeB;\n        cp.id.cf.typeB = clipPoints2[i].id.cf.typeA;\n        cp.id.cf.indexA = clipPoints2[i].id.cf.indexB;\n        cp.id.cf.indexB = clipPoints2[i].id.cf.indexA;\n      }\n\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Manifold = require('../Manifold');\nvar Contact = require('../Contact');\nvar Shape = require('../Shape');\nvar CircleShape = require('./CircleShape');\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(PolygonShape.TYPE, CircleShape.TYPE, PolygonCircleContact);\n\nfunction PolygonCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollidePolygonCircle(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(),\n      xfB);\n}\n\nfunction CollidePolygonCircle(manifold, polygonA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  // Compute circle position in the frame of the polygon.\n  var c = Transform.mul(xfB, circleB.m_p);\n  var cLocal = Transform.mulT(xfA, c);\n\n  // Find the min separating edge.\n  var normalIndex = 0;\n  var separation = -Infinity;\n  var radius = polygonA.m_radius + circleB.m_radius;\n  var vertexCount = polygonA.m_count;\n  var vertices = polygonA.m_vertices;\n  var normals = polygonA.m_normals;\n\n  for (var i = 0; i < vertexCount; ++i) {\n    var s = Vec2.dot(normals[i], Vec2.sub(cLocal, vertices[i]));\n\n    if (s > radius) {\n      // Early out.\n      return;\n    }\n\n    if (s > separation) {\n      separation = s;\n      normalIndex = i;\n    }\n  }\n\n  // Vertices that subtend the incident face.\n  var vertIndex1 = normalIndex;\n  var vertIndex2 = vertIndex1 + 1 < vertexCount ? vertIndex1 + 1 : 0;\n  var v1 = vertices[vertIndex1];\n  var v2 = vertices[vertIndex2];\n\n  // If the center is inside the polygon ...\n  if (separation < Math.EPSILON) {\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[normalIndex]);\n    manifold.localPoint.wSet(0.5, v1, 0.5, v2);\n    manifold.points[0].localPoint = circleB.m_p;\n    manifold.points[0].id.key = 0;\n    return;\n  }\n\n  // Compute barycentric coordinates\n  var u1 = Vec2.dot(Vec2.sub(cLocal, v1), Vec2.sub(v2, v1));\n  var u2 = Vec2.dot(Vec2.sub(cLocal, v2), Vec2.sub(v1, v2));\n  if (u1 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v1) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.wSet(1, cLocal, -1, v1);\n    manifold.localNormal.normalize();\n    manifold.localPoint = v1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n    manifold.points[0].id.key = 0;\n  } else if (u2 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v2) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.wSet(1, cLocal, -1, v2);\n    manifold.localNormal.normalize();\n    manifold.localPoint.set(v2);\n    manifold.points[0].localPoint.set(circleB.m_p);\n    manifold.points[0].id.key = 0;\n  } else {\n    var faceCenter = Vec2.mid(v1, v2);\n    var separation = Vec2.dot(cLocal, normals[vertIndex1])\n        - Vec2.dot(faceCenter, normals[vertIndex1]);\n    if (separation > radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[vertIndex1]);\n    manifold.localPoint.set(faceCenter);\n    manifold.points[0].localPoint.set(circleB.m_p);\n    manifold.points[0].id.key = 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Manifold = require('../Manifold');\nvar Contact = require('../Contact');\nvar Shape = require('../Shape');\nvar PolygonShape = require('./PolygonShape');\n\nmodule.exports = CollidePolygons;\n\nContact.addType(PolygonShape.TYPE, PolygonShape.TYPE, PolygonContact);\n\nfunction PolygonContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == PolygonShape.TYPE);\n  CollidePolygons(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\n/**\n * Find the max separation between poly1 and poly2 using edge normals from\n * poly1.\n */\nfunction FindMaxSeparation(poly1, xf1, poly2, xf2) {\n  var count1 = poly1.m_count;\n  var count2 = poly2.m_count;\n  var n1s = poly1.m_normals;\n  var v1s = poly1.m_vertices;\n  var v2s = poly2.m_vertices;\n  var xf = Transform.mulT(xf2, xf1);\n\n  var bestIndex = 0;\n  var maxSeparation = -Infinity;\n  for (var i = 0; i < count1; ++i) {\n    // Get poly1 normal in frame2.\n    var n = Rot.mul(xf.q, n1s[i]);\n    var v1 = Transform.mul(xf, v1s[i]);\n\n    // Find deepest point for normal i.\n    var si = Infinity;\n    for (var j = 0; j < count2; ++j) {\n      var sij = Vec2.dot(n, v2s[j]) - Vec2.dot(n, v1);\n      if (sij < si) {\n        si = sij;\n      }\n    }\n\n    if (si > maxSeparation) {\n      maxSeparation = si;\n      bestIndex = i;\n    }\n  }\n\n  // used to keep last FindMaxSeparation call values\n  FindMaxSeparation._maxSeparation = maxSeparation;\n  FindMaxSeparation._bestIndex = bestIndex;\n}\n\n/**\n * @param {ClipVertex[2]} c\n * @param {int} edge1\n */\nfunction FindIncidentEdge(c, poly1, xf1, edge1, poly2, xf2) {\n  var normals1 = poly1.m_normals;\n\n  var count2 = poly2.m_count;\n  var vertices2 = poly2.m_vertices;\n  var normals2 = poly2.m_normals;\n\n  _ASSERT && common.assert(0 <= edge1 && edge1 < poly1.m_count);\n\n  // Get the normal of the reference edge in poly2's frame.\n  var normal1 = Rot.mulT(xf2.q, Rot.mul(xf1.q, normals1[edge1]));\n\n  // Find the incident edge on poly2.\n  var index = 0;\n  var minDot = Infinity;\n  for (var i = 0; i < count2; ++i) {\n    var dot = Vec2.dot(normal1, normals2[i]);\n    if (dot < minDot) {\n      minDot = dot;\n      index = i;\n    }\n  }\n\n  // Build the clip vertices for the incident edge.\n  var i1 = index;\n  var i2 = i1 + 1 < count2 ? i1 + 1 : 0;\n\n  c[0].v = Transform.mul(xf2, vertices2[i1]);\n  c[0].id.cf.indexA = edge1;\n  c[0].id.cf.indexB = i1;\n  c[0].id.cf.typeA = Manifold.e_face;\n  c[0].id.cf.typeB = Manifold.e_vertex;\n\n  c[1].v = Transform.mul(xf2, vertices2[i2]);\n  c[1].id.cf.indexA = edge1;\n  c[1].id.cf.indexB = i2;\n  c[1].id.cf.typeA = Manifold.e_face;\n  c[1].id.cf.typeB = Manifold.e_vertex;\n}\n\n/**\n * \n * Find edge normal of max separation on A - return if separating axis is found<br>\n * Find edge normal of max separation on B - return if separation axis is found<br>\n * Choose reference edge as min(minA, minB)<br>\n * Find incident edge<br>\n * Clip\n * \n * The normal points from 1 to 2\n */\nfunction CollidePolygons(manifold, polyA, xfA, polyB, xfB) {\n  manifold.pointCount = 0;\n  var totalRadius = polyA.m_radius + polyB.m_radius;\n\n  FindMaxSeparation(polyA, xfA, polyB, xfB);\n  var edgeA = FindMaxSeparation._bestIndex;\n  var separationA = FindMaxSeparation._maxSeparation;\n  if (separationA > totalRadius)\n    return;\n\n  FindMaxSeparation(polyB, xfB, polyA, xfA);\n  var edgeB = FindMaxSeparation._bestIndex;\n  var separationB = FindMaxSeparation._maxSeparation;\n  if (separationB > totalRadius)\n    return;\n\n  var poly1; // reference polygon\n  var poly2; // incident polygon\n  var xf1;\n  var xf2;\n  var edge1; // reference edge\n  var flip;\n  var k_tol = 0.1 * Settings.linearSlop;\n\n  if (separationB > separationA + k_tol) {\n    poly1 = polyB;\n    poly2 = polyA;\n    xf1 = xfB;\n    xf2 = xfA;\n    edge1 = edgeB;\n    manifold.type = Manifold.e_faceB;\n    flip = 1;\n  } else {\n    poly1 = polyA;\n    poly2 = polyB;\n    xf1 = xfA;\n    xf2 = xfB;\n    edge1 = edgeA;\n    manifold.type = Manifold.e_faceA;\n    flip = 0;\n  }\n\n  var incidentEdge = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  FindIncidentEdge(incidentEdge, poly1, xf1, edge1, poly2, xf2);\n\n  var count1 = poly1.m_count;\n  var vertices1 = poly1.m_vertices;\n\n  var iv1 = edge1;\n  var iv2 = edge1 + 1 < count1 ? edge1 + 1 : 0;\n\n  var v11 = vertices1[iv1];\n  var v12 = vertices1[iv2];\n\n  var localTangent = Vec2.sub(v12, v11);\n  localTangent.normalize();\n\n  var localNormal = Vec2.cross(localTangent, 1.0);\n  var planePoint = Vec2.wAdd(0.5, v11, 0.5, v12);\n\n  var tangent = Rot.mul(xf1.q, localTangent);\n  var normal = Vec2.cross(tangent, 1.0);\n\n  v11 = Transform.mul(xf1, v11);\n  v12 = Transform.mul(xf1, v12);\n\n  // Face offset.\n  var frontOffset = Vec2.dot(normal, v11);\n\n  // Side offsets, extended by polytope skin thickness.\n  var sideOffset1 = -Vec2.dot(tangent, v11) + totalRadius;\n  var sideOffset2 = Vec2.dot(tangent, v12) + totalRadius;\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var clipPoints2 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, incidentEdge, Vec2.neg(tangent),\n      sideOffset1, iv1);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, tangent,\n      sideOffset2, iv2);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  manifold.localNormal = localNormal;\n  manifold.localPoint = planePoint;\n\n  var pointCount = 0;\n  for (var i = 0; i < clipPoints2.length/* maxManifoldPoints */; ++i) {\n    var separation = Vec2.dot(normal, clipPoints2[i].v) - frontOffset;\n\n    if (separation <= totalRadius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n      cp.localPoint.set(Transform.mulT(xf2, clipPoints2[i].v));\n      cp.id = clipPoints2[i].id;\n      if (flip) {\n        // Swap features\n        var cf = cp.id.cf; // ContactFeature\n        var indexA = cf.indexA;\n        var indexB = cf.indexB;\n        var typeA = cf.typeA;\n        var typeB = cf.typeB;\n        cf.indexA = indexB;\n        cf.indexB = indexA;\n        cf.typeA = typeB;\n        cf.typeB = typeA;\n      }\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Rot = require('../common/Rot');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar EdgeShape = require('./EdgeShape');\nvar ChainShape = require('./ChainShape');\nvar CircleShape = require('./CircleShape');\n\nContact.addType(EdgeShape.TYPE, CircleShape.TYPE, EdgeCircleContact);\nContact.addType(ChainShape.TYPE, CircleShape.TYPE, ChainCircleContact);\n\nfunction EdgeCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB,\n    indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n}\n\nfunction ChainCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB,\n    indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n\n  var chain = fixtureA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  var shapeA = edge;\n  var shapeB = fixtureB.getShape();\n\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n}\n\n// Compute contact points for edge versus circle.\n// This accounts for edge connectivity.\nfunction CollideEdgeCircle(manifold, edgeA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  // Compute circle in frame of edge\n  var Q = Transform.mulT(xfA, Transform.mul(xfB, circleB.m_p));\n\n  var A = edgeA.m_vertex1;\n  var B = edgeA.m_vertex2;\n  var e = Vec2.sub(B, A);\n\n  // Barycentric coordinates\n  var u = Vec2.dot(e, Vec2.sub(B, Q));\n  var v = Vec2.dot(e, Vec2.sub(Q, A));\n\n  var radius = edgeA.m_radius + circleB.m_radius;\n\n  // Region A\n  if (v <= 0.0) {\n    var P = Vec2.clone(A);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to A?\n    if (edgeA.m_hasVertex0) {\n      var A1 = edgeA.m_vertex0;\n      var B1 = A;\n      var e1 = Vec2.sub(B1, A1);\n      var u1 = Vec2.dot(e1, Vec2.sub(B1, Q));\n\n      // Is the circle in Region AB of the previous edge?\n      if (u1 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n    manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Region B\n  if (u <= 0.0) {\n    var P = Vec2.clone(B);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to B?\n    if (edgeA.m_hasVertex3) {\n      var B2 = edgeA.m_vertex3;\n      var A2 = B;\n      var e2 = Vec2.sub(B2, A2);\n      var v2 = Vec2.dot(e2, Vec2.sub(Q, A2));\n\n      // Is the circle in Region AB of the next edge?\n      if (v2 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n    manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 1;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Region AB\n  var den = Vec2.dot(e, e);\n  _ASSERT && common.assert(den > 0.0);\n  var P = Vec2.wAdd(u / den, A, v / den, B);\n  var d = Vec2.sub(Q, P);\n  var dd = Vec2.dot(d, d);\n  if (dd > radius * radius) {\n    return;\n  }\n\n  var n = Vec2.neo(-e.y, e.x);\n  if (Vec2.dot(n, Vec2.sub(Q, A)) < 0.0) {\n    n.set(-n.x, -n.y);\n  }\n  n.normalize();\n\n  manifold.type = Manifold.e_faceA;\n  manifold.localNormal = n;\n  manifold.localPoint.set(A);\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p);\n  manifold.points[0].id.key = 0;\n  manifold.points[0].id.cf.indexA = 0;\n  manifold.points[0].id.cf.typeA = Manifold.e_face;\n  manifold.points[0].id.cf.indexB = 0;\n  manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar CircleShape = require('./CircleShape');\n\nContact.addType(CircleShape.TYPE, CircleShape.TYPE, CircleCircleContact);\n\nfunction CircleCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == CircleShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollideCircles(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\nfunction CollideCircles(manifold, circleA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  var pA = Transform.mul(xfA, circleA.m_p);\n  var pB = Transform.mul(xfB, circleB.m_p);\n\n  var distSqr = Vec2.distanceSquared(pB, pA);\n  var rA = circleA.m_radius;\n  var rB = circleB.m_radius;\n  var radius = rA + rB;\n  if (distSqr > radius * radius) {\n    return;\n  }\n\n  manifold.type = Manifold.e_circles;\n  manifold.localPoint.set(circleA.m_p);\n  manifold.localNormal.setZero();\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p);\n  manifold.points[0].id.key = 0;\n}\n\nexports.CollideCircles = CollideCircles;","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = BoxShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar PolygonShape = require('./PolygonShape');\n\nBoxShape._super = PolygonShape;\nBoxShape.prototype = create(BoxShape._super.prototype);\n\nBoxShape.TYPE = 'polygon';\n\n/**\n * A rectangle polygon which extend PolygonShape.\n */\nfunction BoxShape(hx, hy, center, angle) {\n  if (!(this instanceof BoxShape)) {\n    return new BoxShape(hx, hy, center, angle);\n  }\n\n  BoxShape._super.call(this);\n\n  this._setAsBox(hx, hy, center, angle);\n}\n\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports.now = function() {\n  return Date.now();\n}\n\nmodule.exports.diff = function(time) {\n  return Date.now() - time;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Solver;\nmodule.exports.TimeStep = TimeStep;\n\nvar Settings = require('./Settings');\nvar common = require('./util/common');\n\nvar Vec2 = require('./common/Vec2');\nvar Math = require('./common/Math');\n\nvar Body = require('./Body');\nvar Contact = require('./Contact');\nvar Joint = require('./Joint');\n\nvar TimeOfImpact = require('./collision/TimeOfImpact');\nvar TOIInput = TimeOfImpact.Input;\nvar TOIOutput = TimeOfImpact.Output;\n\nvar Distance = require('./collision/Distance');\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n\nfunction TimeStep(dt) {\n  this.dt = 0; // time step\n  this.inv_dt = 0; // inverse time step (0 if dt == 0)\n  this.velocityIterations = 0;\n  this.positionIterations = 0;\n  this.warmStarting = false;\n  this.blockSolve = true;\n\n  // timestep ratio for variable timestep\n  this.inv_dt0 = 0.0;\n  this.dtRatio = 1; // dt * inv_dt0\n}\n\nTimeStep.prototype.reset = function(dt) {\n  if (this.dt > 0.0) {\n    this.inv_dt0 = this.inv_dt;\n  }\n  this.dt = dt;\n  this.inv_dt = dt == 0 ? 0 : 1 / dt;\n  this.dtRatio = dt * this.inv_dt0;\n}\n\n/**\n * Finds and solves islands. An island is a connected subset of the world.\n * \n * @param {World} world\n */\nfunction Solver(world) {\n  this.m_world = world;\n  this.m_stack = [];\n  this.m_bodies = [];\n  this.m_contacts = [];\n  this.m_joints = [];\n}\n\nSolver.prototype.clear = function() {\n  this.m_stack.length = 0;\n  this.m_bodies.length = 0;\n  this.m_contacts.length = 0;\n  this.m_joints.length = 0;\n}\n\nSolver.prototype.addBody = function(body) {\n  _ASSERT && common.assert(body instanceof Body, 'Not a Body!', body);\n  this.m_bodies.push(body);\n  // why?\n//  body.c_position.c.setZero();\n//  body.c_position.a = 0;\n//  body.c_velocity.v.setZero();\n//  body.c_velocity.w = 0;\n};\n\nSolver.prototype.addContact = function(contact) {\n  _ASSERT && common.assert(contact instanceof Contact, 'Not a Contact!', contact);\n  this.m_contacts.push(contact);\n};\n\nSolver.prototype.addJoint = function(joint) {\n  _ASSERT && common.assert(joint instanceof Joint, 'Not a Joint!', joint);\n  this.m_joints.push(joint);\n};\n\n/**\n * @param {TimeStep} step\n */\nSolver.prototype.solveWorld = function(step) {\n  var world = this.m_world;\n\n  // Clear all the island flags.\n  for (var b = world.m_bodyList; b; b = b.m_next) {\n    b.m_islandFlag = false;\n  }\n  for (var c = world.m_contactList; c; c = c.m_next) {\n    c.m_islandFlag = false;\n  }\n  for (var j = world.m_jointList; j; j = j.m_next) {\n    j.m_islandFlag = false;\n  }\n\n  // Build and simulate all awake islands.\n  var stack = this.m_stack;\n  var loop = -1;\n  for (var seed = world.m_bodyList; seed; seed = seed.m_next) {\n    loop++;\n    if (seed.m_islandFlag) {\n      continue;\n    }\n\n    if (seed.isAwake() == false || seed.isActive() == false) {\n      continue;\n    }\n\n    // The seed can be dynamic or kinematic.\n    if (seed.isStatic()) {\n      continue;\n    }\n\n    // Reset island and stack.\n    this.clear();\n\n    stack.push(seed);\n\n    seed.m_islandFlag = true;\n\n    // Perform a depth first search (DFS) on the constraint graph.\n    while (stack.length > 0) {\n      // Grab the next body off the stack and add it to the island.\n      var b = stack.pop();\n      _ASSERT && common.assert(b.isActive() == true);\n      this.addBody(b);\n\n      // Make sure the body is awake.\n      b.setAwake(true);\n\n      // To keep islands as small as possible, we don't\n      // propagate islands across static bodies.\n      if (b.isStatic()) {\n        continue;\n      }\n      \n      // Search all contacts connected to this body.\n      for (var ce = b.m_contactList; ce; ce = ce.next) {\n        var contact = ce.contact;\n\n        // Has this contact already been added to an island?\n        if (contact.m_islandFlag) {\n          continue;\n        }\n\n        // Is this contact solid and touching?\n        if (contact.isEnabled() == false || contact.isTouching() == false) {\n          continue;\n        }\n\n        // Skip sensors.\n        var sensorA = contact.m_fixtureA.m_isSensor;\n        var sensorB = contact.m_fixtureB.m_isSensor;\n        if (sensorA || sensorB) {\n          continue;\n        }\n\n        this.addContact(contact);\n        contact.m_islandFlag = true;\n\n        var other = ce.other;\n\n        // Was the other body already added to this island?\n        if (other.m_islandFlag) {\n          continue;\n        }\n\n        // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n        stack.push(other);\n        other.m_islandFlag = true;\n      }\n\n      // Search all joints connect to this body.\n      for (var je = b.m_jointList; je; je = je.next) {\n        if (je.joint.m_islandFlag == true) {\n          continue;\n        }\n\n        var other = je.other;\n\n        // Don't simulate joints connected to inactive bodies.\n        if (other.isActive() == false) {\n          continue;\n        }\n\n        this.addJoint(je.joint);\n        je.joint.m_islandFlag = true;\n\n        if (other.m_islandFlag) {\n          continue;\n        }\n\n        // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n        stack.push(other);\n        other.m_islandFlag = true;\n      }\n    }\n\n    this.solveIsland(step);\n\n    // Post solve cleanup.\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      // Allow static bodies to participate in other islands.\n      // TODO: are they added at all?\n      var b = this.m_bodies[i];\n      if (b.isStatic()) {\n        b.m_islandFlag = false;\n      }\n    }\n  }\n}\n\n/**\n * @param {TimeStep} step\n */\nSolver.prototype.solveIsland = function(step) {\n  // B2: Island Solve\n  var world = this.m_world;\n  var gravity = world.m_gravity;\n  var allowSleep = world.m_allowSleep;\n\n  var h = step.dt;\n\n  // Integrate velocities and apply damping. Initialize the body state.\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.m_sweep.c);\n    var a = body.m_sweep.a;\n    var v = Vec2.clone(body.m_linearVelocity);\n    var w = body.m_angularVelocity;\n\n    // Store positions for continuous collision.\n    body.m_sweep.c0.set(body.m_sweep.c);\n    body.m_sweep.a0 = body.m_sweep.a;\n\n    if (body.isDynamic()) {\n      // Integrate velocities.\n      v.wAdd(h * body.m_gravityScale, gravity);\n      v.wAdd(h * body.m_invMass, body.m_force);\n      w += h * body.m_invI * body.m_torque;\n      /**\n       * <pre>\n       * Apply damping.\n       * ODE: dv/dt + c * v = 0\n       * Solution: v(t) = v0 * exp(-c * t)\n       * Time step: v(t + dt) = v0 * exp(-c * (t + dt)) = v0 * exp(-c * t) * exp(-c * dt) = v * exp(-c * dt)\n       * v2 = exp(-c * dt) * v1\n       * Pade approximation:\n       * v2 = v1 * 1 / (1 + c * dt)\n       * </pre>\n       */\n      v.mul(1.0 / (1.0 + h * body.m_linearDamping));\n      w *= 1.0 / (1.0 + h * body.m_angularDamping);\n    }\n\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('M: ');\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('R: ');\n\n  if (step.warmStarting) {\n    // Warm start.\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var contact = this.m_contacts[i];\n      contact.warmStartConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('Q: ');\n  \n  for (var i = 0; i < this.m_joints.length; ++i) {\n    var joint = this.m_joints[i];\n    joint.initVelocityConstraints(step);\n  }\n\n  _DEBUG && this.printBodies('E: ');\n\n  // Solve velocity constraints\n  for (var i = 0; i < step.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      joint.solveVelocityConstraints(step);\n    }\n\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('D: ');\n\n  // Store impulses for warm starting\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.storeConstraintImpulses(step);\n  }\n\n  _DEBUG && this.printBodies('C: ');\n\n  // Integrate positions\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w;\n\n    // Check for large velocities\n    var translation = Vec2.mul(h, v);\n    if (Vec2.lengthSquared(translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    }\n\n    // Integrate\n    c.wAdd(h, v);\n    a += h * w;\n\n    body.c_position.c.set(c);\n    body.c_position.a = a;\n    body.c_velocity.v.set(v);\n    body.c_velocity.w = w;\n  }\n\n  _DEBUG && this.printBodies('B: ');\n\n  // Solve position constraints\n  var positionSolved = false;\n  for (var i = 0; i < step.positionIterations; ++i) {\n    var minSeparation = 0.0;\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraint(step);\n      minSeparation = Math.min(minSeparation, separation);\n    }\n    // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n    var contactsOkay = minSeparation >= -3.0 * Settings.linearSlop;\n\n    var jointsOkay = true;\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      var jointOkay = joint.solvePositionConstraints(step);\n      jointsOkay = jointsOkay && jointOkay;\n    }\n\n    if (contactsOkay && jointsOkay) {\n      // Exit early if the position errors are small.\n      positionSolved = true;\n      break;\n    }\n  }\n\n  _DEBUG && this.printBodies('L: ');\n\n  // Copy state buffers back to the bodies\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    body.m_sweep.c.set(body.c_position.c);\n    body.m_sweep.a = body.c_position.a;\n    body.m_linearVelocity.set(body.c_velocity.v);\n    body.m_angularVelocity = body.c_velocity.w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n\n  if (allowSleep) {\n    var minSleepTime = Infinity;\n\n    var linTolSqr = Settings.linearSleepToleranceSqr;\n    var angTolSqr = Settings.angularSleepToleranceSqr;\n\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n      if (body.isStatic()) {\n        continue;\n      }\n\n      if ((body.m_autoSleepFlag == false)\n          || (body.m_angularVelocity * body.m_angularVelocity > angTolSqr)\n          || (Vec2.lengthSquared(body.m_linearVelocity) > linTolSqr)) {\n        body.m_sleepTime = 0.0;\n        minSleepTime = 0.0;\n      } else {\n        body.m_sleepTime += h;\n        minSleepTime = Math.min(minSleepTime, body.m_sleepTime);\n      }\n    }\n\n    if (minSleepTime >= Settings.timeToSleep && positionSolved) {\n      for (var i = 0; i < this.m_bodies.length; ++i) {\n        var body = this.m_bodies[i];\n        body.setAwake(false);\n      }\n    }\n  }\n};\n\nSolver.prototype.printBodies = function(tag) {\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var b = this.m_bodies[i];\n    common.debug(tag, b.c_position.a, b.c_position.c.x, b.c_position.c.y, b.c_velocity.w, b.c_velocity.v.x, b.c_velocity.v.y);\n  }\n};\n\nvar s_subStep = new TimeStep(); // reuse\n\n/**\n * Find TOI contacts and solve them.\n *\n * @param {TimeStep} step\n */\nSolver.prototype.solveWorldTOI = function(step) {\n  var world = this.m_world;\n\n  if (world.m_stepComplete) {\n    for (var b = world.m_bodyList; b; b = b.m_next) {\n      b.m_islandFlag = false;\n      b.m_sweep.alpha0 = 0.0;\n    }\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Invalidate TOI\n      c.m_toiFlag = false;\n      c.m_islandFlag = false;\n      c.m_toiCount = 0;\n      c.m_toi = 1.0;\n    }\n  }\n\n  // Find TOI events and solve them.\n  for (;;) {\n    // Find the first TOI.\n    var minContact = null; // Contact\n    var minAlpha = 1.0;\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Is this contact disabled?\n      if (c.isEnabled() == false) {\n        continue;\n      }\n\n      // Prevent excessive sub-stepping.\n      if (c.m_toiCount > Settings.maxSubSteps) {\n        continue;\n      }\n\n      var alpha = 1.0;\n      if (c.m_toiFlag) {\n        // This contact has a valid cached TOI.\n        alpha = c.m_toi;\n      } else {\n        var fA = c.getFixtureA();\n        var fB = c.getFixtureB();\n\n        // Is there a sensor?\n        if (fA.isSensor() || fB.isSensor()) {\n          continue;\n        }\n\n        var bA = fA.getBody();\n        var bB = fB.getBody();\n\n        _ASSERT && common.assert(bA.isDynamic() || bB.isDynamic());\n\n        var activeA = bA.isAwake() && !bA.isStatic();\n        var activeB = bB.isAwake() && !bB.isStatic();\n\n        // Is at least one body active (awake and dynamic or kinematic)?\n        if (activeA == false && activeB == false) {\n          continue;\n        }\n\n        var collideA = bA.isBullet() || !bA.isDynamic();\n        var collideB = bB.isBullet() || !bB.isDynamic();\n\n        // Are these two non-bullet dynamic bodies?\n        if (collideA == false && collideB == false) {\n          continue;\n        }\n\n        // Compute the TOI for this contact.\n        // Put the sweeps onto the same time interval.\n        var alpha0 = bA.m_sweep.alpha0;\n\n        if (bA.m_sweep.alpha0 < bB.m_sweep.alpha0) {\n          alpha0 = bB.m_sweep.alpha0;\n          bA.m_sweep.advance(alpha0);\n        } else if (bB.m_sweep.alpha0 < bA.m_sweep.alpha0) {\n          alpha0 = bA.m_sweep.alpha0;\n          bB.m_sweep.advance(alpha0);\n        }\n\n        _ASSERT && common.assert(alpha0 < 1.0);\n\n        var indexA = c.getChildIndexA();\n        var indexB = c.getChildIndexB();\n\n        var sweepA = bA.m_sweep;\n        var sweepB = bB.m_sweep;\n\n        // Compute the time of impact in interval [0, minTOI]\n        var input = new TOIInput(); // TODO: reuse\n        input.proxyA.set(fA.getShape(), indexA);\n        input.proxyB.set(fB.getShape(), indexB);\n        input.sweepA.set(bA.m_sweep);\n        input.sweepB.set(bB.m_sweep);\n        input.tMax = 1.0;\n\n        var output = new TOIOutput(); // TODO: reuse\n        TimeOfImpact(output, input);\n\n        // Beta is the fraction of the remaining portion of the [time?].\n        var beta = output.t;\n        if (output.state == TOIOutput.e_touching) {\n          alpha = Math.min(alpha0 + (1.0 - alpha0) * beta, 1.0);\n        } else {\n          alpha = 1.0;\n        }\n\n        c.m_toi = alpha;\n        c.m_toiFlag = true;\n      }\n\n      if (alpha < minAlpha) {\n        // This is the minimum TOI found so far.\n        minContact = c;\n        minAlpha = alpha;\n      }\n    }\n\n    if (minContact == null || 1.0 - 10.0 * Math.EPSILON < minAlpha) {\n      // No more TOI events. Done!\n      world.m_stepComplete = true;\n      break;\n    }\n\n    // Advance the bodies to the TOI.\n    var fA = minContact.getFixtureA();\n    var fB = minContact.getFixtureB();\n    var bA = fA.getBody();\n    var bB = fB.getBody();\n\n    var backup1 = bA.m_sweep.clone();\n    var backup2 = bB.m_sweep.clone();\n\n    bA.advance(minAlpha);\n    bB.advance(minAlpha);\n\n    // The TOI contact likely has some new contact points.\n    minContact.update(world);\n    minContact.m_toiFlag = false;\n    ++minContact.m_toiCount;\n\n    // Is the contact solid?\n    if (minContact.isEnabled() == false || minContact.isTouching() == false) {\n      // Restore the sweeps.\n      minContact.setEnabled(false);\n      bA.m_sweep.set(backup1);\n      bB.m_sweep.set(backup2);\n      bA.synchronizeTransform();\n      bB.synchronizeTransform();\n      continue;\n    }\n\n    bA.setAwake(true);\n    bB.setAwake(true);\n\n    // Build the island\n    this.clear();\n    this.addBody(bA);\n    this.addBody(bB);\n    this.addContact(minContact);\n\n    bA.m_islandFlag = true;\n    bB.m_islandFlag = true;\n    minContact.m_islandFlag = true;\n\n    // Get contacts on bodyA and bodyB.\n    var bodies = [ bA, bB ];\n    for (var i = 0; i < bodies.length; ++i) {\n      var body = bodies[i];\n      if (body.isDynamic()) {\n        for (var ce = body.m_contactList; ce; ce = ce.next) {\n          // if (this.m_bodyCount == this.m_bodyCapacity) { break; }\n          // if (this.m_contactCount == this.m_contactCapacity) { break; }\n\n          var contact = ce.contact;\n\n          // Has this contact already been added to the island?\n          if (contact.m_islandFlag) {\n            continue;\n          }\n\n          // Only add if either is static, kinematic or bullet.\n          var other = ce.other;\n          if (other.isDynamic() && !body.isBullet() && !other.isBullet()) {\n            continue;\n          }\n\n          // Skip sensors.\n          var sensorA = contact.m_fixtureA.m_isSensor;\n          var sensorB = contact.m_fixtureB.m_isSensor;\n          if (sensorA || sensorB) {\n            continue;\n          }\n\n          // Tentatively advance the body to the TOI.\n          var backup = other.m_sweep.clone();\n          if (other.m_islandFlag == false) {\n            other.advance(minAlpha);\n          }\n\n          // Update the contact points\n          contact.update(world);\n\n          // Was the contact disabled by the user?\n          // Are there contact points?\n          if (contact.isEnabled() == false || contact.isTouching() == false) {\n            other.m_sweep.set(backup);\n            other.synchronizeTransform();\n            continue;\n          }\n\n          // Add the contact to the island\n          contact.m_islandFlag = true;\n          this.addContact(contact);\n\n          // Has the other body already been added to the island?\n          if (other.m_islandFlag) {\n            continue;\n          }\n\n          // Add the other body to the island.\n          other.m_islandFlag = true;\n\n          if (!other.isStatic()) {\n            other.setAwake(true);\n          }\n\n          this.addBody(other);\n        }\n      }\n    }\n\n    s_subStep.reset((1.0 - minAlpha) * step.dt);\n    s_subStep.dtRatio = 1.0;\n    s_subStep.positionIterations = 20;\n    s_subStep.velocityIterations = step.velocityIterations;\n    s_subStep.warmStarting = false;\n\n    this.solveIslandTOI(s_subStep, bA, bB);\n\n    // Reset island flags and synchronize broad-phase proxies.\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n      body.m_islandFlag = false;\n\n      if (!body.isDynamic()) {\n        continue;\n      }\n\n      body.synchronizeFixtures();\n\n      // Invalidate all contact TOIs on this displaced body.\n      for (var ce = body.m_contactList; ce; ce = ce.next) {\n        ce.contact.m_toiFlag = false;\n        ce.contact.m_islandFlag = false;\n      }\n    }\n\n    // Commit fixture proxy movements to the broad-phase so that new contacts\n    // are created.\n    // Also, some contacts can be destroyed.\n    world.findNewContacts();\n\n    if (world.m_subStepping) {\n      world.m_stepComplete = false;\n      break;\n    }\n  }\n\n  if (_DEBUG) for (var b = world.m_bodyList; b; b = b.m_next) {\n    var c = b.m_sweep.c;\n    var a = b.m_sweep.a;\n    var v = b.m_linearVelocity;\n    var w = b.m_angularVelocity;\n  }\n}\n\n/**\n * @param {TimeStep} subStep\n * @param toiA\n * @param toiB\n */\nSolver.prototype.solveIslandTOI = function(subStep, toiA, toiB) {\n  var world = this.m_world;\n\n  // Initialize the body state.\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n    body.c_position.c.set(body.m_sweep.c);\n    body.c_position.a = body.m_sweep.a;\n    body.c_velocity.v.set(body.m_linearVelocity);\n    body.c_velocity.w = body.m_angularVelocity;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(subStep);\n  }\n\n  // Solve position constraints.\n  for (var i = 0; i < subStep.positionIterations; ++i) {\n    var minSeparation = 0.0;\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraintTOI(subStep, toiA, toiB);\n      minSeparation = Math.min(minSeparation, separation);\n    }\n    // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n    var contactsOkay = minSeparation >= -1.5 * Settings.linearSlop;\n    if (contactsOkay) {\n      break;\n    }\n  }\n\n  if (false) {\n    // Is the new position really safe?\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var c = this.m_contacts[i];\n      var fA = c.getFixtureA();\n      var fB = c.getFixtureB();\n\n      var bA = fA.getBody();\n      var bB = fB.getBody();\n\n      var indexA = c.getChildIndexA();\n      var indexB = c.getChildIndexB();\n\n      var input = new DistanceInput();\n      input.proxyA.set(fA.getShape(), indexA);\n      input.proxyB.set(fB.getShape(), indexB);\n      input.transformA = bA.getTransform();\n      input.transformB = bB.getTransform();\n      input.useRadii = false;\n\n      var output = new DistanceOutput();\n      var cache = new SimplexCache();\n      Distance(output, cache, input);\n\n      if (output.distance == 0 || cache.count == 3) {\n        cache.count += 0;\n      }\n    }\n  }\n\n  // Leap of faith to new safe state.\n  toiA.m_sweep.c0.set(toiA.c_position.c);\n  toiA.m_sweep.a0 = toiA.c_position.a;\n  toiB.m_sweep.c0.set(toiB.c_position.c);\n  toiB.m_sweep.a0 = toiB.c_position.a;\n\n  // No warm starting is needed for TOI events because warm\n  // starting impulses were applied in the discrete solver.\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(subStep);\n  }\n\n  // Solve velocity constraints.\n  for (var i = 0; i < subStep.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(subStep);\n    }\n  }\n\n  // Don't store the TOI contact forces for warm starting\n  // because they can be quite large.\n\n  var h = subStep.dt;\n\n  // Integrate positions\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w;\n\n    // Check for large velocities\n    var translation = Vec2.mul(h, v);\n    if (Vec2.dot(translation, translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    }\n\n    // Integrate\n    c.wAdd(h, v);\n    a += h * w;\n\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w;\n\n    // Sync bodies\n    body.m_sweep.c = c;\n    body.m_sweep.a = a;\n    body.m_linearVelocity = v;\n    body.m_angularVelocity = w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n};\n\n/**\n * Contact impulses for reporting. Impulses are used instead of forces because\n * sub-step forces may approach infinity for rigid body collisions. These match\n * up one-to-one with the contact points in Manifold.\n */\nfunction ContactImpulse() {\n  this.normalImpulses = [];\n  this.tangentImpulses = [];\n};\n\nSolver.prototype.postSolveIsland = function() {\n  // TODO: report contact.v_points instead of new object?\n  var impulse = new ContactImpulse();\n  for (var c = 0; c < this.m_contacts.length; ++c) {\n    var contact = this.m_contacts[c];\n    for (var p = 0; p < contact.v_points.length; ++p) {\n      impulse.normalImpulses.push(contact.v_points[p].normalImpulse);\n      impulse.tangentImpulses.push(contact.v_points[p].tangentImpulse);\n    }\n    this.m_world.postSolve(contact, impulse);\n  }\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Pool;\n\nfunction Pool(opts) {\n  var _list = [];\n  var _max = opts.max || Infinity;\n\n  var _createFn = opts.create;\n  var _outFn = opts.allocate;\n  var _inFn = opts.release;\n  var _discardFn = opts.discard;\n\n  var _createCount = 0;\n  var _outCount = 0;\n  var _inCount = 0;\n  var _discardCount = 0;\n\n  this.max = function(n) {\n    if (typeof n === 'number') {\n      _max = n;\n      return this;\n    }\n    return _max;\n  };\n\n  this.size = function() {\n    return _list.length;\n  };\n\n  this.allocate = function() {\n    var item;\n    if (_list.length > 0) {\n      item = _list.shift();\n    } else {\n      _createCount++;\n      if (typeof _createFn === 'function') {\n        item = _createFn();\n      } else {\n        item = {};\n      }\n    }\n    _outCount++;\n    if (typeof _outFn === 'function') {\n      _outFn(item);\n    }\n    return item;\n  };\n\n  this.release = function(item) {\n    if (_list.length < _max) {\n      _inCount++;\n      if (typeof _inFn === 'function') {\n        _inFn(item);\n      }\n      _list.push(item);\n    } else {\n      _discardCount++;\n      if (typeof _discardFn === 'function') {\n        item = _discardFn(item);\n      }\n    }\n  };\n\n  this.toString = function() {\n    return \" +\" + _createCount + \" >\" + _outCount + \" <\" + _inCount + \" -\"\n        + _discardCount + \" =\" + _list.length + \"/\" + _max;\n  };\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar AABB = require('./AABB');\nvar DynamicTree = require('./DynamicTree');\n\nmodule.exports = BroadPhase;\n\n/**\n * The broad-phase wraps and extends a dynamic-tree keep to track of moved\n * objects and query them on update.\n */\nfunction BroadPhase() {\n  this.m_tree = new DynamicTree();\n  this.m_proxyCount = 0;\n  this.m_moveBuffer = [];\n  this.queryCallback = this.queryCallback.bind(this);\n};\n\n/**\n * Get user data from a proxy. Returns null if the id is invalid.\n */\nBroadPhase.prototype.getUserData = function(proxyId) {\n  return this.m_tree.getUserData(proxyId);\n}\n\n/**\n * Test overlap of fat AABBs.\n */\nBroadPhase.prototype.testOverlap = function(proxyIdA, proxyIdB) {\n  var aabbA = this.m_tree.getFatAABB(proxyIdA);\n  var aabbB = this.m_tree.getFatAABB(proxyIdB);\n  return AABB.testOverlap(aabbA, aabbB);\n}\n\n/**\n * Get the fat AABB for a proxy.\n */\nBroadPhase.prototype.getFatAABB = function(proxyId) {\n  return this.m_tree.getFatAABB(proxyId);\n}\n\n/**\n * Get the number of proxies.\n */\nBroadPhase.prototype.getProxyCount = function() {\n  return this.m_proxyCount;\n}\n\n/**\n * Get the height of the embedded tree.\n */\nBroadPhase.prototype.getTreeHeight = function() {\n  return this.m_tree.getHeight();\n}\n\n/**\n * Get the balance (integer) of the embedded tree.\n */\nBroadPhase.prototype.getTreeBalance = function() {\n  return this.m_tree.getMaxBalance();\n}\n\n/**\n * Get the quality metric of the embedded tree.\n */\nBroadPhase.prototype.getTreeQuality = function() {\n  return this.m_tree.getAreaRatio();\n}\n\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n */\nBroadPhase.prototype.query = function(aabb, queryCallback) {\n  this.m_tree.query(aabb, queryCallback);\n}\n\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\nBroadPhase.prototype.rayCast = function(input, rayCastCallback) {\n  this.m_tree.rayCast(input, rayCastCallback);\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\nBroadPhase.prototype.shiftOrigin = function(newOrigin) {\n  this.m_tree.shiftOrigin(newOrigin);\n}\n\n/**\n * Create a proxy with an initial AABB. Pairs are not reported until UpdatePairs\n * is called.\n */\nBroadPhase.prototype.createProxy = function(aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var proxyId = this.m_tree.createProxy(aabb, userData);\n  this.m_proxyCount++;\n  this.bufferMove(proxyId);\n  return proxyId;\n}\n\n/**\n * Destroy a proxy. It is up to the client to remove any pairs.\n */\nBroadPhase.prototype.destroyProxy = function(proxyId) {\n  this.unbufferMove(proxyId);\n  this.m_proxyCount--;\n  this.m_tree.destroyProxy(proxyId);\n}\n\n/**\n * Call moveProxy as many times as you like, then when you are done call\n * UpdatePairs to finalized the proxy pairs (for your time step).\n */\nBroadPhase.prototype.moveProxy = function(proxyId, aabb, displacement) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var changed = this.m_tree.moveProxy(proxyId, aabb, displacement);\n  if (changed) {\n    this.bufferMove(proxyId);\n  }\n}\n\n/**\n * Call to trigger a re-processing of it's pairs on the next call to\n * UpdatePairs.\n */\nBroadPhase.prototype.touchProxy = function(proxyId) {\n  this.bufferMove(proxyId);\n}\n\nBroadPhase.prototype.bufferMove = function(proxyId) {\n  this.m_moveBuffer.push(proxyId);\n}\n\nBroadPhase.prototype.unbufferMove = function(proxyId) {\n  for (var i = 0; i < this.m_moveBuffer.length; ++i) {\n    if (this.m_moveBuffer[i] == proxyId) {\n      this.m_moveBuffer[i] = null;\n    }\n  }\n}\n\n/**\n * @function BroadPhase~addPair\n * @param {Object} userDataA\n * @param {Object} userDataB\n */\n\n/**\n * Update the pairs. This results in pair callbacks. This can only add pairs.\n * \n * @param {BroadPhase~AddPair} addPairCallback\n */\nBroadPhase.prototype.updatePairs = function(addPairCallback) {\n  _ASSERT && common.assert(typeof addPairCallback === 'function');\n  this.m_callback = addPairCallback;\n\n  // Perform tree queries for all moving proxies.\n  while (this.m_moveBuffer.length > 0) {\n    this.m_queryProxyId = this.m_moveBuffer.pop();\n    if (this.m_queryProxyId === null) {\n      continue;\n    }\n\n    // We have to query the tree with the fat AABB so that\n    // we don't fail to create a pair that may touch later.\n    var fatAABB = this.m_tree.getFatAABB(this.m_queryProxyId);\n\n    // Query tree, create pairs and add them pair buffer.\n    this.m_tree.query(fatAABB, this.queryCallback);\n  }\n\n  // Try to keep the tree balanced.\n  // this.m_tree.rebalance(4);\n}\n\nBroadPhase.prototype.queryCallback = function(proxyId) {\n  // A proxy cannot form a pair with itself.\n  if (proxyId == this.m_queryProxyId) {\n    return true;\n  }\n\n  var proxyIdA = Math.min(proxyId, this.m_queryProxyId);\n  var proxyIdB = Math.max(proxyId, this.m_queryProxyId);\n\n  // TODO: Skip any duplicate pairs.\n\n  var userDataA = this.m_tree.getUserData(proxyIdA);\n  var userDataB = this.m_tree.getUserData(proxyIdB);\n\n  // Send the pairs back to the client.\n  this.m_callback(userDataA, userDataB);\n\n  return true;\n}\n","import {mat3, vec3, vec2} from 'gl-matrix';\nimport pl, {Vec2} from 'planck-js';\n\nimport {App, initCanvas} from '../js/app.js';\nimport {Grid} from '../js/graphics/Grid.js';\nimport {MouseDrawing, CameraPan} from '../js/controls.js';\n\nimport {SpriteRenderer} from \"../js/graphics/SpriteRenderer\";\nimport {Sprite} from \"../js/graphics/Sprite\";\nimport {WorldRenderer} from \"../js/graphics/WorldRenderer\";\n\nimport '../css/app.css';\n\n\nconst app = new App({\n    el: initCanvas('content', 'game'),\n    debug: false,\n    clearColor: [0.1, 0.1, 0.1, 1],\n    resolution: {\n        width: 1400,\n        height: 728\n    },\n    pixelMultiplier: 1\n});\n//\n//\n// app.load({\n//     basePath: 'shaders/',\n//     programs: ['grid', 'sprite', 'lines']\n// });\n\nconst cameraPanControl = new CameraPan(app);\n\nconst PIXEL_SCALE = 10;\n\n\nconst shapeFromMouse = (app, engine) => {\n    let vertices;\n\n    const drawing = new MouseDrawing({\n        game: app,\n        connected: true,\n        listeners: {\n            drawingstart: () => {\n                vertices = [];\n            },\n            vertexadded: (vtx) => {\n                vertices.push(vtx);\n            },\n            drawingend: (evt) => {\n                const scaled_vtx = vertices.map(vtx => ({x: vtx.x / PIXEL_SCALE, y: vtx.y / PIXEL_SCALE}));\n                const center = Vertices.centre(scaled_vtx);\n                const isStatic = evt.key === 'Shift';\n                const newbody = Bodies.fromVertices(\n                    0, 0,\n                    scaled_vtx,\n                    true\n                );\n\n                if (newbody) {\n                    // Body.setStatic(newbody, isStatic);\n                    // Body.setPosition(newbody, center);\n                    // newbody.restitution = 0.999;\n                    // newbody.friction = 0.7;\n                    // newbody.frictionStatic = 10;\n                    //\n                    //\n                    // World.add(engine.world, newbody);\n                }\n\n                //newbody.collisionFilter.group = 0;\n                drawing.clear();\n            }\n        },\n        endKeys: ['Enter', 'Shift']\n    });\n\n    return drawing;\n};\n\n\nfunction bodyChain(options) {\n    const endpointA = options.endpointA;\n    const endpointB = options.endpointB;\n    const segmentLength = options.segmentLength || 5;\n    const thickness = options.thickness || 0.25;\n    const chainLength = options.chainLength || Vec2.distance(endpointA, endpointB);\n    const seg_count = Math.ceil(chainLength / segmentLength);\n    const chainDirection = endpointB.clone().sub(endpointA);\n    chainDirection.normalize();\n    const angle = Math.atan(chainDirection.y / chainDirection.x);\n\n    const segments = [];\n    const joints = [];\n\n    const alignChain = Vec2.distance(endpointA, endpointB) > 0;\n\n    for (let i = 0; i < seg_count; i++) {\n        const box = world.createBody().setDynamic();\n        box.createFixture(pl.Box(segmentLength/2, thickness/2), {density: 1});\n        // box.setMassData({\n        //     mass: 1,\n        //     center: Vec2(),\n        //     I: 1\n        // });\n        box.resetMassData();\n\n        if (alignChain) {\n            box.setPosition(Vec2.add(endpointA, chainDirection.clone().mul(i * segmentLength).add(Vec2.mul(chainDirection, segmentLength / 2))));\n        } else {\n            box.setPosition(endpointA);\n        }\n\n        segments.push(box);\n    }\n\n    const jointDef = {\n        localAnchorA: Vec2(segmentLength * 3 / 8, 0),\n        localAnchorB: Vec2(-segmentLength * 3 / 8, 0),\n        frequency: 0,\n        dampingRatio: 0,\n        maxLength: segmentLength/4\n    };\n\n    for (let i = 1; i < segments.length; i++) {\n        const segA = segments[i - 1];\n        const segB = segments[i];\n\n        joints.push(world.createJoint(pl.RopeJoint(jointDef, segA, segB)));\n    }\n\n    return {\n        segments,\n        joints\n    };\n}\n\nconst world = pl.World(Vec2(0, -10));\n//world.setGravity({x: 0, y: -5});\n\nconst ground = world.createBody();\nground.createFixture(pl.Chain([\n    Vec2(-50, -50),\n    Vec2(50, -50),\n    Vec2(50, 50),\n    Vec2(-50, 50)\n], true));\n\n(() => {\n    let box = world.createBody().setDynamic();\n    box.createFixture(pl.Box(0.5, 0.5));\n    box.setPosition(Vec2(2, 10));\n    box.setAngle(10);\n    box.setAngularVelocity(1);\n    box.setMassData({\n        mass: 1,\n        center: Vec2(),\n        I: 1\n    });\n\n    box = world.createBody().setDynamic();\n    box.createFixture(pl.Box(1, 1));\n    box.setPosition(Vec2(0, -5));\n    box.setAngularVelocity(-500);\n    box.setMassData({\n        mass: 1,\n        center: Vec2(),\n        I: 1\n    });\n\n    box = world.createBody().setDynamic();\n    box.createFixture(pl.Box(1, 1));\n    box.setPosition(Vec2(8, 10));\n    box.setAngularVelocity(2);\n    box.setMassData({\n        mass: 1,\n        center: Vec2(),\n        I: 1\n    });\n\n    let ball = world.createBody().setDynamic();\n    ball.createFixture(pl.Circle(3), {friction: 1, density: 0.5, linearVelocityDampingRatio: 0.5});\n    ball.setPosition(Vec2(0, -5));\n//ball.setAngularVelocity(10);\n//ball.setLinearVelocity(Vec2(0, 0));\n    ball.setMassData({\n        mass: 10,\n        center: Vec2(),\n        I: 1\n    });\n\n    const c = bodyChain({endpointA: Vec2(0, 0), endpointB: Vec2(0, 0), chainLength: 20, segmentLength: 1});\n\n    world.createJoint(pl.RevoluteJoint({collideConnected: false, localAnchorA: Vec2(3, 0), localAnchorB: Vec2(-0.5, 0)}, ball, c.segments[0]));\n    world.createJoint(pl.RevoluteJoint({collideConnected: false, localAnchorA: Vec2(0.5, 0), localAnchorB: Vec2(0, 0)}, c.segments[c.segments.length - 1], ground));\n})();\n\n/*\n\non mouse down {\n  if mouse is over body\n    create mouse joint to control body\n    on mouse up {\n      destroy mouse join\n    }\n  else {\n    pan camera in sync with cursor\n  }\n}\n\n */\n\nasync function run() {\n    await app.loader.loading;\n\n    const spriteRenderer = new SpriteRenderer({\n        game: app,\n        textureInfo: {\n            texture: app.framebuffer.texture,\n            ...app.resolution\n        }\n    });\n\n    // const grid = new GridOutline(app);\n    // grid.addGrid(100, 100, [0.4, 0.1, 0.9, 0.4], 1);\n\n    const worldRenderer = new WorldRenderer({\n        game: app,\n        pixelScale: PIXEL_SCALE\n    });\n\n    app.camera.centerAt(0, 0);\n\n    requestAnimationFrame(function render() {\n        world.step(1/60, undefined, 20);\n\n        // const p = ball.getPosition();\n        // app.camera.centerAt(p.x * PIXEL_SCALE, p.y * PIXEL_SCALE);\n\n        app.adjustViewport();\n        app.clear();\n\n        app.framebuffer.attach();\n        app.clear();\n\n        app.enableCamera();\n\n        // grid.render();\n\n        worldRenderer.render(world, app.viewMatrix);\n\n        app.framebuffer.detach();\n        app.disableCamera();\n        app.adjustViewport();\n\n        spriteRenderer.render([\n            new Sprite({\n                position: [0, 0],\n                size: [app.resolution.width, app.resolution.height]\n            })\n        ],\n            app.projection);\n\n        requestAnimationFrame(render);\n    });\n}\n\nrun();\n"],"sourceRoot":""}
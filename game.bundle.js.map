{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/gl.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/js/controls.js","webpack:///./src/shaders/atlas.frag","webpack:///./src/shaders/atlas.vert","webpack:///./src/js/graphics/SpriteAtlasRenderer.js","webpack:///./node_modules/downloadjs/download.js","webpack:///./src/js/graphics/SpriteAtlas.js","webpack:///./src/js/util.js","webpack:///./src/js/graphics/Sprite.js","webpack:///./src/js/graphics/SpriteRenderer.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/common.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2d.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat4.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec4.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/quat.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/quat2.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec2.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./src/js/layers/Layer.js","webpack:///./src/js/layers/BackgroundLayer.js","webpack:///./src/js/graphics/GraphicsState.js","webpack:///./src/js/Scene.js","webpack:///./src/js/Stage.js","webpack:///./src/demo/game.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/js/graphics.js","webpack:///./node_modules/underscore/underscore.js","webpack:///./src/js/graphics/Camera.js","webpack:///./src/css/app.css","webpack:///./src/css/app.css?13d6","webpack:///./src/shaders/sprite.frag","webpack:///./src/shaders/sprite.vert","webpack:///./src/js/vendor/webgl-debug.js","webpack:///./node_modules/twgl.js/dist/4.x/twgl-full.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/js/resource.js","webpack:///./src/js/app.js","webpack:///./src/js/twgl.js","webpack:///./src/js/graphics/Grid.js","webpack:///./src/shaders/grid.frag","webpack:///./src/shaders/grid.vert"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_gl","gl","g","this","Function","eval","e","window","_glMatrix","MouseDrawingEvents","MouseDrawing","options","_this","_classCallCheck","game","connected","endKeys","length","listeners","reduce","acc","evt","keys","forEach","addListener","_lineData","Float32Array","currentLineIdx","available","isDrawing","canvas","addEventListener","update","convertMouseCoordinates","x","offsetX","y","offsetY","endLine","startLine","includes","endDrawing","listener","push","_len","arguments","args","Array","_key","coord","mvec","vec4","fromValues","transformMat4","canvasToWorld","inBounds","lineIndex","notifyListeners","currentLineStart","currentLine","currentLineEnd","fill","slice","start","end","Keyboard","Map","document","keydown","keyup","set","startsWith","preventDefault","delete","CameraPan","app","_this2","pandir","speed","keyboard","loopStartTime","loopId","requestAnimationFrame","loop","now","delta","isdown","Math","max","camera","translate","CameraBodyTracker","body","cancelAnimationFrame","centerAt","position","sharedProgram","_twgl","_interopRequireDefault","_atlas","_atlas2","SpriteAtlasRenderer","undefined","atlas","setup","twgl","createProgramInfo","vs","fs","programInfo","_arrays","vertex","data","numComponents","divisor","drawType","STATIC_DRAW","DYNAMIC_DRAW","offset","size","texture_rect","layer","drawTpye","angle","texcoord","type","Int16Array","indices","bufferInfo","createBufferInfoFromArrays","vao","createVertexArrayInfo","graphicsState","setAttribInfoBufferFromArray","attribs","width","height","useProgram","program","setUniforms","projection","viewProjectionMatrix","texture","setBuffersAndAttributes","drawBufferInfo","TRIANGLE_STRIP","sprites","sprite","spriteIndex","textureRegion","coordinatesForName","textureName","v","compIndex","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","download","strFileName","strMimeType","blob","reader","self","defaultMime","mimeType","payload","url","anchor","createElement","toString","a","String","myBlob","Blob","MozBlob","WebKitBlob","fileName","split","pop","href","indexOf","ajax","XMLHttpRequest","open","responseType","onload","target","response","setTimeout","send","test","navigator","msSaveBlob","dataUrlToBlob","saver","tempUiArr","Uint8Array","mx","charCodeAt","strUrl","parts","decoder","atob","decodeURIComponent","binData","uiArr","winMode","setAttribute","className","innerHTML","style","display","appendChild","click","removeChild","URL","revokeObjectURL","userAgent","replace","confirm","location","f","src","createObjectURL","constructor","btoa","encodeURIComponent","FileReader","result","readAsDataURL","apply","_downloadjs","SpriteAtlas","layers","depth","map","entries","initTexture","deleteTexture","createTexture","bindTexture","TEXTURE_2D_ARRAY","texStorage3D","RGBA8","texParameteri","TEXTURE_MIN_FILTER","NEAREST","packingParams","nextY","_ref","out","img","imageData","srcRect","subregion","getImageData","fit","pixelStorei","UNPACK_FLIP_Y_WEBGL","texSubImage3D","RGBA","UNSIGNED_BYTE","limit","buffer","fb","createFramebuffer","bindFramebuffer","READ_FRAMEBUFFER","PACK_FLIP_Y_WEBGL","min","framebufferTextureLayer","COLOR_ATTACHMENT0","readPixels","ImageData","Uint8ClampedArray","prefix","readback","ctx","getContext","idx","putImageData","globalCompositeOperation","scale","drawImage","setTransform","default","toDataURL","concat","has","assign","bg","edges","boundsColor","search","rect","isULCorner","bottom_right","findBRCorner","rx","ry","_x","isRightEdge","_y","isBottomEdge","pixel","pixelsEqual","p1","p2","spriteBounds","keyColor","count","newElements","Error","h","b","isFinite","abs","round","framebuffer","TEXTURE_2D","texStorage2D","FRAMEBUFFER","framebufferTexture2D","attach","viewport","detach","Promise","resolve","reject","Image","removeListeners","removeEventListener","error","Sprite","backgroundColor","_sprite","_sprite2","SPRITE_RECT_VERTICES","SpriteRenderer","textureInfo","loader","positions","sizes","offsets","EPSILON","ARRAY_TYPE","RANDOM","random","setMatrixArrayType","degree","PI","toRadian","equals","clone","copy","identity","m00","m01","m10","m11","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","sin","cos","mat2_scale","v0","v1","fromRotation","fromScaling","str","frob","sqrt","pow","LDU","L","D","U","add","subtract","exactEquals","mat2_equals","multiplyScalar","multiplyScalarAndAdd","mul","sub","mat2d_create","mat2d_clone","mat2d_copy","mat2d_identity","mat2d_fromValues","tx","ty","mat2d_set","mat2d_invert","aa","ab","ac","ad","atx","aty","mat2d_determinant","mat2d_multiply","a4","a5","b4","b5","mat2d_rotate","mat2d_scale","mat2d_fromRotation","mat2d_fromScaling","fromTranslation","mat2d_str","mat2d_frob","mat2d_add","mat2d_subtract","mat2d_multiplyScalar","mat2d_multiplyScalarAndAdd","mat2d_exactEquals","mat2d_equals","mat2d_mul","mat2d_sub","mat3_create","fromMat4","mat3_clone","mat3_copy","mat3_fromValues","m02","m12","m20","m21","m22","mat3_set","mat3_identity","mat3_transpose","a01","a02","a12","mat3_invert","a00","a10","a11","a20","a21","a22","b01","b11","b21","mat3_adjoint","mat3_determinant","mat3_multiply","b00","b02","b10","b12","b20","b22","mat3_translate","mat3_rotate","mat3_scale","mat3_fromTranslation","mat3_fromRotation","mat3_fromScaling","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","mat3_str","mat3_frob","mat3_add","mat3_subtract","mat3_multiplyScalar","mat3_multiplyScalarAndAdd","mat3_exactEquals","mat3_equals","a6","a7","a8","b6","b7","b8","mat3_mul","mat3_sub","mat4_create","mat4_clone","mat4_copy","mat4_fromValues","m03","m13","m23","m30","m31","m32","m33","mat4_set","mat4_identity","mat4_transpose","mat4_invert","mat4_adjoint","mat4_determinant","mat4_multiply","mat4_translate","mat4_scale","mat4_rotate","axis","len","rotateX","rotateY","rotateZ","mat4_fromTranslation","mat4_fromScaling","mat4_fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","mat4_fromQuat","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","tan","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","mat4_str","mat4_frob","mat4_add","mat4_subtract","mat4_multiplyScalar","mat4_multiplyScalarAndAdd","mat4_exactEquals","mat4_equals","a9","a14","a15","b9","b13","b14","b15","mat4_mul","mat4_sub","vec3_create","vec3_clone","vec3_length","vec3_fromValues","vec3_copy","vec3_set","vec3_add","vec3_subtract","vec3_multiply","divide","ceil","floor","vec3_scale","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","vec3_dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","vec3_rotateX","vec3_rotateY","vec3_rotateZ","tempA","tempB","cosine","acos","vec3_str","vec3_exactEquals","vec3_equals","vec3_sub","vec3_mul","div","dist","sqrDist","vec3_len","sqrLen","vec","stride","fn","arg","vec4_create","vec4_clone","vec4_fromValues","vec4_copy","vec4_set","vec4_add","vec4_subtract","vec4_multiply","vec4_divide","vec4_ceil","vec4_floor","vec4_min","vec4_max","vec4_round","vec4_scale","vec4_scaleAndAdd","vec4_distance","vec4_squaredDistance","vec4_length","vec4_squaredLength","vec4_negate","vec4_inverse","vec4_normalize","vec4_dot","vec4_lerp","vec4_random","vectorScale","v2","v3","v4","s1","s2","vec4_transformMat4","vec4_transformQuat","ix","iy","iz","iw","vec4_str","vec4_exactEquals","vec4_equals","vec4_sub","vec4_mul","vec4_div","vec4_dist","vec4_sqrDist","vec4_len","vec4_sqrLen","vec4_forEach","quat_create","quat_identity","setAxisAngle","getAxisAngle","out_axis","quat_multiply","quat_rotateX","quat_rotateY","quat_rotateZ","calculateW","slerp","omega","cosom","sinom","scale0","scale1","quat_invert","dot","invDot","conjugate","fromMat3","fRoot","fTrace","j","k","fromEuler","halfToRad","cx","cy","cz","quat_str","quat_clone","quat_fromValues","quat_copy","quat_set","quat_add","quat_mul","quat_scale","quat_dot","quat_lerp","quat_length","quat_len","quat_squaredLength","quat_sqrLen","quat_normalize","quat_exactEquals","quat_equals","rotationTo","tmpvec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","view","quat2_create","dq","quat2_clone","quat2_fromValues","w1","fromRotationTranslationValues","quat2_fromRotationTranslation","quat2_fromTranslation","quat2_fromRotation","quat2_fromMat4","outer","quat2_copy","quat2_identity","quat2_set","getReal","getDual","setReal","setDual","quat2_getTranslation","quat2_translate","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","quat2_rotateX","quat2_rotateY","quat2_rotateZ","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","quat2_add","quat2_multiply","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","quat2_mul","quat2_scale","quat2_dot","quat2_lerp","mt","quat2_invert","sqlen","quat2_squaredLength","quat2_conjugate","quat2_length","quat2_len","quat2_sqrLen","quat2_normalize","quat2_str","quat2_exactEquals","quat2_equals","vec2_create","vec2_clone","vec2_fromValues","vec2_copy","vec2_set","vec2_add","vec2_subtract","vec2_multiply","vec2_divide","vec2_ceil","vec2_floor","vec2_min","vec2_max","vec2_round","vec2_scale","vec2_scaleAndAdd","vec2_distance","vec2_squaredDistance","vec2_length","vec2_squaredLength","vec2_negate","vec2_inverse","vec2_normalize","vec2_dot","vec2_cross","vec2_lerp","vec2_random","transformMat2","transformMat2d","vec2_transformMat3","vec2_transformMat4","vec2_rotate","p0","sinC","cosC","vec2_angle","len1","len2","vec2_str","vec2_exactEquals","vec2_equals","vec2_len","vec2_sub","vec2_mul","vec2_div","vec2_dist","vec2_sqrDist","vec2_sqrLen","vec2_forEach","stylesInDom","isOldIE","memo","memoize","all","getElement","selector","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","item","domStyle","id","refs","addStyle","listToStyles","list","newStyles","base","part","css","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","firstChild","before","removeStyleElement","parentNode","splice","createStyleElement","attrs","addAttrs","el","obj","remove","transform","styleIndex","applyToSingletonTag","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","JSON","stringify","oldSrc","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","index","replacement","filter","Boolean","join","cssNode","childNodes","Layer","scene","dt","_Layer2","_Sprite","BackgroundLayer","_possibleConstructorReturn","_getPrototypeOf","fixed","parallax","imageMap","initSprites","atlasRenderer","vec2","parallaxOffset","mat4","vec3","_toConsumableArray","render","_Camera","GraphicsState","resolution","Camera","matrix","_underscore","_GraphicsState","_SpriteAtlasRenderer","_Grid","Scene","compareLayer","Set","grid","showGrid","setAtlas","init","deinit","stage","Grid","clear","layersSorted","_this$graphicsState$c","_slicedToArray","_","sortBy","from","Stage","scenes","frame","_app","_Stage2","_util","_SpriteAtlas","_Scene2","_BackgroundLayer","_controls","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","App","initCanvas","debug","clearColor","pixelMultiplier","t0","createImageBitmap","loadImage","t1","sent","setStage","_Stage","_class","_inherits","_createClass","_Scene","_class2","addGrid","_dt","_get","addScene","addLayer","sky_0","stop","run","useSourceMap","content","cssMapping","sourceMapping","toComment","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","TilemapTextureBuilder","opts","_objectSpread","tileWidth","tileHeight","copyIndex","tileWide","detectWidthInTiles","tileHigh","detectHeightInTiles","copyTile","tileX","tileY","_this$tileCoordinates","tileCoordinates","isFull","maxIndex","layerWidth","layerHeight","CoordinateConversions","canvasToWorldMatrix","viewMatrix","displaySize","virtualSize","temp","root","global","previousUnderscore","ArrayProto","ObjProto","SymbolProto","nativeIsArray","isArray","nativeKeys","nativeCreate","Ctor","_wrapped","nodeType","VERSION","builtinIteratee","optimizeCb","func","context","argCount","collection","accumulator","cb","iteratee","isFunction","isObject","matcher","Infinity","restArguments","startIndex","rest","baseCreate","shallowProperty","path","deepGet","MAX_ARRAY_INDEX","getLength","isArrayLike","each","collect","results","currentKey","createReduce","dir","initial","reducer","foldl","inject","reduceRight","foldr","find","detect","predicate","findIndex","findKey","select","every","some","any","contains","include","fromIndex","guard","values","invoke","contextPath","method","pluck","where","findWhere","computed","lastComputed","shuffle","sample","last","rand","criteria","sort","group","behavior","partition","groupBy","indexBy","countBy","reStrSymbol","toArray","isString","match","pass","first","take","array","tail","drop","compact","flatten","input","shallow","strict","output","isArguments","without","otherArrays","difference","uniq","unique","isSorted","isBoolean","seen","union","arrays","intersection","argsLength","unzip","zip","createPredicateIndexFinder","findLastIndex","sortedIndex","low","high","mid","createIndexFinder","predicateFind","isNaN","lastIndexOf","range","step","chunk","executeBound","sourceFunc","boundFunc","callingContext","TypeError","bound","callArgs","partial","boundArgs","placeholder","bindAll","hasher","cache","address","delay","wait","defer","throttle","timeout","previous","later","leading","throttled","remaining","clearTimeout","trailing","cancel","debounce","immediate","debounced","callNow","wrapper","compose","after","times","once","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","collectNonEnumProps","nonEnumIdx","proto","prop","allKeys","mapObject","pairs","functions","methods","names","createAssigner","keysFunc","defaults","extend","extendOwn","eq","deepEq","keyInObj","pick","omit","props","tap","interceptor","isMatch","aStack","bStack","valueOf","areArrays","aCtor","bCtor","isEqual","isEmpty","isElement","nodelist","Int8Array","isSymbol","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","RegExp","replaceRegexp","string","escape","fallback","idCounter","uniqueId","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeRegExp","escapeChar","template","text","settings","oldSettings","variable","argument","chain","instance","_chain","chainResult","mixin","toJSON","bounds","_translation","_bounds","hmr","locals","WebGLDebugUtils","msg","console","log","glValidEnumContexts","enable","1","0","disable","getParameter","drawArrays","3","drawElements","4","2","createShader","getShaderParameter","getProgramParameter","getShaderPrecisionFormat","getVertexAttrib","vertexAttribPointer","6","activeTexture","getTexParameter","texParameterf","copyTexImage2D","8","copyTexSubImage2D","generateMipmap","bindBuffer","getBufferParameter","bindRenderbuffer","checkFramebufferStatus","framebufferRenderbuffer","5","getFramebufferAttachmentParameter","getRenderbufferParameter","renderbufferStorage","enumBitwiseOr","depthFunc","blendFunc","blendFuncSeparate","blendEquation","blendEquationSeparate","stencilFunc","stencilFuncSeparate","stencilMaskSeparate","stencilOp","stencilOpSeparate","cullFace","frontFace","drawArraysInstancedANGLE","drawElementsInstancedANGLE","blendEquationEXT","bufferData","bufferSubData","copyBufferSubData","getBufferSubData","blitFramebuffer","10","9","invalidateFramebuffer","invalidateSubFramebuffer","readBuffer","getInternalformatParameter","renderbufferStorageMultisample","texImage2D","7","texImage3D","11","texSubImage2D","12","copyTexSubImage3D","compressedTexImage2D","compressedTexImage3D","compressedTexSubImage2D","compressedTexSubImage3D","vertexAttribIPointer","drawArraysInstanced","drawElementsInstanced","drawRangeElements","clearBufferfv","clearBufferiv","clearBufferuiv","clearBufferfi","beginQuery","endQuery","getQuery","getQueryParameter","samplerParameteri","samplerParameterf","getSamplerParameter","fenceSync","clientWaitSync","waitSync","getSyncParameter","bindTransformFeedback","beginTransformFeedback","transformFeedbackVaryings","bindBufferBase","bindBufferRange","getIndexedParameter","getActiveUniforms","getActiveUniformBlockParameter","glEnums","enumStringToValue","propertyName","checkInit","glEnumToString","glFunctionArgToString","functionName","numArgs","argumentIndex","funcInfo","enums","orResult","orEnums","enumValue","makePropertyWrapper","original","__defineGetter__","__defineSetter__","resetToInitialState","isWebGL2RenderingContext","createTransformFeedback","bindVertexArray","numAttribs","MAX_VERTEX_ATTRIBS","tmp","createBuffer","ARRAY_BUFFER","ii","disableVertexAttribArray","FLOAT","vertexAttrib1f","vertexAttribDivisor","deleteBuffer","numTextureUnits","MAX_TEXTURE_IMAGE_UNITS","TEXTURE0","TEXTURE_CUBE_MAP","TEXTURE_3D","bindSampler","ELEMENT_ARRAY_BUFFER","RENDERBUFFER","BLEND","CULL_FACE","DEPTH_TEST","DITHER","SCISSOR_TEST","blendColor","FUNC_ADD","ONE","ZERO","clearDepth","clearStencil","colorMask","BACK","LESS","depthMask","depthRange","CCW","hint","GENERATE_MIPMAP_HINT","DONT_CARE","lineWidth","PACK_ALIGNMENT","UNPACK_ALIGNMENT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","BROWSER_DEFAULT_WEBGL","polygonOffset","sampleCoverage","scissor","ALWAYS","stencilMask","KEEP","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","drawBuffers","COPY_READ_BUFFER","COPY_WRITE_BUFFER","PIXEL_PACK_BUFFER","PIXEL_UNPACK_BUFFER","numTransformFeedbacks","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","TRANSFORM_FEEDBACK_BUFFER","numUBOs","MAX_UNIFORM_BUFFER_BINDINGS","UNIFORM_BUFFER","RASTERIZER_DISCARD","UNPACK_IMAGE_HEIGHT","UNPACK_SKIP_IMAGES","UNPACK_ROW_LENGTH","UNPACK_SKIP_ROWS","UNPACK_SKIP_PIXELS","PACK_ROW_LENGTH","PACK_SKIP_ROWS","PACK_SKIP_PIXELS","FRAGMENT_SHADER_DERIVATIVE_HINT","getError","mightBeEnum","glFunctionArgsToString","argStr","makeDebugContext","opt_onErrorFunc","opt_onFunc","opt_err_ctx","err","glErrorShadow","makeErrorWrapper","wrapped","NO_ERROR","makeLostContextSimulatingCanvas","unwrappedContext_","onLost_","onRestored_","wrappedContext_","contextId_","contextLost_","resourceDb_","numCallsToLoseContext_","numCalls_","canRestore_","restoreTimeout_","glErrorShadow_","wrapEvent","info","handleEvent","WebGLRenderingContext","WebGL2RenderingContext","makeLostContextFunctionWrapper","loseContextIfTime","creationFunctions","__webglDebugContextLostId__","functionsThatShouldReturnNull","isFunctions","FRAMEBUFFER_UNSUPPORTED","getAttribLocation","getVertexAttribOffset","isContextLost","getFragDataLocation","WAIT_FAILED","getUniformBlockIndex","INVALID_INDEX","makeLostContextSimulatingContext","addOnContextLostListener","addOnContextRestoredListener","loseContext","makeWebGLContextEvent","statusMessage","bubble","wrapAddEventListener","clearErrors","CONTEXT_LOST_WEBGL","event","callbacks","restoreContext","resource","WebGLBuffer","WebGLFramebuffer","deleteFramebuffer","WebGLProgram","deleteProgram","WebGLRenderbuffer","deleteRenderbuffer","WebGLShader","deleteShader","WebGLTexture","WebGLQuery","deleteQuery","WebGLSampler","deleteSampler","WebGLSync","deleteSync","WebGLTransformFeedback","deleteTransformFeedback","WebGLVertexArrayObject","deleteVertexArray","freeResources","loseContextInNCalls","numCalls","getNumCalls","setRestoreTimeout","factory","configurable","copyExistingProperties","dst","copyNamedProperties","isBuffer","repBuffer","isRenderbuffer","repRenderbuffer","createRenderbuffer","isShader","repShader","VERTEX_SHADER","isTexture","repTexture","isSampler","repSampler","createSampler","warn","_globalObject","getGLTypeForTypedArray","typedArray","BYTE","SHORT","Uint16Array","UNSIGNED_SHORT","Int32Array","INT","Uint32Array","UNSIGNED_INT","getGLTypeForTypedArrayType","typedArrayType","getTypedArrayTypeForGLType","CTOR","glTypeToTypedArray","isArrayBuffer","tt","SharedArrayBuffer","ArrayBuffer","VecType","t2","dx","dy","dz","distanceSq","divScalar","lengthSq","mulScalar","lenSq","setDefaultType","ctor","oldType","isWebGL1","isWebGL2","haveEnumsForType","existing","addEnums","createAttributeSetters","createProgram","createProgramFromScripts","shaderScriptIds","opt_attribs","opt_locations","opt_errorCallback","progOptions","getProgramOptions","shaders","shader","createShaderFromScript","defaultShaderType","errorCallback","createProgramFromSources","shaderSources","good","script","getElementById","createProgramInfoFromProgram","createUniformSetters","createUniformBlockSpecFromProgram","createUniformBlockInfoFromProgram","createUniformBlockInfo","blockName","uniformBlockSpec","tf","TRANSFORM_FEEDBACK","bindTransformFeedbackInfo","transformFeedbackInfo","varying","unbindTransformFeedbackInfo","createTransformFeedbackInfo","setAttributes","buffers","vertexArrayObject","attribSetters","setters","actualSetters","uniformSetters","andx","vals","numValues","setter","setUniformBlock","uniformBlockInfo","bindUniformBlock","setBlockUniforms","uniforms","utils","_interopRequireWildcard","helper","desc","getOwnPropertyDescriptor","typeMap","getBindPointForSamplerType","bindPoint","intSetter","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","textureOrPair","sampler","samplerArraySetter","units","textures","floatAttribSetter","enableVertexAttribArray","intAttribSetter","matAttribSetter","typeInfo","defaultSize","rowOffset","Type","uniform1f","arraySetter","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","attrTypeMap","spaceRE","loadShader","shaderSource","shaderType","errFn","lineOffset","compileShader","COMPILE_STATUS","lastError","getShaderInfoLog","line","ndx","addLineNumbers","opt","attribLocations","attrib","getShaderTypeFromScriptType","scriptType","FRAGMENT_SHADER","deleteShaders","realShaders","newShaders","elem","attachShader","bindAttribLocation","varyings","transformFeedbackMode","SEPARATE_ATTRIBS","linkProgram","LINK_STATUS","getProgramInfoLog","scriptId","opt_shaderType","shaderScript","isBuiltIn","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","substr","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","numVaryings","TRANSFORM_FEEDBACK_VARYINGS","getTransformFeedbackVarying","buf","uniformData","uniformIndices","pair","pname","blockSpecs","numUniformBlocks","ACTIVE_UNIFORM_BLOCKS","_ii","getActiveUniformBlockName","blockSpec","usedByVertexShader","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","usedByFragmentShader","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","used","usedByVertexSahder","arraySuffixRE","uniformBufferIndex","uniformBlockBinding","uniformNdx","BYTES_PER_ELEMENT","asFloat","bufferBindIndex","byteLength","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","axisRotate","angleInRadians","MatType","oneMinusCosine","r00","r01","r02","r10","r11","r12","r20","r21","r22","axisRotation","getAxis","off","xAxis","tempV3a","yAxis","tempV3b","zAxis","tempV3c","b23","b30","b31","b32","b33","fieldOfViewYInRadians","zNear","zFar","rangeInv","rotationX","rotationY","rotationZ","scaling","setAxis","setTranslation","transformDirection","transformNormal","mi","transformPoint","tmp_0","tmp_1","tmp_2","tmp_3","tmp_4","tmp_5","tmp_6","tmp_7","tmp_8","tmp_9","tmp_10","tmp_11","tmp_12","tmp_13","tmp_14","tmp_15","tmp_16","tmp_17","tmp_18","tmp_19","tmp_20","tmp_21","tmp_22","tmp_23","t3","createAttribsFromArrays","createBuffersFromArrays","createBufferFromArray","numElements","elementType","typedArrays","makeTypedArray","positionKeys","getArray","getNumComponents","getNumElementsFromNonIndexedArrays","createBufferFromTypedArray","newIndices","attribPrefix","numBytes","BUFFER_SIZE","bytesPerValue","getBytesPerValueForGLType","totalElements","getNumElementsFromAttributes","setBufferFromTypedArray","setAttributePrefix","setAttributeDefaults_","newDefaults","getNumComponents_","getArray_","isIndices","texcoordRE","colorRE","guessNumComponentsFromName","arrayName","normalization","attribName","arrayType","getNormalizationForTypedArrayType","getNormalizationForTypedArray","setTextureDefaults_","textureColor","setDefaultTextureColor","createSamplers","samplerOptions","samplers","setSamplerParameters","setEmptyTexture","setTextureFromArray","loadTextureFromUrl","setTextureFromElement","setTextureFilteringForSize","setTextureParameters","createTextures","textureOptions","callback","numDownloading","errors","images","callCallbackIfReady","onLoadFn","isAsyncSrc","tex","resizeTexture","level","internalFormat","format","formatType","getFormatAndTypeForInternalFormat","getTextureTypeForArrayType","TEXTURE_CUBE_MAP_POSITIVE_X","getNumComponentsForFormat","formatInfo","numColorComponents","getBytesPerElementForInternalFormat","crossOrigin","RGB","RG","textureInternalFormatInfo","bytesPerElement","bytesPerElementMap","textureFormat","isPowerOf2","defaultType","guessDimensions","color","colorRenderable","textureFilterable","lastPackState","savePackState","colorspaceConversion","premultiplyAlpha","flipY","restorePackState","saveSkipState","unpackAlignment","unpackRowLength","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","restoreSkipState","setTextureSamplerParameters","parameteriFn","minMag","TEXTURE_MAG_FILTER","mag","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","wrapR","wrapS","wrapT","minLod","TEXTURE_MIN_LOD","maxLod","TEXTURE_MAX_LOD","baseLevel","TEXTURE_BASE_LEVEL","maxLevel","TEXTURE_MAX_LEVEL","canGenerateMipmap","filtering","canFilter","LINEAR","CLAMP_TO_EDGE","shouldAutomaticallySetTextureFilteringForSize","auto","getCubeFaceOrder","cubeFaceOrder","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","getCubeFacesWithNdx","facesWithNdx","face","element","slices","imgWidth","imgHeight","nodeName","xOffset","yOffset","colorSpaceConversion","then","imageBitmap","smallest","largest","xMult","yMult","srcX","srcY","isTexImageSource","ImageBitmap","HTMLElement","loadAndUseImage","clearEventHandlers","onError","onLoad","bm","fetch","ok","bitmap","catch","setTextureTo1PixelColor","make1Pixel","loadCubemapFromUrls","urls","imgs","numToLoad","faces","faceTarget","otherTarget","uploadImg","loadSlicesFromUrls","firstImage","dimensions","cbrt","faceSize","subarray","_exportNames","m4","primitives","create3DFVertices","createAugmentedTypedArray","createCubeVertices","createPlaneVertices","createSphereVertices","createTruncatedConeVertices","createXYQuadVertices","createCresentVertices","createCylinderVertices","createTorusVertices","createDiscVertices","deindexVertices","vertices","newVertices","allButIndices","channel","srcBuffer","dstBuffer","jj","flattenNormals","normals","normal","numNormals","nax","nay","naz","nbx","nby","nbz","ncx","ncy","ncz","nx","ny","nz","makeRandomVertexColors","vcolors","randInt","numVertsPerColor","vertsPerColor","numSets","_ii2","reorientDirections","reorientNormals","reorientPositions","reorientVertices","concatVertices","arrayOfArrays","baseName","_loop","arrayInfo","newArrays","arraySpec","spec","getLengthOfCombinedArrays","newArraySpec","createArrayOfSameType","newArray","baseIndex","copyElements","copyArraysToNewArray","duplicateVertices","srcArray","createDiscBuffers","createDiscBufferInfo","createTorusBuffers","createTorusBufferInfo","createCylinderBuffers","createCylinderBufferInfo","createCresentBuffers","createCresentBufferInfo","createXYQuadBuffers","createXYQuadBufferInfo","createTruncatedConeBuffers","createTruncatedConeBufferInfo","createSphereBuffers","createSphereBufferInfo","createPlaneBuffers","createPlaneBufferInfo","createCubeBuffers","createCubeBufferInfo","create3DFBuffers","create3DFBufferInfo","attributes","augmentTypedArray","cursor","reset","opt_index","opt_type","applyFuncToV3Array","subdivisionsWidth","subdivisionsDepth","numVertices","texcoords","u","numVertsAcross","_z","radius","subdivisionsAxis","subdivisionsHeight","opt_startLatitudeInRadians","opt_endLatitudeInRadians","opt_startLongitudeInRadians","opt_endLongitudeInRadians","latRange","longRange","theta","phi","sinTheta","cosTheta","sinPhi","ux","uy","uz","numVertsAround","_x2","CUBE_FACE_INDICES","cornerVertices","faceNormals","uvCoords","faceIndices","uv","bottomRadius","topRadius","radialSubdivisions","verticalSubdivisions","opt_topCap","opt_bottomCap","topCap","bottomCap","extra","vertsAroundEdge","slant","atan2","cosSlant","sinSlant","ringRadius","_yy","expandRLEData","rleData","padding","runLength","colors","numVerts","verticalRadius","outerRadius","innerRadius","thickness","subdivisionsDown","startOffset","endOffset","subdivisionsThick","offsetRange","createArc","arcRadius","normalMult","normalAdd","uMult","uAdd","uBack","xBack","px","py","pz","createSurface","leftArcOffset","rightArcOffset","numVerticesDown","bodySubdivisions","startAngle","endAngle","radialParts","bodyParts","sliceAngle","sliceSin","ring","ringAngle","xSin","zCos","_slice","_ring","nextRingIndex","nextSliceIndex","divisions","stacks","stackPower","firstIndex","radiusSpan","pointsPerStack","stack","stackRadius","createBufferFunc","createBufferInfoFunc","arraySpecPropertyNames","dstNdx","arraySrc","addExtensionsToContext","getWebGLContext","resizeCanvasToDisplaySize","setDefaults","createContext","create3DContext","multiplier","clientWidth","clientHeight","_draw","_framebuffers","_programs","_typedarrays","_vertexArrays","prefixRE","addExtensionToContext","extensionName","ext","getExtension","fnSuffix","exec","enumSuffix","isFunc","suffix","endsWith","substring","origFn","supportedExtensions","drawObjectList","objectsToDraw","lastUsedProgramInfo","lastUsedBufferInfo","active","vertexArrayInfo","bindBuffers","TRIANGLES","programs","instanceCount","bindFramebufferInfo","framebufferInfo","drawingBufferWidth","drawingBufferHeight","createFramebufferInfo","attachments","colorAttachmentCount","defaultAttachments","attachmentOptions","attachment","attachmentPoint","attachmentsByFormat","getAttachmentPointForFormat","renderbufferFormats","isRenderbufferFormat","texTarget","resizeFramebufferInfo","programInfos","createVertexArray","createVAOAndSetAttributes","createVAOFromBufferInfo","webpackPolyfill","deprecate","paths","children","Loader","textureCache","programCache","loading","load","_basePath$raiseOnFail","basePath","raiseOnFailure","loadPromise","_ref2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","progOpts","_opts","fp","vsName","fsName","loadPaths","iterator","done","abrupt","return","finish","_x3","res","ret","raise","contents","req","status","statusText","_resource","_graphics","_SpriteRenderer","logGLCall","containerId","canvasClass","mountPoint","classList","registerContext","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","attachFramebuffer","framebufferRenderer","cameraEnabled","updateCanvasSize","adjustViewport","devicePixelRatio","canvas_width","canvas_height","_canvasToWorld","_this$gl","getProgram","timestamp","running","time","prerender","beginRenderToTexture","postrender","endRenderToTexture","_grid","_grid2","GRID_VERTICES","grids","lineColor","xcells","ycells","_makeGridVertices","_ref3","row","col","makeGridVertices","cameraPos","gridInfo","line_color"],"mappings":"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","file":"game.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 237);\n","let gl = {};\n\nfunction registerContext(_gl) {\n    gl = _gl;\n}\n\nexport {registerContext, gl};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import {vec3, vec4} from 'gl-matrix';\n\nconst MouseDrawingEvents = [\n    'vertexadded',\n    'lineadded',\n    'drawingstart',\n    'drawingend'\n];\n\nclass MouseDrawing {\n\n    constructor(options) {\n        this.game = options.game;\n        this.connected = options.connected || true;\n        this.endKeys = options.endKeys || ['Shift'];\n\n        if (!this.endKeys.length) {\n            this.endKeys = [this.endKeys];\n        }\n\n        this.listeners = MouseDrawingEvents.reduce((acc, evt) => {\n            acc[evt] = [];\n            return acc;\n        }, {});\n\n        if (options.listeners) {\n            Object.keys(options.listeners).forEach(key => this.addListener(key, options.listeners[key]));\n        }\n\n        this._lineData = new Float32Array(2 * 2 * 1024);\n        this.currentLineIdx = 0;\n        this.available = 0;\n        this.isDrawing = false;\n\n        this.game.canvas.addEventListener('mousemove', (evt) => {\n            this.update(this.convertMouseCoordinates({x: evt.offsetX, y: evt.offsetY}));\n        });\n\n        this.game.canvas.addEventListener('mousedown', (evt) => {\n            if (!this.isDrawing) {\n                this.startLine(this.convertMouseCoordinates({x: evt.offsetX, y: evt.offsetY}));\n            } else {\n                this.endLine(this.convertMouseCoordinates({x: evt.offsetX, y: evt.offsetY}));\n            }\n        });\n\n        window.addEventListener('keydown', (evt) => {\n            if (this.endKeys.includes(evt.key) && this.isDrawing) {\n                this.endDrawing(evt);\n            }\n        });\n    }\n\n    addListener(evt, listener) {\n        if (!this.listeners[evt]) {\n            this.listeners[evt] = [];\n        }\n        this.listeners[evt].push(listener);\n    }\n\n    notifyListeners(evt, ...args) {\n        this.listeners[evt].forEach(listener => listener(...args));\n    }\n\n    convertMouseCoordinates(coord) {\n        const mvec = vec4.fromValues(coord.x, coord.y, 0, 1);\n\n        vec4.transformMat4(mvec, mvec, this.game.canvasToWorld);\n\n        return {x: mvec[0], y: mvec[1]};\n    }\n\n    inBounds(coord) {\n        return true;\n    }\n\n    startLine(coord) {\n        if (this.inBounds(coord) && !this.isDrawing) {\n            this.isDrawing = true;\n            this.available++;\n\n            this._lineData[this.lineIndex + 0] = coord.x;\n            this._lineData[this.lineIndex + 1] = coord.y;\n\n            this.update(coord);\n\n            this.notifyListeners('drawingstart', {});\n            this.notifyListeners('vertexadded', this.currentLineStart);\n        }\n    }\n\n    get lineIndex() {\n        return this.currentLineIdx * 4;\n    }\n\n    get lineData() {\n        return this._lineData.slice(0, this.available * 4);\n    }\n\n    get currentLine() {\n        return {\n            start: this.currentLineStart,\n            end: this.currentLineEnd\n        }\n    }\n\n    get currentLineStart() {\n        return {\n            x: this._lineData[this.lineIndex],\n            y: this._lineData[this.lineIndex + 1]\n        };\n    }\n\n    get currentLineEnd() {\n        return {\n            x: this._lineData[this.lineIndex + 2],\n            y: this._lineData[this.lineIndex + 3]\n        }\n    }\n\n    endLine(coord) {\n        if (this.isDrawing) {\n            this._lineData[this.lineIndex + 2] = coord.x;\n            this._lineData[this.lineIndex + 3] = coord.y;\n\n            this.notifyListeners('lineadded', this.currentLine);\n            this.notifyListeners('vertexadded', this.currentLineEnd);\n\n            this.currentLineIdx++;\n\n            if (!this.connected) {\n                this.isDrawing = false;\n            } else {\n                this.available++;\n\n                this._lineData[this.lineIndex + 0] = coord.x;\n                this._lineData[this.lineIndex + 1] = coord.y;\n\n                this.update(coord);\n            }\n        }\n    }\n\n    endDrawing(evt) {\n        this.isDrawing = false;\n\n        this.notifyListeners('drawingend', evt);\n    }\n\n    update(coord) {\n        if (this.isDrawing) {\n            this._lineData[this.lineIndex + 2] = coord.x;\n            this._lineData[this.lineIndex + 3] = coord.y;\n        }\n    }\n\n    clear() {\n        this.available = 0;\n        this.currentLineIdx = 0;\n        this._lineData.fill(0);\n    }\n}\n\nclass Keyboard {\n    constructor(options) {\n        this.keys = new Map();\n        document.addEventListener('keydown', this.keydown.bind(this));\n        document.addEventListener('keyup', this.keyup.bind(this))\n    }\n\n    keydown(evt) {\n        this.keys.set(evt.key, true);\n\n        if (evt.key.startsWith('Arrow')) {\n            evt.preventDefault();\n        }\n    }\n\n    keyup(evt) {\n        this.keys.delete(evt.key);\n    }\n\n    isdown(key) {\n        return this.keys.get(key);\n    }\n}\n\nclass CameraPan {\n    constructor(app) {\n        this.pandir = [0, 0];\n        this.speed = 200;\n        this.keyboard = new Keyboard();\n\n        let loopStartTime = null;\n\n        const loop = now => {\n            if (!loopStartTime) {\n                loopStartTime = now;\n            }\n            let delta = (now - loopStartTime) / 1000;\n            loopStartTime = now;\n\n            this.pandir = [\n                this.keyboard.isdown('ArrowLeft') ? -1 : this.keyboard.isdown('ArrowRight') ? 1 : 0,\n                this.keyboard.isdown('ArrowDown') ? -1 : this.keyboard.isdown('ArrowUp') ? 1 : 0,\n            ];\n\n            if (this.keyboard.isdown('+')) {\n                this.speed += 10;\n            } else if (this.keyboard.isdown('-')) {\n                this.speed -= 10;\n                this.speed = Math.max(200, this.speed);\n            }\n\n            if (this.pandir[0] !== 0 || this.pandir[1] !== 0) {\n                app.camera.translate(this.speed * delta * this.pandir[0], this.speed * delta * this.pandir[1])\n            }\n\n            this.loopId = requestAnimationFrame(loop);\n        };\n\n        this.loopId = requestAnimationFrame(loop);\n    }\n}\n\nclass CameraBodyTracker {\n    constructor(game, body) {\n        this.body = body;\n        this.game = game;\n        this.loopId = null;\n    }\n\n    start() {\n        if (!this.loopId) {\n            this.loopId = requestAnimationFrame(this.loop.bind(this));\n        }\n    }\n\n    stop() {\n        cancelAnimationFrame(this.loopId);\n        this.loopId = null;\n    }\n\n    loop() {\n        if (this.body) {\n            this.game.camera.centerAt(this.body.position.x, this.body.position.y);\n        }\n\n        this.loopId = requestAnimationFrame(this.loop.bind(this));\n    }\n}\n\nexport {\n    CameraPan,\n    CameraBodyTracker,\n    MouseDrawing,\n    Keyboard\n};\n","module.exports = \"#version 300 es\\n\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nin vec3 v_tex_coord;\\n\\nuniform highp sampler2DArray texture;\\n\\nvoid main() {\\n    vec4 texel = texelFetch(texture, ivec3(v_tex_coord), 0);\\n\\n    out_color = texel; //vec4(texel.xyz * (line >= 0.5 ? 1. : .25), texel.w);\\n}\\n\"","module.exports = \"#version 300 es\\n\\nlayout(location = 0) in vec2 vertex;\\nlayout(location = 1) in vec2 position;\\nlayout(location = 2) in vec2 size;\\nlayout(location = 3) in ivec2 texcoord;\\nlayout(location = 4) in vec2 offset;\\nlayout(location = 5) in vec4 texture_rect;\\nlayout(location = 6) in float layer;\\nlayout(location = 7) in float angle;\\n\\nout vec3 v_tex_coord;\\n\\nuniform mat4 projection;\\n\\n/*\\n\\nConvert coordinates from world space to clip space\\n\\n 1. Scale [0, dim] -> [-1, 1] where dim is screen width or height\\n    dim pixels = 2 clip\\n    clip / pixels = 2 / dim\\n    x' = 2 * x / width - 1\\n    y' = 2 * y / height - 1\\n\\n    2/w  0   0   -1\\n     0  2/h  0   -1\\n     0   0   1    0\\n     0   0   0    1\\n*/\\n\\nvoid main() {\\n    mat2 rotation = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\\n    vec4 transformed_position = projection * vec4(position + rotation * (size * (vertex - offset)), 0, 1);\\n    gl_Position = transformed_position;\\n\\n    v_tex_coord = vec3(texcoord * ivec2(texture_rect.zw) + ivec2(texture_rect.xy), layer);\\n}\\n\"","import twgl from '../twgl';\nimport {gl} from '../gl';\n\nimport vs from '../../shaders/atlas.vert';\nimport fs from '../../shaders/atlas.frag';\n\nlet sharedProgram;\n\nclass SpriteAtlasRenderer {\n    constructor(options = {}) {\n        this.gl = gl;\n        this.atlas = options.atlas;\n        this.setup();\n    }\n\n    setup() {\n        if (!sharedProgram) {\n            sharedProgram = twgl.createProgramInfo(this.gl, [vs, fs]);\n        }\n        this.programInfo = sharedProgram;\n\n\n        this._arrays = {\n            vertex: {\n                data: [\n                    0, 0, // bottom left\n                    1, 0, // bottom right\n                    0, 1, // top left\n                    1, 1  // top right\n                ],\n                numComponents: 2,\n                divisor: 0,\n                drawType: this.gl.STATIC_DRAW\n            },\n            position: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            offset: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            size: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            texture_rect: {\n                numComponents: 4,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            layer: {\n                numComponents: 1,\n                divisor: 1,\n                drawTpye: this.gl.DYNAMIC_DRAW\n            },\n            angle: {\n                numComponents: 1,\n                divisor: 1,\n                drawTpye: this.gl.DYNAMIC_DRAW\n            },\n            texcoord: {\n                data: [\n                    // 0, 0,\n                    // this.textureInfo.width, 0,\n                    // 0, this.textureInfo.height,\n                    // this.textureInfo.width, this.textureInfo.height\n                    0, 0,\n                    1, 0,\n                    0, 1,\n                    1, 1\n                ],\n                numComponents: 2,\n                divisor: 0,\n                type: Int16Array\n            },\n            indices: {\n                data: [\n                    0,\n                    1,\n                    2,\n                    3\n                ]\n            }\n        };\n\n        this.bufferInfo = twgl.createBufferInfoFromArrays(this.gl, this._arrays);\n        this.vao = twgl.createVertexArrayInfo(this.gl, this.programInfo, this.bufferInfo);\n    }\n\n    renderLayer(graphicsState, layer = 0, position = [0, 0], offset = [0, 0], angle = 0) {\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.position,\n            position\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.size,\n            [this.atlas.width, this.atlas.height]\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.offset,\n            offset\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.texture_rect,\n            [0, 0, this.atlas.width, this.atlas.height]\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.layer,\n            [layer]\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.angle,\n            [angle]\n        );\n\n        this.gl.useProgram(this.programInfo.program);\n\n        twgl.setUniforms(this.programInfo, {\n            projection: graphicsState.viewProjectionMatrix,\n            texture: this.atlas.texture\n        });\n\n        twgl.setBuffersAndAttributes(this.gl, this.programInfo, this.vao);\n        twgl.drawBufferInfo(this.gl, this.vao, this.gl.TRIANGLE_STRIP, undefined, undefined, 1);\n    }\n\n    render(sprites, projection) {\n        const position = new Float32Array(2 * sprites.length);\n        const size = new Float32Array(2 * sprites.length);\n        const offset = new Float32Array(2 * sprites.length);\n        const texture_rect = new Float32Array(4 * sprites.length);\n        const layer = new Float32Array(sprites.length);\n        const angle = new Float32Array(sprites.length);\n\n        sprites.forEach((sprite, spriteIndex) => {\n\n            const textureRegion = sprite.textureRegion || this.atlas.coordinatesForName(sprite.textureName);\n\n            sprite.position.forEach((v, compIndex) => {\n                position[spriteIndex * 2 + compIndex] = v;\n            });\n\n            (sprite.size || [textureRegion.width, textureRegion.height]).forEach((v, compIndex) => {\n                size[spriteIndex * 2 + compIndex] = v;\n            });\n\n            sprite.offset.forEach((v, compIndex) => {\n                offset[spriteIndex * 2 + compIndex] = v;\n            });\n\n            [textureRegion.x, textureRegion.y, textureRegion.width, textureRegion.height].forEach((v, compIndex) => {\n                texture_rect[spriteIndex * 4 + compIndex] = v;\n            });\n\n            layer[spriteIndex] = textureRegion.layer;\n\n            angle[spriteIndex] = sprite.angle;\n        });\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.position,\n            position\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.size,\n            size\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.offset,\n            offset\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.texture_rect,\n            texture_rect\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.layer,\n            layer\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.angle,\n            angle\n        );\n\n        this.gl.useProgram(this.programInfo.program);\n\n        twgl.setUniforms(this.programInfo, {\n            projection: projection,\n            texture: this.atlas.texture\n        });\n\n        twgl.setBuffersAndAttributes(this.gl, this.programInfo, this.vao);\n        twgl.drawBufferInfo(this.gl, this.vao, this.gl.TRIANGLE_STRIP, undefined, undefined, sprites.length);\n    }\n\n    setAtlas(atlas) {\n        this.atlas = atlas;\n    }\n}\n\nexport {SpriteAtlasRenderer};\n","//download.js v4.2, by dandavis; 2008-2016. [MIT] see http://danml.com/download.html for tests/usage\n// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\n// v4 adds AMD/UMD, commonJS, and plain browser support\n// v4.1 adds url download capability via solo URL argument (same domain/CORS only)\n// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\n// https://github.com/rndme/download\n\n(function (root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t} else if (typeof exports === 'object') {\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals (root is window)\n\t\troot.download = factory();\n  }\n}(this, function () {\n\n\treturn function download(data, strFileName, strMimeType) {\n\n\t\tvar self = window, // this script is only for browsers anyway...\n\t\t\tdefaultMime = \"application/octet-stream\", // this default mime also triggers iframe downloads\n\t\t\tmimeType = strMimeType || defaultMime,\n\t\t\tpayload = data,\n\t\t\turl = !strFileName && !strMimeType && payload,\n\t\t\tanchor = document.createElement(\"a\"),\n\t\t\ttoString = function(a){return String(a);},\n\t\t\tmyBlob = (self.Blob || self.MozBlob || self.WebKitBlob || toString),\n\t\t\tfileName = strFileName || \"download\",\n\t\t\tblob,\n\t\t\treader;\n\t\t\tmyBlob= myBlob.call ? myBlob.bind(self) : Blob ;\n\t  \n\t\tif(String(this)===\"true\"){ //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\n\t\t\tpayload=[payload, mimeType];\n\t\t\tmimeType=payload[0];\n\t\t\tpayload=payload[1];\n\t\t}\n\n\n\t\tif(url && url.length< 2048){ // if no filename and no mime, assume a url was passed as the only argument\n\t\t\tfileName = url.split(\"/\").pop().split(\"?\")[0];\n\t\t\tanchor.href = url; // assign href prop to temp anchor\n\t\t  \tif(anchor.href.indexOf(url) !== -1){ // if the browser determines that it's a potentially valid url path:\n        \t\tvar ajax=new XMLHttpRequest();\n        \t\tajax.open( \"GET\", url, true);\n        \t\tajax.responseType = 'blob';\n        \t\tajax.onload= function(e){ \n\t\t\t\t  download(e.target.response, fileName, defaultMime);\n\t\t\t\t};\n        \t\tsetTimeout(function(){ ajax.send();}, 0); // allows setting custom ajax headers using the return:\n\t\t\t    return ajax;\n\t\t\t} // end if valid url?\n\t\t} // end if url?\n\n\n\t\t//go ahead and download dataURLs right away\n\t\tif(/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(payload)){\n\t\t\n\t\t\tif(payload.length > (1024*1024*1.999) && myBlob !== toString ){\n\t\t\t\tpayload=dataUrlToBlob(payload);\n\t\t\t\tmimeType=payload.type || defaultMime;\n\t\t\t}else{\t\t\t\n\t\t\t\treturn navigator.msSaveBlob ?  // IE10 can't do a[download], only Blobs:\n\t\t\t\t\tnavigator.msSaveBlob(dataUrlToBlob(payload), fileName) :\n\t\t\t\t\tsaver(payload) ; // everyone else can save dataURLs un-processed\n\t\t\t}\n\t\t\t\n\t\t}else{//not data url, is it a string with special needs?\n\t\t\tif(/([\\x80-\\xff])/.test(payload)){\t\t\t  \n\t\t\t\tvar i=0, tempUiArr= new Uint8Array(payload.length), mx=tempUiArr.length;\n\t\t\t\tfor(i;i<mx;++i) tempUiArr[i]= payload.charCodeAt(i);\n\t\t\t \tpayload=new myBlob([tempUiArr], {type: mimeType});\n\t\t\t}\t\t  \n\t\t}\n\t\tblob = payload instanceof myBlob ?\n\t\t\tpayload :\n\t\t\tnew myBlob([payload], {type: mimeType}) ;\n\n\n\t\tfunction dataUrlToBlob(strUrl) {\n\t\t\tvar parts= strUrl.split(/[:;,]/),\n\t\t\ttype= parts[1],\n\t\t\tdecoder= parts[2] == \"base64\" ? atob : decodeURIComponent,\n\t\t\tbinData= decoder( parts.pop() ),\n\t\t\tmx= binData.length,\n\t\t\ti= 0,\n\t\t\tuiArr= new Uint8Array(mx);\n\n\t\t\tfor(i;i<mx;++i) uiArr[i]= binData.charCodeAt(i);\n\n\t\t\treturn new myBlob([uiArr], {type: type});\n\t\t }\n\n\t\tfunction saver(url, winMode){\n\n\t\t\tif ('download' in anchor) { //html5 A[download]\n\t\t\t\tanchor.href = url;\n\t\t\t\tanchor.setAttribute(\"download\", fileName);\n\t\t\t\tanchor.className = \"download-js-link\";\n\t\t\t\tanchor.innerHTML = \"downloading...\";\n\t\t\t\tanchor.style.display = \"none\";\n\t\t\t\tdocument.body.appendChild(anchor);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tanchor.click();\n\t\t\t\t\tdocument.body.removeChild(anchor);\n\t\t\t\t\tif(winMode===true){setTimeout(function(){ self.URL.revokeObjectURL(anchor.href);}, 250 );}\n\t\t\t\t}, 66);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// handle non-a[download] safari as best we can:\n\t\t\tif(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\n\t\t\t\tif(/^data:/.test(url))\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t\tif(!window.open(url)){ // popup blocked, offer direct download:\n\t\t\t\t\tif(confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")){ location.href=url; }\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t//do iframe dataURL download (old ch+FF):\n\t\t\tvar f = document.createElement(\"iframe\");\n\t\t\tdocument.body.appendChild(f);\n\n\t\t\tif(!winMode && /^data:/.test(url)){ // force a mime that will download:\n\t\t\t\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t}\n\t\t\tf.src=url;\n\t\t\tsetTimeout(function(){ document.body.removeChild(f); }, 333);\n\n\t\t}//end saver\n\n\n\n\n\t\tif (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\n\t\t\treturn navigator.msSaveBlob(blob, fileName);\n\t\t}\n\n\t\tif(self.URL){ // simple fast and modern way using Blob and URL:\n\t\t\tsaver(self.URL.createObjectURL(blob), true);\n\t\t}else{\n\t\t\t// handle non-Blob()+non-URL browsers:\n\t\t\tif(typeof blob === \"string\" || blob.constructor===toString ){\n\t\t\t\ttry{\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \";base64,\"  +  self.btoa(blob)  );\n\t\t\t\t}catch(y){\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \",\" + encodeURIComponent(blob)  );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Blob but not URL support:\n\t\t\treader=new FileReader();\n\t\t\treader.onload=function(e){\n\t\t\t\tsaver(this.result);\n\t\t\t};\n\t\t\treader.readAsDataURL(blob);\n\t\t}\n\t\treturn true;\n\t}; /* end download() */\n}));\n","import {gl} from '../gl';\nimport download from 'downloadjs';\n\n/**\n * Class that batches sprite textures together into one large 2d array texture\n */\n\nclass SpriteAtlas {\n    constructor(width = 1024, height = 1024, layers = 32) {\n        this.width = width;\n        this.height = height;\n        this.depth = layers;\n        this.map = new Map();\n        this.entries = [];\n\n        this.initTexture();\n    }\n\n    initTexture() {\n        if (this.texture) {\n            gl.deleteTexture(this.texture);\n        }\n\n        this.texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n        gl.texStorage3D(gl.TEXTURE_2D_ARRAY, 1, gl.RGBA8, this.width, this.height, this.depth);\n        gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, null);\n\n        this.packingParams = {\n            x: 0,\n            y: 0,\n            nextY: 0,\n            layer: 0\n        }\n    }\n\n    fit({width, height}) {\n        const roomX = () => {\n            return this.packingParams.x + width <= this.width;\n        };\n\n        const roomY = () => {\n            return this.packingParams.y + height <= this.height;\n        };\n\n        if (!roomX()) {\n            this.packingParams.x = 0;\n            this.packingParams.y = this.packingParams.nextY;\n        }\n\n        if (!roomY()) {\n            if (this.packingParams.layer + 1 < this.depth) {\n                this.packingParams.x = 0;\n                this.packingParams.y = 0;\n                this.packingParams.nextY = 0;\n                this.packingParams.layer++;\n            } else {\n                throw \"Atlas full\";\n            }\n        }\n\n        const out = {\n            width,\n            height,\n            x: this.packingParams.x,\n            y: this.packingParams.y,\n            layer: this.packingParams.layer\n        };\n\n        this.packingParams.nextY = Math.max(this.packingParams.nextY, this.packingParams.y + height);\n        this.packingParams.x += width;\n\n        return out;\n    }\n\n    add(img, name, subregion = null) {\n        let imageData;\n        let srcRect;\n\n        if (!subregion) {\n            srcRect = {\n                x: 0,\n                y: 0,\n                width: img.width,\n                height: img.height\n            };\n            imageData = img;\n        } else {\n            srcRect = subregion;\n            imageData = img.getImageData(srcRect.x, srcRect.y, srcRect.width, srcRect.height);\n        }\n\n        const textureRegion = this.fit(srcRect);\n\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n\n        gl.texSubImage3D(\n            gl.TEXTURE_2D_ARRAY, // target\n            0,                   // mipmap level, always zero\n            textureRegion.x,  // xoffset\n            textureRegion.y, // yoffset\n            textureRegion.layer,                   // zoffset\n            textureRegion.width,      // width\n            textureRegion.height,     // height\n            1,                   // depth\n            gl.RGBA,             // format, guaranteed by ImageData to be RGBA\n            gl.UNSIGNED_BYTE,    // type, guaranteed by ImageData to be Uint8ClampedArray, i.e. UNSIGNED_BYTE\n            imageData            // pixel data\n        );\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n\n        this.map.set(name, textureRegion);\n        this.entries.push([name, textureRegion]);\n    }\n\n    readback(limit) {\n        // Uint8Array long enough to hold pixel data for one layer\n        const buffer = new Uint8Array(this.width * this.height * 4);\n        const fb = gl.createFramebuffer();\n        const layers = [];\n\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, fb);\n\n        gl.pixelStorei(gl.PACK_FLIP_Y_WEBGL, 1);\n\n        for (let layer = 0; layer < Math.min(this.depth, limit); layer++) {\n            gl.framebufferTextureLayer(gl.READ_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, this.texture, 0, layer);\n            gl.readPixels(0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n            layers.push(new ImageData(new Uint8ClampedArray(buffer), this.width, this.height));\n        }\n\n        gl.pixelStorei(gl.PACK_FLIP_Y_WEBGL, 0);\n\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n\n        return layers;\n    }\n\n    downloadLayers(prefix, limit = 1) {\n        const layers = this.readback(limit);\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        layers.forEach((layer, idx) => {\n            ctx.putImageData(layer, 0, 0);\n            ctx.globalCompositeOperation = 'copy';\n            ctx.scale(1, -1);\n            ctx.translate(0, -this.height);\n            ctx.drawImage(canvas, 0, 0);\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.globalCompositeOperation = 'source-over';\n            download(canvas.toDataURL(), `${prefix}_${idx}.png`);\n        });\n    }\n\n    coordinatesForName(name) {\n        if (this.map.has(name)) {\n            return Object.assign({}, this.map.get(name));\n        }\n\n        throw `Invalid name '${name}' for SpriteAtlas`;\n    }\n}\n\nconst detectSpriteBounds = (img, flipY = false) => {\n    // take top left pixel as background color\n    const bg = img.data.slice(0, 4);\n    const edges = [];\n    let boundsColor = null;\n\n    for (let y = 1; y < img.height - 1; y++) {\n        search(y).forEach(rect => {\n            edges.push(rect);\n        });\n    }\n\n    function search(y) {\n        const edges = [];\n        for (let x = 1; x < img.width - 1; x++) {\n            if (isULCorner(x, y)) {\n                let bottom_right = findBRCorner(x, y);\n\n                if (bottom_right) {\n                    edges.push({\n                        x,\n                        y,\n                        width: bottom_right.x - x,\n                        height: bottom_right.y - y\n                    });\n\n                    x = bottom_right.x;\n                }\n            }\n        }\n\n        return edges;\n    }\n\n    function findBRCorner(x, y) {\n        let rx = null;\n        let ry = null;\n        for (let _x = x + 1; _x < img.width - 1; _x++) {\n            if (isRightEdge(_x, y)) {\n                rx = _x;\n                break;\n            }\n        }\n\n        if (rx) {\n            for (let _y = y + 1; _y < img.height - 1; _y++) {\n                if (isBottomEdge(rx, _y)) {\n                    ry = _y;\n                    break;\n                }\n            }\n\n            if (rx && ry) {\n                return {x: rx, y: ry};\n            }\n        }\n\n        return null;\n    }\n\n    function isULCorner(x, y) {\n        const p = pixel(x, y);\n\n        // init boundsColor if necessary\n        if (!boundsColor && !pixelsEqual(p, bg)) {\n            boundsColor = p;\n        }\n\n        if (pixelsEqual(p, boundsColor)) {\n            // check pixel to left and above\n            // if both are background, return true\n            return (pixelsEqual(pixel(x-1, y), bg) && pixelsEqual(pixel(x, y-1), bg));\n        }\n\n        return false;\n    }\n\n    function isBRCorner(x, y) {\n        const p = pixel(x, y);\n\n        // init boundsColor if necessary\n        if (!boundsColor && !pixelsEqual(p, bg)) {\n            boundsColor = p;\n        }\n\n        if (pixelsEqual(p, boundsColor)) {\n            // check pixel to right and below\n            // if both are background, return true\n            return (pixelsEqual(pixel(x+1, y), bg) && pixelsEqual(pixel(x, y+1), bg))\n        }\n\n        return false;\n    }\n\n    function isRightEdge(x, y) {\n        return pixelsEqual(pixel(x, y), boundsColor) && pixelsEqual(pixel(x+1, y), bg);\n    }\n\n    function isBottomEdge(x, y) {\n        return pixelsEqual(pixel(x, y), boundsColor) && pixelsEqual(pixel(x, y+1), bg);\n    }\n\n    function pixel(x, y) {\n        return img.data.slice(4 * (x + y * img.width), 4 * (x + y * img.width) + 4);\n    }\n\n    function pixelsEqual(p1, p2) {\n        return (\n            p1 && p2 &&\n            p1[0] === p2[0] &&\n            p1[1] === p2[1] &&\n            p1[2] === p2[2] &&\n            p1[3] === p2[3]\n        );\n    }\n\n    return {\n        spriteBounds: edges,\n        keyColor: boundsColor\n    };\n};\n\nexport {SpriteAtlas,\n    detectSpriteBounds};\n","function arraySetter(buffer) {\n    let count = 0;\n    return function (newElements) {\n        if (!newElements.length) {\n            newElements = [newElements];\n            if (count + newElements.length > buffer.length) {\n                throw new Error('attempting to append beyond buffer length');\n            }\n        }\n        buffer.set(newElements, count);\n        count += newElements.length;\n    }\n}\n\nfunction hsl2rgb (h, s, l) {\n\n    var r, g, b, m, c, x\n\n    if (!isFinite(h)) h = 0\n    if (!isFinite(s)) s = 0\n    if (!isFinite(l)) l = 0\n\n    h /= 60\n    if (h < 0) h = 6 - (-h % 6)\n    h %= 6\n\n    s = Math.max(0, Math.min(1, s / 100))\n    l = Math.max(0, Math.min(1, l / 100))\n\n    c = (1 - Math.abs((2 * l) - 1)) * s\n    x = c * (1 - Math.abs((h % 2) - 1))\n\n    if (h < 1) {\n        r = c\n        g = x\n        b = 0\n    } else if (h < 2) {\n        r = x\n        g = c\n        b = 0\n    } else if (h < 3) {\n        r = 0\n        g = c\n        b = x\n    } else if (h < 4) {\n        r = 0\n        g = x\n        b = c\n    } else if (h < 5) {\n        r = x\n        g = 0\n        b = c\n    } else {\n        r = c\n        g = 0\n        b = x\n    }\n\n    m = l - c / 2\n    r = Math.round((r + m) * 255)\n    g = Math.round((g + m) * 255)\n    b = Math.round((b + m) * 255)\n\n    return [r, g, b];\n}\n\nfunction attachFramebuffer(gl, width, height) {\n    const framebuffer = gl.createFramebuffer();\n    const texture = gl.createTexture();\n\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA8, width, height);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    return {\n        width,\n        height,\n        attach() {\n            gl.viewport(0, 0, width, height);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        },\n        detach() {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        },\n        texture,\n        framebuffer\n    }\n}\n\nfunction loadImage(src) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n\n        function removeListeners() {\n            img.removeEventListener('load', null);\n            img.removeEventListener('error', null);\n        }\n\n        img.addEventListener('load', () => {\n            removeListeners();\n            resolve(img);\n        });\n\n        img.addEventListener('error', (error) => {\n            removeListeners();\n            reject(error);\n        });\n\n        img.src = src;\n    });\n}\n\nexport {arraySetter, hsl2rgb, attachFramebuffer, loadImage};\n","export {Sprite};\n\nclass Sprite {\n    constructor(options) {\n        this.position = options.position || [0, 0];\n        this.size = options.size;// || [8, 8];\n        // default angle is 0 radians\n        this.angle = 0;\n        // default is offset sets the sprite's bottom left corner at position\n        this.offset = options.offset || [0, 0];\n        // default backgroundColor is transparent black\n        this.backgroundColor = options.backgroundColor || [0, 0, 0, 0];\n        this.textureName = options.textureName || null;\n    }\n}\n","import twgl from '../twgl';\n\nimport vs from '../../shaders/sprite.vert';\nimport fs from '../../shaders/sprite.frag';\n\nconst SPRITE_RECT_VERTICES = new Float32Array([\n    0, 0, // bottom left\n    1, 0, // bottom right\n    0, 1, // top left\n    1, 1  // top right\n]);\n\nclass SpriteRenderer {\n    constructor({game, textureInfo}) {\n        this.gl = game.gl;\n        this.loader = game.loader;\n        this.game = game;\n\n        this.textureInfo = textureInfo;\n\n        this.setup();\n    }\n\n    setup() {\n        this.programInfo = twgl.createProgramInfo(this.gl, [vs, fs]);\n\n        this._arrays = {\n            vertex: {\n                data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 0,\n                drawType: this.gl.STATIC_DRAW\n            },\n            position: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            offset: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            size: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            texcoord: {\n                data: [\n                    // 0, 0,\n                    // this.textureInfo.width, 0,\n                    // 0, this.textureInfo.height,\n                    // this.textureInfo.width, this.textureInfo.height\n                    0, 0,\n                    1, 0,\n                    0, 1,\n                    1, 1\n                ],\n                numComponents: 2,\n                divisor: 0,\n                type: Int16Array\n            },\n            indices: {\n                data: [\n                    0,\n                    1,\n                    2,\n                    3\n                ]\n            }\n        };\n\n        this.bufferInfo = twgl.createBufferInfoFromArrays(this.gl, this._arrays);\n        this.vao = twgl.createVertexArrayInfo(this.gl, this.programInfo, this.bufferInfo);\n    }\n\n    render(sprites, projection) {\n        const positions = new Float32Array(2 * sprites.length);\n        const sizes = new Float32Array(2 * sprites.length);\n        const offsets = new Float32Array(2 * sprites.length);\n\n        sprites.forEach((sprite, spriteIndex) => {\n            sprite.position.forEach((v, compIndex) => {\n                positions[spriteIndex * 2 + compIndex] = v;\n            });\n\n            sprite.size.forEach((v, compIndex) => {\n                sizes[spriteIndex * 2 + compIndex] = v;\n            });\n\n            sprite.offset.forEach((v, compIndex) => {\n                offsets[spriteIndex * 2 + compIndex] = v;\n            });\n        });\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.position,\n            positions\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.size,\n            sizes\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.offset,\n            offsets\n        );\n\n        this.gl.useProgram(this.programInfo.program);\n\n        twgl.setUniforms(this.programInfo, {\n            projection: projection,\n            texture: this.textureInfo.texture\n        });\n\n        twgl.setBuffersAndAttributes(this.gl, this.programInfo, this.vao);\n        twgl.drawBufferInfo(this.gl, this.vao, this.gl.TRIANGLE_STRIP, undefined, undefined, sprites.length);\n    }\n}\n\nexport {SpriteRenderer};\n","/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nexport const RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\n\nconst degree = Math.PI / 180;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n","import * as glMatrix from \"./common.js\"\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nexport function fromValues(m00, m01, m10, m11) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    let a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\n  // Calculate the determinant\n  let det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] =  a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] =  a0 * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  let a0 = a[0];\n  out[0] =  a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] =  a0;\n\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n}\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix\n * @param {mat2} D the diagonal matrix\n * @param {mat2} U the upper triangular matrix\n * @param {mat2} a the input matrix to factorize\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2]/a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 2x3 Matrix\n * @module mat2d\n *\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nexport function fromValues(a, b, c, d, tx, ty) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function invert(out, a) {\n  let aa = a[0], ab = a[1], ac = a[2], ad = a[3];\n  let atx = a[4], aty = a[5];\n\n  let det = aa * ad - ab * ac;\n  if(!det){\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nexport function translate(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}\n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));\n}\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b01 = a22 * a11 - a12 * a21;\n  let b11 = -a22 * a10 + a12 * a20;\n  let b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  out[0] = (a11 * a22 - a12 * a21);\n  out[1] = (a02 * a21 - a01 * a22);\n  out[2] = (a01 * a12 - a02 * a11);\n  out[3] = (a12 * a20 - a10 * a22);\n  out[4] = (a00 * a22 - a02 * a20);\n  out[5] = (a02 * a10 - a00 * a12);\n  out[6] = (a10 * a21 - a11 * a20);\n  out[7] = (a01 * a20 - a00 * a21);\n  out[8] = (a00 * a11 - a01 * a10);\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b00 = b[0], b01 = b[1], b02 = b[2];\n  let b10 = b[3], b11 = b[4], b12 = b[5];\n  let b20 = b[6], b21 = b[7], b22 = b[8];\n\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n    x = v[0], y = v[1];\n\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n\n    s = Math.sin(rad),\n    c = Math.cos(rad);\n\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1];\n\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n\n  return out;\n}\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nexport function normalFromMat4(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ', ' +\n          a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] &&\n         a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\n         a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a03 = a[3];\n    let a12 = a[6], a13 = a[7];\n    let a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n  out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n  out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n  out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n  out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n  out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  let b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n  out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n  out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n  out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n    out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n    out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n  let b00, b01, b02;\n  let b10, b11, b12;\n  let b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n  a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n  a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[0]  = a[0];\n    out[1]  = a[1];\n    out[2]  = a[2];\n    out[3]  = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[4]  = a[4];\n    out[5]  = a[5];\n    out[6]  = a[6];\n    out[7]  = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[8]  = a[8];\n    out[9]  = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function fromRotation(out, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n\n  if (len < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromXRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = 1;\n  out[1]  = 0;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromYRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = 0;\n  out[2]  = -s;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromZRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = s;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {quat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\nexport function fromQuat2(out, a) {\n  let translation = new glMatrix.ARRAY_TYPE(3);\n  let bx = -a[0], by = -a[1], bz = -a[2], bw = a[3],\n  ax = a[4], ay = a[5], az = a[6], aw = a[7];\n\n  let magnitude = bx * bx + by * by + bz * bz + bw * bw;\n  //Only scale if it makes sense\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n  let m11 = mat[0];\n  let m12 = mat[1];\n  let m13 = mat[2];\n  let m21 = mat[4];\n  let m22 = mat[5];\n  let m23 = mat[6];\n  let m31 = mat[8];\n  let m32 = mat[9];\n  let m33 = mat[10];\n\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport function getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  let trace = mat[0] + mat[5] + mat[10];\n  let S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if ((mat[0] > mat[5]) && (mat[0] > mat[10])) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  let ox = o[0];\n  let oy = o[1];\n  let oz = o[2];\n\n  let out0 = (1 - (yy + zz)) * sx;\n  let out1 = (xy + wz) * sx;\n  let out2 = (xz - wy) * sx;\n  let out4 = (xy - wz) * sy;\n  let out5 = (1 - (xx + zz)) * sy;\n  let out6 = (yz + wx) * sy;\n  let out8 = (xz + wy) * sz;\n  let out9 = (yz - wx) * sz;\n  let out10 = (1 - (xx + yy)) * sz;\n\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function frustum(out, left, right, bottom, top, near, far) {\n  let rl = 1 / (right - left);\n  let tb = 1 / (top - bottom);\n  let nf = 1 / (near - far);\n  out[0] = (near * 2) * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = (near * 2) * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (far * near * 2) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n  let f = 1.0 / Math.tan(fovy / 2);\n  let nf = 1 / (near - far);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (2 * far * near) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  let upTan = Math.tan(fov.upDegrees * Math.PI/180.0);\n  let downTan = Math.tan(fov.downDegrees * Math.PI/180.0);\n  let leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0);\n  let rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0);\n  let xScale = 2.0 / (leftTan + rightTan);\n  let yScale = 2.0 / (upTan + downTan);\n\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = ((upTan - downTan) * yScale * 0.5);\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = (far * near) / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n  let lr = 1 / (left - right);\n  let bt = 1 / (bottom - top);\n  let nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  let x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  let eyex = eye[0];\n  let eyey = eye[1];\n  let eyez = eye[2];\n  let upx = up[0];\n  let upy = up[1];\n  let upz = up[2];\n  let centerx = center[0];\n  let centery = center[1];\n  let centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n      Math.abs(eyey - centery) < glMatrix.EPSILON &&\n      Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n  let eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n\n  let z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n\n  let len = z0*z0 + z1*z1 + z2*z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  let x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n\n  len = x0*x0 + x1*x1 + x2*x2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n          a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n          a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\n          a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  out[9] = a[9] + (b[9] * scale);\n  out[10] = a[10] + (b[10] * scale);\n  out[11] = a[11] + (b[11] * scale);\n  out[12] = a[12] + (b[12] * scale);\n  out[13] = a[13] + (b[13] * scale);\n  out[14] = a[14] + (b[14] * scale);\n  out[15] = a[15] + (b[15] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n         a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] &&\n         a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n         a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3];\n  let a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7];\n  let a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11];\n  let a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\n\n  let b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3];\n  let b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7];\n  let b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11];\n  let b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n          Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n          Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n          Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n          Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n          Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n          Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n          Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let len = x*x + y*y + z*z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2];\n  let bx = b[0], by = b[1], bz = b[2];\n\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  let factorTimes2 = t * t;\n  let factor1 = factorTimes2 * (2 * t - 3) + 1;\n  let factor2 = factorTimes2 * (t - 2) + t;\n  let factor3 = factorTimes2 * (t - 1);\n  let factor4 = factorTimes2 * (3 - 2 * t);\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  let inverseFactor = 1 - t;\n  let inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  let factorTimes2 = t * t;\n  let factor1 = inverseFactorTimesTwo * inverseFactor;\n  let factor2 = 3 * t * inverseFactorTimesTwo;\n  let factor3 = 3 * factorTimes2 * inverseFactor;\n  let factor4 = factorTimes2 * t;\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n\n  let r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  let z = (glMatrix.RANDOM() * 2.0) - 1.0;\n  let zScale = Math.sqrt(1.0-z*z) * scale;\n\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n    let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n    let x = a[0], y = a[1], z = a[2];\n    // var qvec = [qx, qy, qz];\n    // var uv = vec3.cross([], qvec, a);\n    let uvx = qy * z - qz * y,\n        uvy = qz * x - qx * z,\n        uvz = qx * y - qy * x;\n    // var uuv = vec3.cross([], qvec, uv);\n    let uuvx = qy * uvz - qz * uvy,\n        uuvy = qz * uvx - qx * uvz,\n        uuvz = qx * uvy - qy * uvx;\n    // vec3.scale(uv, uv, 2 * w);\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n    // vec3.scale(uuv, uuv, 2);\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n    // return vec3.add(out, a, vec3.add(out, uv, uuv));\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let tempA = fromValues(a[0], a[1], a[2]);\n  let tempB = fromValues(b[0], b[1], b[2]);\n\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n\n  let cosine = dot(tempA, tempB);\n\n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2];\n  let b0 = b[0], b1 = b[1], b2 = b[2];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 3;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n    }\n\n    return a;\n  };\n})();\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  let len = x*x + y*y + z*z + w*w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  let aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, vectorScale) {\n  vectorScale = vectorScale || 1.0;\n\n  // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n  var v1, v2, v3, v4;\n  var s1, s2;\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2], w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  let x = a[0], y = a[1], z = a[2];\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n\n  // calculate quat * vec\n  let ix = qw * x + qy * z - qz * y;\n  let iy = qw * y + qz * x - qx * z;\n  let iz = qw * z + qx * y - qy * x;\n  let iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 4;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n    }\n\n    return a;\n  };\n})();\n","import * as glMatrix from \"./common.js\"\nimport * as mat3 from \"./mat3.js\"\nimport * as vec3 from \"./vec3.js\"\nimport * as vec4 from \"./vec4.js\"\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nexport function getAxisAngle(out_axis, q) {\n  let rad = Math.acos(q[3]) * 2.0;\n  let s = Math.sin(rad / 2.0);\n  if (s != 0.0) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let by = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bz = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nexport function calculateW(out, a) {\n  let x = a[0], y = a[1], z = a[2];\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  let omega, cosom, sinom, scale0, scale1;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if ( cosom < 0.0 ) {\n    cosom = -cosom;\n    bx = - bx;\n    by = - by;\n    bz = - bz;\n    bw = - bw;\n  }\n  // calculate coefficients\n  if ( (1.0 - cosom) > 0.000001 ) {\n    // standard case (slerp)\n    omega  = Math.acos(cosom);\n    sinom  = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let dot = a0*a0 + a1*a1 + a2*a2 + a3*a3;\n  let invDot = dot ? 1.0/dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0*invDot;\n  out[1] = -a1*invDot;\n  out[2] = -a2*invDot;\n  out[3] = a3*invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  let fTrace = m[0] + m[4] + m[8];\n  let fRoot;\n\n  if ( fTrace > 0.0 ) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5/fRoot;  // 1/(4w)\n    out[0] = (m[5]-m[7])*fRoot;\n    out[1] = (m[6]-m[2])*fRoot;\n    out[2] = (m[1]-m[3])*fRoot;\n  } else {\n    // |w| <= 1/2\n    let i = 0;\n    if ( m[4] > m[0] )\n      i = 1;\n    if ( m[8] > m[i*3+i] )\n      i = 2;\n    let j = (i+1)%3;\n    let k = (i+2)%3;\n\n    fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n    out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n    out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n  }\n\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, x, y, z) {\n    let halfToRad = 0.5 * Math.PI / 180.0;\n    x *= halfToRad;\n    y *= halfToRad;\n    z *= halfToRad;\n\n    let sx = Math.sin(x);\n    let cx = Math.cos(x);\n    let sy = Math.sin(y);\n    let cy = Math.cos(y);\n    let sz = Math.sin(z);\n    let cz = Math.cos(z);\n\n    out[0] = sx * cy * cz - cx * sy * sz;\n    out[1] = cx * sy * cz + sx * cy * sz;\n    out[2] = cx * cy * sz - sx * sy * cz;\n    out[3] = cx * cy * cz + sx * sy * sz;\n\n    return out;\n}\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nexport const clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nexport const fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const equals = vec4.equals;\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nexport const rotationTo = (function() {\n  let tmpvec3 = vec3.create();\n  let xUnitVec3 = vec3.fromValues(1,0,0);\n  let yUnitVec3 = vec3.fromValues(0,1,0);\n\n  return function(out, a, b) {\n    let dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001)\n        vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n})();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport const sqlerp = (function () {\n  let temp1 = create();\n  let temp2 = create();\n\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\n    return out;\n  };\n}());\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nexport const setAxes = (function() {\n  let matr = mat3.create();\n\n  return function(out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n\n    return normalize(out, fromMat3(out, matr));\n  };\n})();\n","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\nexport function create() {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = 0;\n  dq[1] = 0;\n  dq[2] = 0;\n  dq[3] = 1;\n  dq[4] = 0;\n  dq[5] = 0;\n  dq[6] = 0;\n  dq[7] = 0;\n  return dq;\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function clone(a) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  let ax = x2 * 0.5,\n    ay = y2 * 0.5,\n    az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {quat} q quaternion\n * @param {vec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromRotationTranslation(out, q, t) {\n  let ax = t[0] * 0.5,\n    ay = t[1] * 0.5,\n    az = t[2] * 0.5,\n    bx = q[0],\n    by = q[1],\n    bz = q[2],\n    bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Creates a dual quat from a translation\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {vec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {quat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {mat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  let outer = quat.create();\n  mat4.getRotation(outer, a);\n  let t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {quat2} a Dual Quaternion\n * @return {quat} real part\n */\nexport const getReal = quat.copy;\n\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {quat2} a Dual Quaternion\n * @return {quat} dual part\n */\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\nexport const setReal = quat.copy;\n\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {quat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\nexport function getTranslation(out, a) {\n  let ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to translate\n * @param {vec3} v vector to translate by\n * @returns {quat2} out\n */\nexport function translate(out, a, v) {\n  let ax1 = a[0],\n    ay1 = a[1],\n    az1 = a[2],\n    aw1 = a[3],\n    bx1 = v[0] * 0.5,\n    by1 = v[1] * 0.5,\n    bz1 = v[2] * 0.5,\n    ax2 = a[4],\n    ay2 = a[5],\n    az2 = a[6],\n    aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateX(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateY(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateZ(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {quat} q quaternion to rotate by\n * @returns {quat2} out\n */\nexport function rotateByQuatAppend(out, a, q) {\n  let qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3],\n    ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat} q quaternion to rotate by\n * @param {quat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\nexport function rotateByQuatPrepend(out, q, a) {\n  let qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3],\n    bx = a[0],\n    by = a[1],\n    bz = a[2],\n    bw = a[3];\n\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {vec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n  let axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  let bx = s * axis[0] / axisLength;\n  let by = s * axis[1] / axisLength;\n  let bz = s * axis[2] / axisLength;\n  let bw = Math.cos(rad);\n\n  let ax1 = a[0],\n    ay1 = a[1],\n    az1 = a[2],\n    aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n\n  let ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n\n  return out;\n}\n\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {quat2} out\n * @function\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {quat2} out\n */\nexport function multiply(out, a, b) {\n  let ax0 = a[0],\n    ay0 = a[1],\n    az0 = a[2],\n    aw0 = a[3],\n    bx1 = b[4],\n    by1 = b[5],\n    bz1 = b[6],\n    bw1 = b[7],\n    ax1 = a[4],\n    ay1 = a[5],\n    az1 = a[6],\n    aw1 = a[7],\n    bx0 = b[0],\n    by0 = b[1],\n    bz0 = b[2],\n    bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {quat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = quat.dot;\n\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\nexport function lerp(out, a, b, t) {\n  let mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\nexport function invert(out, a) {\n  let sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n\n/**\n * Calculates the length of a dual quat\n *\n * @param {quat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\nexport const length = quat.length;\n\n/**\n * Alias for {@link quat2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {quat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = quat.squaredLength;\n\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\nexport function normalize(out, a) {\n  let magnitude = squaredLength(a);\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    out[0] = a[0] / magnitude;\n    out[1] = a[1] / magnitude;\n    out[2] = a[2] / magnitude;\n    out[3] = a[3] / magnitude;\n    out[4] = a[4] / magnitude;\n    out[5] = a[5] / magnitude;\n    out[6] = a[6] / magnitude;\n    out[7] = a[7] / magnitude;\n  }\n  return out;\n}\n\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {quat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\nexport function str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat2} a the first dual quaternion.\n * @param {quat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n    a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {quat2} a the first dual quat.\n * @param {quat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5],\n    a6 = a[6],\n    a7 = a[7];\n  let b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n    Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n    Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n    Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n    Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n    Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n    Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n    Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)));\n}\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = 0;\n  out[1] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nexport function fromValues(x, y) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nexport function round (out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return Math.sqrt(x*x + y*y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return x*x + y*y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0],\n    y = a[1];\n  return Math.sqrt(x*x + y*y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength (a) {\n  var x = a[0],\n    y = a[1];\n  return x*x + y*y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n  var x = a[0],\n    y = a[1];\n  var len = x*x + y*y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n    ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0];\n  let y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {vec2} a The vec2 point to rotate\n * @param {vec2} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec2} out\n */\nexport function rotate(out, a, b, c) {\n  //Translate point to the origin\n  let p0 = a[0] - b[0],\n  p1 = a[1] - b[1],\n  sinC = Math.sin(c),\n  cosC = Math.cos(c);\n  \n  //perform rotation and translate to correct position\n  out[0] = p0*cosC - p1*sinC + b[0];\n  out[1] = p0*sinC + p1*cosC + b[1];\n\n  return out;\n}\n\n/**\n * Get the angle between two 2D vectors\n * @param {vec2} a The first operand\n * @param {vec2} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let x1 = a[0],\n    y1 = a[1],\n    x2 = b[0],\n    y2 = b[1];\n  \n  let len1 = x1*x1 + y1*y1;\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n  \n  let len2 = x2*x2 + y2*y2;\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n  \n  let cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n  \n  \n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1];\n  let b0 = b[0], b1 = b[1];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 2;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1];\n    }\n\n    return a;\n  };\n})();\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tvar styleTarget = fn.call(this, selector);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[selector] = styleTarget;\n\t\t}\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","export {Layer};\nexport default Layer;\n\nclass Layer {\n    init(scene) {\n        this.scene = scene;\n    }\n\n    deinit() {\n\n    }\n\n    update(dt) {\n\n    }\n\n    render(dt, graphicsState) {\n\n    }\n}\n","import {vec2, vec3, mat4} from 'gl-matrix';\n\nimport {Layer} from './Layer';\nimport {Sprite} from '../graphics/Sprite';\n\nexport {BackgroundLayer};\nexport default BackgroundLayer;\n\nclass BackgroundLayer extends Layer {\n    constructor(options) {\n        super(options);\n\n        this.fixed = options.fixed === undefined ? true : options.fixed;\n        this.parallax = options.parallax || [1, 1];\n        this.offset = options.offset || [0, 0];\n        this.imageMap = options.imageMap;\n        this.atlas = options.atlas;\n        this.sprites = this.initSprites(options.imageMap);\n    }\n\n    setup() {\n\n        // if (!this.width || !this.height) {\n        //     this;\n        // }\n    }\n\n    initSprites(imageMap) {\n        let sprites = [];\n\n        Object.keys(imageMap).forEach(key => {\n            const textureName = key;\n            const textureRegion = this.atlas.coordinatesForName(textureName);\n\n            if (!textureRegion) {\n                throw `Error: invalid texture name '${textureName}'`;\n            }\n\n            sprites.push(new Sprite({\n                position: [imageMap[key].x, imageMap[key].y],\n                textureName,\n                textureRegion\n            }))\n        });\n\n        return sprites;\n    }\n\n    render(dt, graphicsState) {\n        const atlasRenderer = this.scene.atlasRenderer;\n\n        const position = vec2.copy(vec2.create(), this.offset);\n\n        if (!this.fixed) {\n            const parallaxOffset = vec2.mul(vec2.create(), this.parallax, graphicsState.camera.position);\n\n            vec2.add(position, position, parallaxOffset);\n        }\n\n        const t = mat4.fromTranslation(mat4.create(), vec3.fromValues(...position, 0));\n\n        atlasRenderer.render(this.sprites, mat4.mul(mat4.create(), graphicsState.projection, t));\n    }\n}\n","import {Camera} from './Camera';\nimport {mat4} from 'gl-matrix';\n\nexport {GraphicsState};\nexport default GraphicsState;\n\nclass GraphicsState {\n    constructor(resolution) {\n        this.resolution = resolution;\n        this.camera = new Camera(resolution);\n        this.projection = mat4.ortho(mat4.create(), 0, this.resolution.width, 0, this.resolution.height, -1, 1);\n    }\n\n    get viewProjectionMatrix() {\n        return mat4.mul(mat4.create(), this.projection, this.camera.matrix);\n    }\n    // get viewRect() {\n    //\n    // }\n}\n","import _ from 'underscore';\nimport {GraphicsState} from './graphics/GraphicsState';\nimport {SpriteAtlasRenderer} from './graphics/SpriteAtlasRenderer';\nimport {Grid} from \"./graphics/Grid\";\n\nexport {Scene};\nexport default Scene;\n\nconst compareLayer = layer => {\n    return layer.depth || 0;\n};\n\nclass Scene {\n    constructor() {\n        this.layers = new Set();\n        this.atlasRenderer = new SpriteAtlasRenderer();\n        this.atlas = null;\n        this.grid = null;\n        this.showGrid = false;\n    }\n\n    setAtlas(atlas) {\n        this.atlas = atlas;\n        this.atlasRenderer.setAtlas(atlas);\n    }\n\n    addLayer(layer) {\n        this.layers.add(layer);\n        layer.init(this);\n    }\n\n    removeLayer(layer) {\n        if (this.layers.has(layer)) {\n            this.layers.delete(layer);\n            layer.deinit();\n        }\n    }\n\n    init(stage) {\n        this.stage = stage;\n        this.graphicsState = new GraphicsState(stage.resolution);\n        this.grid = new Grid({\n            resolution: stage.resolution\n        });\n        this.setup();\n    }\n\n    deinit() {\n        this.stage = null;\n        this.layers.entries().forEach(layer => layer.deinit());\n        this.layers.clear();\n    }\n\n    update(dt) {\n        this.layersSorted.forEach(layer => {\n           layer.update(dt);\n        });\n    }\n\n    render(dt) {\n        this.layersSorted.forEach(layer => {\n            layer.render(dt, this.graphicsState);\n        });\n\n        if (this.showGrid) {\n            const [x, y] = this.graphicsState.camera.position;\n            this.grid.render(x, y, this.graphicsState.projection);\n        }\n    }\n\n    setup() {\n\n    }\n\n    get layersSorted () {\n        return _.sortBy(Array.from(this.layers), compareLayer);\n    }\n}\n","import {Grid} from './graphics/Grid';\n\nexport {Stage};\nexport default Stage;\n\nclass Stage {\n    constructor() {\n        this.scenes = [];\n    }\n\n    init(app) {\n        this.app = app;\n        this.resolution = app.resolution;\n        this.frame = 0;\n        this.grid = new Grid({\n            resolution: this.resolution\n        });\n        this.showGrid = false;\n        this.setup();\n    }\n\n    prerender(dt) {\n        this.scenes.forEach((scene) => {\n             scene.update(dt);\n        });\n    }\n\n    render(dt) {\n        this.scenes.forEach((scene) => {\n            scene.render(dt);\n        });\n\n        if (this.showGrid) {\n            this.grid.render(0, 0, this.app.projection);\n        }\n    }\n\n    postrender(dt) {\n        this.frame++;\n    }\n\n    addScene(scene) {\n        this.scenes.push(scene);\n        scene.init(this);\n    }\n\n    removeScene(scene) {\n        const idx = this.scenes.indexOf(scene);\n\n        if (idx !== -1) {\n            this.scenes.splice(idx, 1);\n            scene.deinit();\n        }\n    }\n}\n","import {App, initCanvas} from '../js/app.js';\nimport {Stage} from '../js/Stage';\nimport {loadImage} from '../js/util';\n\nimport '../css/app.css';\nimport {SpriteAtlas} from \"../js/graphics/SpriteAtlas\";\nimport {Scene} from \"../js/Scene\";\nimport {BackgroundLayer} from \"../js/layers/BackgroundLayer\";\nimport {Keyboard} from \"../js/controls\";\n\nconst run = async () => {\n    const app = new App({\n        el: initCanvas('content', 'game'),\n        debug: false,\n        clearColor: [0.0, 1.0, 1.0, 1],\n        resolution: {\n            width: 400,\n            height: 224\n        },\n        pixelMultiplier: 2\n    });\n\n    const atlas = new SpriteAtlas(undefined, undefined, 2);\n\n    {\n        const img = await createImageBitmap(await loadImage('img/sky_0.png'));\n        atlas.add(img, 'sky_0');\n    }\n\n    app.setStage(new class extends Stage {\n        setup() {\n            let scene = new class extends Scene {\n                setup() {\n                    this.keyboard = new Keyboard();\n                    this.grid.addGrid(16, 16, [0.1, 0.7, 0.9, 0.4], 1);\n                    //this.showGrid = true;\n                }\n\n                update(_dt) {\n                    super.update(_dt);\n\n                    let dt = 0.1 * _dt;\n\n                    if (this.keyboard.isdown(\"ArrowRight\")) {\n                        this.graphicsState.camera.translate(dt, 0);\n                    }\n                    if (this.keyboard.isdown(\"ArrowLeft\")) {\n                        this.graphicsState.camera.translate(-dt, 0);\n                    }\n                    if (this.keyboard.isdown(\"ArrowUp\")) {\n                        this.graphicsState.camera.translate(0, dt);\n                    }\n                    if (this.keyboard.isdown(\"ArrowDown\")) {\n                        this.graphicsState.camera.translate(0, -dt);\n                    }\n                }\n            };\n            scene.setAtlas(atlas);\n            this.addScene(scene);\n\n            scene.addLayer(new BackgroundLayer({\n                atlas: atlas,\n                fixed: false,\n                imageMap: {\n                    'sky_0': {\n                        x: 0, y: 0\n                    }\n                }\n            }));\n\n\n        }\n    });\n\n    app.start();\n};\n\nrun();\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","import {mat3, mat4, vec2, vec3, vec4} from 'gl-matrix';\n\nimport {gl} from 'gl.js';\n\nconst POSITION_COMPONENTS = 2;\nconst SIZE_COMPONENTS = 2;\n\nclass TilemapTextureBuilder {\n    constructor(opts) {\n        Object.assign(this, {\n            tileWidth: 8,\n            tileHeight: 8,\n            width: 256,\n            height: 1,\n            layers: 2,\n            ...opts\n        });\n\n        this.copyIndex = 0;\n\n        this.texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n        gl.texStorage3D(gl.TEXTURE_2D_ARRAY, 1, gl.RGBA8, this.width * this.tileWidth, this.height * this.tileHeight, this.layers);\n        gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, null);\n\n    }\n\n    tileCoordinates() {\n        return {\n            x: this.copyIndex % this.width,\n            y: Math.floor(this.copyIndex / (this.width)) % this.height,\n            z: Math.floor(this.copyIndex / (this.width * this.height)) % this.layers\n        }\n    }\n\n    addTiles(src) {\n        const tileWide = this.detectWidthInTiles(src);\n        const tileHigh = this.detectHeightInTiles(src);\n\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        canvas.width = src.width;\n        canvas.height = src.height;\n\n        ctx.drawImage(src, 0, 0);\n\n        /**\n         *  Copies pixels in src from the tile starting at (tileX, tileY) to the current\n         * tile and advances the copy index\n         */\n        const copyTile = (tileX, tileY) => {\n            const imageData = ctx.getImageData(\n                tileX * this.tileWidth,\n                tileY * this.tileHeight,\n                this.tileWidth,\n                this.tileHeight\n            );\n\n            const {x, y, z} = this.tileCoordinates();\n\n            gl.texSubImage3D(\n                gl.TEXTURE_2D_ARRAY, // target\n                0,                   // mipmap level, always zero\n                x * this.tileWidth,  // xoffset\n                y * this.tileHeight, // yoffset\n                z,                   // zoffset\n                this.tileWidth,      // width\n                this.tileHeight,     // height\n                1,                   // depth\n                gl.RGBA,             // format, guaranteed by ImageData to be RGBA\n                gl.UNSIGNED_BYTE,    // type, guaranteed by ImageData to be Uint8ClampedArray, i.e. UNSIGNED_BYTE\n                imageData            // pixel data\n            );\n\n            this.copyIndex++;\n        };\n\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n\n        for (let y = 0; y < tileHigh; y++) {\n            for (let x = 0; x < tileWide; x++) {\n                if (this.isFull()) {\n                    break;\n                }\n                copyTile(x, y);\n            }\n        }\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, null);\n    }\n\n    detectWidthInTiles(src) {\n        return Math.floor(src.width / this.tileWidth);\n    }\n\n    detectHeightInTiles(src) {\n        return Math.floor(src.height / this.tileHeight);\n    }\n\n    get layerWidth() {\n        return this.tileWidth * this.width;\n    }\n\n    get layerHeight() {\n        return this.tileHeight * this.height;\n    }\n\n    get maxIndex() {\n        return this.width * this.height * this.layers;\n    }\n\n    isFull() {\n        return this.copyIndex >= this.maxIndex;\n    }\n\n    /**\n     * Reads texture from GL memory returns it as Array of ImageData\n     */\n    readback() {\n        // Uint8Array long enough to hold pixel data for one layer\n        const buffer = new Uint8Array(this.layerWidth * this.layerHeight * 4);\n        const fb = gl.createFramebuffer();\n        const layers = [];\n\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, fb);\n\n        for (let layer = 0; layer < this.layers; layer++) {\n            gl.framebufferTextureLayer(gl.READ_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, this.texture, 0, layer);\n            gl.readPixels(0, 0, this.layerWidth, this.layerHeight, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n            layers.push(new ImageData(new Uint8ClampedArray(buffer), this.layerWidth, this.layerHeight));\n        }\n\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n\n        return layers;\n    }\n}\n\n\nconst CoordinateConversions = {\n    canvasToWorldMatrix(viewMatrix, displaySize, virtualSize) {\n        const acc = mat4.create();\n        const temp = mat4.create();\n\n        // (scale to virtualSize) * (project viewport) * (subtract offset) * point\n\n        // (inverse viewMatrix) * (scale virtualSize / displaySize) * (flip y) * point\n\n        // flip y\n        mat4.multiply(\n            acc,\n            mat4.fromValues(\n                1,  0, 0, 0,\n                0, -1, 0, 0,\n                0,  0, 1, 0,\n                0, displaySize.height, 1, 1\n            ),\n            acc\n        );\n\n        // scale\n        mat4.fromScaling(\n            temp,\n            [virtualSize.width / displaySize.width, virtualSize.height / displaySize.height, 1]\n        );\n        mat4.multiply(acc, temp, acc);\n\n        // invert view\n        mat4.invert(temp, viewMatrix);\n        mat4.multiply(acc, temp, acc);\n\n        return acc;\n    }\n};\n\n\nexport {\n    TilemapTextureBuilder,\n    CoordinateConversions};\n","//     Underscore.js 1.9.1\n//     http://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global ||\n            this ||\n            {};\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n  if (typeof exports != 'undefined' && !exports.nodeType) {\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.9.1';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      // The 2-argument case is omitted because we’re not using it.\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee;\n\n  // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  };\n\n  // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n  _.iteratee = builtinIteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n  var restArguments = function(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n      switch (startIndex) {\n        case 0: return func.call(this, rest);\n        case 1: return func.call(this, arguments[0], rest);\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\n      }\n      var args = Array(startIndex + 1);\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function(obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  }\n\n  var deepGet = function(obj, path) {\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n    return length ? obj : void 0;\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  var createReduce = function(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    };\n\n    return function(obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  };\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = restArguments(function(obj, path, args) {\n    var contextPath, func;\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n    return _.map(obj, function(context) {\n      var method = func;\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n        if (context == null) return void 0;\n        method = context[path];\n      }\n      return method == null ? method : method.apply(context, args);\n    });\n  });\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection.\n  _.shuffle = function(obj) {\n    return _.sample(obj, Infinity);\n  };\n\n  // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n    return sample.slice(0, n);\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior, partition) {\n    return function(obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = group(function(result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true);\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, Boolean);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0, len = value.length;\n          while (j < len) output[idx++] = value[j++];\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = restArguments(function(array, otherArrays) {\n    return _.difference(array, otherArrays);\n  });\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = restArguments(function(arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  });\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = restArguments(function(array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  });\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = restArguments(_.unzip);\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions.\n  var createPredicateIndexFinder = function(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  };\n\n  // Returns the first index on an array-like that passes a predicate test.\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions.\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n  _.chunk = function(array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0, length = array.length;\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n    return result;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = restArguments(function(func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function(callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  });\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n  _.partial = restArguments(function(func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  });\n\n  _.partial.placeholder = _;\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = restArguments(function(obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  });\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = restArguments(function(func, wait, args) {\n    return setTimeout(function() {\n      return func.apply(null, args);\n    }, wait);\n  });\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function() {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n\n    var later = function(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function(args) {\n      if (timeout) clearTimeout(timeout);\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function() {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  _.restArguments = restArguments;\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  };\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, defaults) {\n    return function(obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test.\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Internal pick helper function to determine if `obj` has key `key`.\n  var keyInObj = function(value, key, obj) {\n    return key in obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = restArguments(function(obj, keys) {\n    var result = {}, iteratee = keys[0];\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  });\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = restArguments(function(obj, keys) {\n    var iteratee = keys[0], context;\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  });\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq, deepEq;\n  eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  deepEq = function(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n  var nodelist = root.document && root.document.childNodes;\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`?\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n      obj = obj[key];\n    }\n    return !!length;\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n  _.property = function(path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n    return function(obj) {\n      return deepGet(obj, path);\n    };\n  };\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    if (obj == null) {\n      return function(){};\n    }\n    return function(path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n  // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped.\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n  _.result = function(obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n    return obj;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offset.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    var render;\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var chainResult = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n    return _;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return String(this._wrapped);\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define == 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}());\n","import {mat3, mat4, vec2, vec3, vec4} from 'gl-matrix';\n\nexport {Camera};\n\nclass Camera {\n    constructor(bounds) {\n        this._translation = vec2.create();\n        this._bounds = bounds;\n    }\n\n    centerAt(x, y) {\n        this._translation.set([\n            -(x - this._bounds.width / 2),\n            -(y - this._bounds.height / 2)\n        ]);\n\n        return this;\n    }\n\n    translate(x, y) {\n        vec2.sub(this._translation, this._translation, [x, y]);\n\n        return this;\n    }\n\n    get position() {\n        return vec2.clone(this._translation);\n    }\n\n    get translation() {\n        return this.position;\n    }\n\n    get matrix() {\n        return mat4.fromTranslation(mat4.create(), vec4.fromValues(...this._translation, 0, 1));\n    }\n}\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html {\\n    height: 100%;\\n    background-color: #555;\\n    color: #eee;\\n    font-family: monospace;\\n}\\n\\nbody {\\n    padding: 0;\\n    margin: 0;\\n    height: 100%;\\n}\\n\\n#content {\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    flex-direction: column;\\n}\\n\\ncanvas.game {\\n    width: 100vw;\\n    height: 100vh;\\n}\\n\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!./app.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./app.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./app.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \"#version 300 es\\n\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nin vec2 v_tex_coord;\\n\\nuniform sampler2D texture;\\n\\nvoid main() {\\n    float line = v_tex_coord.y - floor(v_tex_coord.y);\\n\\n    vec4 texel = texelFetch(texture, ivec2(v_tex_coord), 0).xyzw;\\n    out_color = texel; //vec4(texel.xyz * (line >= 0.5 ? 1. : .25), texel.w);\\n}\\n\"","module.exports = \"#version 300 es\\n\\nlayout(location = 0) in vec2 vertex;\\nlayout(location = 1) in vec2 position;\\nlayout(location = 2) in vec2 size;\\nlayout(location = 3) in ivec2 texcoord;\\nlayout(location = 4) in vec2 offset;\\n\\nout vec2 v_tex_coord;\\n\\nuniform mat4 projection;\\n\\n/*\\n\\nConvert coordinates from world space to clip space\\n\\n 1. Scale [0, dim] -> [-1, 1] where dim is screen width or height\\n    dim pixels = 2 clip\\n    clip / pixels = 2 / dim\\n    x' = 2 * x / width - 1\\n    y' = 2 * y / height - 1\\n\\n    2/w  0   0   -1\\n     0  2/h  0   -1\\n     0   0   1    0\\n     0   0   0    1\\n*/\\n\\nvoid main() {\\n    vec4 transformed_position = projection * vec4(position + size * (vertex - offset), 0, 1);\\n    gl_Position = transformed_position;\\n    v_tex_coord = vec2(texcoord * ivec2(size));\\n}\\n\"","/*\n** Copyright (c) 2012 The Khronos Group Inc.\n**\n** Permission is hereby granted, free of charge, to any person obtaining a\n** copy of this software and/or associated documentation files (the\n** \"Materials\"), to deal in the Materials without restriction, including\n** without limitation the rights to use, copy, modify, merge, publish,\n** distribute, sublicense, and/or sell copies of the Materials, and to\n** permit persons to whom the Materials are furnished to do so, subject to\n** the following conditions:\n**\n** The above copyright notice and this permission notice shall be included\n** in all copies or substantial portions of the Materials.\n**\n** THE MATERIALS ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\n*/\n\n// Various functions for helping debug WebGL apps.\n\nWebGLDebugUtils = function() {\n\n/**\n * Wrapped logging function.\n * @param {string} msg Message to log.\n */\nvar log = function(msg) {\n  if (window.console && window.console.log) {\n    window.console.log(msg);\n  }\n};\n\n/**\n * Wrapped error logging function.\n * @param {string} msg Message to log.\n */\nvar error = function(msg) {\n  if (window.console && window.console.error) {\n    window.console.error(msg);\n  } else {\n    log(msg);\n  }\n};\n\n\n/**\n * Which arguments are enums based on the number of arguments to the function.\n * So\n *    'texImage2D': {\n *       9: { 0:true, 2:true, 6:true, 7:true },\n *       6: { 0:true, 2:true, 3:true, 4:true },\n *    },\n *\n * means if there are 9 arguments then 6 and 7 are enums, if there are 6\n * arguments 3 and 4 are enums\n *\n * @type {!Object.<number, !Object.<number, string>}\n */\nvar glValidEnumContexts = {\n  // Generic setters and getters\n\n  'enable': {1: { 0:true }},\n  'disable': {1: { 0:true }},\n  'getParameter': {1: { 0:true }},\n\n  // Rendering\n\n  'drawArrays': {3:{ 0:true }},\n  'drawElements': {4:{ 0:true, 2:true }},\n\n  // Shaders\n\n  'createShader': {1: { 0:true }},\n  'getShaderParameter': {2: { 1:true }},\n  'getProgramParameter': {2: { 1:true }},\n  'getShaderPrecisionFormat': {2: { 0: true, 1:true }},\n\n  // Vertex attributes\n\n  'getVertexAttrib': {2: { 1:true }},\n  'vertexAttribPointer': {6: { 2:true }},\n\n  // Textures\n\n  'bindTexture': {2: { 0:true }},\n  'activeTexture': {1: { 0:true }},\n  'getTexParameter': {2: { 0:true, 1:true }},\n  'texParameterf': {3: { 0:true, 1:true }},\n  'texParameteri': {3: { 0:true, 1:true, 2:true }},\n  // texImage2D and texSubImage2D are defined below with WebGL 2 entrypoints\n  'copyTexImage2D': {8: { 0:true, 2:true }},\n  'copyTexSubImage2D': {8: { 0:true }},\n  'generateMipmap': {1: { 0:true }},\n  // compressedTexImage2D and compressedTexSubImage2D are defined below with WebGL 2 entrypoints\n\n  // Buffer objects\n\n  'bindBuffer': {2: { 0:true }},\n  // bufferData and bufferSubData are defined below with WebGL 2 entrypoints\n  'getBufferParameter': {2: { 0:true, 1:true }},\n\n  // Renderbuffers and framebuffers\n\n  'pixelStorei': {2: { 0:true, 1:true }},\n  // readPixels is defined below with WebGL 2 entrypoints\n  'bindRenderbuffer': {2: { 0:true }},\n  'bindFramebuffer': {2: { 0:true }},\n  'checkFramebufferStatus': {1: { 0:true }},\n  'framebufferRenderbuffer': {4: { 0:true, 1:true, 2:true }},\n  'framebufferTexture2D': {5: { 0:true, 1:true, 2:true }},\n  'getFramebufferAttachmentParameter': {3: { 0:true, 1:true, 2:true }},\n  'getRenderbufferParameter': {2: { 0:true, 1:true }},\n  'renderbufferStorage': {4: { 0:true, 1:true }},\n\n  // Frame buffer operations (clear, blend, depth test, stencil)\n\n  'clear': {1: { 0: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }}},\n  'depthFunc': {1: { 0:true }},\n  'blendFunc': {2: { 0:true, 1:true }},\n  'blendFuncSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},\n  'blendEquation': {1: { 0:true }},\n  'blendEquationSeparate': {2: { 0:true, 1:true }},\n  'stencilFunc': {3: { 0:true }},\n  'stencilFuncSeparate': {4: { 0:true, 1:true }},\n  'stencilMaskSeparate': {2: { 0:true }},\n  'stencilOp': {3: { 0:true, 1:true, 2:true }},\n  'stencilOpSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},\n\n  // Culling\n\n  'cullFace': {1: { 0:true }},\n  'frontFace': {1: { 0:true }},\n\n  // ANGLE_instanced_arrays extension\n\n  'drawArraysInstancedANGLE': {4: { 0:true }},\n  'drawElementsInstancedANGLE': {5: { 0:true, 2:true }},\n\n  // EXT_blend_minmax extension\n\n  'blendEquationEXT': {1: { 0:true }},\n\n  // WebGL 2 Buffer objects\n\n  'bufferData': {\n    3: { 0:true, 2:true }, // WebGL 1\n    4: { 0:true, 2:true }, // WebGL 2\n    5: { 0:true, 2:true }  // WebGL 2\n  },\n  'bufferSubData': {\n    3: { 0:true }, // WebGL 1\n    4: { 0:true }, // WebGL 2\n    5: { 0:true }  // WebGL 2\n  },\n  'copyBufferSubData': {5: { 0:true, 1:true }},\n  'getBufferSubData': {3: { 0:true }, 4: { 0:true }, 5: { 0:true }},\n\n  // WebGL 2 Framebuffer objects\n\n  'blitFramebuffer': {10: { 8: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }, 9:true }},\n  'framebufferTextureLayer': {5: { 0:true, 1:true }},\n  'invalidateFramebuffer': {2: { 0:true }},\n  'invalidateSubFramebuffer': {6: { 0:true }},\n  'readBuffer': {1: { 0:true }},\n\n  // WebGL 2 Renderbuffer objects\n\n  'getInternalformatParameter': {3: { 0:true, 1:true, 2:true }},\n  'renderbufferStorageMultisample': {5: { 0:true, 2:true }},\n\n  // WebGL 2 Texture objects\n\n  'texStorage2D': {5: { 0:true, 2:true }},\n  'texStorage3D': {6: { 0:true, 2:true }},\n  'texImage2D': {\n    9: { 0:true, 2:true, 6:true, 7:true }, // WebGL 1 & 2\n    6: { 0:true, 2:true, 3:true, 4:true }, // WebGL 1\n    10: { 0:true, 2:true, 6:true, 7:true } // WebGL 2\n  },\n  'texImage3D': {\n    10: { 0:true, 2:true, 7:true, 8:true },\n    11: { 0:true, 2:true, 7:true, 8:true }\n  },\n  'texSubImage2D': {\n    9: { 0:true, 6:true, 7:true }, // WebGL 1 & 2\n    7: { 0:true, 4:true, 5:true }, // WebGL 1\n    10: { 0:true, 6:true, 7:true } // WebGL 2\n  },\n  'texSubImage3D': {\n    11: { 0:true, 8:true, 9:true },\n    12: { 0:true, 8:true, 9:true }\n  },\n  'copyTexSubImage3D': {9: { 0:true }},\n  'compressedTexImage2D': {\n    7: { 0: true, 2:true }, // WebGL 1 & 2\n    8: { 0: true, 2:true }, // WebGL 2\n    9: { 0: true, 2:true }  // WebGL 2\n  },\n  'compressedTexImage3D': {\n    8: { 0: true, 2:true },\n    9: { 0: true, 2:true },\n    10: { 0: true, 2:true }\n  },\n  'compressedTexSubImage2D': {\n    8: { 0: true, 6:true }, // WebGL 1 & 2\n    9: { 0: true, 6:true }, // WebGL 2\n    10: { 0: true, 6:true } // WebGL 2\n  },\n  'compressedTexSubImage3D': {\n    10: { 0: true, 8:true },\n    11: { 0: true, 8:true },\n    12: { 0: true, 8:true }\n  },\n\n  // WebGL 2 Vertex attribs\n\n  'vertexAttribIPointer': {5: { 2:true }},\n\n  // WebGL 2 Writing to the isDrawing buffer\n\n  'drawArraysInstanced': {4: { 0:true }},\n  'drawElementsInstanced': {5: { 0:true, 2:true }},\n  'drawRangeElements': {6: { 0:true, 4:true }},\n\n  // WebGL 2 Reading back pixels\n\n  'readPixels': {\n    7: { 4:true, 5:true }, // WebGL 1 & 2\n    8: { 4:true, 5:true }  // WebGL 2\n  },\n\n  // WebGL 2 Multiple Render Targets\n\n  'clearBufferfv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferiv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferuiv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferfi': {4: { 0:true }},\n\n  // WebGL 2 Query objects\n\n  'beginQuery': {2: { 0:true }},\n  'endQuery': {1: { 0:true }},\n  'getQuery': {2: { 0:true, 1:true }},\n  'getQueryParameter': {2: { 1:true }},\n\n  // WebGL 2 Sampler objects\n\n  'samplerParameteri': {3: { 1:true, 2:true }},\n  'samplerParameterf': {3: { 1:true }},\n  'getSamplerParameter': {2: { 1:true }},\n\n  // WebGL 2 Sync objects\n\n  'fenceSync': {2: { 0:true, 1: { 'enumBitwiseOr': [] } }},\n  'clientWaitSync': {3: { 1: { 'enumBitwiseOr': ['SYNC_FLUSH_COMMANDS_BIT'] } }},\n  'waitSync': {3: { 1: { 'enumBitwiseOr': [] } }},\n  'getSyncParameter': {2: { 1:true }},\n\n  // WebGL 2 Transform Feedback\n\n  'bindTransformFeedback': {2: { 0:true }},\n  'beginTransformFeedback': {1: { 0:true }},\n  'transformFeedbackVaryings': {3: { 2:true }},\n\n  // WebGL2 Uniform Buffer Objects and Transform Feedback Buffers\n\n  'bindBufferBase': {3: { 0:true }},\n  'bindBufferRange': {5: { 0:true }},\n  'getIndexedParameter': {2: { 0:true }},\n  'getActiveUniforms': {3: { 2:true }},\n  'getActiveUniformBlockParameter': {3: { 2:true }}\n};\n\n/**\n * Map of numbers to names.\n * @type {Object}\n */\nvar glEnums = null;\n\n/**\n * Map of names to numbers.\n * @type {Object}\n */\nvar enumStringToValue = null;\n\n/**\n * Initializes this module. Safe to call more than once.\n * @param {!WebGLRenderingContext} ctx A WebGL context. If\n *    you have more than one context it doesn't matter which one\n *    you pass in, it is only used to pull out constants.\n */\nfunction init(ctx) {\n  if (glEnums == null) {\n    glEnums = { };\n    enumStringToValue = { };\n    for (var propertyName in ctx) {\n      if (typeof ctx[propertyName] == 'number') {\n        glEnums[ctx[propertyName]] = propertyName;\n        enumStringToValue[propertyName] = ctx[propertyName];\n      }\n    }\n  }\n}\n\n/**\n * Checks the utils have been initialized.\n */\nfunction checkInit() {\n  if (glEnums == null) {\n    throw 'WebGLDebugUtils.init(ctx) not called';\n  }\n}\n\n/**\n * Returns true or false if value matches any WebGL enum\n * @param {*} value Value to check if it might be an enum.\n * @return {boolean} True if value matches one of the WebGL defined enums\n */\nfunction mightBeEnum(value) {\n  checkInit();\n  return (glEnums[value] !== undefined);\n}\n\n/**\n * Gets an string version of an WebGL enum.\n *\n * Example:\n *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\n *\n * @param {number} value Value to return an enum for\n * @return {string} The string version of the enum.\n */\nfunction glEnumToString(value) {\n  checkInit();\n  var name = glEnums[value];\n  return (name !== undefined) ? (\"gl.\" + name) :\n      (\"/*UNKNOWN WebGL ENUM*/ 0x\" + value.toString(16) + \"\");\n}\n\n/**\n * Returns the string version of a WebGL argument.\n * Attempts to convert enum arguments to strings.\n * @param {string} functionName the name of the WebGL function.\n * @param {number} numArgs the number of arguments passed to the function.\n * @param {number} argumentIndx the index of the argument.\n * @param {*} value The value of the argument.\n * @return {string} The value as a string.\n */\nfunction glFunctionArgToString(functionName, numArgs, argumentIndex, value) {\n  var funcInfo = glValidEnumContexts[functionName];\n  if (funcInfo !== undefined) {\n    var funcInfo = funcInfo[numArgs];\n    if (funcInfo !== undefined) {\n      if (funcInfo[argumentIndex]) {\n        if (typeof funcInfo[argumentIndex] === 'object' &&\n            funcInfo[argumentIndex]['enumBitwiseOr'] !== undefined) {\n          var enums = funcInfo[argumentIndex]['enumBitwiseOr'];\n          var orResult = 0;\n          var orEnums = [];\n          for (var i = 0; i < enums.length; ++i) {\n            var enumValue = enumStringToValue[enums[i]];\n            if ((value & enumValue) !== 0) {\n              orResult |= enumValue;\n              orEnums.push(glEnumToString(enumValue));\n            }\n          }\n          if (orResult === value) {\n            return orEnums.join(' | ');\n          } else {\n            return glEnumToString(value);\n          }\n        } else {\n          return glEnumToString(value);\n        }\n      }\n    }\n  }\n  if (value === null) {\n    return \"null\";\n  } else if (value === undefined) {\n    return \"undefined\";\n  } else {\n    return value.toString();\n  }\n}\n\n/**\n * Converts the arguments of a WebGL function to a string.\n * Attempts to convert enum arguments to strings.\n *\n * @param {string} functionName the name of the WebGL function.\n * @param {number} args The arguments.\n * @return {string} The arguments as a string.\n */\nfunction glFunctionArgsToString(functionName, args) {\n  // apparently we can't do args.join(\",\");\n  var argStr = \"\";\n  var numArgs = args.length;\n  for (var ii = 0; ii < numArgs; ++ii) {\n    argStr += ((ii == 0) ? '' : ', ') +\n        glFunctionArgToString(functionName, numArgs, ii, args[ii]);\n  }\n  return argStr;\n};\n\n\nfunction makePropertyWrapper(wrapper, original, propertyName) {\n  //log(\"wrap prop: \" + propertyName);\n  wrapper.__defineGetter__(propertyName, function() {\n    return original[propertyName];\n  });\n  // TODO(gmane): this needs to handle properties that take more than\n  // one value?\n  wrapper.__defineSetter__(propertyName, function(value) {\n    //log(\"set: \" + propertyName);\n    original[propertyName] = value;\n  });\n}\n\n// Makes a function that calls a function on another object.\nfunction makeFunctionWrapper(original, functionName) {\n  //log(\"wrap fn: \" + functionName);\n  var f = original[functionName];\n  return function() {\n    //log(\"call: \" + functionName);\n    var result = f.apply(original, arguments);\n    return result;\n  };\n}\n\n/**\n * Given a WebGL context returns a wrapped context that calls\n * gl.getError after every command and calls a function if the\n * result is not gl.NO_ERROR.\n *\n * @param {!WebGLRenderingContext} ctx The webgl context to\n *        wrap.\n * @param {!function(err, funcName, args): void} opt_onErrorFunc\n *        The function to call when gl.getError returns an\n *        error. If not specified the default function calls\n *        console.log with a message.\n * @param {!function(funcName, args): void} opt_onFunc The\n *        function to call when each webgl function is called.\n *        You can use this to log all calls for example.\n * @param {!WebGLRenderingContext} opt_err_ctx The webgl context\n *        to call getError on if different than ctx.\n */\nfunction makeDebugContext(ctx, opt_onErrorFunc, opt_onFunc, opt_err_ctx) {\n  opt_err_ctx = opt_err_ctx || ctx;\n  init(ctx);\n  opt_onErrorFunc = opt_onErrorFunc || function(err, functionName, args) {\n        // apparently we can't do args.join(\",\");\n        var argStr = \"\";\n        var numArgs = args.length;\n        for (var ii = 0; ii < numArgs; ++ii) {\n          argStr += ((ii == 0) ? '' : ', ') +\n              glFunctionArgToString(functionName, numArgs, ii, args[ii]);\n        }\n        error(\"WebGL error \"+ glEnumToString(err) + \" in \"+ functionName +\n              \"(\" + argStr + \")\");\n      };\n\n  // Holds booleans for each GL error so after we get the error ourselves\n  // we can still return it to the client app.\n  var glErrorShadow = { };\n\n  // Makes a function that calls a WebGL function and then calls getError.\n  function makeErrorWrapper(ctx, functionName) {\n    return function() {\n      if (opt_onFunc) {\n        opt_onFunc(functionName, arguments);\n      }\n      var result = ctx[functionName].apply(ctx, arguments);\n      var err = opt_err_ctx.getError();\n      if (err != 0) {\n        glErrorShadow[err] = true;\n        opt_onErrorFunc(err, functionName, arguments);\n      }\n      return result;\n    };\n  }\n\n  // Make a an object that has a copy of every property of the WebGL context\n  // but wraps all functions.\n  var wrapper = {};\n  for (var propertyName in ctx) {\n    if (typeof ctx[propertyName] == 'function') {\n      if (propertyName != 'getExtension') {\n        wrapper[propertyName] = makeErrorWrapper(ctx, propertyName);\n      } else {\n        var wrapped = makeErrorWrapper(ctx, propertyName);\n        wrapper[propertyName] = function () {\n          var result = wrapped.apply(ctx, arguments);\n          if (!result) {\n            return null;\n          }\n          return makeDebugContext(result, opt_onErrorFunc, opt_onFunc, opt_err_ctx);\n        };\n      }\n    } else {\n      makePropertyWrapper(wrapper, ctx, propertyName);\n    }\n  }\n\n  // Override the getError function with one that returns our saved results.\n  wrapper.getError = function() {\n    for (var err in glErrorShadow) {\n      if (glErrorShadow.hasOwnProperty(err)) {\n        if (glErrorShadow[err]) {\n          glErrorShadow[err] = false;\n          return err;\n        }\n      }\n    }\n    return ctx.NO_ERROR;\n  };\n\n  return wrapper;\n}\n\nfunction resetToInitialState(ctx) {\n  var isWebGL2RenderingContext = !!ctx.createTransformFeedback;\n\n  if (isWebGL2RenderingContext) {\n    ctx.bindVertexArray(null);\n  }\n\n  var numAttribs = ctx.getParameter(ctx.MAX_VERTEX_ATTRIBS);\n  var tmp = ctx.createBuffer();\n  ctx.bindBuffer(ctx.ARRAY_BUFFER, tmp);\n  for (var ii = 0; ii < numAttribs; ++ii) {\n    ctx.disableVertexAttribArray(ii);\n    ctx.vertexAttribPointer(ii, 4, ctx.FLOAT, false, 0, 0);\n    ctx.vertexAttrib1f(ii, 0);\n    if (isWebGL2RenderingContext) {\n      ctx.vertexAttribDivisor(ii, 0);\n    }\n  }\n  ctx.deleteBuffer(tmp);\n\n  var numTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);\n  for (var ii = 0; ii < numTextureUnits; ++ii) {\n    ctx.activeTexture(ctx.TEXTURE0 + ii);\n    ctx.bindTexture(ctx.TEXTURE_CUBE_MAP, null);\n    ctx.bindTexture(ctx.TEXTURE_2D, null);\n    if (isWebGL2RenderingContext) {\n      ctx.bindTexture(ctx.TEXTURE_2D_ARRAY, null);\n      ctx.bindTexture(ctx.TEXTURE_3D, null);\n      ctx.bindSampler(ii, null);\n    }\n  }\n\n  ctx.activeTexture(ctx.TEXTURE0);\n  ctx.useProgram(null);\n  ctx.bindBuffer(ctx.ARRAY_BUFFER, null);\n  ctx.bindBuffer(ctx.ELEMENT_ARRAY_BUFFER, null);\n  ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);\n  ctx.bindRenderbuffer(ctx.RENDERBUFFER, null);\n  ctx.disable(ctx.BLEND);\n  ctx.disable(ctx.CULL_FACE);\n  ctx.disable(ctx.DEPTH_TEST);\n  ctx.disable(ctx.DITHER);\n  ctx.disable(ctx.SCISSOR_TEST);\n  ctx.blendColor(0, 0, 0, 0);\n  ctx.blendEquation(ctx.FUNC_ADD);\n  ctx.blendFunc(ctx.ONE, ctx.ZERO);\n  ctx.clearColor(0, 0, 0, 0);\n  ctx.clearDepth(1);\n  ctx.clearStencil(-1);\n  ctx.colorMask(true, true, true, true);\n  ctx.cullFace(ctx.BACK);\n  ctx.depthFunc(ctx.LESS);\n  ctx.depthMask(true);\n  ctx.depthRange(0, 1);\n  ctx.frontFace(ctx.CCW);\n  ctx.hint(ctx.GENERATE_MIPMAP_HINT, ctx.DONT_CARE);\n  ctx.lineWidth(1);\n  ctx.pixelStorei(ctx.PACK_ALIGNMENT, 4);\n  ctx.pixelStorei(ctx.UNPACK_ALIGNMENT, 4);\n  ctx.pixelStorei(ctx.UNPACK_FLIP_Y_WEBGL, false);\n  ctx.pixelStorei(ctx.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n  // TODO: Delete this IF.\n  if (ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL) {\n    ctx.pixelStorei(ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL, ctx.BROWSER_DEFAULT_WEBGL);\n  }\n  ctx.polygonOffset(0, 0);\n  ctx.sampleCoverage(1, false);\n  ctx.scissor(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.stencilFunc(ctx.ALWAYS, 0, 0xFFFFFFFF);\n  ctx.stencilMask(0xFFFFFFFF);\n  ctx.stencilOp(ctx.KEEP, ctx.KEEP, ctx.KEEP);\n  ctx.viewport(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.clear(ctx.COLOR_BUFFER_BIT | ctx.DEPTH_BUFFER_BIT | ctx.STENCIL_BUFFER_BIT);\n\n  if (isWebGL2RenderingContext) {\n    ctx.drawBuffers([ctx.BACK]);\n    ctx.readBuffer(ctx.BACK);\n    ctx.bindBuffer(ctx.COPY_READ_BUFFER, null);\n    ctx.bindBuffer(ctx.COPY_WRITE_BUFFER, null);\n    ctx.bindBuffer(ctx.PIXEL_PACK_BUFFER, null);\n    ctx.bindBuffer(ctx.PIXEL_UNPACK_BUFFER, null);\n    var numTransformFeedbacks = ctx.getParameter(ctx.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS);\n    for (var ii = 0; ii < numTransformFeedbacks; ++ii) {\n      ctx.bindBufferBase(ctx.TRANSFORM_FEEDBACK_BUFFER, ii, null);\n    }\n    var numUBOs = ctx.getParameter(ctx.MAX_UNIFORM_BUFFER_BINDINGS);\n    for (var ii = 0; ii < numUBOs; ++ii) {\n      ctx.bindBufferBase(ctx.UNIFORM_BUFFER, ii, null);\n    }\n    ctx.disable(ctx.RASTERIZER_DISCARD);\n    ctx.pixelStorei(ctx.UNPACK_IMAGE_HEIGHT, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_IMAGES, 0);\n    ctx.pixelStorei(ctx.UNPACK_ROW_LENGTH, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_ROWS, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_PIXELS, 0);\n    ctx.pixelStorei(ctx.PACK_ROW_LENGTH, 0);\n    ctx.pixelStorei(ctx.PACK_SKIP_ROWS, 0);\n    ctx.pixelStorei(ctx.PACK_SKIP_PIXELS, 0);\n    ctx.hint(ctx.FRAGMENT_SHADER_DERIVATIVE_HINT, ctx.DONT_CARE);\n  }\n\n  // TODO: This should NOT be needed but Firefox fails with 'hint'\n  while(ctx.getError());\n}\n\nfunction makeLostContextSimulatingCanvas(canvas) {\n  var unwrappedContext_;\n  var wrappedContext_;\n  var onLost_ = [];\n  var onRestored_ = [];\n  var wrappedContext_ = {};\n  var contextId_ = 1;\n  var contextLost_ = false;\n  var resourceId_ = 0;\n  var resourceDb_ = [];\n  var numCallsToLoseContext_ = 0;\n  var numCalls_ = 0;\n  var canRestore_ = false;\n  var restoreTimeout_ = 0;\n  var isWebGL2RenderingContext;\n\n  // Holds booleans for each GL error so can simulate errors.\n  var glErrorShadow_ = { };\n\n  canvas.getContext = function(f) {\n    return function() {\n      var ctx = f.apply(canvas, arguments);\n      // Did we get a context and is it a WebGL context?\n      if ((ctx instanceof WebGLRenderingContext) || (window.WebGL2RenderingContext && (ctx instanceof WebGL2RenderingContext))) {\n        if (ctx != unwrappedContext_) {\n          if (unwrappedContext_) {\n            throw \"got different context\"\n          }\n          isWebGL2RenderingContext = window.WebGL2RenderingContext && (ctx instanceof WebGL2RenderingContext);\n          unwrappedContext_ = ctx;\n          wrappedContext_ = makeLostContextSimulatingContext(unwrappedContext_);\n        }\n        return wrappedContext_;\n      }\n      return ctx;\n    }\n  }(canvas.getContext);\n\n  function wrapEvent(listener) {\n    if (typeof(listener) == \"function\") {\n      return listener;\n    } else {\n      return function(info) {\n        listener.handleEvent(info);\n      }\n    }\n  }\n\n  var addOnContextLostListener = function(listener) {\n    onLost_.push(wrapEvent(listener));\n  };\n\n  var addOnContextRestoredListener = function(listener) {\n    onRestored_.push(wrapEvent(listener));\n  };\n\n\n  function wrapAddEventListener(canvas) {\n    var f = canvas.addEventListener;\n    canvas.addEventListener = function(type, listener, bubble) {\n      switch (type) {\n        case 'webglcontextlost':\n          addOnContextLostListener(listener);\n          break;\n        case 'webglcontextrestored':\n          addOnContextRestoredListener(listener);\n          break;\n        default:\n          f.apply(canvas, arguments);\n      }\n    };\n  }\n\n  wrapAddEventListener(canvas);\n\n  canvas.loseContext = function() {\n    if (!contextLost_) {\n      contextLost_ = true;\n      numCallsToLoseContext_ = 0;\n      ++contextId_;\n      while (unwrappedContext_.getError());\n      clearErrors();\n      glErrorShadow_[unwrappedContext_.CONTEXT_LOST_WEBGL] = true;\n      var event = makeWebGLContextEvent(\"context lost\");\n      var callbacks = onLost_.slice();\n      setTimeout(function() {\n          //log(\"numCallbacks:\" + callbacks.length);\n          for (var ii = 0; ii < callbacks.length; ++ii) {\n            //log(\"calling callback:\" + ii);\n            callbacks[ii](event);\n          }\n          if (restoreTimeout_ >= 0) {\n            setTimeout(function() {\n                canvas.restoreContext();\n              }, restoreTimeout_);\n          }\n        }, 0);\n    }\n  };\n\n  canvas.restoreContext = function() {\n    if (contextLost_) {\n      if (onRestored_.length) {\n        setTimeout(function() {\n            if (!canRestore_) {\n              throw \"can not restore. webglcontestlost listener did not call event.preventDefault\";\n            }\n            freeResources();\n            resetToInitialState(unwrappedContext_);\n            contextLost_ = false;\n            numCalls_ = 0;\n            canRestore_ = false;\n            var callbacks = onRestored_.slice();\n            var event = makeWebGLContextEvent(\"context restored\");\n            for (var ii = 0; ii < callbacks.length; ++ii) {\n              callbacks[ii](event);\n            }\n          }, 0);\n      }\n    }\n  };\n\n  canvas.loseContextInNCalls = function(numCalls) {\n    if (contextLost_) {\n      throw \"You can not ask a lost contet to be lost\";\n    }\n    numCallsToLoseContext_ = numCalls_ + numCalls;\n  };\n\n  canvas.getNumCalls = function() {\n    return numCalls_;\n  };\n\n  canvas.setRestoreTimeout = function(timeout) {\n    restoreTimeout_ = timeout;\n  };\n\n  function isWebGLObject(obj) {\n    //return false;\n    return (obj instanceof WebGLBuffer ||\n            obj instanceof WebGLFramebuffer ||\n            obj instanceof WebGLProgram ||\n            obj instanceof WebGLRenderbuffer ||\n            obj instanceof WebGLShader ||\n            obj instanceof WebGLTexture);\n  }\n\n  function checkResources(args) {\n    for (var ii = 0; ii < args.length; ++ii) {\n      var arg = args[ii];\n      if (isWebGLObject(arg)) {\n        return arg.__webglDebugContextLostId__ == contextId_;\n      }\n    }\n    return true;\n  }\n\n  function clearErrors() {\n    var k = Object.keys(glErrorShadow_);\n    for (var ii = 0; ii < k.length; ++ii) {\n      delete glErrorShadow_[k[ii]];\n    }\n  }\n\n  function loseContextIfTime() {\n    ++numCalls_;\n    if (!contextLost_) {\n      if (numCallsToLoseContext_ == numCalls_) {\n        canvas.loseContext();\n      }\n    }\n  }\n\n  // Makes a function that simulates WebGL when out of context.\n  function makeLostContextFunctionWrapper(ctx, functionName) {\n    var f = ctx[functionName];\n    return function() {\n      // log(\"calling:\" + functionName);\n      // Only call the functions if the context is not lost.\n      loseContextIfTime();\n      if (!contextLost_) {\n        //if (!checkResources(arguments)) {\n        //  glErrorShadow_[wrappedContext_.INVALID_OPERATION] = true;\n        //  return;\n        //}\n        var result = f.apply(ctx, arguments);\n        return result;\n      }\n    };\n  }\n\n  function freeResources() {\n    for (var ii = 0; ii < resourceDb_.length; ++ii) {\n      var resource = resourceDb_[ii];\n      if (resource instanceof WebGLBuffer) {\n        unwrappedContext_.deleteBuffer(resource);\n      } else if (resource instanceof WebGLFramebuffer) {\n        unwrappedContext_.deleteFramebuffer(resource);\n      } else if (resource instanceof WebGLProgram) {\n        unwrappedContext_.deleteProgram(resource);\n      } else if (resource instanceof WebGLRenderbuffer) {\n        unwrappedContext_.deleteRenderbuffer(resource);\n      } else if (resource instanceof WebGLShader) {\n        unwrappedContext_.deleteShader(resource);\n      } else if (resource instanceof WebGLTexture) {\n        unwrappedContext_.deleteTexture(resource);\n      }\n      else if (isWebGL2RenderingContext) {\n        if (resource instanceof WebGLQuery) {\n          unwrappedContext_.deleteQuery(resource);\n        } else if (resource instanceof WebGLSampler) {\n          unwrappedContext_.deleteSampler(resource);\n        } else if (resource instanceof WebGLSync) {\n          unwrappedContext_.deleteSync(resource);\n        } else if (resource instanceof WebGLTransformFeedback) {\n          unwrappedContext_.deleteTransformFeedback(resource);\n        } else if (resource instanceof WebGLVertexArrayObject) {\n          unwrappedContext_.deleteVertexArray(resource);\n        }\n      }\n    }\n  }\n\n  function makeWebGLContextEvent(statusMessage) {\n    return {\n      statusMessage: statusMessage,\n      preventDefault: function() {\n          canRestore_ = true;\n        }\n    };\n  }\n\n  return canvas;\n\n  function makeLostContextSimulatingContext(ctx) {\n    // copy all functions and properties to wrapper\n    for (var propertyName in ctx) {\n      if (typeof ctx[propertyName] == 'function') {\n         wrappedContext_[propertyName] = makeLostContextFunctionWrapper(\n             ctx, propertyName);\n       } else {\n         makePropertyWrapper(wrappedContext_, ctx, propertyName);\n       }\n    }\n\n    // Wrap a few functions specially.\n    wrappedContext_.getError = function() {\n      loseContextIfTime();\n      if (!contextLost_) {\n        var err;\n        while (err = unwrappedContext_.getError()) {\n          glErrorShadow_[err] = true;\n        }\n      }\n      for (var err in glErrorShadow_) {\n        if (glErrorShadow_[err]) {\n          delete glErrorShadow_[err];\n          return err;\n        }\n      }\n      return wrappedContext_.NO_ERROR;\n    };\n\n    var creationFunctions = [\n      \"createBuffer\",\n      \"createFramebuffer\",\n      \"createProgram\",\n      \"createRenderbuffer\",\n      \"createShader\",\n      \"createTexture\"\n    ];\n    if (isWebGL2RenderingContext) {\n      creationFunctions.push(\n        \"createQuery\",\n        \"createSampler\",\n        \"fenceSync\",\n        \"createTransformFeedback\",\n        \"createVertexArray\"\n      );\n    }\n    for (var ii = 0; ii < creationFunctions.length; ++ii) {\n      var functionName = creationFunctions[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return null;\n          }\n          var obj = f.apply(ctx, arguments);\n          obj.__webglDebugContextLostId__ = contextId_;\n          resourceDb_.push(obj);\n          return obj;\n        };\n      }(ctx[functionName]);\n    }\n\n    var functionsThatShouldReturnNull = [\n      \"getActiveAttrib\",\n      \"getActiveUniform\",\n      \"getBufferParameter\",\n      \"getContextAttributes\",\n      \"getAttachedShaders\",\n      \"getFramebufferAttachmentParameter\",\n      \"getParameter\",\n      \"getProgramParameter\",\n      \"getProgramInfoLog\",\n      \"getRenderbufferParameter\",\n      \"getShaderParameter\",\n      \"getShaderInfoLog\",\n      \"getShaderSource\",\n      \"getTexParameter\",\n      \"getUniform\",\n      \"getUniformLocation\",\n      \"getVertexAttrib\"\n    ];\n    if (isWebGL2RenderingContext) {\n      functionsThatShouldReturnNull.push(\n        \"getInternalformatParameter\",\n        \"getQuery\",\n        \"getQueryParameter\",\n        \"getSamplerParameter\",\n        \"getSyncParameter\",\n        \"getTransformFeedbackVarying\",\n        \"getIndexedParameter\",\n        \"getUniformIndices\",\n        \"getActiveUniforms\",\n        \"getActiveUniformBlockParameter\",\n        \"getActiveUniformBlockName\"\n      );\n    }\n    for (var ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {\n      var functionName = functionsThatShouldReturnNull[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return null;\n          }\n          return f.apply(ctx, arguments);\n        }\n      }(wrappedContext_[functionName]);\n    }\n\n    var isFunctions = [\n      \"isBuffer\",\n      \"isEnabled\",\n      \"isFramebuffer\",\n      \"isProgram\",\n      \"isRenderbuffer\",\n      \"isShader\",\n      \"isTexture\"\n    ];\n    if (isWebGL2RenderingContext) {\n      isFunctions.push(\n        \"isQuery\",\n        \"isSampler\",\n        \"isSync\",\n        \"isTransformFeedback\",\n        \"isVertexArray\"\n      );\n    }\n    for (var ii = 0; ii < isFunctions.length; ++ii) {\n      var functionName = isFunctions[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return false;\n          }\n          return f.apply(ctx, arguments);\n        }\n      }(wrappedContext_[functionName]);\n    }\n\n    wrappedContext_.checkFramebufferStatus = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return wrappedContext_.FRAMEBUFFER_UNSUPPORTED;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.checkFramebufferStatus);\n\n    wrappedContext_.getAttribLocation = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return -1;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.getAttribLocation);\n\n    wrappedContext_.getVertexAttribOffset = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return 0;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.getVertexAttribOffset);\n\n    wrappedContext_.isContextLost = function() {\n      return contextLost_;\n    };\n\n    if (isWebGL2RenderingContext) {\n      wrappedContext_.getFragDataLocation = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return -1;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.getFragDataLocation);\n\n      wrappedContext_.clientWaitSync = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return wrappedContext_.WAIT_FAILED;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.clientWaitSync);\n\n      wrappedContext_.getUniformBlockIndex = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return wrappedContext_.INVALID_INDEX;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.getUniformBlockIndex);\n    }\n\n    return wrappedContext_;\n  }\n}\n\nreturn {\n  /**\n   * Initializes this module. Safe to call more than once.\n   * @param {!WebGLRenderingContext} ctx A WebGL context. If\n   *    you have more than one context it doesn't matter which one\n   *    you pass in, it is only used to pull out constants.\n   */\n  'init': init,\n\n  /**\n   * Returns true or false if value matches any WebGL enum\n   * @param {*} value Value to check if it might be an enum.\n   * @return {boolean} True if value matches one of the WebGL defined enums\n   */\n  'mightBeEnum': mightBeEnum,\n\n  /**\n   * Gets an string version of an WebGL enum.\n   *\n   * Example:\n   *   WebGLDebugUtil.init(ctx);\n   *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\n   *\n   * @param {number} value Value to return an enum for\n   * @return {string} The string version of the enum.\n   */\n  'glEnumToString': glEnumToString,\n\n  /**\n   * Converts the argument of a WebGL function to a string.\n   * Attempts to convert enum arguments to strings.\n   *\n   * Example:\n   *   WebGLDebugUtil.init(ctx);\n   *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 2, 0, gl.TEXTURE_2D);\n   *\n   * would return 'TEXTURE_2D'\n   *\n   * @param {string} functionName the name of the WebGL function.\n   * @param {number} numArgs The number of arguments\n   * @param {number} argumentIndx the index of the argument.\n   * @param {*} value The value of the argument.\n   * @return {string} The value as a string.\n   */\n  'glFunctionArgToString': glFunctionArgToString,\n\n  /**\n   * Converts the arguments of a WebGL function to a string.\n   * Attempts to convert enum arguments to strings.\n   *\n   * @param {string} functionName the name of the WebGL function.\n   * @param {number} args The arguments.\n   * @return {string} The arguments as a string.\n   */\n  'glFunctionArgsToString': glFunctionArgsToString,\n\n  /**\n   * Given a WebGL context returns a wrapped context that calls\n   * gl.getError after every command and calls a function if the\n   * result is not NO_ERROR.\n   *\n   * You can supply your own function if you want. For example, if you'd like\n   * an exception thrown on any GL error you could do this\n   *\n   *    function throwOnGLError(err, funcName, args) {\n   *      throw WebGLDebugUtils.glEnumToString(err) +\n   *            \" was caused by call to \" + funcName;\n   *    };\n   *\n   *    ctx = WebGLDebugUtils.makeDebugContext(\n   *        canvas.getContext(\"webgl\"), throwOnGLError);\n   *\n   * @param {!WebGLRenderingContext} ctx The webgl context to wrap.\n   * @param {!function(err, funcName, args): void} opt_onErrorFunc The function\n   *     to call when gl.getError returns an error. If not specified the default\n   *     function calls console.log with a message.\n   * @param {!function(funcName, args): void} opt_onFunc The\n   *     function to call when each webgl function is called. You\n   *     can use this to log all calls for example.\n   */\n  'makeDebugContext': makeDebugContext,\n\n  /**\n   * Given a canvas element returns a wrapped canvas element that will\n   * simulate lost context. The canvas returned adds the following functions.\n   *\n   * loseContext:\n   *   simulates a lost context event.\n   *\n   * restoreContext:\n   *   simulates the context being restored.\n   *\n   * lostContextInNCalls:\n   *   loses the context after N gl calls.\n   *\n   * getNumCalls:\n   *   tells you how many gl calls there have been so far.\n   *\n   * setRestoreTimeout:\n   *   sets the number of milliseconds until the context is restored\n   *   after it has been lost. Defaults to 0. Pass -1 to prevent\n   *   automatic restoring.\n   *\n   * @param {!Canvas} canvas The canvas element to wrap.\n   */\n  'makeLostContextSimulatingCanvas': makeLostContextSimulatingCanvas,\n\n  /**\n   * Resets a context to the initial state.\n   * @param {!WebGLRenderingContext} ctx The webgl context to\n   *     reset.\n   */\n  'resetToInitialState': resetToInitialState\n};\n\n}();\n","/*!\n * @license twgl.js 4.4.0 Copyright (c) 2015, Gregg Tavares All Rights Reserved.\n * Available via the MIT license.\n * see: http://github.com/greggman/twgl.js for details\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"twgl\"] = factory();\n\telse\n\t\troot[\"twgl\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 9);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.copyExistingProperties = copyExistingProperties;\nexports.copyNamedProperties = copyNamedProperties;\nexports.isBuffer = isBuffer;\nexports.isRenderbuffer = isRenderbuffer;\nexports.isShader = isShader;\nexports.isTexture = isTexture;\nexports.isSampler = isSampler;\nexports.warn = exports.error = void 0;\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Copy named properties\n *\n * @param {string[]} names names of properties to copy\n * @param {object} src object to copy properties from\n * @param {object} dst object to copy properties to\n */\nfunction copyNamedProperties(names, src, dst) {\n  names.forEach(function (name) {\n    var value = src[name];\n\n    if (value !== undefined) {\n      dst[name] = value;\n    }\n  });\n}\n/**\n * Copies properties from source to dest only if a matching key is in dest\n *\n * @param {Object.<string, ?>} src the source\n * @param {Object.<string, ?>} dst the dest\n */\n\n\nfunction copyExistingProperties(src, dst) {\n  Object.keys(dst).forEach(function (key) {\n    if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {\n      dst[key] = src[key];\n    }\n  });\n}\n\nvar error = _globalObject.default.console && _globalObject.default.console.error && typeof _globalObject.default.console.error === \"function\" ? _globalObject.default.console.error.bind(_globalObject.default.console) : function () {};\nexports.error = error;\nvar warn = _globalObject.default.console && _globalObject.default.console.warn && typeof _globalObject.default.console.warn === \"function\" ? _globalObject.default.console.warn.bind(_globalObject.default.console) : function () {};\nexports.warn = warn;\nvar repBuffer;\n\nfunction isBuffer(gl, t) {\n  if (!repBuffer) {\n    repBuffer = gl.createBuffer();\n  }\n\n  return t instanceof repBuffer.constructor;\n}\n\nvar repRenderbuffer;\n\nfunction isRenderbuffer(gl, t) {\n  if (!repRenderbuffer) {\n    repRenderbuffer = gl.createRenderbuffer();\n  }\n\n  return t instanceof repRenderbuffer.constructor;\n}\n\nvar repShader;\n\nfunction isShader(gl, t) {\n  if (!repShader) {\n    repShader = gl.createShader(gl.VERTEX_SHADER);\n  }\n\n  return t instanceof repShader.constructor;\n}\n\nvar repTexture;\n\nfunction isTexture(gl, t) {\n  if (!repTexture) {\n    repTexture = gl.createTexture();\n  }\n\n  return t instanceof repTexture.constructor;\n}\n\nvar repSampler;\n\nfunction isSampler(gl, t) {\n  if (!repSampler) {\n    if (gl.createSampler) {\n      repSampler = gl.createSampler();\n    } else {\n      return false; // it can't be a sampler if this is not WebGL2\n    }\n  }\n\n  return t instanceof repSampler.constructor;\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.getGLTypeForTypedArray = getGLTypeForTypedArray;\nexports.getGLTypeForTypedArrayType = getGLTypeForTypedArrayType;\nexports.getTypedArrayTypeForGLType = getTypedArrayTypeForGLType;\nexports.isArrayBuffer = void 0;\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level shader typed array related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.typedArray` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/typedArray\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar glTypeToTypedArray = {};\n{\n  var tt = glTypeToTypedArray;\n  tt[BYTE] = Int8Array;\n  tt[UNSIGNED_BYTE] = Uint8Array;\n  tt[SHORT] = Int16Array;\n  tt[UNSIGNED_SHORT] = Uint16Array;\n  tt[INT] = Int32Array;\n  tt[UNSIGNED_INT] = Uint32Array;\n  tt[FLOAT] = Float32Array;\n  tt[UNSIGNED_SHORT_4_4_4_4] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_5_5_1] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_6_5] = Uint16Array;\n  tt[HALF_FLOAT] = Uint16Array;\n  tt[UNSIGNED_INT_2_10_10_10_REV] = Uint32Array;\n  tt[UNSIGNED_INT_10F_11F_11F_REV] = Uint32Array;\n  tt[UNSIGNED_INT_5_9_9_9_REV] = Uint32Array;\n  tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\n  tt[UNSIGNED_INT_24_8] = Uint32Array;\n}\n/**\n * Get the GL type for a typedArray\n * @param {ArrayBuffer|ArrayBufferView} typedArray a typedArray\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\nfunction getGLTypeForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw \"unsupported typed array type\";\n}\n/**\n * Get the GL type for a typedArray type\n * @param {ArrayBufferViewType} typedArrayType a typedArray constructor\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getGLTypeForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw \"unsupported typed array type\";\n}\n/**\n * Get the typed array constructor for a given GL type\n * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\n * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getTypedArrayTypeForGLType(type) {\n  var CTOR = glTypeToTypedArray[type];\n\n  if (!CTOR) {\n    throw \"unknown gl type\";\n  }\n\n  return CTOR;\n}\n\nvar isArrayBuffer = _globalObject.default.SharedArrayBuffer ? function isArrayBufferOrSharedArrayBuffer(a) {\n  return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof _globalObject.default.SharedArrayBuffer);\n} : function isArrayBuffer(a) {\n  return a && a.buffer && a.buffer instanceof ArrayBuffer;\n};\nexports.isArrayBuffer = isArrayBuffer;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.default = void 0;\nvar global = typeof global !== 'undefined' // eslint-disable-line\n? global // eslint-disable-line\n: typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {};\nexports.default = global;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.add = add;\nexports.copy = copy;\nexports.create = create;\nexports.cross = cross;\nexports.distance = distance;\nexports.distanceSq = distanceSq;\nexports.divide = divide;\nexports.divScalar = divScalar;\nexports.dot = dot;\nexports.lerp = lerp;\nexports.length = length;\nexports.lengthSq = lengthSq;\nexports.mulScalar = mulScalar;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.normalize = normalize;\nexports.setDefaultType = setDefaultType;\nexports.subtract = subtract;\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n *\n * Vec3 math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec3. In other words you can do this\n *\n *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     var v3 = v3.create();\n *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any vector as the destination. So for example\n *\n *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n * @module twgl/v3\n */\nvar VecType = Float32Array;\n/**\n * A JavaScript array with 3 values or a Float32Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/v3.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Vec3\n * @memberOf module:twgl/v3\n */\n\n/**\n * Sets the type this library creates for a Vec3\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Vec3\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @return {Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction create(x, y, z) {\n  var dst = new VecType(3);\n\n  if (x) {\n    dst[0] = x;\n  }\n\n  if (y) {\n    dst[1] = y;\n  }\n\n  if (z) {\n    dst[2] = z;\n  }\n\n  return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction add(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n  return dst;\n}\n/**\n * Subtracts two vectors.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction subtract(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n  return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * (1 - t) * a + t * b.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {number} t Interpolation coefficient.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction lerp(a, b, t, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = (1 - t) * a[0] + t * b[0];\n  dst[1] = (1 - t) * a[1] + t * b[1];\n  dst[2] = (1 - t) * a[2] + t * b[2];\n  return dst;\n}\n/**\n * Mutiplies a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction mulScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n  return dst;\n}\n/**\n * Divides a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n  return dst;\n}\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector a cross b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction cross(a, b, dst) {\n  dst = dst || new VecType(3);\n  var t1 = a[2] * b[0] - a[0] * b[2];\n  var t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n  return dst;\n}\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @return {number} dot product\n * @memberOf module:twgl/v3\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction length(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n/**\n * Computes the square of the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} square of the length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction lengthSq(v) {\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\n/**\n * Computes the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distance(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n/**\n * Computes the square of the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} square of the distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distanceSq(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param {module:twgl/v3.Vec3} a The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The normalized vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction normalize(a, dst) {\n  dst = dst || new VecType(3);\n  var lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n  var len = Math.sqrt(lenSq);\n\n  if (len > 0.00001) {\n    dst[0] = a[0] / len;\n    dst[1] = a[1] / len;\n    dst[2] = a[2] / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return dst;\n}\n/**\n * Negates a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} -v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction negate(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n  return dst;\n}\n/**\n * Copies a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} A copy of v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction copy(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n  return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n  return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divide(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n  return dst;\n}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.isWebGL1 = isWebGL1;\nexports.isWebGL2 = isWebGL2;\nexports.glEnumToString = void 0;\n\n/*\n * Copyright 2017, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Gets the gl version as a number\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {number} version of gl\n */\n//function getVersionAsNumber(gl) {\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\n//}\n\n/**\n * Check if context is WebGL 2.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 2.0\n * @memberOf module:twgl\n */\nfunction isWebGL2(gl) {\n  // This is the correct check but it's slow\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGL2RenderingContext;\n  return !!gl.texStorage2D;\n}\n/**\n * Check if context is WebGL 1.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 1.0\n * @memberOf module:twgl\n */\n\n\nfunction isWebGL1(gl) {\n  // This is the correct check but it's slow\n  // const version = getVersionAsNumber(gl);\n  // return version <= 1.0 && version > 0.0;  // because as of 2016/5 Edge returns 0.96\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGLRenderingContext;\n  return !gl.texStorage2D;\n}\n/**\n * Gets a string for WebGL enum\n *\n * Note: Several enums are the same. Without more\n * context (which function) it's impossible to always\n * give the correct enum. As it is, for matching values\n * it gives all enums. Checking the WebGL2RenderingContext\n * that means\n *\n *      0     = ZERO | POINT | NONE | NO_ERROR\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\n *\n * It's also not useful for bits really unless you pass in individual bits.\n * In other words\n *\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\n *     twgl.glEnumToString(gl, bits);  // not going to work\n *\n * Note that some enums only exist on extensions. If you\n * want them to show up you need to pass the extension at least\n * once. For example\n *\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc`);\n *     if (ext) {\n *        twgl.glEnumToString(ext, 0);  // just prime the function\n *\n *        ..later..\n *\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n *        console.log(twgl.glEnumToString(gl, internalFormat));\n *\n * Notice I didn't have to pass the extension the second time. This means\n * you can have place that generically gets an enum for texture formats for example.\n * and as long as you primed the function with the extensions\n *\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\n * then twgl will automatically get the extension's enums.\n *\n * @param {WebGLRenderingContext|Extension} gl A WebGLRenderingContext or any extension object\n * @param {number} value the value of the enum you want to look up.\n * @memberOf module:twgl\n */\n\n\nvar glEnumToString = function () {\n  var haveEnumsForType = {};\n  var enums = {};\n\n  function addEnums(gl) {\n    var type = gl.constructor.name;\n\n    if (!haveEnumsForType[type]) {\n      for (var key in gl) {\n        if (typeof gl[key] === 'number') {\n          var existing = enums[gl[key]];\n          enums[gl[key]] = existing ? \"\".concat(existing, \" | \").concat(key) : key;\n        }\n      }\n\n      haveEnumsForType[type] = true;\n    }\n  }\n\n  return function glEnumToString(gl, value) {\n    addEnums(gl);\n    return enums[value] || \"0x\" + value.toString(16);\n  };\n}();\n\nexports.glEnumToString = glEnumToString;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttributeSetters = createAttributeSetters;\nexports.createProgram = createProgram;\nexports.createProgramFromScripts = createProgramFromScripts;\nexports.createProgramFromSources = createProgramFromSources;\nexports.createProgramInfo = createProgramInfo;\nexports.createProgramInfoFromProgram = createProgramInfoFromProgram;\nexports.createUniformSetters = createUniformSetters;\nexports.createUniformBlockSpecFromProgram = createUniformBlockSpecFromProgram;\nexports.createUniformBlockInfoFromProgram = createUniformBlockInfoFromProgram;\nexports.createUniformBlockInfo = createUniformBlockInfo;\nexports.createTransformFeedback = createTransformFeedback;\nexports.createTransformFeedbackInfo = createTransformFeedbackInfo;\nexports.bindTransformFeedbackInfo = bindTransformFeedbackInfo;\nexports.setAttributes = setAttributes;\nexports.setBuffersAndAttributes = setBuffersAndAttributes;\nexports.setUniforms = setUniforms;\nexports.setUniformBlock = setUniformBlock;\nexports.setBlockUniforms = setBlockUniforms;\nexports.bindUniformBlock = bindUniformBlock;\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level shader program related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.programs` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/programs\n */\nvar error = helper.error;\nvar warn = helper.warn;\nvar getElementById = _globalObject.default && _globalObject.default.document && _globalObject.default.document.getElementById ? _globalObject.default.document.getElementById.bind(_globalObject.default.document) : function () {\n  return null;\n};\nvar FLOAT = 0x1406;\nvar FLOAT_VEC2 = 0x8B50;\nvar FLOAT_VEC3 = 0x8B51;\nvar FLOAT_VEC4 = 0x8B52;\nvar INT = 0x1404;\nvar INT_VEC2 = 0x8B53;\nvar INT_VEC3 = 0x8B54;\nvar INT_VEC4 = 0x8B55;\nvar BOOL = 0x8B56;\nvar BOOL_VEC2 = 0x8B57;\nvar BOOL_VEC3 = 0x8B58;\nvar BOOL_VEC4 = 0x8B59;\nvar FLOAT_MAT2 = 0x8B5A;\nvar FLOAT_MAT3 = 0x8B5B;\nvar FLOAT_MAT4 = 0x8B5C;\nvar SAMPLER_2D = 0x8B5E;\nvar SAMPLER_CUBE = 0x8B60;\nvar SAMPLER_3D = 0x8B5F;\nvar SAMPLER_2D_SHADOW = 0x8B62;\nvar FLOAT_MAT2x3 = 0x8B65;\nvar FLOAT_MAT2x4 = 0x8B66;\nvar FLOAT_MAT3x2 = 0x8B67;\nvar FLOAT_MAT3x4 = 0x8B68;\nvar FLOAT_MAT4x2 = 0x8B69;\nvar FLOAT_MAT4x3 = 0x8B6A;\nvar SAMPLER_2D_ARRAY = 0x8DC1;\nvar SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;\nvar SAMPLER_CUBE_SHADOW = 0x8DC5;\nvar UNSIGNED_INT = 0x1405;\nvar UNSIGNED_INT_VEC2 = 0x8DC6;\nvar UNSIGNED_INT_VEC3 = 0x8DC7;\nvar UNSIGNED_INT_VEC4 = 0x8DC8;\nvar INT_SAMPLER_2D = 0x8DCA;\nvar INT_SAMPLER_3D = 0x8DCB;\nvar INT_SAMPLER_CUBE = 0x8DCC;\nvar INT_SAMPLER_2D_ARRAY = 0x8DCF;\nvar UNSIGNED_INT_SAMPLER_2D = 0x8DD2;\nvar UNSIGNED_INT_SAMPLER_3D = 0x8DD3;\nvar UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;\nvar UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\nvar TEXTURE_2D = 0x0DE1;\nvar TEXTURE_CUBE_MAP = 0x8513;\nvar TEXTURE_3D = 0x806F;\nvar TEXTURE_2D_ARRAY = 0x8C1A;\nvar typeMap = {};\n/**\n * Returns the corresponding bind point for a given sampler type\n */\n\nfunction getBindPointForSamplerType(gl, type) {\n  return typeMap[type].bindPoint;\n} // This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n// this code could be a lot smaller but that is sadly really slow (T_T)\n\n\nfunction floatSetter(gl, location) {\n  return function (v) {\n    gl.uniform1f(location, v);\n  };\n}\n\nfunction floatArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1fv(location, v);\n  };\n}\n\nfunction floatVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2fv(location, v);\n  };\n}\n\nfunction floatVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3fv(location, v);\n  };\n}\n\nfunction floatVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4fv(location, v);\n  };\n}\n\nfunction intSetter(gl, location) {\n  return function (v) {\n    gl.uniform1i(location, v);\n  };\n}\n\nfunction intArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1iv(location, v);\n  };\n}\n\nfunction intVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2iv(location, v);\n  };\n}\n\nfunction intVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3iv(location, v);\n  };\n}\n\nfunction intVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4iv(location, v);\n  };\n}\n\nfunction uintSetter(gl, location) {\n  return function (v) {\n    gl.uniform1ui(location, v);\n  };\n}\n\nfunction uintArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1uiv(location, v);\n  };\n}\n\nfunction uintVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2uiv(location, v);\n  };\n}\n\nfunction uintVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3uiv(location, v);\n  };\n}\n\nfunction uintVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4uiv(location, v);\n  };\n}\n\nfunction floatMat2Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2fv(location, false, v);\n  };\n}\n\nfunction floatMat3Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3fv(location, false, v);\n  };\n}\n\nfunction floatMat4Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4fv(location, false, v);\n  };\n}\n\nfunction floatMat23Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x3fv(location, false, v);\n  };\n}\n\nfunction floatMat32Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x2fv(location, false, v);\n  };\n}\n\nfunction floatMat24Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x4fv(location, false, v);\n  };\n}\n\nfunction floatMat42Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x2fv(location, false, v);\n  };\n}\n\nfunction floatMat34Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x4fv(location, false, v);\n  };\n}\n\nfunction floatMat43Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x3fv(location, false, v);\n  };\n}\n\nfunction samplerSetter(gl, type, unit, location) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  return utils.isWebGL2(gl) ? function (textureOrPair) {\n    var texture;\n    var sampler;\n\n    if (helper.isTexture(gl, textureOrPair)) {\n      texture = textureOrPair;\n      sampler = null;\n    } else {\n      texture = textureOrPair.texture;\n      sampler = textureOrPair.sampler;\n    }\n\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n    gl.bindSampler(unit, sampler);\n  } : function (texture) {\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n  };\n}\n\nfunction samplerArraySetter(gl, type, unit, location, size) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  var units = new Int32Array(size);\n\n  for (var ii = 0; ii < size; ++ii) {\n    units[ii] = unit + ii;\n  }\n\n  return utils.isWebGL2(gl) ? function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (textureOrPair, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      var texture;\n      var sampler;\n\n      if (helper.isTexture(gl, textureOrPair)) {\n        texture = textureOrPair;\n        sampler = null;\n      } else {\n        texture = textureOrPair.texture;\n        sampler = textureOrPair.sampler;\n      }\n\n      gl.bindSampler(unit, sampler);\n      gl.bindTexture(bindPoint, texture);\n    });\n  } : function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (texture, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      gl.bindTexture(bindPoint, texture);\n    });\n  };\n}\n\ntypeMap[FLOAT] = {\n  Type: Float32Array,\n  size: 4,\n  setter: floatSetter,\n  arraySetter: floatArraySetter\n};\ntypeMap[FLOAT_VEC2] = {\n  Type: Float32Array,\n  size: 8,\n  setter: floatVec2Setter\n};\ntypeMap[FLOAT_VEC3] = {\n  Type: Float32Array,\n  size: 12,\n  setter: floatVec3Setter\n};\ntypeMap[FLOAT_VEC4] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatVec4Setter\n};\ntypeMap[INT] = {\n  Type: Int32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[INT_VEC2] = {\n  Type: Int32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[INT_VEC3] = {\n  Type: Int32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[INT_VEC4] = {\n  Type: Int32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[UNSIGNED_INT] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: uintSetter,\n  arraySetter: uintArraySetter\n};\ntypeMap[UNSIGNED_INT_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: uintVec2Setter\n};\ntypeMap[UNSIGNED_INT_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: uintVec3Setter\n};\ntypeMap[UNSIGNED_INT_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: uintVec4Setter\n};\ntypeMap[BOOL] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[BOOL_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[BOOL_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[BOOL_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[FLOAT_MAT2] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatMat2Setter\n};\ntypeMap[FLOAT_MAT3] = {\n  Type: Float32Array,\n  size: 36,\n  setter: floatMat3Setter\n};\ntypeMap[FLOAT_MAT4] = {\n  Type: Float32Array,\n  size: 64,\n  setter: floatMat4Setter\n};\ntypeMap[FLOAT_MAT2x3] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat23Setter\n};\ntypeMap[FLOAT_MAT2x4] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat24Setter\n};\ntypeMap[FLOAT_MAT3x2] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat32Setter\n};\ntypeMap[FLOAT_MAT3x4] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat34Setter\n};\ntypeMap[FLOAT_MAT4x2] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat42Setter\n};\ntypeMap[FLOAT_MAT4x3] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat43Setter\n};\ntypeMap[SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[SAMPLER_2D_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_2D_ARRAY_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_CUBE_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\n\nfunction floatAttribSetter(gl, index) {\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    gl.enableVertexAttribArray(index);\n    gl.vertexAttribPointer(index, b.numComponents || b.size, b.type || gl.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n\n    if (b.divisor !== undefined) {\n      gl.vertexAttribDivisor(index, b.divisor);\n    }\n  };\n}\n\nfunction intAttribSetter(gl, index) {\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    gl.enableVertexAttribArray(index);\n    gl.vertexAttribIPointer(index, b.numComponents || b.size, b.type || gl.INT, b.stride || 0, b.offset || 0);\n\n    if (b.divisor !== undefined) {\n      gl.vertexAttribDivisor(index, b.divisor);\n    }\n  };\n}\n\nfunction matAttribSetter(gl, index, typeInfo) {\n  var defaultSize = typeInfo.size;\n  var count = typeInfo.count;\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    var numComponents = b.size || b.numComponents || defaultSize;\n    var size = numComponents / count;\n    var type = b.type || gl.FLOAT;\n    var typeInfo = typeMap[type];\n    var stride = typeInfo.size * numComponents;\n    var normalize = b.normalize || false;\n    var offset = b.offset || 0;\n    var rowOffset = stride / count;\n\n    for (var i = 0; i < count; ++i) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(index + i, size, type, normalize, stride, offset + rowOffset * i);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index + i, b.divisor);\n      }\n    }\n  };\n}\n\nvar attrTypeMap = {};\nattrTypeMap[FLOAT] = {\n  size: 4,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC2] = {\n  size: 8,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC3] = {\n  size: 12,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC4] = {\n  size: 16,\n  setter: floatAttribSetter\n};\nattrTypeMap[INT] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[FLOAT_MAT2] = {\n  size: 4,\n  setter: matAttribSetter,\n  count: 2\n};\nattrTypeMap[FLOAT_MAT3] = {\n  size: 9,\n  setter: matAttribSetter,\n  count: 3\n};\nattrTypeMap[FLOAT_MAT4] = {\n  size: 16,\n  setter: matAttribSetter,\n  count: 4\n}; // make sure we don't see a global gl\n\nvar gl = undefined; // eslint-disable-line\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @param {number} [lineOffset] amount to add to line number\n * @memberOf module:twgl\n */\n\nfunction addLineNumbers(src, lineOffset) {\n  lineOffset = lineOffset || 0;\n  ++lineOffset;\n  return src.split(\"\\n\").map(function (line, ndx) {\n    return ndx + lineOffset + \": \" + line;\n  }).join(\"\\n\");\n}\n\nvar spaceRE = /^[ \\t]*\\n/;\n/**\n * Loads a shader.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} shaderSource The shader source.\n * @param {number} shaderType The type of shader.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors.\n * @return {WebGLShader} The created shader.\n */\n\nfunction loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\n  var errFn = opt_errorCallback || error; // Create the shader object\n\n  var shader = gl.createShader(shaderType); // Remove the first end of line because WebGL 2.0 requires\n  // #version 300 es\n  // as the first line. No whitespace allowed before that line\n  // so\n  //\n  // <script>\n  // #version 300 es\n  // </script>\n  //\n  // Has one line before it which is invalid according to GLSL ES 3.00\n  //\n\n  var lineOffset = 0;\n\n  if (spaceRE.test(shaderSource)) {\n    lineOffset = 1;\n    shaderSource = shaderSource.replace(spaceRE, '');\n  } // Load the shader source\n\n\n  gl.shaderSource(shader, shaderSource); // Compile the shader\n\n  gl.compileShader(shader); // Check the compile status\n\n  var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    var lastError = gl.getShaderInfoLog(shader);\n    errFn(addLineNumbers(shaderSource, lineOffset) + \"\\n*** Error compiling shader: \" + lastError);\n    gl.deleteShader(shader);\n    return null;\n  }\n\n  return shader;\n}\n/**\n * @typedef {Object} ProgramOptions\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>} [attribLocations] a attribute name to location map\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @memberOf module:twgl\n */\n\n/**\n * Gets the program options based on all these optional arguments\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments pased on\n */\n\n\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\n  var transformFeedbackVaryings;\n\n  if (typeof opt_locations === 'function') {\n    opt_errorCallback = opt_locations;\n    opt_locations = undefined;\n  }\n\n  if (typeof opt_attribs === 'function') {\n    opt_errorCallback = opt_attribs;\n    opt_attribs = undefined;\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\n    // If we have an errorCallback we can just return this object\n    // Otherwise we need to construct one with default errorCallback\n    if (opt_attribs.errorCallback) {\n      return opt_attribs;\n    }\n\n    var opt = opt_attribs;\n    opt_errorCallback = opt.errorCallback;\n    opt_attribs = opt.attribLocations;\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\n  }\n\n  var options = {\n    errorCallback: opt_errorCallback || error,\n    transformFeedbackVaryings: transformFeedbackVaryings\n  };\n\n  if (opt_attribs) {\n    var attribLocations = {};\n\n    if (Array.isArray(opt_attribs)) {\n      opt_attribs.forEach(function (attrib, ndx) {\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\n      });\n    } else {\n      attribLocations = opt_attribs;\n    }\n\n    options.attribLocations = attribLocations;\n  }\n\n  return options;\n}\n\nvar defaultShaderType = [\"VERTEX_SHADER\", \"FRAGMENT_SHADER\"];\n\nfunction getShaderTypeFromScriptType(scriptType) {\n  if (scriptType.indexOf(\"frag\") >= 0) {\n    return gl.FRAGMENT_SHADER;\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\n    return gl.VERTEX_SHADER;\n  }\n\n  return undefined;\n}\n\nfunction deleteShaders(gl, shaders) {\n  shaders.forEach(function (shader) {\n    gl.deleteShader(shader);\n  });\n}\n/**\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\n * program and calls useProgram.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgram(gl, [vs, fs], options);\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgram(gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var realShaders = [];\n  var newShaders = [];\n\n  for (var ndx = 0; ndx < shaders.length; ++ndx) {\n    var shader = shaders[ndx];\n\n    if (typeof shader === 'string') {\n      var elem = getElementById(shader);\n      var src = elem ? elem.text : shader;\n      var type = gl[defaultShaderType[ndx]];\n\n      if (elem && elem.type) {\n        type = getShaderTypeFromScriptType(elem.type) || type;\n      }\n\n      shader = loadShader(gl, src, type, progOptions.errorCallback);\n      newShaders.push(shader);\n    }\n\n    if (helper.isShader(gl, shader)) {\n      realShaders.push(shader);\n    }\n  }\n\n  if (realShaders.length !== shaders.length) {\n    progOptions.errorCallback(\"not enough shaders for program\");\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  var program = gl.createProgram();\n  realShaders.forEach(function (shader) {\n    gl.attachShader(program, shader);\n  });\n\n  if (progOptions.attribLocations) {\n    Object.keys(progOptions.attribLocations).forEach(function (attrib) {\n      gl.bindAttribLocation(program, progOptions.attribLocations[attrib], attrib);\n    });\n  }\n\n  var varyings = progOptions.transformFeedbackVaryings;\n\n  if (varyings) {\n    if (varyings.attribs) {\n      varyings = varyings.attribs;\n    }\n\n    if (!Array.isArray(varyings)) {\n      varyings = Object.keys(varyings);\n    }\n\n    gl.transformFeedbackVaryings(program, varyings, progOptions.transformFeedbackMode || gl.SEPARATE_ATTRIBS);\n  }\n\n  gl.linkProgram(program); // Check the link status\n\n  var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n  if (!linked) {\n    // something went wrong with the link\n    var lastError = gl.getProgramInfoLog(program);\n    progOptions.errorCallback(\"Error in program linking:\" + lastError);\n    gl.deleteProgram(program);\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  return program;\n}\n/**\n * Loads a shader from a script tag.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} scriptId The id of the script tag.\n * @param {number} [opt_shaderType] The type of shader. If not passed in it will\n *     be derived from the type of the script tag.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors.\n * @return {WebGLShader?} The created shader or null if error.\n */\n\n\nfunction createShaderFromScript(gl, scriptId, opt_shaderType, opt_errorCallback) {\n  var shaderSource = \"\";\n  var shaderScript = getElementById(scriptId);\n\n  if (!shaderScript) {\n    throw \"*** Error: unknown script element\" + scriptId;\n  }\n\n  shaderSource = shaderScript.text;\n  var shaderType = opt_shaderType || getShaderTypeFromScriptType(shaderScript.type);\n\n  if (!shaderType) {\n    throw \"*** Error: unknown shader type\";\n  }\n\n  return loadShader(gl, shaderSource, shaderType, opt_errorCallback);\n}\n/**\n * Creates a program from 2 script tags.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderScriptIds Array of ids of the script\n *        tags for the shaders. The first is assumed to be the\n *        vertex shader, the second the fragment shader.\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram} The created program.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromScripts(gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderScriptIds.length; ++ii) {\n    var shader = createShaderFromScript(gl, shaderScriptIds[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Creates a program from 2 sources.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram} The created program.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromSources(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderSources.length; ++ii) {\n    var shader = loadShader(gl, shaderSources[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Returns true if attribute/uniform is a reserved/built in\n *\n * It makes no sense to me why GL returns these because it's\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\n * with names that start with `gl_` (and `webgl_` in WebGL)\n *\n * I can only assume they are there because they might count\n * when computing the number of uniforms/attributes used when you want to\n * know if you are near the limit. That doesn't really make sense\n * to me but the fact that these get returned are in the spec.\n *\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\n *    `gl.getActiveAttrib`.\n * @return {bool} true if it's reserved\n */\n\n\nfunction isBuiltIn(info) {\n  var name = info.name;\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\n}\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:twgl.setUniforms}\n *\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformSetters(gl, program) {\n  var textureUnit = 0;\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n\n  function createUniformSetter(program, uniformInfo) {\n    var location = gl.getUniformLocation(program, uniformInfo.name);\n    var isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === \"[0]\";\n    var type = uniformInfo.type;\n    var typeInfo = typeMap[type];\n\n    if (!typeInfo) {\n      throw \"unknown type: 0x\" + type.toString(16); // we should never get here.\n    }\n\n    var setter;\n\n    if (typeInfo.bindPoint) {\n      // it's a sampler\n      var unit = textureUnit;\n      textureUnit += uniformInfo.size;\n\n      if (isArray) {\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n      } else {\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n      }\n    } else {\n      if (typeInfo.arraySetter && isArray) {\n        setter = typeInfo.arraySetter(gl, location);\n      } else {\n        setter = typeInfo.setter(gl, location);\n      }\n    }\n\n    setter.location = location;\n    return setter;\n  }\n\n  var uniformSetters = {};\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      continue;\n    }\n\n    var name = uniformInfo.name; // remove the array suffix.\n\n    if (name.substr(-3) === \"[0]\") {\n      name = name.substr(0, name.length - 3);\n    }\n\n    var setter = createUniformSetter(program, uniformInfo);\n    uniformSetters[name] = setter;\n  }\n\n  return uniformSetters;\n}\n/**\n * @typedef {Object} TransformFeedbackInfo\n * @property {number} index index of transform feedback\n * @property {number} type GL type\n * @property {number} size 1 - 4\n * @memberOf module:twgl\n */\n\n/**\n * Create TransformFeedbackInfo for passing to bind/unbindTransformFeedbackInfo.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedbackInfo(gl, program) {\n  var info = {};\n  var numVaryings = gl.getProgramParameter(program, gl.TRANSFORM_FEEDBACK_VARYINGS);\n\n  for (var ii = 0; ii < numVaryings; ++ii) {\n    var varying = gl.getTransformFeedbackVarying(program, ii);\n    info[varying.name] = {\n      index: ii,\n      type: varying.type,\n      size: varying.size\n    };\n  }\n\n  return info;\n}\n/**\n * Binds buffers for transform feedback.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @memberOf module:twgl\n */\n\n\nfunction bindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n\n  for (var name in bufferInfo) {\n    var varying = transformFeedbackInfo[name];\n\n    if (varying) {\n      var buf = bufferInfo[name];\n\n      if (buf.offset) {\n        gl.bindBufferRange(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size);\n      } else {\n        gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer);\n      }\n    }\n  }\n}\n/**\n * Unbinds buffers afetr transform feedback.\n *\n * Buffers can not be bound to 2 bind points so if you try to bind a buffer used\n * in a transform feedback as an ARRAY_BUFFER for an attribute it will fail.\n *\n * This function unbinds all buffers that were bound with {@link module:twgl.bindTransformFeedbackInfo}.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n */\n\n\nfunction unbindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n\n  for (var name in bufferInfo) {\n    var varying = transformFeedbackInfo[name];\n\n    if (varying) {\n      gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, null);\n    }\n  }\n}\n/**\n * Creates a transform feedback and sets the buffers\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @return {WebGLTransformFeedback} the created transform feedback\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedback(gl, programInfo, bufferInfo) {\n  var tf = gl.createTransformFeedback();\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, tf);\n  gl.useProgram(programInfo.program);\n  bindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null); // This is only needed because of a bug in Chrome 56. Will remove\n  // when chrome fixes it.\n\n  unbindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  return tf;\n}\n/**\n * @typedef {Object} UniformData\n * @property {number} type The WebGL type enum for this uniform\n * @property {number} size The number of elements for this uniform\n * @property {number} blockNdx The block index this uniform appears in\n * @property {number} offset The byte offset in the block for this uniform's value\n * @memberOf module:twgl\n */\n\n/**\n * The specification for one UniformBlockObject\n *\n * @typedef {Object} BlockSpec\n * @property {number} index The index of the block.\n * @property {number} size The size in bytes needed for the block\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n * @property {bool} usedByVertexShader Self explanitory\n * @property {bool} usedByFragmentShader Self explanitory\n * @property {bool} used Self explanitory\n * @memberOf module:twgl\n */\n\n/**\n * A `UniformBlockSpec` represents the data needed to create and bind\n * UniformBlockObjects for a given program\n *\n * @typedef {Object} UniformBlockSpec\n * @property {Object.<string, module:twgl.BlockSpec> blockSpecs The BlockSpec for each block by block name\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a UniformBlockSpec for the given program.\n *\n * A UniformBlockSpec represents the data needed to create and bind\n * UniformBlockObjects\n *\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockSpecFromProgram(gl, program) {\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  var uniformData = [];\n  var uniformIndices = [];\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    uniformIndices.push(ii);\n    uniformData.push({});\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      break;\n    } // REMOVE [0]?\n\n\n    uniformData[ii].name = uniformInfo.name;\n  }\n\n  [[\"UNIFORM_TYPE\", \"type\"], [\"UNIFORM_SIZE\", \"size\"], // num elements\n  [\"UNIFORM_BLOCK_INDEX\", \"blockNdx\"], [\"UNIFORM_OFFSET\", \"offset\"]].forEach(function (pair) {\n    var pname = pair[0];\n    var key = pair[1];\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function (value, ndx) {\n      uniformData[ndx][key] = value;\n    });\n  });\n  var blockSpecs = {};\n  var numUniformBlocks = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\n\n  for (var _ii = 0; _ii < numUniformBlocks; ++_ii) {\n    var name = gl.getActiveUniformBlockName(program, _ii);\n    var blockSpec = {\n      index: _ii,\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      size: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_DATA_SIZE),\n      uniformIndices: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES)\n    };\n    blockSpec.used = blockSpec.usedByVertexSahder || blockSpec.usedByFragmentShader;\n    blockSpecs[name] = blockSpec;\n  }\n\n  return {\n    blockSpecs: blockSpecs,\n    uniformData: uniformData\n  };\n}\n\nvar arraySuffixRE = /\\[\\d+\\]\\.$/; // better way to check?\n\n/**\n * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\n * and a corresponding WebGLBuffer to hold those values on the GPU\n *\n * @typedef {Object} UniformBlockInfo\n * @property {string} name The name of the block\n * @property {ArrayBuffer} array The array buffer that contains the uniform values\n * @property {Float32Array} asFloat A float view on the array buffer. This is useful\n *    inspecting the contents of the buffer in the debugger.\n * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\n * @property {number} [offset] offset into buffer\n * @property {Object.<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\n *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\n *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\n *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\n *   `Int32Array` view, etc.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {WebGLProgram} program A WebGLProgram\n * @param {module:twgl.UniformBlockSpec} uinformBlockSpec. A UniformBlockSpec as returned\n *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\nfunction createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName) {\n  var blockSpecs = uniformBlockSpec.blockSpecs;\n  var uniformData = uniformBlockSpec.uniformData;\n  var blockSpec = blockSpecs[blockName];\n\n  if (!blockSpec) {\n    warn(\"no uniform block object named:\", blockName);\n    return {\n      name: blockName,\n      uniforms: {}\n    };\n  }\n\n  var array = new ArrayBuffer(blockSpec.size);\n  var buffer = gl.createBuffer();\n  var uniformBufferIndex = blockSpec.index;\n  gl.bindBuffer(gl.UNIFORM_BUFFER, buffer);\n  gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\n  var prefix = blockName + \".\";\n\n  if (arraySuffixRE.test(prefix)) {\n    prefix = prefix.replace(arraySuffixRE, \".\");\n  }\n\n  var uniforms = {};\n  blockSpec.uniformIndices.forEach(function (uniformNdx) {\n    var data = uniformData[uniformNdx];\n    var typeInfo = typeMap[data.type];\n    var Type = typeInfo.Type;\n    var length = data.size * typeInfo.size;\n    var name = data.name;\n\n    if (name.substr(0, prefix.length) === prefix) {\n      name = name.substr(prefix.length);\n    }\n\n    uniforms[name] = new Type(array, data.offset, length / Type.BYTES_PER_ELEMENT);\n  });\n  return {\n    name: blockName,\n    array: array,\n    asFloat: new Float32Array(array),\n    // for debugging\n    buffer: buffer,\n    uniforms: uniforms\n  };\n}\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo}\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockInfo(gl, programInfo, blockName) {\n  return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName);\n}\n/**\n * Binds a unform block to the matching uniform block point.\n * Matches by blocks by name so blocks must have the same name not just the same\n * structure.\n *\n * If you have changed any values and you upload the valus into the corresponding WebGLBuffer\n * call {@link module:twgl.setUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\n *     no buffer is bound.\n * @memberOf module:twgl/programs\n */\n\n\nfunction bindUniformBlock(gl, programInfo, uniformBlockInfo) {\n  var uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\n  var blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\n\n  if (blockSpec) {\n    var bufferBindIndex = blockSpec.index;\n    gl.bindBufferRange(gl.UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, uniformBlockInfo.offset || 0, uniformBlockInfo.array.byteLength);\n    return true;\n  }\n\n  return false;\n}\n/**\n * Uploads the current uniform values to the corresponding WebGLBuffer\n * and binds that buffer to the program's corresponding bind point for the uniform block object.\n *\n * If you haven't changed any values and you only need to bind the uniform block object\n * call {@link module:twgl.bindUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniformBlock(gl, programInfo, uniformBlockInfo) {\n  if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\n    gl.bufferData(gl.UNIFORM_BUFFER, uniformBlockInfo.array, gl.DYNAMIC_DRAW);\n  }\n}\n/**\n * Sets values of a uniform block object\n *\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\n * @param {Object.<string, ?>} values A uniform name to value map where the value is correct for the given\n *    type of uniform. So for example given a block like\n *\n *       uniform SomeBlock {\n *         float someFloat;\n *         vec2 someVec2;\n *         vec3 someVec3Array[2];\n *         int someInt;\n *       }\n *\n *  You can set the values of the uniform block with\n *\n *       twgl.setBlockUniforms(someBlockInfo, {\n *          someFloat: 12.3,\n *          someVec2: [1, 2],\n *          someVec3Array: [1, 2, 3, 4, 5, 6],\n *          someInt: 5,\n *       }\n *\n *  Arrays can be JavaScript arrays or typed arrays\n *\n *  Any name that doesn't match will be ignored\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBlockUniforms(uniformBlockInfo, values) {\n  var uniforms = uniformBlockInfo.uniforms;\n\n  for (var name in values) {\n    var array = uniforms[name];\n\n    if (array) {\n      var value = values[name];\n\n      if (value.length) {\n        array.set(value);\n      } else {\n        array[0] = value;\n      }\n    }\n  }\n}\n/**\n * Set uniforms and binds related textures.\n *\n * example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     const tex1 = gl.createTexture();\n *     const tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     var texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     const moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *     twgl.setUniforms(programInfo, moreUniforms);\n *\n * You can also add WebGLSamplers to uniform samplers as in\n *\n *     const uniforms = {\n *       u_someSampler: {\n *         texture: someWebGLTexture,\n *         sampler: someWebGLSampler,\n *       },\n *     };\n *\n * In which case both the sampler and texture will be bound to the\n * same unit.\n *\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n *        uniforms.\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n *\n *     const sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     const localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, sharedUniforms);\n *     twgl.setUniforms(programInfo, localUniforms};\n *\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniforms(setters, values) {\n  // eslint-disable-line\n  var actualSetters = setters.uniformSetters || setters;\n  var numArgs = arguments.length;\n\n  for (var andx = 1; andx < numArgs; ++andx) {\n    var vals = arguments[andx];\n\n    if (Array.isArray(vals)) {\n      var numValues = vals.length;\n\n      for (var ii = 0; ii < numValues; ++ii) {\n        setUniforms(actualSetters, vals[ii]);\n      }\n    } else {\n      for (var name in vals) {\n        var setter = actualSetters[name];\n\n        if (setter) {\n          setter(vals[name]);\n        }\n      }\n    }\n  }\n}\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:twgl.setAttributes} for example\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createAttributeSetters(gl, program) {\n  var attribSetters = {};\n  var numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n  for (var ii = 0; ii < numAttribs; ++ii) {\n    var attribInfo = gl.getActiveAttrib(program, ii);\n\n    if (isBuiltIn(attribInfo)) {\n      continue;\n    }\n\n    var index = gl.getAttribLocation(program, attribInfo.name);\n    var typeInfo = attrTypeMap[attribInfo.type];\n    var setter = typeInfo.setter(gl, index, typeInfo);\n    setter.location = index;\n    attribSetters[attribInfo.name] = setter;\n  }\n\n  return attribSetters;\n}\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n *\n * Example:\n *\n *     const program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const attribSetters = createAttributeSetters(program);\n *\n *     const positionBuffer = gl.createBuffer();\n *     const texcoordBuffer = gl.createBuffer();\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n * *   divisor: the divisor for instances. Default = undefined\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n * @memberOf module:twgl/programs\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n */\n\n\nfunction setAttributes(setters, buffers) {\n  for (var name in buffers) {\n    var setter = setters[name];\n\n    if (setter) {\n      setter(buffers[name]);\n    }\n  }\n}\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n *\n * For the example above it is equivilent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgrmaInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n * @param {(module:twgl.BufferInfo|module:twgl.vertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\n  if (buffers.vertexArrayObject) {\n    gl.bindVertexArray(buffers.vertexArrayObject);\n  } else {\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n\n    if (buffers.indices) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\n    }\n  }\n}\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n * @propetty {module:twgl.UniformBlockSpec} [uniformBlockSpace] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\n * @memberOf module:twgl\n */\n\n/**\n * Creates a ProgramInfo from an existing program.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfoFromProgram(gl, program) {\n  var uniformSetters = createUniformSetters(gl, program);\n  var attribSetters = createAttributeSetters(gl, program);\n  var programInfo = {\n    program: program,\n    uniformSetters: uniformSetters,\n    attribSetters: attribSetters\n  };\n\n  if (utils.isWebGL2(gl)) {\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\n  }\n\n  return programInfo;\n}\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramInfo(gl, [vs, fs], options);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the attributes. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfo(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var good = true;\n  shaderSources = shaderSources.map(function (source) {\n    // Lets assume if there is no \\n it's an id\n    if (source.indexOf(\"\\n\") < 0) {\n      var script = getElementById(source);\n\n      if (!script) {\n        progOptions.errorCallback(\"no element with id: \" + source);\n        good = false;\n      } else {\n        source = script.text;\n      }\n    }\n\n    return source;\n  });\n\n  if (!good) {\n    return null;\n  }\n\n  var program = createProgramFromSources(gl, shaderSources, progOptions);\n\n  if (!program) {\n    return null;\n  }\n\n  return createProgramInfoFromProgram(gl, program);\n}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.axisRotate = axisRotate;\nexports.axisRotation = axisRotation;\nexports.copy = copy;\nexports.frustum = frustum;\nexports.getAxis = getAxis;\nexports.getTranslation = getTranslation;\nexports.identity = identity;\nexports.inverse = inverse;\nexports.lookAt = lookAt;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.ortho = ortho;\nexports.perspective = perspective;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.rotationX = rotationX;\nexports.rotationY = rotationY;\nexports.rotationZ = rotationZ;\nexports.scale = scale;\nexports.scaling = scaling;\nexports.setAxis = setAxis;\nexports.setDefaultType = setDefaultType;\nexports.setTranslation = setTranslation;\nexports.transformDirection = transformDirection;\nexports.transformNormal = transformNormal;\nexports.transformPoint = transformPoint;\nexports.translate = translate;\nexports.translation = translation;\nexports.transpose = transpose;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = m4.create();\n *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = m4.identity();\n *     const trans = m4.translation([1, 2, 3]);\n *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n * @module twgl/m4\n */\nvar MatType = Float32Array;\nvar tempV3a = v3.create();\nvar tempV3b = v3.create();\nvar tempV3c = v3.create();\n/**\n * A JavaScript array with 16 values or a Float32Array with 16 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/m4.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Mat4\n * @memberOf module:twgl/m4\n */\n\n/**\n * Sets the type this library creates for a Mat4\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Mat4\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n/**\n * Negates a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} -m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction negate(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = -m[0];\n  dst[1] = -m[1];\n  dst[2] = -m[2];\n  dst[3] = -m[3];\n  dst[4] = -m[4];\n  dst[5] = -m[5];\n  dst[6] = -m[6];\n  dst[7] = -m[7];\n  dst[8] = -m[8];\n  dst[9] = -m[9];\n  dst[10] = -m[10];\n  dst[11] = -m[11];\n  dst[12] = -m[12];\n  dst[13] = -m[13];\n  dst[14] = -m[14];\n  dst[15] = -m[15];\n  return dst;\n}\n/**\n * Copies a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] The matrix.\n * @return {module:twgl/m4.Mat4} A copy of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction copy(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = m[0];\n  dst[1] = m[1];\n  dst[2] = m[2];\n  dst[3] = m[3];\n  dst[4] = m[4];\n  dst[5] = m[5];\n  dst[6] = m[6];\n  dst[7] = m[7];\n  dst[8] = m[8];\n  dst[9] = m[9];\n  dst[10] = m[10];\n  dst[11] = m[11];\n  dst[12] = m[12];\n  dst[13] = m[13];\n  dst[14] = m[14];\n  dst[15] = m[15];\n  return dst;\n}\n/**\n * Creates an n-by-n identity matrix.\n *\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction identity(dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Takes the transpose of a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The transpose of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transpose(m, dst) {\n  dst = dst || new MatType(16);\n\n  if (dst === m) {\n    var t;\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  dst[0] = m00;\n  dst[1] = m10;\n  dst[2] = m20;\n  dst[3] = m30;\n  dst[4] = m01;\n  dst[5] = m11;\n  dst[6] = m21;\n  dst[7] = m31;\n  dst[8] = m02;\n  dst[9] = m12;\n  dst[10] = m22;\n  dst[11] = m32;\n  dst[12] = m03;\n  dst[13] = m13;\n  dst[14] = m23;\n  dst[15] = m33;\n  return dst;\n}\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The inverse of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction inverse(m, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  var tmp_0 = m22 * m33;\n  var tmp_1 = m32 * m23;\n  var tmp_2 = m12 * m33;\n  var tmp_3 = m32 * m13;\n  var tmp_4 = m12 * m23;\n  var tmp_5 = m22 * m13;\n  var tmp_6 = m02 * m33;\n  var tmp_7 = m32 * m03;\n  var tmp_8 = m02 * m23;\n  var tmp_9 = m22 * m03;\n  var tmp_10 = m02 * m13;\n  var tmp_11 = m12 * m03;\n  var tmp_12 = m20 * m31;\n  var tmp_13 = m30 * m21;\n  var tmp_14 = m10 * m31;\n  var tmp_15 = m30 * m11;\n  var tmp_16 = m10 * m21;\n  var tmp_17 = m20 * m11;\n  var tmp_18 = m00 * m31;\n  var tmp_19 = m30 * m01;\n  var tmp_20 = m00 * m21;\n  var tmp_21 = m20 * m01;\n  var tmp_22 = m00 * m11;\n  var tmp_23 = m10 * m01;\n  var t0 = tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31 - (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  var t1 = tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31 - (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  var t2 = tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31 - (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  var t3 = tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21 - (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n  var d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n  dst[0] = d * t0;\n  dst[1] = d * t1;\n  dst[2] = d * t2;\n  dst[3] = d * t3;\n  dst[4] = d * (tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30 - (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n  dst[5] = d * (tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30 - (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n  dst[6] = d * (tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30 - (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n  dst[7] = d * (tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20 - (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n  dst[8] = d * (tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33 - (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n  dst[9] = d * (tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33 - (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n  dst[10] = d * (tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33 - (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n  dst[11] = d * (tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23 - (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n  dst[12] = d * (tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12 - (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n  dst[13] = d * (tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22 - (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n  dst[14] = d * (tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02 - (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n  dst[15] = d * (tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12 - (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n  return dst;\n}\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param {module:twgl/m4.Mat4} a The matrix on the left.\n * @param {module:twgl/m4.Mat4} b The matrix on the right.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The matrix product of a and b.\n * @memberOf module:twgl/m4\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new MatType(16);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4 + 0];\n  var a11 = a[4 + 1];\n  var a12 = a[4 + 2];\n  var a13 = a[4 + 3];\n  var a20 = a[8 + 0];\n  var a21 = a[8 + 1];\n  var a22 = a[8 + 2];\n  var a23 = a[8 + 3];\n  var a30 = a[12 + 0];\n  var a31 = a[12 + 1];\n  var a32 = a[12 + 2];\n  var a33 = a[12 + 3];\n  var b00 = b[0];\n  var b01 = b[1];\n  var b02 = b[2];\n  var b03 = b[3];\n  var b10 = b[4 + 0];\n  var b11 = b[4 + 1];\n  var b12 = b[4 + 2];\n  var b13 = b[4 + 3];\n  var b20 = b[8 + 0];\n  var b21 = b[8 + 1];\n  var b22 = b[8 + 2];\n  var b23 = b[8 + 3];\n  var b30 = b[12 + 0];\n  var b31 = b[12 + 1];\n  var b32 = b[12 + 2];\n  var b33 = b[12 + 3];\n  dst[0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n  return dst;\n}\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param {module:twgl/m4.Mat4} a The matrix.\n * @param {Vec3} v The vector.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} a once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction setTranslation(a, v, dst) {\n  dst = dst || identity();\n\n  if (a !== dst) {\n    dst[0] = a[0];\n    dst[1] = a[1];\n    dst[2] = a[2];\n    dst[3] = a[3];\n    dst[4] = a[4];\n    dst[5] = a[5];\n    dst[6] = a[6];\n    dst[7] = a[7];\n    dst[8] = a[8];\n    dst[9] = a[9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} [dst] vector..\n * @return {Vec3} The translation component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getTranslation(m, dst) {\n  dst = dst || v3.create();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\n * @return {Vec3} [dst] vector.\n * @return {Vec3} The axis component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getAxis(m, axis, dst) {\n  dst = dst || v3.create();\n  var off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param {Vec3} v the axis vector\n * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\n * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If none a new one is created\n * @return {module:twgl/m4.Mat4} dst\n * @memberOf module:twgl/m4\n */\n\n\nfunction setAxis(a, v, axis, dst) {\n  if (dst !== a) {\n    dst = copy(a, dst);\n  }\n\n  var off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\n * @param {number} aspect The aspect ratio width / height.\n * @param {number} zNear The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} zFar The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n  dst = dst || new MatType(16);\n  var f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n  var rangeInv = 1.0 / (zNear - zFar);\n  dst[0] = f / aspect;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = f;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = (zNear + zFar) * rangeInv;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = zNear * zFar * rangeInv * 2;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 othogonal transformation matrix given the left, right,\n * bottom, and top dimensions of the near clipping plane as well as the\n * near and far clipping plane distances.\n * @param {number} left Left side of the near clipping plane viewport.\n * @param {number} right Right side of the near clipping plane viewport.\n * @param {number} top Top of the near clipping plane viewport.\n * @param {number} bottom Bottom of the near clipping plane viewport.\n * @param {number} near The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} far The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction ortho(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 2 / (right - left);\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 / (top - bottom);\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 2 / (near - far);\n  dst[11] = 0;\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = (far + near) / (near - far);\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective projection matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction frustum(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  var dx = right - left;\n  var dy = top - bottom;\n  var dz = near - far;\n  dst[0] = 2 * near / dx;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 * near / dy;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = (left + right) / dx;\n  dst[9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 look-at transformation.\n *\n * This is a matrix which positions the camera itself. If you want\n * a view matrix (a matrix which moves things in front of the camera)\n * take the inverse of this.\n *\n * @param {Vec3} eye The position of the eye.\n * @param {Vec3} target The position meant to be viewed.\n * @param {Vec3} up A vector pointing up.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The look-at matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction lookAt(eye, target, up, dst) {\n  dst = dst || new MatType(16);\n  var xAxis = tempV3a;\n  var yAxis = tempV3b;\n  var zAxis = tempV3c;\n  v3.normalize(v3.subtract(eye, target, zAxis), zAxis);\n  v3.normalize(v3.cross(up, zAxis, xAxis), xAxis);\n  v3.normalize(v3.cross(zAxis, xAxis, yAxis), yAxis);\n  dst[0] = xAxis[0];\n  dst[1] = xAxis[1];\n  dst[2] = xAxis[2];\n  dst[3] = 0;\n  dst[4] = yAxis[0];\n  dst[5] = yAxis[1];\n  dst[6] = yAxis[2];\n  dst[7] = 0;\n  dst[8] = zAxis[0];\n  dst[9] = zAxis[1];\n  dst[10] = zAxis[2];\n  dst[11] = 0;\n  dst[12] = eye[0];\n  dst[13] = eye[1];\n  dst[14] = eye[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param {Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The translation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translation(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by translation by the given vector v.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translate(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[0] = m00;\n    dst[1] = m01;\n    dst[2] = m02;\n    dst[3] = m03;\n    dst[4] = m10;\n    dst[5] = m11;\n    dst[6] = m12;\n    dst[7] = m13;\n    dst[8] = m20;\n    dst[9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationX(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = c;\n  dst[6] = s;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = -s;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the x-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateX(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[4] = c * m10 + s * m20;\n  dst[5] = c * m11 + s * m21;\n  dst[6] = c * m12 + s * m22;\n  dst[7] = c * m13 + s * m23;\n  dst[8] = c * m20 - s * m10;\n  dst[9] = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[3] = m[3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationY(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = 0;\n  dst[2] = -s;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = s;\n  dst[9] = 0;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the y-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateY(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 - s * m20;\n  dst[1] = c * m01 - s * m21;\n  dst[2] = c * m02 - s * m22;\n  dst[3] = c * m03 - s * m23;\n  dst[8] = c * m20 + s * m00;\n  dst[9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[4] = m[4];\n    dst[5] = m[5];\n    dst[6] = m[6];\n    dst[7] = m[7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationZ(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = s;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = -s;\n  dst[5] = c;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the z-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateZ(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 + s * m10;\n  dst[1] = c * m01 + s * m11;\n  dst[2] = c * m02 + s * m12;\n  dst[3] = c * m03 + s * m13;\n  dst[4] = c * m10 - s * m00;\n  dst[5] = c * m11 - s * m01;\n  dst[6] = c * m12 - s * m02;\n  dst[7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[8] = m[8];\n    dst[9] = m[9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param {Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\n *     around the axis.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotation(axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  dst[0] = xx + (1 - xx) * c;\n  dst[1] = x * y * oneMinusCosine + z * s;\n  dst[2] = x * z * oneMinusCosine - y * s;\n  dst[3] = 0;\n  dst[4] = x * y * oneMinusCosine - z * s;\n  dst[5] = yy + (1 - yy) * c;\n  dst[6] = y * z * oneMinusCosine + x * s;\n  dst[7] = 0;\n  dst[8] = x * z * oneMinusCosine + y * s;\n  dst[9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by rotation around the given axis by the\n * given angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotate(m, axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  var r00 = xx + (1 - xx) * c;\n  var r01 = x * y * oneMinusCosine + z * s;\n  var r02 = x * z * oneMinusCosine - y * s;\n  var r10 = x * y * oneMinusCosine - z * s;\n  var r11 = yy + (1 - yy) * c;\n  var r12 = y * z * oneMinusCosine + x * s;\n  var r20 = x * z * oneMinusCosine + y * s;\n  var r21 = y * z * oneMinusCosine - x * s;\n  var r22 = zz + (1 - zz) * c;\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  dst[0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param {Vec3} v A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The scaling matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scaling(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = v[0];\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = v[1];\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = v[2];\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix, scaling in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param {module:twgl/m4.Mat4} m The matrix to be modified.\n * @param {Vec3} v A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scale(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2];\n  dst[3] = v0 * m[0 * 4 + 3];\n  dst[4] = v1 * m[1 * 4 + 0];\n  dst[5] = v1 * m[1 * 4 + 1];\n  dst[6] = v1 * m[1 * 4 + 2];\n  dst[7] = v1 * m[1 * 4 + 3];\n  dst[8] = v2 * m[2 * 4 + 0];\n  dst[9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The point.\n * @param {Vec3} dst optional vec3 to store result\n * @return {Vec3} dst or new vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformPoint(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n  dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\n  dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\n  dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n * direction, transforms that direction by the matrix, and returns the result;\n * assumes the transformation of 3-dimensional space represented by the matrix\n * is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion. Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The direction.\n * @param {Vec3} dst optional Vec3 to store result\n * @return {Vec3} dst or new Vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformDirection(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n * as a normal to a surface, and computes a vector which is normal upon\n * transforming that surface by the matrix. The effect of this function is the\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\n * function assumes the transformation of 3-dimensional space represented by the\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion.  Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The normal.\n * @param {Vec3} [dst] The direction.\n * @return {Vec3} The transformed direction.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformNormal(m, v, dst) {\n  dst = dst || v3.create();\n  var mi = inverse(m);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttribsFromArrays = createAttribsFromArrays;\nexports.createBuffersFromArrays = createBuffersFromArrays;\nexports.createBufferFromArray = createBufferFromArray;\nexports.createBufferFromTypedArray = createBufferFromTypedArray;\nexports.createBufferInfoFromArrays = createBufferInfoFromArrays;\nexports.setAttribInfoBufferFromArray = setAttribInfoBufferFromArray;\nexports.setAttributePrefix = setAttributePrefix;\nexports.setAttributeDefaults_ = setDefaults;\nexports.getNumComponents_ = getNumComponents;\nexports.getArray_ = getArray;\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level attribute and buffer related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/attributes\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  attribPrefix: \"\"\n};\n/**\n * Sets the default attrib prefix\n *\n * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n * as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n *\n * In otherwords I'll create arrays of geometry like this\n *\n *     var arrays = {\n *       position: ...\n *       normal: ...\n *       texcoord: ...\n *     };\n *\n * But need those mapped to attributes and my attributes start with `a_`.\n *\n * @deprecated see {@link module:twgl.setDefaults}\n * @param {string} prefix prefix for attribs\n * @memberOf module:twgl/attributes\n */\n\nfunction setAttributePrefix(prefix) {\n  defaults.attribPrefix = prefix;\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n}\n\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || gl.STATIC_DRAW);\n}\n/**\n * Given typed array creates a WebGLBuffer and copies the typed array\n * into it.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n * @return {WebGLBuffer} the created WebGLBuffer\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\n  if (helper.isBuffer(gl, typedArray)) {\n    return typedArray;\n  }\n\n  type = type || gl.ARRAY_BUFFER;\n  var buffer = gl.createBuffer();\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n  return buffer;\n}\n\nfunction isIndices(name) {\n  return name === \"indices\";\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n}\n\nfunction getArray(array) {\n  return array.length ? array : array.data;\n}\n\nvar texcoordRE = /coord|texture/i;\nvar colorRE = /color|colour/i;\n\nfunction guessNumComponentsFromName(name, length) {\n  var numComponents;\n\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3; // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw \"Can not guess numComponents for attribute '\" + name + \"'. Tried \" + numComponents + \" but \" + length + \" values is not evenly divisible by \" + numComponents + \". You should specify it.\";\n  }\n\n  return numComponents;\n}\n\nfunction getNumComponents(array, arrayName) {\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\n}\n\nfunction makeTypedArray(array, name) {\n  if (typedArrays.isArrayBuffer(array)) {\n    return array;\n  }\n\n  if (typedArrays.isArrayBuffer(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array\n    };\n  }\n\n  var Type = array.type;\n\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint16Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n\n  return new Type(array.data);\n}\n/**\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n * for the attribute.\n *\n * @typedef {Object} AttribInfo\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] synonym for `numComponents`.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {number} [divisor] the divisor in instances. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * Use this type of array spec when TWGL can't guess the type or number of compoments of an array\n * @typedef {Object} FullArraySpec\n * @property {(number|number[]|ArrayBufferView)} data The data of the array. A number alone becomes the number of elements of type.\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n *    If `coord` is in the name assumes `numComponents = 2`.\n *    If `color` is in the name assumes `numComponents = 4`.\n *    otherwise assumes `numComponents = 3`\n * @property {constructor} type The type. This is only used if `data` is a JavaScript array. It is the constructor for the typedarray. (eg. `Uint8Array`).\n * For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: Uint8Array, data: [255,0,255,255, ...], }`.\n * @property {number} [size] synonym for `numComponents`.\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n * @property {string} [name] synonym for `attrib`.\n * @property {string} [attribName] synonym for `attrib`.\n * @memberOf module:twgl\n */\n\n/**\n * An individual array in {@link module:twgl.Arrays}\n *\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\n *\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\n * @memberOf module:twgl\n */\n\n/**\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n * @memberOf module:twgl\n */\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      var arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      var attribs = {\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * notes:\n *\n * *   Arrays can take various forms\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {module:twgl.Arrays} arrays The arrays\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createAttribsFromArrays(gl, arrays) {\n  var attribs = {};\n  Object.keys(arrays).forEach(function (arrayName) {\n    if (!isIndices(arrayName)) {\n      var array = arrays[arrayName];\n      var attribName = array.attrib || array.name || array.attribName || defaults.attribPrefix + arrayName;\n      var buffer;\n      var type;\n      var normalization;\n      var numComponents;\n      var numValues;\n\n      if (typeof array === \"number\" || typeof array.data === \"number\") {\n        numValues = array.data || array;\n        var arrayType = array.type || Float32Array;\n        var numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\n        type = typedArrays.getGLTypeForTypedArrayType(arrayType);\n        normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\n        numComponents = array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues);\n        buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, numBytes, array.drawType || gl.STATIC_DRAW);\n      } else {\n        var typedArray = makeTypedArray(array, arrayName);\n        buffer = createBufferFromTypedArray(gl, typedArray, undefined, array.drawType);\n        type = typedArrays.getGLTypeForTypedArray(typedArray);\n        normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArray(typedArray);\n        numComponents = getNumComponents(array, arrayName);\n        numValues = typedArray.length;\n      }\n\n      attribs[attribName] = {\n        buffer: buffer,\n        numComponents: numComponents,\n        type: type,\n        normalize: normalization,\n        stride: array.stride || 0,\n        offset: array.offset || 0,\n        divisor: array.divisor === undefined ? undefined : array.divisor,\n        drawType: array.drawType\n      };\n    }\n  });\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  return attribs;\n}\n/**\n * Sets the contents of a buffer attached to an attribInfo\n *\n * This is helper function to dynamically update a buffer.\n *\n * Let's say you make a bufferInfo\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n *  And you want to dynamically upate the positions. You could do this\n *\n *     // assuming arrays.position has already been updated with new data.\n *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\n *\n * @param {WebGLRenderingContext} gl\n * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\n *   the name of the attribute will include the prefix.\n * @param {ArraySpec} array Note: it is arguably ineffient to pass in anything but a typed array because anything\n *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\n *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\n * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\n *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\n *    for the portion of the array you want to use.\n *\n *        var someArray = new Float32Array(1000); // an array with 1000 floats\n *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\n *\n *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\n * @memberOf module:twgl/attributes\n */\n\n\nfunction setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\n  array = makeTypedArray(array);\n\n  if (offset !== undefined) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, attribInfo.buffer);\n    gl.bufferSubData(gl.ARRAY_BUFFER, offset, array);\n  } else {\n    setBufferFromTypedArray(gl, gl.ARRAY_BUFFER, attribInfo.buffer, array, attribInfo.drawType);\n  }\n}\n\nfunction getBytesPerValueForGLType(gl, type) {\n  if (type === gl.BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.INT) return 4; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_INT) return 4; // eslint-disable-line\n\n  if (type === gl.FLOAT) return 4; // eslint-disable-line\n\n  return 0;\n}\n/**\n * tries to get the number of elements from a set of arrays.\n */\n\n\nvar positionKeys = ['position', 'positions', 'a_position'];\n\nfunction getNumElementsFromNonIndexedArrays(arrays) {\n  var key;\n\n  for (var _ii = 0; _ii < positionKeys.length; ++_ii) {\n    key = positionKeys[_ii];\n\n    if (key in arrays) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(arrays)[0];\n  }\n\n  var array = arrays[key];\n  var length = getArray(array).length;\n  var numComponents = getNumComponents(array, key);\n  var numElements = length / numComponents;\n\n  if (length % numComponents > 0) {\n    throw \"numComponents \" + numComponents + \" not correct for length \" + length;\n  }\n\n  return numElements;\n}\n\nfunction getNumElementsFromAttributes(gl, attribs) {\n  var key;\n  var ii;\n\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n\n    if (key in attribs) {\n      break;\n    }\n\n    key = defaults.attribPrefix + key;\n\n    if (key in attribs) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(attribs)[0];\n  }\n\n  var attrib = attribs[key];\n  gl.bindBuffer(gl.ARRAY_BUFFER, attrib.buffer);\n  var numBytes = gl.getBufferParameter(gl.ARRAY_BUFFER, gl.BUFFER_SIZE);\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  var bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\n  var totalElements = numBytes / bytesPerValue;\n  var numComponents = attrib.numComponents || attrib.size; // TODO: check stride\n\n  var numElements = totalElements / numComponents;\n\n  if (numElements % 1 !== 0) {\n    throw \"numComponents \" + numComponents + \" not correct for length \" + length;\n  }\n\n  return numElements;\n}\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs approriate to call `setAttributes`\n * @memberOf module:twgl\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * Given an object like\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         a_position: { buffer: WebGLBuffer, numComponents: 3, },\n *         a_normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         a_texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     var arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also by TypedArrays\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or augmentedTypedArrays\n *\n *     var positions = createAugmentedTypedArray(3, 4);\n *     var texcoords = createAugmentedTypedArray(2, 4);\n *     var normals   = createAugmentedTypedArray(3, 4);\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     var arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     var bufferInfo = {\n *       attribs: {\n *         a_position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         a_texcoods: { numComponents: 2, buffer: gl.createBuffer(), },\n *         a_normals: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.Arrays} arrays Your data\n * @return {module:twgl.BufferInfo} A BufferInfo\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferInfoFromArrays(gl, arrays) {\n  var bufferInfo = {\n    attribs: createAttribsFromArrays(gl, arrays)\n  };\n  var indices = arrays.indices;\n\n  if (indices) {\n    var newIndices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, gl.ELEMENT_ARRAY_BUFFER);\n    bufferInfo.numElements = newIndices.length;\n    bufferInfo.elementType = typedArrays.getGLTypeForTypedArray(newIndices);\n  } else {\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\n  }\n\n  return bufferInfo;\n}\n/**\n * Creates a buffer from an array, typed array, or array spec\n *\n * Given something like this\n *\n *     [1, 2, 3],\n *\n * or\n *\n *     new Uint16Array([1,2,3]);\n *\n * or\n *\n *     {\n *        data: [1, 2, 3],\n *        type: Uint8Array,\n *     }\n *\n * returns a WebGLBuffer that constains the given data.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\n * @param {string} arrayName name of array. Used to guess the type if type can not be dervied other wise.\n * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromArray(gl, array, arrayName) {\n  var type = arrayName === \"indices\" ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;\n  var typedArray = makeTypedArray(array, arrayName);\n  return createBufferFromTypedArray(gl, typedArray, type);\n}\n/**\n * Creates buffers from arrays or typed arrays\n *\n * Given something like this\n *\n *     var arrays = {\n *        positions: [1, 2, 3],\n *        normals: [0, 0, 1],\n *     }\n *\n * returns something like\n *\n *     buffers = {\n *       positions: WebGLBuffer,\n *       normals: WebGLBuffer,\n *     }\n *\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.Arrays} arrays\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBuffersFromArrays(gl, arrays) {\n  var buffers = {};\n  Object.keys(arrays).forEach(function (key) {\n    buffers[key] = createBufferFromArray(gl, arrays[key], key);\n  }); // Ugh!\n\n  if (arrays.indices) {\n    buffers.numElements = arrays.indices.length;\n    buffers.elementType = typedArrays.getGLTypeForTypedArray(makeTypedArray(arrays.indices), 'indices');\n  } else {\n    buffers.numElements = getNumElementsFromNonIndexedArrays(arrays);\n  }\n\n  return buffers;\n}\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.setTextureDefaults_ = setDefaults;\nexports.createSampler = createSampler;\nexports.createSamplers = createSamplers;\nexports.setSamplerParameters = setSamplerParameters;\nexports.createTexture = createTexture;\nexports.setEmptyTexture = setEmptyTexture;\nexports.setTextureFromArray = setTextureFromArray;\nexports.loadTextureFromUrl = loadTextureFromUrl;\nexports.setTextureFromElement = setTextureFromElement;\nexports.setTextureFilteringForSize = setTextureFilteringForSize;\nexports.setTextureParameters = setTextureParameters;\nexports.setDefaultTextureColor = setDefaultTextureColor;\nexports.createTextures = createTextures;\nexports.resizeTexture = resizeTexture;\nexports.getNumComponentsForFormat = getNumComponentsForFormat;\nexports.getBytesPerElementForInternalFormat = getBytesPerElementForInternalFormat;\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level texture related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.textures` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/textures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  textureColor: new Uint8Array([128, 192, 255, 255]),\n  textureOptions: {},\n  crossOrigin: undefined\n};\nvar isArrayBuffer = typedArrays.isArrayBuffer; // Should we make this on demand?\n\nvar ctx = _globalObject.default.document && _globalObject.default.document.createElement ? _globalObject.default.document.createElement(\"canvas\").getContext(\"2d\") : null; // NOTE: Chrome supports 2D canvas in a Worker (behind flag as of v64 but\n//       not only does Firefox NOT support it but Firefox freezes immediately\n//       if you try to create one instead of just returning null and continuing.\n//  : (global.OffscreenCanvas && (new global.OffscreenCanvas(1, 1)).getContext(\"2d\"));  // OffscreenCanvas may not support 2d\n// NOTE: We can maybe remove some of the need for the 2d canvas. In WebGL2\n// we can use the various unpack settings. Otherwise we could try using\n// the ability of an imagebitmap to be cut. Unfortunately cutting an imagebitmap\n// is async and the current TWGL code expects a non-Async result though that\n// might not be a problem. ImageBitmap though is not available in Edge or Safari\n// as of 2018-01-02\n\n/* PixelFormat */\n\nvar ALPHA = 0x1906;\nvar RGB = 0x1907;\nvar RGBA = 0x1908;\nvar LUMINANCE = 0x1909;\nvar LUMINANCE_ALPHA = 0x190A;\nvar DEPTH_COMPONENT = 0x1902;\nvar DEPTH_STENCIL = 0x84F9;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\nvar R8 = 0x8229;\nvar R8_SNORM = 0x8F94;\nvar R16F = 0x822D;\nvar R32F = 0x822E;\nvar R8UI = 0x8232;\nvar R8I = 0x8231;\nvar RG16UI = 0x823A;\nvar RG16I = 0x8239;\nvar RG32UI = 0x823C;\nvar RG32I = 0x823B;\nvar RG8 = 0x822B;\nvar RG8_SNORM = 0x8F95;\nvar RG16F = 0x822F;\nvar RG32F = 0x8230;\nvar RG8UI = 0x8238;\nvar RG8I = 0x8237;\nvar R16UI = 0x8234;\nvar R16I = 0x8233;\nvar R32UI = 0x8236;\nvar R32I = 0x8235;\nvar RGB8 = 0x8051;\nvar SRGB8 = 0x8C41;\nvar RGB565 = 0x8D62;\nvar RGB8_SNORM = 0x8F96;\nvar R11F_G11F_B10F = 0x8C3A;\nvar RGB9_E5 = 0x8C3D;\nvar RGB16F = 0x881B;\nvar RGB32F = 0x8815;\nvar RGB8UI = 0x8D7D;\nvar RGB8I = 0x8D8F;\nvar RGB16UI = 0x8D77;\nvar RGB16I = 0x8D89;\nvar RGB32UI = 0x8D71;\nvar RGB32I = 0x8D83;\nvar RGBA8 = 0x8058;\nvar SRGB8_ALPHA8 = 0x8C43;\nvar RGBA8_SNORM = 0x8F97;\nvar RGB5_A1 = 0x8057;\nvar RGBA4 = 0x8056;\nvar RGB10_A2 = 0x8059;\nvar RGBA16F = 0x881A;\nvar RGBA32F = 0x8814;\nvar RGBA8UI = 0x8D7C;\nvar RGBA8I = 0x8D8E;\nvar RGB10_A2UI = 0x906F;\nvar RGBA16UI = 0x8D76;\nvar RGBA16I = 0x8D88;\nvar RGBA32I = 0x8D82;\nvar RGBA32UI = 0x8D70;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar DEPTH_COMPONENT24 = 0x81A6;\nvar DEPTH_COMPONENT32F = 0x8CAC;\nvar DEPTH32F_STENCIL8 = 0x8CAD;\nvar DEPTH24_STENCIL8 = 0x88F0;\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar HALF_FLOAT_OES = 0x8D61; // Thanks Khronos for making this different >:(\n\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar RG = 0x8227;\nvar RG_INTEGER = 0x8228;\nvar RED = 0x1903;\nvar RED_INTEGER = 0x8D94;\nvar RGB_INTEGER = 0x8D98;\nvar RGBA_INTEGER = 0x8D99;\nvar formatInfo = {};\n{\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\n  // the name.\n  var f = formatInfo;\n  f[ALPHA] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE_ALPHA] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RED] = {\n    numColorComponents: 1\n  };\n  f[RED_INTEGER] = {\n    numColorComponents: 1\n  };\n  f[RG] = {\n    numColorComponents: 2\n  };\n  f[RG_INTEGER] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGB_INTEGER] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RGBA_INTEGER] = {\n    numColorComponents: 4\n  };\n  f[DEPTH_COMPONENT] = {\n    numColorComponents: 1\n  };\n  f[DEPTH_STENCIL] = {\n    numColorComponents: 2\n  };\n}\nvar textureInternalFormatInfo = {};\n{\n  // NOTE: these properties need unique names so we can let Uglify mangle the name.\n  var t = textureInternalFormatInfo; // unsized formats\n\n  t[ALPHA] = {\n    textureFormat: ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE] = {\n    textureFormat: LUMINANCE,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE_ALPHA] = {\n    textureFormat: LUMINANCE_ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [2, 4, 4, 8],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[RGB] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 6, 6, 12, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGBA] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 8, 8, 16, 2, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1]\n  }; // sized formats\n\n  t[R8] = {\n    textureFormat: RED,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 1,\n    type: UNSIGNED_BYTE\n  };\n  t[R8_SNORM] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 1,\n    type: BYTE\n  };\n  t[R16F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[R32F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT\n  };\n  t[R8UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 1,\n    type: UNSIGNED_BYTE\n  };\n  t[R8I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 1,\n    type: BYTE\n  };\n  t[R16UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: UNSIGNED_SHORT\n  };\n  t[R16I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: SHORT\n  };\n  t[R32UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT\n  };\n  t[R32I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: INT\n  };\n  t[RG8] = {\n    textureFormat: RG,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 2,\n    type: UNSIGNED_BYTE\n  };\n  t[RG8_SNORM] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 2,\n    type: BYTE\n  };\n  t[RG16F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [8, 4],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RG32F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: FLOAT\n  };\n  t[RG8UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: UNSIGNED_BYTE\n  };\n  t[RG8I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: BYTE\n  };\n  t[RG16UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_SHORT\n  };\n  t[RG16I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: SHORT\n  };\n  t[RG32UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: UNSIGNED_INT\n  };\n  t[RG32I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: INT\n  };\n  t[RGB8] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[SRGB8] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[RGB565] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGB8_SNORM] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: BYTE\n  };\n  t[R11F_G11F_B10F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_10F_11F_11F_REV]\n  };\n  t[RGB9_E5] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_5_9_9_9_REV]\n  };\n  t[RGB16F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGB32F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: FLOAT\n  };\n  t[RGB8UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[RGB8I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 3,\n    type: BYTE\n  };\n  t[RGB16UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 6,\n    type: UNSIGNED_SHORT\n  };\n  t[RGB16I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 6,\n    type: SHORT\n  };\n  t[RGB32UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: UNSIGNED_INT\n  };\n  t[RGB32I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: INT\n  };\n  t[RGBA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[SRGB8_ALPHA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[RGBA8_SNORM] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: BYTE\n  };\n  t[RGB5_A1] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2, 4],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_5_5_1, UNSIGNED_INT_2_10_10_10_REV]\n  };\n  t[RGBA4] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_4_4_4_4]\n  };\n  t[RGB10_A2] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_2_10_10_10_REV\n  };\n  t[RGBA16F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [16, 8],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGBA32F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: FLOAT\n  };\n  t[RGBA8UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[RGBA8I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: BYTE\n  };\n  t[RGB10_A2UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_2_10_10_10_REV\n  };\n  t[RGBA16UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: UNSIGNED_SHORT\n  };\n  t[RGBA16I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: SHORT\n  };\n  t[RGBA32I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: INT\n  };\n  t[RGBA32UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: UNSIGNED_INT\n  }; // Sized Internal\n\n  t[DEPTH_COMPONENT16] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2, 4],\n    type: [UNSIGNED_SHORT, UNSIGNED_INT]\n  };\n  t[DEPTH_COMPONENT24] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT\n  };\n  t[DEPTH_COMPONENT32F] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT\n  };\n  t[DEPTH24_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_24_8\n  };\n  t[DEPTH32F_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT_32_UNSIGNED_INT_24_8_REV\n  };\n  Object.keys(t).forEach(function (internalFormat) {\n    var info = t[internalFormat];\n    info.bytesPerElementMap = {};\n\n    if (Array.isArray(info.bytesPerElement)) {\n      info.bytesPerElement.forEach(function (bytesPerElement, ndx) {\n        var type = info.type[ndx];\n        info.bytesPerElementMap[type] = bytesPerElement;\n      });\n    } else {\n      var type = info.type;\n      info.bytesPerElementMap[type] = info.bytesPerElement;\n    }\n  });\n}\n/**\n * Gets the number of bytes per element for a given internalFormat / type\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {number} the number of bytes per element for the given internalFormat, type combo\n * @memberOf module:twgl/textures\n */\n\nfunction getBytesPerElementForInternalFormat(internalFormat, type) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  var bytesPerElement = info.bytesPerElementMap[type];\n\n  if (bytesPerElement === undefined) {\n    throw \"unknown internal format\";\n  }\n\n  return bytesPerElement;\n}\n/**\n * Gets the format for a given internalFormat\n *\n * @param {number} internalFormat The internal format\n * @return {{format:number, type:number}} the corresponding format and type\n */\n\n\nfunction getFormatAndTypeForInternalFormat(internalFormat) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return {\n    format: info.textureFormat,\n    type: Array.isArray(info.type) ? info.type[0] : info.type\n  };\n}\n/**\n * Returns true if value is power of 2\n * @param {number} value number to check.\n * @return true if value is power of 2\n */\n\n\nfunction isPowerOf2(value) {\n  return (value & value - 1) === 0;\n}\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {boolean} true if we can generate mips\n */\n\n\nfunction canGenerateMipmap(gl, width, height, internalFormat\n/*, type */\n) {\n  if (!utils.isWebGL2(gl)) {\n    return isPowerOf2(width) && isPowerOf2(height);\n  }\n\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.colorRenderable && info.textureFilterable;\n}\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {boolean} true if we can generate mips\n */\n\n\nfunction canFilter(internalFormat\n/*, type */\n) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.textureFilterable;\n}\n/**\n * Gets the number of compontents for a given image format.\n * @param {number} format the format.\n * @return {number} the number of components for the format.\n * @memberOf module:twgl/textures\n */\n\n\nfunction getNumComponentsForFormat(format) {\n  var info = formatInfo[format];\n\n  if (!info) {\n    throw \"unknown format: \" + format;\n  }\n\n  return info.numColorComponents;\n}\n/**\n * Gets the texture type for a given array type.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @return {number} the gl texture type\n */\n\n\nfunction getTextureTypeForArrayType(gl, src, defaultType) {\n  if (isArrayBuffer(src)) {\n    return typedArrays.getGLTypeForTypedArray(src);\n  }\n\n  return defaultType || gl.UNSIGNED_BYTE;\n}\n\nfunction guessDimensions(gl, target, width, height, numElements) {\n  if (numElements % 1 !== 0) {\n    throw \"can't guess dimensions\";\n  }\n\n  if (!width && !height) {\n    var size = Math.sqrt(numElements / (target === gl.TEXTURE_CUBE_MAP ? 6 : 1));\n\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width;\n\n    if (height % 1) {\n      throw \"can't guess dimensions\";\n    }\n  } else if (!width) {\n    width = numElements / height;\n\n    if (width % 1) {\n      throw \"can't guess dimensions\";\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Sets the default texture color.\n *\n * The default texture color is used when loading textures from\n * urls. Because the URL will be loaded async we'd like to be\n * able to use the texture immediately. By putting a 1x1 pixel\n * color in the texture we can start using the texture before\n * the URL has loaded.\n *\n * @param {number[]} color Array of 4 values in the range 0 to 1\n * @deprecated see {@link module:twgl.setDefaults}\n * @memberOf module:twgl/textures\n */\n\n\nfunction setDefaultTextureColor(color) {\n  defaults.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n\n  if (newDefaults.textureColor) {\n    setDefaultTextureColor(newDefaults.textureColor);\n  }\n}\n/**\n * A function to generate the source for a texture.\n * @callback TextureFunc\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options the texture options\n * @return {*} Returns any of the things documentented for `src` for {@link module:twgl.TextureOptions}.\n * @memberOf module:twgl\n */\n\n/**\n * Texture options passed to most texture functions. Each function will use whatever options\n * are appropriate for its needs. This lets you pass the same options to all functions.\n *\n * Note: A `TexImageSource` is defined in the WebGL spec as a `HTMLImageElement`, `HTMLVideoElement`,\n * `HTMLCanvasElement`, `ImageBitmap`, or `ImageData`.\n *\n * @typedef {Object} TextureOptions\n * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\n * @property {number} [level] the mip level to affect. Defaults to 0. Note, if set auto will be considered false unless explicitly set to true.\n * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\n * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\n * @property {number} [depth] the depth of a texture. Only used if src is an array or type array or null and target is `TEXTURE_3D` .\n * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\n *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\n * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\n * @property {number} [minMag] both the min and mag filter settings.\n * @property {number} [internalFormat] internal format for texture. Defaults to `gl.RGBA`\n * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\n * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBufferView. If `src`\n *     is ArrayBufferView defaults to type that matches ArrayBufferView type.\n * @property {number} [wrap] Texture wrapping for both S and T (and R if TEXTURE_3D or WebGLSampler). Defaults to `gl.REPEAT` for 2D unless src is WebGL1 and src not npot and `gl.CLAMP_TO_EDGE` for cube\n * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapR] Texture wrapping for R. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [minLod] TEXTURE_MIN_LOD setting\n * @property {number} [maxLod] TEXTURE_MAX_LOD setting\n * @property {number} [baseLevel] TEXTURE_BASE_LEVEL setting\n * @property {number} [maxLevel] TEXTURE_MAX_LEVEL setting\n * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\n * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {(number[]|ArrayBufferView)} color color used as temporary 1x1 pixel color for textures loaded async when src is a string.\n *    If it's a JavaScript array assumes color is 0 to 1 like most GL colors as in `[1, 0, 0, 1] = red=1, green=0, blue=0, alpha=0`.\n *    Defaults to `[0.5, 0.75, 1, 1]`. See {@link module:twgl.setDefaultTextureColor}. If `false` texture is set. Can be used to re-load a texture\n * @property {boolean} [auto] If `undefined` or `true`, in WebGL1, texture filtering is set automatically for non-power of 2 images and\n *    mips are generated for power of 2 images. In WebGL2 mips are generated if they can be. Note: if `level` is set above\n *    then then `auto` is assumed to be `false` unless explicity set to `true`.\n * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\n *\n *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n *\n * @property {(number[]|ArrayBufferView|TexImageSource|TexImageSource[]|string|string[]|module:twgl.TextureFunc)} [src] source for texture\n *\n *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\n *    1x1 pixel texture will be returned immediatley. The texture will be updated once the image has downloaded.\n *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\n *    The pieces will be uploaded in `cubeFaceOrder`\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_CUBE_MAP` then it must have 6 entries, one for each face of a cube map.\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_2D_ARRAY` then eact entry is a slice of the a 2d array texture\n *    and will be scaled to the specified width and height OR to the size of the first image that loads.\n *\n *    If `TexImageSource` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\n *    `HTMLCanvasElement`, `HTMLVideoElement`.\n *\n *    If `number[]` or `ArrayBufferView` it's assumed to be data for a texture. If `width` or `height` is\n *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponents`\n *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\n *    by 6. Then\n *\n *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\n *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\n *\n *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\n *\n * If `number[]` will be converted to `type`.\n *\n * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\n * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\n * an array etc...\n *\n * If `src` is undefined then an empty texture will be created of size `width` by `height`.\n *\n * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\n *    default: undefined. Also see {@link module:twgl.setDefaults}.\n *\n * @memberOf module:twgl\n */\n// NOTE: While querying GL is considered slow it's not remotely as slow\n// as uploading a texture. On top of that you're unlikely to call this in\n// a perf critical loop. Even if upload a texture every frame that's unlikely\n// to be more than 1 or 2 textures a frame. In other words, the benefits of\n// making the API easy to use outweigh any supposed perf benefits\n//\n// Also note I get that having one global of these is bad practice.\n// As long as it's used correctly it means no garbage which probably\n// doesn't matter when dealing with textures but old habits die hard.\n\n\nvar lastPackState = {};\n/**\n * Saves any packing state that will be set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\nfunction savePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    lastPackState.colorspaceConversion = gl.getParameter(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL);\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    lastPackState.premultiplyAlpha = gl.getParameter(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    lastPackState.flipY = gl.getParameter(gl.UNPACK_FLIP_Y_WEBGL);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, options.flipY);\n  }\n}\n/**\n * Restores any packing state that was set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction restorePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, lastPackState.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, lastPackState.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, lastPackState.flipY);\n  }\n}\n/**\n * Saves state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction saveSkipState(gl) {\n  lastPackState.unpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n\n  if (utils.isWebGL2(gl)) {\n    lastPackState.unpackRowLength = gl.getParameter(gl.UNPACK_ROW_LENGTH);\n    lastPackState.unpackImageHeight = gl.getParameter(gl.UNPACK_IMAGE_HEIGHT);\n    lastPackState.unpackSkipPixels = gl.getParameter(gl.UNPACK_SKIP_PIXELS);\n    lastPackState.unpackSkipRows = gl.getParameter(gl.UNPACK_SKIP_ROWS);\n    lastPackState.unpackSkipImages = gl.getParameter(gl.UNPACK_SKIP_IMAGES);\n  }\n}\n/**\n * Restores state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction restoreSkipState(gl) {\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, lastPackState.unpackAlignment);\n\n  if (utils.isWebGL2(gl)) {\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, lastPackState.unpackRowLength);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, lastPackState.unpackImageHeight);\n    gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, lastPackState.unpackSkipPixels);\n    gl.pixelStorei(gl.UNPACK_SKIP_ROWS, lastPackState.unpackSkipRows);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, lastPackState.unpackSkipImages);\n  }\n}\n/**\n * Sets the parameters of a texture or sampler\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number|WebGLSampler} target texture target or sampler\n * @param {function()} parameteriFn texParamteri or samplerParameteri fn\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n */\n\n\nfunction setTextureSamplerParameters(gl, target, parameteriFn, options) {\n  if (options.minMag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.minMag);\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.minMag);\n  }\n\n  if (options.min) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.min);\n  }\n\n  if (options.mag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.mag);\n  }\n\n  if (options.wrap) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrap);\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrap);\n\n    if (target === gl.TEXTURE_3D || helper.isSampler(gl, target)) {\n      parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrap);\n    }\n  }\n\n  if (options.wrapR) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrapR);\n  }\n\n  if (options.wrapS) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrapS);\n  }\n\n  if (options.wrapT) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrapT);\n  }\n\n  if (options.minLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_LOD, options.minLod);\n  }\n\n  if (options.maxLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LOD, options.maxLod);\n  }\n\n  if (options.baseLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_BASE_LEVEL, options.baseLevel);\n  }\n\n  if (options.maxLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LEVEL, options.maxLevel);\n  }\n}\n/**\n * Sets the texture parameters of a texture.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureParameters(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  setTextureSamplerParameters(gl, target, gl.texParameteri, options);\n}\n/**\n * Sets the sampler parameters of a sampler.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLSampler} sampler the WebGLSampler to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setSamplerParameters(gl, sampler, options) {\n  setTextureSamplerParameters(gl, sampler, gl.samplerParameteri, options);\n}\n/**\n * Creates a new sampler object and sets parameters.\n *\n * Example:\n *\n *      const sampler = twgl.createSampler(gl, {\n *        minMag: gl.NEAREST,         // sets both TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER\n *        wrap: gl.CLAMP_TO_NEAREST,  // sets both TEXTURE_WRAP_S and TEXTURE_WRAP_T and TEXTURE_WRAP_R\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per sampler.\n * @return {Object.<string,WebGLSampler>} the created samplers by name\n */\n\n\nfunction createSampler(gl, options) {\n  var sampler = gl.createSampler();\n  setSamplerParameters(gl, sampler, options);\n  return sampler;\n}\n/**\n * Creates a multiple sampler objects and sets parameters on each.\n *\n * Example:\n *\n *      const samplers = twgl.createSamplers(gl, {\n *        nearest: {\n *          minMag: gl.NEAREST,\n *        },\n *        nearestClampS: {\n *          minMag: gl.NEAREST,\n *          wrapS: gl.CLAMP_TO_NEAREST,\n *        },\n *        linear: {\n *          minMag: gl.LINEAR,\n *        },\n *        nearestClamp: {\n *          minMag: gl.NEAREST,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClamp: {\n *          minMag: gl.LINEAR,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClampT: {\n *          minMag: gl.LINEAR,\n *          wrapT: gl.CLAMP_TO_EDGE,\n *        },\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set on the sampler\n */\n\n\nfunction createSamplers(gl, samplerOptions) {\n  var samplers = {};\n  Object.keys(samplerOptions).forEach(function (name) {\n    samplers[name] = createSampler(gl, samplerOptions[name]);\n  });\n  return samplers;\n}\n/**\n * Makes a 1x1 pixel\n * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\n * @param {(number[]|ArrayBufferView)} [color] The color using 0-1 values\n * @return {Uint8Array} Unit8Array with color.\n */\n\n\nfunction make1Pixel(color) {\n  color = color || defaults.textureColor;\n\n  if (isArrayBuffer(color)) {\n    return color;\n  }\n\n  return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n/**\n * Sets filtering or generates mips for texture based on width or height\n * If width or height is not passed in uses `options.width` and//or `options.height`\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @param {number} [width] width of texture\n * @param {number} [height] height of texture\n * @param {number} [internalFormat] The internalFormat parameter from texImage2D etc..\n * @param {number} [type] The type parameter for texImage2D etc..\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type) {\n  options = options || defaults.textureOptions;\n  internalFormat = internalFormat || gl.RGBA;\n  type = type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n  width = width || options.width;\n  height = height || options.height;\n  gl.bindTexture(target, tex);\n\n  if (canGenerateMipmap(gl, width, height, internalFormat, type)) {\n    gl.generateMipmap(target);\n  } else {\n    var filtering = canFilter(internalFormat, type) ? gl.LINEAR : gl.NEAREST;\n    gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n}\n\nfunction shouldAutomaticallySetTextureFilteringForSize(options) {\n  return options.auto === true || options.auto === undefined && options.level === undefined;\n}\n/**\n * Gets an array of cubemap face enums\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @return {number[]} cubemap face enums\n */\n\n\nfunction getCubeFaceOrder(gl, options) {\n  options = options || {};\n  return options.cubeFaceOrder || [gl.TEXTURE_CUBE_MAP_POSITIVE_X, gl.TEXTURE_CUBE_MAP_NEGATIVE_X, gl.TEXTURE_CUBE_MAP_POSITIVE_Y, gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, gl.TEXTURE_CUBE_MAP_POSITIVE_Z, gl.TEXTURE_CUBE_MAP_NEGATIVE_Z];\n}\n/**\n * @typedef {Object} FaceInfo\n * @property {number} face gl enum for texImage2D\n * @property {number} ndx face index (0 - 5) into source data\n * @ignore\n */\n\n/**\n * Gets an array of FaceInfos\n * There's a bug in some NVidia drivers that will crash the driver if\n * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\n * the user's desired order from his faces to WebGL and make sure we\n * do the faces in WebGL order\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundent but\n *    it's needed internally to sort the array of `ndx` properties by `face`.\n */\n\n\nfunction getCubeFacesWithNdx(gl, options) {\n  var faces = getCubeFaceOrder(gl, options); // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\n\n  var facesWithNdx = faces.map(function (face, ndx) {\n    return {\n      face: face,\n      ndx: ndx\n    };\n  });\n  facesWithNdx.sort(function (a, b) {\n    return a.face - b.face;\n  });\n  return facesWithNdx;\n}\n/**\n * Set a texture from the contents of an element. Will also set\n * texture filtering or generate mips based on the dimensions of the element\n * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\n * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {HTMLElement} element a canvas, img, or video element.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @kind function\n */\n\n\nfunction setTextureFromElement(gl, tex, element, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  var level = options.level || 0;\n  var width = element.width;\n  var height = element.height;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // guess the parts\n    var imgWidth = element.width;\n    var imgHeight = element.height;\n    var size;\n    var slices;\n\n    if (imgWidth / 6 === imgHeight) {\n      // It's 6x1\n      size = imgHeight;\n      slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\n    } else if (imgHeight / 6 === imgWidth) {\n      // It's 1x6\n      size = imgWidth;\n      slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\n    } else if (imgWidth / 3 === imgHeight / 2) {\n      // It's 3x2\n      size = imgWidth / 3;\n      slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\n    } else if (imgWidth / 2 === imgHeight / 3) {\n      // It's 2x3\n      size = imgWidth / 2;\n      slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\n    } else {\n      throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\n    }\n\n    if (ctx) {\n      ctx.canvas.width = size;\n      ctx.canvas.height = size;\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size;\n        ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\n        gl.texImage2D(f.face, level, internalFormat, format, type, ctx.canvas);\n      }); // Free up the canvas memory\n\n      ctx.canvas.width = 1;\n      ctx.canvas.height = 1;\n    } else if (_globalObject.default.createImageBitmap) {\n      // NOTE: It seems like we should prefer ImageBitmap because unlike canvas it's\n      // note lossy? (alpha is not premultiplied? although I'm not sure what\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size; // We can't easily use a default texture color here as it would have to match\n        // the type across all faces where as with a 2D one there's only one face\n        // so we're replacing everything all at once. It also has to be the correct size.\n        // On the other hand we need all faces to be the same size so as one face loads\n        // the rest match else the texture will be unrenderable.\n\n        gl.texImage2D(f.face, level, internalFormat, size, size, 0, format, type, null);\n\n        _globalObject.default.createImageBitmap(element, xOffset, yOffset, size, size, {\n          premultiplyAlpha: 'none',\n          colorSpaceConversion: 'none'\n        }).then(function (imageBitmap) {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex);\n          gl.texImage2D(f.face, level, internalFormat, format, type, imageBitmap);\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n          }\n        });\n      });\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    var smallest = Math.min(element.width, element.height);\n    var largest = Math.max(element.width, element.height);\n    var depth = largest / smallest;\n\n    if (depth % 1 !== 0) {\n      throw \"can not compute 3D dimensions of element\";\n    }\n\n    var xMult = element.width === largest ? 1 : 0;\n    var yMult = element.height === largest ? 1 : 0;\n    saveSkipState(gl);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, element.width);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, 0);\n    gl.texImage3D(target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null);\n\n    for (var d = 0; d < depth; ++d) {\n      var srcX = d * smallest * xMult;\n      var srcY = d * smallest * yMult;\n      gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, srcX);\n      gl.pixelStorei(gl.UNPACK_SKIP_ROWS, srcY);\n      gl.texSubImage3D(target, level, 0, 0, d, smallest, smallest, 1, format, type, element);\n    }\n\n    restoreSkipState(gl);\n  } else {\n    gl.texImage2D(target, level, internalFormat, format, type, element);\n  }\n\n  restorePackState(gl, options);\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n}\n\nfunction noop() {}\n/**\n * Loads an image\n * @param {string} url url to image\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @return {HTMLImageElement} the image being loaded.\n */\n\n\nfunction loadImage(url, crossOrigin, callback) {\n  callback = callback || noop;\n  var img;\n\n  if (_globalObject.default.Image) {\n    img = new _globalObject.default.Image();\n    crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults.crossOrigin;\n\n    if (crossOrigin !== undefined) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    var clearEventHandlers = function clearEventHandlers() {\n      img.removeEventListener('error', onError); // eslint-disable-line\n\n      img.removeEventListener('load', onLoad); // eslint-disable-line\n\n      img = null;\n    };\n\n    var onError = function onError() {\n      var msg = \"couldn't load image: \" + url;\n      helper.error(msg);\n      callback(msg, img);\n      clearEventHandlers();\n    };\n\n    var onLoad = function onLoad() {\n      callback(null, img);\n      clearEventHandlers();\n    };\n\n    img.addEventListener('error', onError);\n    img.addEventListener('load', onLoad);\n    img.src = url;\n    return img;\n  } else if (_globalObject.default.ImageBitmap) {\n    var err;\n    var bm;\n\n    var cb = function cb() {\n      callback(err, bm);\n    };\n\n    var options = {};\n\n    if (crossOrigin) {\n      options.mode = 'cors'; // TODO: not sure how to translate image.crossOrigin\n    }\n\n    fetch(url, options).then(function (response) {\n      if (!response.ok) {\n        throw response;\n      }\n\n      return response.blob();\n    }).then(function (blob) {\n      return _globalObject.default.createImageBitmap(blob, {\n        premultiplyAlpha: 'none',\n        colorSpaceConversion: 'none'\n      });\n    }).then(function (bitmap) {\n      // not sure if this works. We don't want\n      // to catch the user's error. So, call\n      // the callback in a timeout so we're\n      // not in this scope inside the promise.\n      bm = bitmap;\n      setTimeout(cb);\n    }).catch(function (e) {\n      err = e;\n      setTimeout(cb);\n    });\n    img = null;\n  }\n\n  return img;\n}\n/**\n * check if object is a TexImageSource\n *\n * @param {Object} obj Object to test\n * @return {boolean} true if object is a TexImageSource\n */\n\n\nfunction isTexImageSource(obj) {\n  return _globalObject.default.ImageBitmap && obj instanceof _globalObject.default.ImageBitmap || _globalObject.default.ImageData && obj instanceof _globalObject.default.ImageData || _globalObject.default.HTMLElement && obj instanceof _globalObject.default.HTMLElement;\n}\n/**\n * if obj is an TexImageSource then just\n * uses it otherwise if obj is a string\n * then load it first.\n *\n * @param {string|TexImageSource} obj\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n */\n\n\nfunction loadAndUseImage(obj, crossOrigin, callback) {\n  if (isTexImageSource(obj)) {\n    setTimeout(function () {\n      callback(null, obj);\n    });\n    return obj;\n  }\n\n  return loadImage(obj, crossOrigin, callback);\n}\n/**\n * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\n * the default texture color is used which can be set by calling `setDefaultTextureColor`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureTo1PixelColor(gl, tex, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n\n  if (options.color === false) {\n    return;\n  } // Assume it's a URL\n  // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\n\n\n  var color = make1Pixel(options.color);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, 0, gl.RGBA, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  } else {\n    gl.texImage2D(target, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  }\n}\n/**\n * The src image(s) used to create a texture.\n *\n * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\n * you can pass in urls for images to load into the textures. If it's a single url\n * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\n * this will be a corresponding array of images for the cubemap.\n *\n * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback TextureReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} texture the texture.\n * @param {module:twgl.TextureSrc} souce image(s) used to as the src for the texture\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when all images have finished downloading and been uploaded into their respective textures\n * @callback TexturesReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\n * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback CubemapReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each face.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback ThreeDReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each slice.\n * @memberOf module:twgl\n */\n\n/**\n * Loads a texture from an image from a Url as specified in `options.src`\n * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\n * immediately useable. It will be updated with the contents of the image once the image has finished\n * downloading. Filtering options will be set as approriate for image unless `options.auto === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\n *    be non null if there was an error.\n * @return {HTMLImageElement} the image being downloaded.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadTextureFromUrl(gl, tex, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var img = loadAndUseImage(options.src, options.crossOrigin, function (err, img) {\n    if (err) {\n      callback(err, tex, img);\n    } else {\n      setTextureFromElement(gl, tex, img, options);\n      callback(null, tex, img);\n    }\n  });\n  return img;\n}\n/**\n * Loads a cubemap from 6 urls or TexImageSources as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadCubemapFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n\n  if (urls.length !== 6) {\n    throw \"there must be 6 urls for a cubemap\";\n  }\n\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n\n  if (target !== gl.TEXTURE_CUBE_MAP) {\n    throw \"target must be TEXTURE_CUBE_MAP\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = 6;\n  var errors = [];\n  var faces = getCubeFaceOrder(gl, options);\n  var imgs; // eslint-disable-line\n\n  function uploadImg(faceTarget) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        if (img.width !== img.height) {\n          errors.push(\"cubemap face img is not a square: \" + img.src);\n        } else {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex); // So assuming this is the first image we now have one face that's img sized\n          // and 5 faces that are 1x1 pixel so size the other faces\n\n          if (numToLoad === 5) {\n            // use the default order\n            getCubeFaceOrder(gl).forEach(function (otherTarget) {\n              // Should we re-use the same face or a color?\n              gl.texImage2D(otherTarget, level, internalFormat, format, type, img);\n            });\n          } else {\n            gl.texImage2D(faceTarget, level, internalFormat, format, type, img);\n          }\n\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            gl.generateMipmap(target);\n          }\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(faces[ndx]));\n  });\n}\n/**\n * Loads a 2d array or 3d texture from urls OR TexImageSources as specified in `options.src`.\n * Will set the texture to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n *\n * If the width and height is not specified the width and height of the first\n * image loaded will be used. Note that since images are loaded async\n * which image downloads first is unknown.\n *\n * If an image is not the same size as the width and height it will be scaled\n * to that width and height.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.ThreeDReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadSlicesFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D_ARRAY;\n\n  if (target !== gl.TEXTURE_3D && target !== gl.TEXTURE_2D_ARRAY) {\n    throw \"target must be TEXTURE_3D or TEXTURE_2D_ARRAY\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = urls.length;\n  var errors = [];\n  var imgs; // eslint-disable-line\n\n  var level = options.level || 0;\n  var width = options.width;\n  var height = options.height;\n  var depth = urls.length;\n  var firstImage = true;\n\n  function uploadImg(slice) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        savePackState(gl, options);\n        gl.bindTexture(target, tex);\n\n        if (firstImage) {\n          firstImage = false;\n          width = options.width || img.width;\n          height = options.height || img.height;\n          gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null); // put it in every slice otherwise some slices will be 0,0,0,0\n\n          for (var s = 0; s < depth; ++s) {\n            gl.texSubImage3D(target, level, 0, 0, s, width, height, 1, format, type, img);\n          }\n        } else {\n          var src = img;\n\n          if (img.width !== width || img.height !== height) {\n            // Size the image to fix\n            src = ctx.canvas;\n            ctx.canvas.width = width;\n            ctx.canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n          }\n\n          gl.texSubImage3D(target, level, 0, 0, slice, width, height, 1, format, type, src); // free the canvas memory\n\n          if (src === ctx.canvas) {\n            ctx.canvas.width = 0;\n            ctx.canvas.height = 0;\n          }\n        }\n\n        restorePackState(gl, options);\n\n        if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n          gl.generateMipmap(target);\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(ndx));\n  });\n}\n/**\n * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\n * guess the size. See {@link module:twgl.TextureOptions}.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {(number[]|ArrayBufferView)} src An array or typed arry with texture data.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFromArray(gl, tex, src, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var width = options.width;\n  var height = options.height;\n  var depth = options.depth;\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n\n  if (!isArrayBuffer(src)) {\n    var Type = typedArrays.getTypedArrayTypeForGLType(type);\n    src = new Type(src);\n  } else if (src instanceof Uint8ClampedArray) {\n    src = new Uint8Array(src.buffer);\n  }\n\n  var bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\n  var numElements = src.byteLength / bytesPerElement; // TODO: check UNPACK_ALIGNMENT?\n\n  if (numElements % 1) {\n    throw \"length wrong size for format: \" + utils.glEnumToString(gl, format);\n  }\n\n  var dimensions;\n\n  if (target === gl.TEXTURE_3D) {\n    if (!width && !height && !depth) {\n      var size = Math.cbrt(numElements);\n\n      if (size % 1 !== 0) {\n        throw \"can't guess cube size of array of numElements: \" + numElements;\n      }\n\n      width = size;\n      height = size;\n      depth = size;\n    } else if (width && (!height || !depth)) {\n      dimensions = guessDimensions(gl, target, height, depth, numElements / width);\n      height = dimensions.width;\n      depth = dimensions.height;\n    } else if (height && (!width || !depth)) {\n      dimensions = guessDimensions(gl, target, width, depth, numElements / height);\n      width = dimensions.width;\n      depth = dimensions.height;\n    } else {\n      dimensions = guessDimensions(gl, target, width, height, numElements / depth);\n      width = dimensions.width;\n      height = dimensions.height;\n    }\n  } else {\n    dimensions = guessDimensions(gl, target, width, height, numElements);\n    width = dimensions.width;\n    height = dimensions.height;\n  }\n\n  saveSkipState(gl);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, options.unpackAlignment || 1);\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    var elementsPerElement = bytesPerElement / src.BYTES_PER_ELEMENT;\n    var faceSize = numElements / 6 * elementsPerElement;\n    getCubeFacesWithNdx(gl, options).forEach(function (f) {\n      var offset = faceSize * f.ndx;\n      var data = src.subarray(offset, offset + faceSize);\n      gl.texImage2D(f.face, level, internalFormat, width, height, 0, format, type, data);\n    });\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, src);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, src);\n  }\n\n  restorePackState(gl, options);\n  restoreSkipState(gl);\n  return {\n    width: width,\n    height: height,\n    depth: depth,\n    type: type\n  };\n}\n/**\n * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\n * You must set `options.width` and `options.height`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setEmptyTexture(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null);\n    }\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, options.width, options.height, 0, format, type, null);\n  }\n\n  restorePackState(gl, options);\n}\n/**\n * Creates a texture based on the options passed in.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\n * @return {WebGLTexture} the created texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTexture(gl, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  var tex = gl.createTexture();\n  var target = options.target || gl.TEXTURE_2D;\n  var width = options.width || 1;\n  var height = options.height || 1;\n  var internalFormat = options.internalFormat || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var type = options.type || formatType.type;\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // this should have been the default for CUBEMAPS :(\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  var src = options.src;\n\n  if (src) {\n    if (typeof src === \"function\") {\n      src = src(gl, options);\n    }\n\n    if (typeof src === \"string\") {\n      loadTextureFromUrl(gl, tex, options, callback);\n    } else if (isArrayBuffer(src) || Array.isArray(src) && (typeof src[0] === 'number' || Array.isArray(src[0]) || isArrayBuffer(src[0]))) {\n      var dimensions = setTextureFromArray(gl, tex, src, options);\n      width = dimensions.width;\n      height = dimensions.height;\n      type = dimensions.type;\n    } else if (Array.isArray(src) && (typeof src[0] === 'string' || isTexImageSource(src[0]))) {\n      if (target === gl.TEXTURE_CUBE_MAP) {\n        loadCubemapFromUrls(gl, tex, options, callback);\n      } else {\n        loadSlicesFromUrls(gl, tex, options, callback);\n      }\n    } else if (isTexImageSource(src)) {\n      setTextureFromElement(gl, tex, src, options);\n      width = src.width;\n      height = src.height;\n    } else {\n      throw \"unsupported src type\";\n    }\n  } else {\n    setEmptyTexture(gl, tex, options);\n  }\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n  return tex;\n}\n/**\n * Resizes a texture based on the options passed in.\n *\n * Note: This is not a generic resize anything function.\n * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\n * It will use `options.src` if it exists to try to determine a `type`\n * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\n * for the texture. Texture parameters will be set accordingly\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the texture to resize\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {number} [width] the new width. If not passed in will use `options.width`\n * @param {number} [height] the new height. If not passed in will use `options.height`\n * @memberOf module:twgl/textures\n */\n\n\nfunction resizeTexture(gl, tex, options, width, height) {\n  width = width || options.width;\n  height = height || options.height;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type;\n  var src = options.src;\n\n  if (!src) {\n    type = options.type || formatType.type;\n  } else if (isArrayBuffer(src) || Array.isArray(src) && typeof src[0] === 'number') {\n    type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  } else {\n    type = options.type || formatType.type;\n  }\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, width, height, 0, format, type, null);\n    }\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\n  }\n}\n/**\n * Check if a src is an async request.\n * if src is a string we're going to download an image\n * if src is an array of strings we're going to download cubemap images\n * @param {*} src The src from a TextureOptions\n * @returns {bool} true if src is async.\n */\n\n\nfunction isAsyncSrc(src) {\n  return typeof src === 'string' || Array.isArray(src) && typeof src[0] === 'string';\n}\n/**\n * Creates a bunch of textures based on the passed in options.\n *\n * Example:\n *\n *     const textures = twgl.createTextures(gl, {\n *       // a power of 2 image\n *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\n *       // a non-power of 2 image\n *       clover: { src: \"images/clover.jpg\" },\n *       // From a canvas\n *       fromCanvas: { src: ctx.canvas },\n *       // A cubemap from 6 images\n *       yokohama: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: [\n *           'images/yokohama/posx.jpg',\n *           'images/yokohama/negx.jpg',\n *           'images/yokohama/posy.jpg',\n *           'images/yokohama/negy.jpg',\n *           'images/yokohama/posz.jpg',\n *           'images/yokohama/negz.jpg',\n *         ],\n *       },\n *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\n *       goldengate: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: 'images/goldengate.jpg',\n *       },\n *       // A 2x2 pixel texture from a JavaScript array\n *       checker: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         src: [\n *           255,255,255,255,\n *           192,192,192,255,\n *           192,192,192,255,\n *           255,255,255,255,\n *         ],\n *       },\n *       // a 1x2 pixel texture from a typed array.\n *       stripe: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         format: gl.LUMINANCE,\n *         src: new Uint8Array([\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *         ]),\n *         width: 1,\n *       },\n *     });\n *\n * Now\n *\n * *   `textures.hftIcon` will be a 2d texture\n * *   `textures.clover` will be a 2d texture\n * *   `textures.fromCanvas` will be a 2d texture\n * *   `textures.yohohama` will be a cubemap texture\n * *   `textures.goldengate` will be a cubemap texture\n * *   `textures.checker` will be a 2d texture\n * *   `textures.stripe` will be a 2d texture\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\n * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\n * @return {Object.<string,WebGLTexture>} the created textures by name\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTextures(gl, textureOptions, callback) {\n  callback = callback || noop;\n  var numDownloading = 0;\n  var errors = [];\n  var textures = {};\n  var images = {};\n\n  function callCallbackIfReady() {\n    if (numDownloading === 0) {\n      setTimeout(function () {\n        callback(errors.length ? errors : undefined, textures, images);\n      }, 0);\n    }\n  }\n\n  Object.keys(textureOptions).forEach(function (name) {\n    var options = textureOptions[name];\n    var onLoadFn;\n\n    if (isAsyncSrc(options.src)) {\n      onLoadFn = function onLoadFn(err, tex, img) {\n        images[name] = img;\n        --numDownloading;\n\n        if (err) {\n          errors.push(err);\n        }\n\n        callCallbackIfReady();\n      };\n\n      ++numDownloading;\n    }\n\n    textures[name] = createTexture(gl, options, onLoadFn);\n  }); // queue the callback if there are no images to download.\n  // We do this because if your code is structured to wait for\n  // images to download but then you comment out all the async\n  // images your code would break.\n\n  callCallbackIfReady();\n  return textures;\n} // Using quotes prevents Uglify from changing the names.\n// No speed diff AFAICT.\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  m4: true,\n  v3: true,\n  primitives: true\n};\nexports.primitives = exports.v3 = exports.m4 = void 0;\n\nvar m4 = _interopRequireWildcard(__webpack_require__(6));\n\nexports.m4 = m4;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nexports.v3 = v3;\n\nvar primitives = _interopRequireWildcard(__webpack_require__(10));\n\nexports.primitives = primitives;\n\nvar _twgl = __webpack_require__(11);\n\nObject.keys(_twgl).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _twgl[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.create3DFVertices = create3DFVertices;\nexports.createAugmentedTypedArray = createAugmentedTypedArray;\nexports.createCubeVertices = createCubeVertices;\nexports.createPlaneVertices = createPlaneVertices;\nexports.createSphereVertices = createSphereVertices;\nexports.createTruncatedConeVertices = createTruncatedConeVertices;\nexports.createXYQuadVertices = createXYQuadVertices;\nexports.createCresentVertices = createCresentVertices;\nexports.createCylinderVertices = createCylinderVertices;\nexports.createTorusVertices = createTorusVertices;\nexports.createDiscVertices = createDiscVertices;\nexports.deindexVertices = deindexVertices;\nexports.flattenNormals = flattenNormals;\nexports.makeRandomVertexColors = makeRandomVertexColors;\nexports.reorientDirections = reorientDirections;\nexports.reorientNormals = reorientNormals;\nexports.reorientPositions = reorientPositions;\nexports.reorientVertices = reorientVertices;\nexports.concatVertices = concatVertices;\nexports.duplicateVertices = duplicateVertices;\nexports.createDiscBuffers = exports.createDiscBufferInfo = exports.createTorusBuffers = exports.createTorusBufferInfo = exports.createCylinderBuffers = exports.createCylinderBufferInfo = exports.createCresentBuffers = exports.createCresentBufferInfo = exports.createXYQuadBuffers = exports.createXYQuadBufferInfo = exports.createTruncatedConeBuffers = exports.createTruncatedConeBufferInfo = exports.createSphereBuffers = exports.createSphereBufferInfo = exports.createPlaneBuffers = exports.createPlaneBufferInfo = exports.createCubeBuffers = exports.createCubeBufferInfo = exports.create3DFBuffers = exports.create3DFBufferInfo = void 0;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(7));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar m4 = _interopRequireWildcard(__webpack_require__(6));\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Various functions to make simple primitives\n *\n * note: Most primitive functions come in 3 styles\n *\n * *  `createSomeShapeBufferInfo`\n *\n *    These functions are almost always the functions you want to call. They\n *    create vertices then make WebGLBuffers and create {@link module:twgl.AttribInfo}s\n *    returing a {@link module:twgl.BufferInfo} you can pass to {@link module:twgl.setBuffersAndAttributes}\n *    and {@link module:twgl.drawBufferInfo} etc...\n *\n * *  `createSomeShapeBuffers`\n *\n *    These create WebGLBuffers and put your data in them but nothing else.\n *    It's a shortcut to doing it yourself if you don't want to use\n *    the higher level functions.\n *\n * *  `createSomeShapeVertices`\n *\n *    These just create vertices, no buffers. This allows you to manipulate the vertices\n *    or add more data before generating a {@link module:twgl.BufferInfo}. Once you're finished\n *    manipulating the vertices call {@link module:twgl.createBufferInfoFromArrays}.\n *\n *    example:\n *\n *        const arrays = twgl.primitives.createPlaneArrays(1);\n *        twgl.primitives.reorientVertices(arrays, m4.rotationX(Math.PI * 0.5));\n *        const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n * @module twgl/primitives\n */\nvar getArray = attributes.getArray_; // eslint-disable-line\n\nvar getNumComponents = attributes.getNumComponents_; // eslint-disable-line\n\n/**\n * Add `push` to a typed array. It just keeps a 'cursor'\n * and allows use to `push` values into the array so we\n * don't have to manually compute offsets\n * @param {TypedArray} typedArray TypedArray to augment\n * @param {number} numComponents number of components.\n */\n\nfunction augmentTypedArray(typedArray, numComponents) {\n  var cursor = 0;\n\n  typedArray.push = function () {\n    for (var ii = 0; ii < arguments.length; ++ii) {\n      var value = arguments[ii];\n\n      if (value instanceof Array || typedArrays.isArrayBuffer(value)) {\n        for (var jj = 0; jj < value.length; ++jj) {\n          typedArray[cursor++] = value[jj];\n        }\n      } else {\n        typedArray[cursor++] = value;\n      }\n    }\n  };\n\n  typedArray.reset = function (opt_index) {\n    cursor = opt_index || 0;\n  };\n\n  typedArray.numComponents = numComponents;\n  Object.defineProperty(typedArray, 'numElements', {\n    get: function get() {\n      return this.length / this.numComponents | 0;\n    }\n  });\n  return typedArray;\n}\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param {number} numComponents number of components\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n * @return {ArrayBufferView} A typed array.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createAugmentedTypedArray(numComponents, numElements, opt_type) {\n  var Type = opt_type || Float32Array;\n  return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n}\n\nfunction allButIndices(name) {\n  return name !== \"indices\";\n}\n/**\n * Given indexed vertices creates a new set of vertices unindexed by expanding the indexed vertices.\n * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\n * @return {Object.<string, TypedArray>} The deindexed vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction deindexVertices(vertices) {\n  var indices = vertices.indices;\n  var newVertices = {};\n  var numElements = indices.length;\n\n  function expandToUnindexed(channel) {\n    var srcBuffer = vertices[channel];\n    var numComponents = srcBuffer.numComponents;\n    var dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\n\n    for (var ii = 0; ii < numElements; ++ii) {\n      var ndx = indices[ii];\n      var offset = ndx * numComponents;\n\n      for (var jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n\n    newVertices[channel] = dstBuffer;\n  }\n\n  Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\n  return newVertices;\n}\n/**\n * flattens the normals of deindexed vertices in place.\n * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\n * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\n * @memberOf module:twgl/primitives\n */\n\n\nfunction flattenNormals(vertices) {\n  if (vertices.indices) {\n    throw \"can't flatten normals of indexed vertices. deindex them first\";\n  }\n\n  var normals = vertices.normal;\n  var numNormals = normals.length;\n\n  for (var ii = 0; ii < numNormals; ii += 9) {\n    // pull out the 3 normals for this triangle\n    var nax = normals[ii + 0];\n    var nay = normals[ii + 1];\n    var naz = normals[ii + 2];\n    var nbx = normals[ii + 3];\n    var nby = normals[ii + 4];\n    var nbz = normals[ii + 5];\n    var ncx = normals[ii + 6];\n    var ncy = normals[ii + 7];\n    var ncz = normals[ii + 8]; // add them\n\n    var nx = nax + nbx + ncx;\n    var ny = nay + nby + ncy;\n    var nz = naz + nbz + ncz; // normalize them\n\n    var length = Math.sqrt(nx * nx + ny * ny + nz * nz);\n    nx /= length;\n    ny /= length;\n    nz /= length; // copy them back in\n\n    normals[ii + 0] = nx;\n    normals[ii + 1] = ny;\n    normals[ii + 2] = nz;\n    normals[ii + 3] = nx;\n    normals[ii + 4] = ny;\n    normals[ii + 5] = nz;\n    normals[ii + 6] = nx;\n    normals[ii + 7] = ny;\n    normals[ii + 8] = nz;\n  }\n\n  return vertices;\n}\n\nfunction applyFuncToV3Array(array, matrix, fn) {\n  var len = array.length;\n  var tmp = new Float32Array(3);\n\n  for (var ii = 0; ii < len; ii += 3) {\n    fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\n    array[ii] = tmp[0];\n    array[ii + 1] = tmp[1];\n    array[ii + 2] = tmp[2];\n  }\n}\n\nfunction transformNormal(mi, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n/**\n * Reorients directions by the given matrix..\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientDirections(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformDirection);\n  return array;\n}\n/**\n * Reorients normals by the inverse-transpose of the given\n * matrix..\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientNormals(array, matrix) {\n  applyFuncToV3Array(array, m4.inverse(matrix), transformNormal);\n  return array;\n}\n/**\n * Reorients positions by the given matrix. In other words, it\n * multiplies each vertex by the given matrix.\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientPositions(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformPoint);\n  return array;\n}\n/**\n * Reorients arrays by the given matrix. Assumes arrays have\n * names that contains 'pos' could be reoriented as positions,\n * 'binorm' or 'tan' as directions, and 'norm' as normals.\n *\n * @param {Object.<string, (number[]|TypedArray)>} arrays The vertices to reorient\n * @param {Matrix} matrix matrix to reorient by.\n * @return {Object.<string, (number[]|TypedArray)>} same arrays that were passed in.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientVertices(arrays, matrix) {\n  Object.keys(arrays).forEach(function (name) {\n    var array = arrays[name];\n\n    if (name.indexOf(\"pos\") >= 0) {\n      reorientPositions(array, matrix);\n    } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\n      reorientDirections(array, matrix);\n    } else if (name.indexOf(\"norm\") >= 0) {\n      reorientNormals(array, matrix);\n    }\n  });\n  return arrays;\n}\n/**\n * Creates XY quad BufferInfo\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\n * @memberOf module:twgl/primitives\n * @function createXYQuadBufferInfo\n */\n\n/**\n * Creates XY quad Buffers\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {module:twgl.BufferInfo} the created XY Quad buffers\n * @memberOf module:twgl/primitives\n * @function createXYQuadBuffers\n */\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, TypedArray> the created XY Quad vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createXYQuadVertices(size, xOffset, yOffset) {\n  size = size || 2;\n  xOffset = xOffset || 0;\n  yOffset = yOffset || 0;\n  size *= 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [xOffset + -1 * size, yOffset + -1 * size, xOffset + 1 * size, yOffset + -1 * size, xOffset + -1 * size, yOffset + 1 * size, xOffset + 1 * size, yOffset + 1 * size]\n    },\n    normal: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n    texcoord: [0, 0, 1, 0, 0, 1, 1, 1],\n    indices: [0, 1, 2, 2, 1, 3]\n  };\n}\n/**\n * Creates XZ plane BufferInfo.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {@module:twgl.BufferInfo} The created plane BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createPlaneBufferInfo\n */\n\n/**\n * Creates XZ plane buffers.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, WebGLBuffer>} The created plane buffers.\n * @memberOf module:twgl/primitives\n * @function createPlaneBuffers\n */\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, TypedArray>} The created plane vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createPlaneVertices(width, depth, subdivisionsWidth, subdivisionsDepth, matrix) {\n  width = width || 1;\n  depth = depth || 1;\n  subdivisionsWidth = subdivisionsWidth || 1;\n  subdivisionsDepth = subdivisionsDepth || 1;\n  matrix = matrix || m4.identity();\n  var numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  for (var z = 0; z <= subdivisionsDepth; z++) {\n    for (var x = 0; x <= subdivisionsWidth; x++) {\n      var u = x / subdivisionsWidth;\n      var v = z / subdivisionsDepth;\n      positions.push(width * u - width * 0.5, 0, depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  var numVertsAcross = subdivisionsWidth + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (var _z = 0; _z < subdivisionsDepth; _z++) {\n    // eslint-disable-line\n    for (var _x = 0; _x < subdivisionsWidth; _x++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_z + 0) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x, (_z + 0) * numVertsAcross + _x + 1); // Make triangle 2 of quad.\n\n      indices.push((_z + 1) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x + 1, (_z + 0) * numVertsAcross + _x + 1);\n    }\n  }\n\n  var arrays = reorientVertices({\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  }, matrix);\n  return arrays;\n}\n/**\n * Creates sphere BufferInfo.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createSphereBufferInfo\n */\n\n/**\n * Creates sphere buffers.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\n * @memberOf module:twgl/primitives\n * @function createSphereBuffers\n */\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, TypedArray>} The created sphere vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createSphereVertices(radius, subdivisionsAxis, subdivisionsHeight, opt_startLatitudeInRadians, opt_endLatitudeInRadians, opt_startLongitudeInRadians, opt_endLongitudeInRadians) {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || Math.PI * 2;\n  var latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n  var longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians; // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n\n  var numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices); // Generate the individual vertices in our vertex buffer.\n\n  for (var y = 0; y <= subdivisionsHeight; y++) {\n    for (var x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      var u = x / subdivisionsAxis;\n      var v = y / subdivisionsHeight;\n      var theta = longRange * u;\n      var phi = latRange * v;\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      var ux = cosTheta * sinPhi;\n      var uy = cosPhi;\n      var uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  var numVertsAround = subdivisionsAxis + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n\n  for (var _x2 = 0; _x2 < subdivisionsAxis; _x2++) {\n    // eslint-disable-line\n    for (var _y = 0; _y < subdivisionsHeight; _y++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_y + 0) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2); // Make triangle 2 of quad.\n\n      indices.push((_y + 1) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2 + 1);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Array of the indices of corners of each face of a cube.\n * @type {Array.<number[]>}\n */\n\n\nvar CUBE_FACE_INDICES = [[3, 7, 5, 1], // right\n[6, 2, 0, 4], // left\n[6, 7, 3, 2], // ??\n[0, 1, 5, 4], // ??\n[7, 6, 4, 5], // front\n[2, 3, 1, 0]];\n/**\n * Creates a BufferInfo for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCubeBufferInfo\n */\n\n/**\n * Creates the buffers and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCubeBuffers\n */\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\nfunction createCubeVertices(size) {\n  size = size || 1;\n  var k = size / 2;\n  var cornerVertices = [[-k, -k, -k], [+k, -k, -k], [-k, +k, -k], [+k, +k, -k], [-k, -k, +k], [+k, -k, +k], [-k, +k, +k], [+k, +k, +k]];\n  var faceNormals = [[+1, +0, +0], [-1, +0, +0], [+0, +1, +0], [+0, -1, +0], [+0, +0, +1], [+0, +0, -1]];\n  var uvCoords = [[1, 0], [0, 0], [0, 1], [1, 1]];\n  var numVertices = 6 * 4;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (var f = 0; f < 6; ++f) {\n    var faceIndices = CUBE_FACE_INDICES[f];\n\n    for (var v = 0; v < 4; ++v) {\n      var position = cornerVertices[faceIndices[v]];\n      var normal = faceNormals[f];\n      var uv = uvCoords[v]; // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n\n      positions.push(position);\n      normals.push(normal);\n      texcoords.push(uv);\n    } // Two triangles make a square face.\n\n\n    var offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a BufferInfo for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created cone BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBufferInfo\n */\n\n/**\n * Creates buffers for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created cone buffers.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBuffers\n */\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created cone vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTruncatedConeVertices(bottomRadius, topRadius, height, radialSubdivisions, verticalSubdivisions, opt_topCap, opt_bottomCap) {\n  if (radialSubdivisions < 3) {\n    throw Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  var topCap = opt_topCap === undefined ? true : opt_topCap;\n  var bottomCap = opt_bottomCap === undefined ? true : opt_bottomCap;\n  var extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n  var numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra) * 2, Uint16Array);\n  var vertsAroundEdge = radialSubdivisions + 1; // The slant of the cone is constant across its surface\n\n  var slant = Math.atan2(bottomRadius - topRadius, height);\n  var cosSlant = Math.cos(slant);\n  var sinSlant = Math.sin(slant);\n  var start = topCap ? -2 : 0;\n  var end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (var yy = start; yy <= end; ++yy) {\n    var v = yy / verticalSubdivisions;\n    var y = height * v;\n    var ringRadius = void 0;\n\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius + (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n\n    y -= height / 2;\n\n    for (var ii = 0; ii < vertsAroundEdge; ++ii) {\n      var sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      var cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      normals.push(yy < 0 || yy > verticalSubdivisions ? 0 : sin * cosSlant, yy < 0 ? -1 : yy > verticalSubdivisions ? 1 : sinSlant, yy < 0 || yy > verticalSubdivisions ? 0 : cos * cosSlant);\n      texcoords.push(ii / radialSubdivisions, 1 - v);\n    }\n  }\n\n  for (var _yy = 0; _yy < verticalSubdivisions + extra; ++_yy) {\n    // eslint-disable-line\n    for (var _ii = 0; _ii < radialSubdivisions; ++_ii) {\n      // eslint-disable-line\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 0) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii);\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 0 + _ii);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Expands RLE data\n * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param {number[]} [padding] value to add each entry with.\n * @return {number[]} the expanded rleData\n */\n\n\nfunction expandRLEData(rleData, padding) {\n  padding = padding || [];\n  var data = [];\n\n  for (var ii = 0; ii < rleData.length; ii += 4) {\n    var runLength = rleData[ii];\n    var element = rleData.slice(ii + 1, ii + 4);\n    element.push.apply(element, padding);\n\n    for (var jj = 0; jj < runLength; ++jj) {\n      data.push.apply(data, element);\n    }\n  }\n\n  return data;\n}\n/**\n * Creates 3D 'F' BufferInfo.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function create3DFBufferInfo\n */\n\n/**\n * Creates 3D 'F' buffers.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function create3DFBuffers\n */\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction create3DFVertices() {\n  var positions = [// left column front\n  0, 0, 0, 0, 150, 0, 30, 0, 0, 0, 150, 0, 30, 150, 0, 30, 0, 0, // top rung front\n  30, 0, 0, 30, 30, 0, 100, 0, 0, 30, 30, 0, 100, 30, 0, 100, 0, 0, // middle rung front\n  30, 60, 0, 30, 90, 0, 67, 60, 0, 30, 90, 0, 67, 90, 0, 67, 60, 0, // left column back\n  0, 0, 30, 30, 0, 30, 0, 150, 30, 0, 150, 30, 30, 0, 30, 30, 150, 30, // top rung back\n  30, 0, 30, 100, 0, 30, 30, 30, 30, 30, 30, 30, 100, 0, 30, 100, 30, 30, // middle rung back\n  30, 60, 30, 67, 60, 30, 30, 90, 30, 30, 90, 30, 67, 60, 30, 67, 90, 30, // top\n  0, 0, 0, 100, 0, 0, 100, 0, 30, 0, 0, 0, 100, 0, 30, 0, 0, 30, // top rung front\n  100, 0, 0, 100, 30, 0, 100, 30, 30, 100, 0, 0, 100, 30, 30, 100, 0, 30, // under top rung\n  30, 30, 0, 30, 30, 30, 100, 30, 30, 30, 30, 0, 100, 30, 30, 100, 30, 0, // between top rung and middle\n  30, 30, 0, 30, 60, 30, 30, 30, 30, 30, 30, 0, 30, 60, 0, 30, 60, 30, // top of middle rung\n  30, 60, 0, 67, 60, 30, 30, 60, 30, 30, 60, 0, 67, 60, 0, 67, 60, 30, // front of middle rung\n  67, 60, 0, 67, 90, 30, 67, 60, 30, 67, 60, 0, 67, 90, 0, 67, 90, 30, // bottom of middle rung.\n  30, 90, 0, 30, 90, 30, 67, 90, 30, 30, 90, 0, 67, 90, 30, 67, 90, 0, // front of bottom\n  30, 90, 0, 30, 150, 30, 30, 90, 30, 30, 90, 0, 30, 150, 0, 30, 150, 30, // bottom\n  0, 150, 0, 0, 150, 30, 30, 150, 30, 0, 150, 0, 30, 150, 30, 30, 150, 0, // left side\n  0, 0, 0, 0, 0, 30, 0, 150, 30, 0, 0, 0, 0, 150, 30, 0, 150, 0];\n  var texcoords = [// left column front\n  0.22, 0.19, 0.22, 0.79, 0.34, 0.19, 0.22, 0.79, 0.34, 0.79, 0.34, 0.19, // top rung front\n  0.34, 0.19, 0.34, 0.31, 0.62, 0.19, 0.34, 0.31, 0.62, 0.31, 0.62, 0.19, // middle rung front\n  0.34, 0.43, 0.34, 0.55, 0.49, 0.43, 0.34, 0.55, 0.49, 0.55, 0.49, 0.43, // left column back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // middle rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // top rung front\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // under top rung\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // between top rung and middle\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // top of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // front of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom of middle rung.\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // front of bottom\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // left side\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0];\n  var normals = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 0, 0, 1, // left column back\n  // top rung back\n  // middle rung back\n  18, 0, 0, -1, // top\n  6, 0, 1, 0, // top rung front\n  6, 1, 0, 0, // under top rung\n  6, 0, -1, 0, // between top rung and middle\n  6, 1, 0, 0, // top of middle rung\n  6, 0, 1, 0, // front of middle rung\n  6, 1, 0, 0, // bottom of middle rung.\n  6, 0, -1, 0, // front of bottom\n  6, 1, 0, 0, // bottom\n  6, 0, -1, 0, // left side\n  6, -1, 0, 0]);\n  var colors = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 200, 70, 120, // left column back\n  // top rung back\n  // middle rung back\n  18, 80, 70, 200, // top\n  6, 70, 200, 210, // top rung front\n  6, 200, 200, 70, // under top rung\n  6, 210, 100, 70, // between top rung and middle\n  6, 210, 160, 70, // top of middle rung\n  6, 70, 180, 210, // front of middle rung\n  6, 100, 70, 210, // bottom of middle rung.\n  6, 76, 210, 100, // front of bottom\n  6, 140, 210, 80, // bottom\n  6, 90, 130, 110, // left side\n  6, 160, 160, 220], [255]);\n  var numVerts = positions.length / 3;\n  var arrays = {\n    position: createAugmentedTypedArray(3, numVerts),\n    texcoord: createAugmentedTypedArray(2, numVerts),\n    normal: createAugmentedTypedArray(3, numVerts),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array)\n  };\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (var ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return arrays;\n}\n/**\n * Creates cresent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCresentBufferInfo\n */\n\n/**\n * Creates cresent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates cresent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCresentVertices(verticalRadius, outerRadius, innerRadius, thickness, subdivisionsDown, startOffset, endOffset) {\n  if (subdivisionsDown <= 0) {\n    throw Error('subdivisionDown must be > 0');\n  }\n\n  startOffset = startOffset || 0;\n  endOffset = endOffset || 1;\n  var subdivisionsThick = 2;\n  var offsetRange = endOffset - startOffset;\n  var numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  function lerp(a, b, s) {\n    return a + (b - a) * s;\n  }\n\n  function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\n    for (var z = 0; z <= subdivisionsDown; z++) {\n      var uBack = x / (subdivisionsThick - 1);\n      var v = z / subdivisionsDown;\n      var xBack = (uBack - 0.5) * 2;\n      var angle = (startOffset + v * offsetRange) * Math.PI;\n      var s = Math.sin(angle);\n      var c = Math.cos(angle);\n      var radius = lerp(verticalRadius, arcRadius, s);\n      var px = xBack * thickness;\n      var py = c * verticalRadius;\n      var pz = s * radius;\n      positions.push(px, py, pz);\n      var n = v3.add(v3.multiply([0, s, c], normalMult), normalAdd);\n      normals.push(n);\n      texcoords.push(uBack * uMult + uAdd, v);\n    }\n  } // Generate the individual vertices in our vertex buffer.\n\n\n  for (var x = 0; x < subdivisionsThick; x++) {\n    var uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\n    createArc(outerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\n    createArc(innerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\n  } // Do outer surface.\n\n\n  var indices = createAugmentedTypedArray(3, subdivisionsDown * 2 * (2 + subdivisionsThick), Uint16Array);\n\n  function createSurface(leftArcOffset, rightArcOffset) {\n    for (var z = 0; z < subdivisionsDown; ++z) {\n      // Make triangle 1 of quad.\n      indices.push(leftArcOffset + z + 0, leftArcOffset + z + 1, rightArcOffset + z + 0); // Make triangle 2 of quad.\n\n      indices.push(leftArcOffset + z + 1, rightArcOffset + z + 1, rightArcOffset + z + 0);\n    }\n  }\n\n  var numVerticesDown = subdivisionsDown + 1; // front\n\n  createSurface(numVerticesDown * 0, numVerticesDown * 4); // right\n\n  createSurface(numVerticesDown * 5, numVerticesDown * 7); // back\n\n  createSurface(numVerticesDown * 6, numVerticesDown * 2); // left\n\n  createSurface(numVerticesDown * 3, numVerticesDown * 1);\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates cylinder BufferInfo. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCylinderBufferInfo\n */\n\n/**\n * Creates cylinder buffers. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCylinderBuffers\n */\n\n/**\n * Creates cylinder vertices. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCylinderVertices(radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap) {\n  return createTruncatedConeVertices(radius, radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap);\n}\n/**\n * Creates BufferInfo for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTorusBufferInfo\n */\n\n/**\n * Creates buffers for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createTorusBuffers\n */\n\n/**\n * Creates vertices for a torus\n *\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTorusVertices(radius, thickness, radialSubdivisions, bodySubdivisions, startAngle, endAngle) {\n  if (radialSubdivisions < 3) {\n    throw Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw Error('verticalSubdivisions must be 3 or greater');\n  }\n\n  startAngle = startAngle || 0;\n  endAngle = endAngle || Math.PI * 2;\n  var range = endAngle - startAngle;\n  var radialParts = radialSubdivisions + 1;\n  var bodyParts = bodySubdivisions + 1;\n  var numVertices = radialParts * bodyParts;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * bodySubdivisions * 2, Uint16Array);\n\n  for (var slice = 0; slice < bodyParts; ++slice) {\n    var v = slice / bodySubdivisions;\n    var sliceAngle = v * Math.PI * 2;\n    var sliceSin = Math.sin(sliceAngle);\n    var ringRadius = radius + sliceSin * thickness;\n    var ny = Math.cos(sliceAngle);\n    var y = ny * thickness;\n\n    for (var ring = 0; ring < radialParts; ++ring) {\n      var u = ring / radialSubdivisions;\n      var ringAngle = startAngle + u * range;\n      var xSin = Math.sin(ringAngle);\n      var zCos = Math.cos(ringAngle);\n      var x = xSin * ringRadius;\n      var z = zCos * ringRadius;\n      var nx = xSin * sliceSin;\n      var nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (var _slice = 0; _slice < bodySubdivisions; ++_slice) {\n    // eslint-disable-line\n    for (var _ring = 0; _ring < radialSubdivisions; ++_ring) {\n      // eslint-disable-line\n      var nextRingIndex = 1 + _ring;\n      var nextSliceIndex = 1 + _slice;\n      indices.push(radialParts * _slice + _ring, radialParts * nextSliceIndex + _ring, radialParts * _slice + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + _ring, radialParts * nextSliceIndex + nextRingIndex, radialParts * _slice + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createDiscBufferInfo\n */\n\n/**\n * Creates disc buffers. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createDiscBuffers\n */\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createDiscVertices(radius, divisions, stacks, innerRadius, stackPower) {\n  if (divisions < 3) {\n    throw Error('divisions must be at least 3');\n  }\n\n  stacks = stacks ? stacks : 1;\n  stackPower = stackPower ? stackPower : 1;\n  innerRadius = innerRadius ? innerRadius : 0; // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n\n  var numVertices = (divisions + 1) * (stacks + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n  var firstIndex = 0;\n  var radiusSpan = radius - innerRadius;\n  var pointsPerStack = divisions + 1; // Build the disk one stack at a time.\n\n  for (var stack = 0; stack <= stacks; ++stack) {\n    var stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (var i = 0; i <= divisions; ++i) {\n      var theta = 2.0 * Math.PI * i / divisions;\n      var x = stackRadius * Math.cos(theta);\n      var z = stackRadius * Math.sin(theta);\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - i / divisions, stack / stacks);\n\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        var a = firstIndex + (i + 1);\n        var b = firstIndex + i;\n        var c = firstIndex + i - pointsPerStack;\n        var d = firstIndex + (i + 1) - pointsPerStack; // Make a quad of the vertices a, b, c, d.\n\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * creates a random integer between 0 and range - 1 inclusive.\n * @param {number} range\n * @return {number} random value between 0 and range - 1 inclusive.\n */\n\n\nfunction randInt(range) {\n  return Math.random() * range | 0;\n}\n/**\n * Used to supply random colors\n * @callback RandomColorFunc\n * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\n * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\n * @return {number} a number from 0 to 255\n * @memberOf module:twgl/primitives\n */\n\n/**\n * @typedef {Object} RandomVerticesOptions\n * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\n * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\n * @memberOf module:twgl/primitives\n */\n\n/**\n * Creates an augmentedTypedArray of random vertex colors.\n * If the vertices are indexed (have an indices array) then will\n * just make random colors. Otherwise assumes they are triangles\n * and makes one random color for every 3 vertices.\n * @param {Object.<string, augmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\n * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\n * @return {Object.<string, augmentedTypedArray>} same vertices as passed in with `color` added.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction makeRandomVertexColors(vertices, options) {\n  options = options || {};\n  var numElements = vertices.position.numElements;\n  var vcolors = createAugmentedTypedArray(4, numElements, Uint8Array);\n\n  var rand = options.rand || function (ndx, channel) {\n    return channel < 3 ? randInt(256) : 255;\n  };\n\n  vertices.color = vcolors;\n\n  if (vertices.indices) {\n    // just make random colors if index\n    for (var ii = 0; ii < numElements; ++ii) {\n      vcolors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\n    }\n  } else {\n    // make random colors per triangle\n    var numVertsPerColor = options.vertsPerColor || 3;\n    var numSets = numElements / numVertsPerColor;\n\n    for (var _ii2 = 0; _ii2 < numSets; ++_ii2) {\n      // eslint-disable-line\n      var color = [rand(_ii2, 0), rand(_ii2, 1), rand(_ii2, 2), rand(_ii2, 3)];\n\n      for (var jj = 0; jj < numVertsPerColor; ++jj) {\n        vcolors.push(color);\n      }\n    }\n  }\n\n  return vertices;\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a buffers for them\n */\n\n\nfunction createBufferFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBuffersFromArrays(gl, arrays);\n  };\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a bufferInfo object for them\n */\n\n\nfunction createBufferInfoFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(null, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBufferInfoFromArrays(gl, arrays);\n  };\n}\n\nvar arraySpecPropertyNames = [\"numComponents\", \"size\", \"type\", \"normalize\", \"stride\", \"offset\", \"attrib\", \"name\", \"attribName\"];\n/**\n * Copy elements from one array to another\n *\n * @param {Array|TypedArray} src source array\n * @param {Array|TypedArray} dst dest array\n * @param {number} dstNdx index in dest to copy src\n * @param {number} [offset] offset to add to copied values\n */\n\nfunction copyElements(src, dst, dstNdx, offset) {\n  offset = offset || 0;\n  var length = src.length;\n\n  for (var ii = 0; ii < length; ++ii) {\n    dst[dstNdx + ii] = src[ii] + offset;\n  }\n}\n/**\n * Creates an array of the same time\n *\n * @param {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} srcArray array who's type to copy\n * @param {number} length size of new array\n * @return {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} array with same type as srcArray\n */\n\n\nfunction createArrayOfSameType(srcArray, length) {\n  var arraySrc = getArray(srcArray);\n  var newArray = new arraySrc.constructor(length);\n  var newArraySpec = newArray; // If it appears to have been augmented make new one augemented\n\n  if (arraySrc.numComponents && arraySrc.numElements) {\n    augmentTypedArray(newArray, arraySrc.numComponents);\n  } // If it was a fullspec make new one a fullspec\n\n\n  if (srcArray.data) {\n    newArraySpec = {\n      data: newArray\n    };\n    helper.copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\n  }\n\n  return newArraySpec;\n}\n/**\n * Concatinates sets of vertices\n *\n * Assumes the vertices match in composition. For example\n * if one set of vertices has positions, normals, and indices\n * all sets of vertices must have positions, normals, and indices\n * and of the same type.\n *\n * Example:\n *\n *      const cubeVertices = twgl.primtiives.createCubeVertices(2);\n *      const sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\n *      // move the sphere 2 units up\n *      twgl.primitives.reorientVertices(\n *          sphereVertices, twgl.m4.translation([0, 2, 0]));\n *      // merge the sphere with the cube\n *      const cubeSphereVertices = twgl.primitives.concatVertices(\n *          [cubeVertices, sphereVertices]);\n *      // turn them into WebGL buffers and attrib data\n *      const bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\n *\n * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\n * @return {module:twgl.Arrays} The concatinated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction concatVertices(arrayOfArrays) {\n  var names = {};\n  var baseName; // get names of all arrays.\n  // and numElements for each set of vertices\n\n  var _loop = function _loop(ii) {\n    var arrays = arrayOfArrays[ii];\n    Object.keys(arrays).forEach(function (name) {\n      // eslint-disable-line\n      if (!names[name]) {\n        names[name] = [];\n      }\n\n      if (!baseName && name !== 'indices') {\n        baseName = name;\n      }\n\n      var arrayInfo = arrays[name];\n      var numComponents = getNumComponents(arrayInfo, name);\n      var array = getArray(arrayInfo);\n      var numElements = array.length / numComponents;\n      names[name].push(numElements);\n    });\n  };\n\n  for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n    _loop(ii);\n  } // compute length of combined array\n  // and return one for reference\n\n\n  function getLengthOfCombinedArrays(name) {\n    var length = 0;\n    var arraySpec;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n      length += array.length;\n\n      if (!arraySpec || arrayInfo.data) {\n        arraySpec = arrayInfo;\n      }\n    }\n\n    return {\n      length: length,\n      spec: arraySpec\n    };\n  }\n\n  function copyArraysToNewArray(name, base, newArray) {\n    var baseIndex = 0;\n    var offset = 0;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n\n      if (name === 'indices') {\n        copyElements(array, newArray, offset, baseIndex);\n        baseIndex += base[ii];\n      } else {\n        copyElements(array, newArray, offset);\n      }\n\n      offset += array.length;\n    }\n  }\n\n  var base = names[baseName];\n  var newArrays = {};\n  Object.keys(names).forEach(function (name) {\n    var info = getLengthOfCombinedArrays(name);\n    var newArraySpec = createArrayOfSameType(info.spec, info.length);\n    copyArraysToNewArray(name, base, getArray(newArraySpec));\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n/**\n * Creates a duplicate set of vertices\n *\n * This is useful for calling reorientVertices when you\n * also want to keep the original available\n *\n * @param {module:twgl.Arrays} arrays of vertices\n * @return {module:twgl.Arrays} The dupilicated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction duplicateVertices(arrays) {\n  var newArrays = {};\n  Object.keys(arrays).forEach(function (name) {\n    var arraySpec = arrays[name];\n    var srcArray = getArray(arraySpec);\n    var newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\n    copyElements(srcArray, getArray(newArraySpec), 0);\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\nvar create3DFBufferInfo = createBufferInfoFunc(create3DFVertices);\nexports.create3DFBufferInfo = create3DFBufferInfo;\nvar create3DFBuffers = createBufferFunc(create3DFVertices);\nexports.create3DFBuffers = create3DFBuffers;\nvar createCubeBufferInfo = createBufferInfoFunc(createCubeVertices);\nexports.createCubeBufferInfo = createCubeBufferInfo;\nvar createCubeBuffers = createBufferFunc(createCubeVertices);\nexports.createCubeBuffers = createCubeBuffers;\nvar createPlaneBufferInfo = createBufferInfoFunc(createPlaneVertices);\nexports.createPlaneBufferInfo = createPlaneBufferInfo;\nvar createPlaneBuffers = createBufferFunc(createPlaneVertices);\nexports.createPlaneBuffers = createPlaneBuffers;\nvar createSphereBufferInfo = createBufferInfoFunc(createSphereVertices);\nexports.createSphereBufferInfo = createSphereBufferInfo;\nvar createSphereBuffers = createBufferFunc(createSphereVertices);\nexports.createSphereBuffers = createSphereBuffers;\nvar createTruncatedConeBufferInfo = createBufferInfoFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBufferInfo = createTruncatedConeBufferInfo;\nvar createTruncatedConeBuffers = createBufferFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBuffers = createTruncatedConeBuffers;\nvar createXYQuadBufferInfo = createBufferInfoFunc(createXYQuadVertices);\nexports.createXYQuadBufferInfo = createXYQuadBufferInfo;\nvar createXYQuadBuffers = createBufferFunc(createXYQuadVertices);\nexports.createXYQuadBuffers = createXYQuadBuffers;\nvar createCresentBufferInfo = createBufferInfoFunc(createCresentVertices);\nexports.createCresentBufferInfo = createCresentBufferInfo;\nvar createCresentBuffers = createBufferFunc(createCresentVertices);\nexports.createCresentBuffers = createCresentBuffers;\nvar createCylinderBufferInfo = createBufferInfoFunc(createCylinderVertices);\nexports.createCylinderBufferInfo = createCylinderBufferInfo;\nvar createCylinderBuffers = createBufferFunc(createCylinderVertices);\nexports.createCylinderBuffers = createCylinderBuffers;\nvar createTorusBufferInfo = createBufferInfoFunc(createTorusVertices);\nexports.createTorusBufferInfo = createTorusBufferInfo;\nvar createTorusBuffers = createBufferFunc(createTorusVertices);\nexports.createTorusBuffers = createTorusBuffers;\nvar createDiscBufferInfo = createBufferInfoFunc(createDiscVertices);\nexports.createDiscBufferInfo = createDiscBufferInfo;\nvar createDiscBuffers = createBufferFunc(createDiscVertices);\nexports.createDiscBuffers = createDiscBuffers;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  addExtensionsToContext: true,\n  getContext: true,\n  getWebGLContext: true,\n  resizeCanvasToDisplaySize: true,\n  setDefaults: true\n};\nexports.addExtensionsToContext = addExtensionsToContext;\nexports.getContext = getContext;\nexports.getWebGLContext = getWebGLContext;\nexports.resizeCanvasToDisplaySize = resizeCanvasToDisplaySize;\nexports.setDefaults = setDefaults;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(7));\n\nObject.keys(attributes).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = attributes[key];\n});\n\nvar textures = _interopRequireWildcard(__webpack_require__(8));\n\nObject.keys(textures).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = textures[key];\n});\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nObject.keys(utils).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = utils[key];\n});\n\nvar _draw = __webpack_require__(12);\n\nObject.keys(_draw).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _draw[key];\n});\n\nvar _framebuffers = __webpack_require__(13);\n\nObject.keys(_framebuffers).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _framebuffers[key];\n});\n\nvar _programs = __webpack_require__(5);\n\nObject.keys(_programs).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _programs[key];\n});\n\nvar _typedarrays = __webpack_require__(1);\n\nObject.keys(_typedarrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _typedarrays[key];\n});\n\nvar _vertexArrays = __webpack_require__(14);\n\nObject.keys(_vertexArrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _vertexArrays[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * The main TWGL module.\n *\n * For most use cases you shouldn't need anything outside this module.\n * Exceptions between the stuff added to twgl-full (v3, m4, primitives)\n *\n * @module twgl\n * @borrows module:twgl/attributes.setAttribInfoBufferFromArray as setAttribInfoBufferFromArray\n * @borrows module:twgl/attributes.createBufferInfoFromArrays as createBufferInfoFromArrays\n * @borrows module:twgl/attributes.createVertexArrayInfo as createVertexArrayInfo\n * @borrows module:twgl/draw.drawBufferInfo as drawBufferInfo\n * @borrows module:twgl/draw.drawObjectList as drawObjectList\n * @borrows module:twgl/framebuffers.createFramebufferInfo as createFramebufferInfo\n * @borrows module:twgl/framebuffers.resizeFramebufferInfo as resizeFramebufferInfo\n * @borrows module:twgl/framebuffers.bindFramebufferInfo as bindFramebufferInfo\n * @borrows module:twgl/programs.createProgramInfo as createProgramInfo\n * @borrows module:twgl/programs.createUniformBlockInfo as createUniformBlockInfo\n * @borrows module:twgl/programs.bindUniformBlock as bindUniformBlock\n * @borrows module:twgl/programs.setUniformBlock as setUniformBlock\n * @borrows module:twgl/programs.setBlockUniforms as setBlockUniforms\n * @borrows module:twgl/programs.setUniforms as setUniforms\n * @borrows module:twgl/programs.setBuffersAndAttributes as setBuffersAndAttributes\n * @borrows module:twgl/textures.setTextureFromArray as setTextureFromArray\n * @borrows module:twgl/textures.createTexture as createTexture\n * @borrows module:twgl/textures.resizeTexture as resizeTexture\n * @borrows module:twgl/textures.createTextures as createTextures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  addExtensionsToContext: true\n};\n/**\n * Various default settings for twgl.\n *\n * Note: You can call this any number of times. Example:\n *\n *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\n *     twgl.setDefaults({ attribPrefix: 'a_' });\n *\n * is equivalent to\n *\n *     twgl.setDefaults({\n *       textureColor: [1, 0, 0, 1],\n *       attribPrefix: 'a_',\n *     });\n *\n * @typedef {Object} Defaults\n * @property {string} attribPrefix The prefix to stick on attributes\n *\n *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n *   as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n *\n *   In otherwords I'll create arrays of geometry like this\n *\n *       const arrays = {\n *         position: ...\n *         normal: ...\n *         texcoord: ...\n *       };\n *\n *   But need those mapped to attributes and my attributes start with `a_`.\n *\n *   Default: `\"\"`\n *\n * @property {number[]} textureColor Array of 4 values in the range 0 to 1\n *\n *   The default texture color is used when loading textures from\n *   urls. Because the URL will be loaded async we'd like to be\n *   able to use the texture immediately. By putting a 1x1 pixel\n *   color in the texture we can start using the texture before\n *   the URL has loaded.\n *\n *   Default: `[0.5, 0.75, 1, 1]`\n *\n * @property {string} crossOrigin\n *\n *   If not undefined sets the crossOrigin attribute on images\n *   that twgl creates when downloading images for textures.\n *\n *   Also see {@link module:twgl.TextureOptions}.\n *\n * @property {bool} addExtensionsToContext\n *\n *   If true, then, when twgl will try to add any supported WebGL extensions\n *   directly to the context under their normal GL names. For example\n *   if ANGLE_instances_arrays exists then twgl would enable it,\n *   add the functions `vertexAttribDivisor`, `drawArraysInstanced`,\n *   `drawElementsInstanced`, and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR`\n *   to the `WebGLRenderingContext`.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets various defaults for twgl.\n *\n * In the interest of terseness which is kind of the point\n * of twgl I've integrated a few of the older functions here\n *\n * @param {module:twgl.Defaults} newDefaults The default settings.\n * @memberOf module:twgl\n */\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n  attributes.setAttributeDefaults_(newDefaults); // eslint-disable-line\n\n  textures.setTextureDefaults_(newDefaults); // eslint-disable-line\n}\n\nvar prefixRE = /^(.*?)_/;\n\nfunction addExtensionToContext(gl, extensionName) {\n  utils.glEnumToString(gl, 0);\n  var ext = gl.getExtension(extensionName);\n\n  if (ext) {\n    var enums = {};\n    var fnSuffix = prefixRE.exec(extensionName)[1];\n    var enumSuffix = '_' + fnSuffix;\n\n    for (var key in ext) {\n      var value = ext[key];\n      var isFunc = typeof value === 'function';\n      var suffix = isFunc ? fnSuffix : enumSuffix;\n      var name = key; // examples of where this is not true are WEBGL_compressed_texture_s3tc\n      // and WEBGL_compressed_texture_pvrtc\n\n      if (key.endsWith(suffix)) {\n        name = key.substring(0, key.length - suffix.length);\n      }\n\n      if (gl[name] !== undefined) {\n        if (!isFunc && gl[name] !== value) {\n          helper.warn(name, gl[name], value, key);\n        }\n      } else {\n        if (isFunc) {\n          gl[name] = function (origFn) {\n            return function () {\n              return origFn.apply(ext, arguments);\n            };\n          }(value);\n        } else {\n          gl[name] = value;\n          enums[name] = value;\n        }\n      }\n    } // pass the modified enums to glEnumToString\n\n\n    enums.constructor = {\n      name: ext.constructor.name\n    };\n    utils.glEnumToString(enums, 0);\n  }\n\n  return ext;\n}\n/*\n * If you're wondering why the code doesn't just iterate\n * over all extensions using `gl.getExtensions` is that it's possible\n * some future extension is incompatible with this code. Rather than\n * have thing suddenly break it seems better to manually add to this\n * list.\n *\n */\n\n\nvar supportedExtensions = ['ANGLE_instanced_arrays', 'EXT_blend_minmax', 'EXT_color_buffer_float', 'EXT_color_buffer_half_float', 'EXT_disjoint_timer_query', 'EXT_disjoint_timer_query_webgl2', 'EXT_frag_depth', 'EXT_sRGB', 'EXT_shader_texture_lod', 'EXT_texture_filter_anisotropic', 'OES_element_index_uint', 'OES_standard_derivatives', 'OES_texture_float', 'OES_texture_float_linear', 'OES_texture_half_float', 'OES_texture_half_float_linear', 'OES_vertex_array_object', 'WEBGL_color_buffer_float', 'WEBGL_compressed_texture_atc', 'WEBGL_compressed_texture_etc1', 'WEBGL_compressed_texture_pvrtc', 'WEBGL_compressed_texture_s3tc', 'WEBGL_compressed_texture_s3tc_srgb', 'WEBGL_depth_texture', 'WEBGL_draw_buffers'];\n/**\n * Attempts to enable all of the following extensions\n * and add their functions and constants to the\n * `WebGLRenderingContext` using their normal non-extension like names.\n *\n *      ANGLE_instanced_arrays\n *      EXT_blend_minmax\n *      EXT_color_buffer_float\n *      EXT_color_buffer_half_float\n *      EXT_disjoint_timer_query\n *      EXT_disjoint_timer_query_webgl2\n *      EXT_frag_depth\n *      EXT_sRGB\n *      EXT_shader_texture_lod\n *      EXT_texture_filter_anisotropic\n *      OES_element_index_uint\n *      OES_standard_derivatives\n *      OES_texture_float\n *      OES_texture_float_linear\n *      OES_texture_half_float\n *      OES_texture_half_float_linear\n *      OES_vertex_array_object\n *      WEBGL_color_buffer_float\n *      WEBGL_compressed_texture_atc\n *      WEBGL_compressed_texture_etc1\n *      WEBGL_compressed_texture_pvrtc\n *      WEBGL_compressed_texture_s3tc\n *      WEBGL_compressed_texture_s3tc_srgb\n *      WEBGL_depth_texture\n *      WEBGL_draw_buffers\n *\n * For example if `ANGLE_instanced_arrays` exists then the functions\n * `drawArraysInstanced`, `drawElementsInstanced`, `vertexAttribDivisor`\n * and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR` are added to the\n * `WebGLRenderingContext`.\n *\n * Note that if you want to know if the extension exists you should\n * probably call `gl.getExtension` for each extension. Alternatively\n * you can check for the existance of the functions or constants that\n * are expected to be added. For example\n *\n *    if (gl.drawBuffers) {\n *      // Either WEBGL_draw_buffers was enabled OR you're running in WebGL2\n *      ....\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @memberOf module:twgl\n */\n\nfunction addExtensionsToContext(gl) {\n  for (var ii = 0; ii < supportedExtensions.length; ++ii) {\n    addExtensionToContext(gl, supportedExtensions[ii]);\n  }\n}\n/**\n * Creates a webgl context.\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\n\n\nfunction create3DContext(canvas, opt_attribs) {\n  var names = [\"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL1 context.\n *\n * Note: Will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextCreationAttirbutes} [opt_attribs] optional webgl context creation attributes\n * @memberOf module:twgl\n */\n\n\nfunction getWebGLContext(canvas, opt_attribs) {\n  var gl = create3DContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Creates a webgl context.\n *\n * Will return a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *     twgl.isWebGL2(gl);\n *\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\n\n\nfunction createContext(canvas, opt_attribs) {\n  var names = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL context.  Will create a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *    function isWebGL2(gl) {\n *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\n *    }\n *\n * Note: For a WebGL1 context will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextCreationAttirbutes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\n\n\nfunction getContext(canvas, opt_attribs) {\n  var gl = createContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Resize a canvas to match the size it's displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` or other scale value if you want to.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:twgl\n */\n\n\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  multiplier = Math.max(0, multiplier);\n  var width = canvas.clientWidth * multiplier | 0;\n  var height = canvas.clientHeight * multiplier | 0;\n\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n\n  return false;\n}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.drawBufferInfo = drawBufferInfo;\nexports.drawObjectList = drawObjectList;\n\nvar programs = _interopRequireWildcard(__webpack_require__(5));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Drawing related functions\n *\n * For backward compatibily they are available at both `twgl.draw` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/draw\n */\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @param {enum} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\n * @memberOf module:twgl/draw\n */\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\n  type = type === undefined ? gl.TRIANGLES : type;\n  var indices = bufferInfo.indices;\n  var elementType = bufferInfo.elementType;\n  var numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n\n  if (elementType || indices) {\n    if (instanceCount !== undefined) {\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset, instanceCount);\n    } else {\n      gl.drawElements(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n}\n/**\n * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\n *\n * You need either a `BufferInfo` or a `VertexArrayInfo`.\n *\n * @typedef {Object} DrawObject\n * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In otherwords `undefined` = `true`\n * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\n * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\n * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @property {Object<string, ?>} uniforms The values for the uniforms.\n *   You can pass multiple objects by putting them in an array. For example\n *\n *     var sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     var localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     var drawObj = {\n *       ...\n *       uniforms: [sharedUniforms, localUniforms],\n *     };\n *\n * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\n * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElemnts`. Defaults to bufferInfo.numElements.\n * @property {number} [instanceCount] the number of instances. Defaults to undefined.\n * @memberOf module:twgl\n */\n\n/**\n * Draws a list of objects\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n * @memberOf module:twgl/draw\n */\n\n\nfunction drawObjectList(gl, objectsToDraw) {\n  var lastUsedProgramInfo = null;\n  var lastUsedBufferInfo = null;\n  objectsToDraw.forEach(function (object) {\n    if (object.active === false) {\n      return;\n    }\n\n    var programInfo = object.programInfo;\n    var bufferInfo = object.vertexArrayInfo || object.bufferInfo;\n    var bindBuffers = false;\n    var type = object.type === undefined ? gl.TRIANGLES : object.type;\n\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program); // We have to rebind buffers when changing programs because we\n      // only bind buffers the program uses. So if 2 programs use the same\n      // bufferInfo but the 1st one uses only positions the when the\n      // we switch to the 2nd one some of the attributes will not be on.\n\n      bindBuffers = true;\n    } // Setup all the needed attributes.\n\n\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\n        gl.bindVertexArray(null);\n      }\n\n      lastUsedBufferInfo = bufferInfo;\n      programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    } // Set the uniforms.\n\n\n    programs.setUniforms(programInfo, object.uniforms); // Draw\n\n    drawBufferInfo(gl, bufferInfo, type, object.count, object.offset, object.instanceCount);\n  });\n\n  if (lastUsedBufferInfo.vertexArrayObject) {\n    gl.bindVertexArray(null);\n  }\n}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.bindFramebufferInfo = bindFramebufferInfo;\nexports.createFramebufferInfo = createFramebufferInfo;\nexports.resizeFramebufferInfo = resizeFramebufferInfo;\n\nvar textures = _interopRequireWildcard(__webpack_require__(8));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Framebuffer related functions\n *\n * For backward compatibily they are available at both `twgl.framebuffer` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/framebuffers\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar UNSIGNED_BYTE = 0x1401;\n/* PixelFormat */\n\nvar DEPTH_COMPONENT = 0x1902;\nvar RGBA = 0x1908;\n/* Framebuffer Object. */\n\nvar RGBA4 = 0x8056;\nvar RGB5_A1 = 0x8057;\nvar RGB565 = 0x8D62;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar STENCIL_INDEX = 0x1901;\nvar STENCIL_INDEX8 = 0x8D48;\nvar DEPTH_STENCIL = 0x84F9;\nvar COLOR_ATTACHMENT0 = 0x8CE0;\nvar DEPTH_ATTACHMENT = 0x8D00;\nvar STENCIL_ATTACHMENT = 0x8D20;\nvar DEPTH_STENCIL_ATTACHMENT = 0x821A;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar CLAMP_TO_EDGE = 0x812F;\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\nvar LINEAR = 0x2601;\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\n/**\n * The options for a framebuffer attachment.\n *\n * Note: For a `format` that is a texture include all the texture\n * options from {@link module:twgl.TextureOptions} for example\n * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\n * `auto` defaults to `false` for attachment textures but `min` and `mag` default\n * to `gl.LINEAR` and `wrap` defaults to `CLAMP_TO_EDGE`\n *\n * @typedef {Object} AttachmentOptions\n * @property {number} [attach] The attachment point. Defaults\n *   to `gl.COLOR_ATTACTMENT0 + ndx` unless type is a depth or stencil type\n *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\n *   on the format or attachment type.\n * @property {number} [format] The format. If one of `gl.RGBA4`,\n *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\n *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\n *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\n * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\n * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\n *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\n * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\n * @property {WebGLObject} [attachment] An existing renderbuffer or texture.\n *    If provided will attach this Object. This allows you to share\n *    attachemnts across framebuffers.\n * @memberOf module:twgl\n */\n\nvar defaultAttachments = [{\n  format: RGBA,\n  type: UNSIGNED_BYTE,\n  min: LINEAR,\n  wrap: CLAMP_TO_EDGE\n}, {\n  format: DEPTH_STENCIL\n}];\nvar attachmentsByFormat = {};\nattachmentsByFormat[DEPTH_STENCIL] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT16] = DEPTH_ATTACHMENT;\n\nfunction getAttachmentPointForFormat(format) {\n  return attachmentsByFormat[format];\n}\n\nvar renderbufferFormats = {};\nrenderbufferFormats[RGBA4] = true;\nrenderbufferFormats[RGB5_A1] = true;\nrenderbufferFormats[RGB565] = true;\nrenderbufferFormats[DEPTH_STENCIL] = true;\nrenderbufferFormats[DEPTH_COMPONENT16] = true;\nrenderbufferFormats[STENCIL_INDEX] = true;\nrenderbufferFormats[STENCIL_INDEX8] = true;\n\nfunction isRenderbufferFormat(format) {\n  return renderbufferFormats[format];\n}\n/**\n * @typedef {Object} FramebufferInfo\n * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\n * @property {WebGLObject[]} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a framebuffer and attachments.\n *\n * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n * Passing in a specific size\n *\n *     const width = 256;\n *     const height = 256;\n *     const fbi = twgl.createFramebufferInfo(gl, attachments, width, height);\n *\n * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\n * [WebGL only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\n *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction createFramebufferInfo(gl, attachments, width, height) {\n  var target = gl.FRAMEBUFFER;\n  var fb = gl.createFramebuffer();\n  gl.bindFramebuffer(target, fb);\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  attachments = attachments || defaultAttachments;\n  var colorAttachmentCount = 0;\n  var framebufferInfo = {\n    framebuffer: fb,\n    attachments: [],\n    width: width,\n    height: height\n  };\n  attachments.forEach(function (attachmentOptions) {\n    var attachment = attachmentOptions.attachment;\n    var format = attachmentOptions.format;\n    var attachmentPoint = getAttachmentPointForFormat(format);\n\n    if (!attachmentPoint) {\n      attachmentPoint = COLOR_ATTACHMENT0 + colorAttachmentCount++;\n    }\n\n    if (!attachment) {\n      if (isRenderbufferFormat(format)) {\n        attachment = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n        gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n      } else {\n        var textureOptions = Object.assign({}, attachmentOptions);\n        textureOptions.width = width;\n        textureOptions.height = height;\n\n        if (textureOptions.auto === undefined) {\n          textureOptions.auto = false;\n          textureOptions.min = textureOptions.min || textureOptions.minMag || gl.LINEAR;\n          textureOptions.mag = textureOptions.mag || textureOptions.minMag || gl.LINEAR;\n          textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n          textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n        }\n\n        attachment = textures.createTexture(gl, textureOptions);\n      }\n    }\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.framebufferRenderbuffer(target, attachmentPoint, gl.RENDERBUFFER, attachment);\n    } else if (helper.isTexture(gl, attachment)) {\n      gl.framebufferTexture2D(target, attachmentPoint, attachmentOptions.texTarget || gl.TEXTURE_2D, attachment, attachmentOptions.level || 0);\n    } else {\n      throw \"unknown attachment type\";\n    }\n\n    framebufferInfo.attachments.push(attachment);\n  });\n  return framebufferInfo;\n}\n/**\n * Resizes the attachments of a framebuffer.\n *\n * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebufferInfo}\n * because TWGL has no idea the format/type of each attachment.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments\n *         twgl.resizeFramebufferInfo(gl, fbi);\n *       }\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments to match\n *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\n *       }\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebufferInfo}.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  framebufferInfo.width = width;\n  framebufferInfo.height = height;\n  attachments = attachments || defaultAttachments;\n  attachments.forEach(function (attachmentOptions, ndx) {\n    var attachment = framebufferInfo.attachments[ndx];\n    var format = attachmentOptions.format;\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n      gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n    } else if (helper.isTexture(gl, attachment)) {\n      textures.resizeTexture(gl, attachment, attachmentOptions, width, height);\n    } else {\n      throw \"unknown attachment type\";\n    }\n  });\n}\n/**\n * Binds a framebuffer\n *\n * This function pretty much soley exists because I spent hours\n * trying to figure out why something I wrote wasn't working only\n * to realize I forget to set the viewport dimensions.\n * My hope is this function will fix that.\n *\n * It is effectively the same as\n *\n *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\n *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n *   If not passed will bind the canvas.\n * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction bindFramebufferInfo(gl, framebufferInfo, target) {\n  target = target || gl.FRAMEBUFFER;\n\n  if (framebufferInfo) {\n    gl.bindFramebuffer(target, framebufferInfo.framebuffer);\n    gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\n  } else {\n    gl.bindFramebuffer(target, null);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createVertexArrayInfo = createVertexArrayInfo;\nexports.createVAOAndSetAttributes = createVAOAndSetAttributes;\nexports.createVAOFromBufferInfo = createVAOFromBufferInfo;\n\nvar programs = _interopRequireWildcard(__webpack_require__(5));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * vertex array object related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/vertexArrays\n */\n\n/**\n * @typedef {Object} VertexArrayInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\n * @memberOf module:twgl\n */\n\n/**\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n *   who's attributes use the same attribute locations for the same purposes.\n *\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n *\n * also\n *\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n *   will affect the Vertex Array Object state.\n *\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n *\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n *    now attribute D's location.\n *\n *    So, you can pass in both shader 1 and shader 2's programInfo\n *\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n\n  if (!programInfos.length) {\n    programInfos = [programInfos];\n  }\n\n  programInfos.forEach(function (programInfo) {\n    programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  });\n  gl.bindVertexArray(null);\n  return {\n    numElements: bufferInfo.numElements,\n    elementType: bufferInfo.elementType,\n    vertexArrayObject: vao\n  };\n}\n/**\n * Creates a vertex array object and then sets the attributes on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOAndSetAttributes(gl, setters, attribs, indices) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  programs.setAttributes(setters, attribs);\n\n  if (indices) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indices);\n  } // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n  // like when creating buffers for other stuff will mess up this VAO's binding\n\n\n  gl.bindVertexArray(null);\n  return vao;\n}\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>| module:twgl.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n  return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n}\n\n/***/ })\n/******/ ]);\n});","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import {_} from 'underscore'\nimport twgl from './twgl';\nimport {gl} from './gl';\n\nfunction getGl() {\n    return gl;\n}\n\ngetGl();\n\nfunction createTextures(opts) {\n    return new Promise(function(resolve, reject) {\n        twgl.createTextures(gl, opts, function(errors, textures, images) {\n            resolve({errors, textures, images});\n        });\n    });\n}\n\nclass Loader {\n    constructor(opts) {\n        this.cache = new Map();\n        this.textureCache = new Map();\n        this.programCache = new Map();\n        this.errors = {\n            programs: new Map(),\n            textures: new Map(),\n            paths: new Map()\n        }\n        this.loading = null;\n        this.load(opts);\n    }\n\n    load(opts) {\n        let {basePath,\n            raiseOnFailure,\n            paths,\n            textures,\n            programs} = ({basePath: '', raiseOnFailure: true, ...opts});\n        // trim trailing slashes\n        basePath = basePath.replace(/\\/+$/, '');\n\n        const loadPromise = new Promise(async (resolve, reject) => {\n            if (paths) {\n                await this.loadPaths(paths, basePath, raiseOnFailure);\n            }\n\n            if (textures) {\n                let {errors, textures: tex, images} = await createTextures(textures);\n                if (errors) {\n                    console.log(errors);\n                }\n                Object.keys(tex).forEach((key) => {\n                    this.textureCache.set(key, tex[key]);\n                });\n            }\n\n            if (programs) {\n                for (let progOpts of programs) {\n                    let name = progOpts;\n                    let opts;\n\n                    if (_.isObject(progOpts)) {\n                        name = progOpts.name;\n                        opts = progOpts.opts;\n                    }\n\n                    if (this.programCache.has(name)) {\n                        console.log(`Warning: attempted to load already loaded program '${name}'`);\n                        continue;\n                    }\n\n                    const fp = _.compact([basePath, name.split('.').join('/')]).join('/');\n\n                    const vsName = `${fp}.vert`;\n                    const fsName = `${fp}.frag`;\n                    await this.loadPaths([vsName, fsName], '', raiseOnFailure);\n                    this.programCache.set(\n                        name,\n                        twgl.createProgramInfo(gl, [this.get(vsName), this.get(fsName)], opts)\n                    );\n                }\n            }\n\n            resolve(this);\n        });\n\n        this.loading = this.loading ? this.loading.then(res => loadPromise) : loadPromise;\n\n        return this.loading;\n    }\n\n    get(path) {\n        const ret = this.cache.get(path);\n        if (ret === undefined) {\n            raise `No value for key ${path}`;\n        }\n        return ret;\n    }\n\n    getTexture(name) {\n        const ret = this.textureCache.get(name);\n        if (ret === undefined) {\n            raise `No texture value for key ${path}`;\n        }\n        return ret;\n    }\n\n    getProgram(name) {\n        return this.programCache.get(name)\n    }\n\n    async loadPaths(paths, basePath, raiseOnFailure = true) {\n        for (let path of paths) {\n            if (this.cache.has(basePath + path)) {\n                console.log(`Warning: attempted to load already loaded path '${basePath + path}'`);\n                continue;\n            }\n            const contents = await this.fetch(basePath + path, raiseOnFailure);\n            if (contents) {\n                this.cache.set(basePath + path, contents);\n            }\n        }\n    }\n\n    async fetch(path, raiseOnFailure = true) {\n        const req = await fetch(path);\n\n        if (req.ok) {\n            return await req.text();\n        } else if (raiseOnFailure) {\n            throw `failed to fetch resource '${path}'; got status ${req.status} '${req.statusText}'`;\n        } else {\n            this.errors.paths.set(path, req.statusText);\n\n            return false;\n        }\n    }\n}\n\nexport {Loader};\n","import {Loader} from 'resource.js';\nimport {CoordinateConversions} from 'graphics.js';\nimport {mat3, mat4} from 'gl-matrix';\nimport {registerContext, gl} from 'gl.js';\nimport {attachFramebuffer} from 'util.js';\nimport 'vendor/webgl-debug.js'\nimport {Sprite} from './graphics/Sprite';\nimport {SpriteRenderer} from './graphics/SpriteRenderer'\nimport {Camera} from \"./graphics/Camera\";\n\n//import * as glMatrix from 'gl-matrix';\n\nfunction logGLCall(functionName, args) {\n    console.log(\"gl.\" + functionName + \"(\" +\n        WebGLDebugUtils.glFunctionArgsToString(functionName, args) + \")\");\n}\n\nfunction throwOnGLError(err, funcName, args) {\n    throw WebGLDebugUtils.glEnumToString(err) + \" was caused by call to: \" + funcName;\n}\n\nconst initCanvas = (containerId, canvasClass) => {\n    if (!containerId) {\n        throw new Error('argument containerId, id of containing element required');\n    }\n    const mountPoint = document.getElementById(containerId);\n    const canvas = document.createElement('canvas');\n    if (canvasClass) {\n        canvas.classList.add(canvasClass);\n    }\n    mountPoint.appendChild(canvas);\n\n    return canvas;\n};\n\n/**\n * options:\n * el\n * debug - default: false\n * clearColor - default: [0.4, 0.4, 0.4, 1]\n * resolution - default: { width: 352, height: 224 }\n * pixelMultiplier - default: 2\n */\nclass App {\n    constructor(options) {\n        this.clearColor = options.clearColor || [0.4, 0.4, 0.4, 1];\n        this.resolution = options.resolution || {width: 352, height: 224};\n        this.pixelMultiplier = options.pixelMultiplier || 2;\n        this.debug = options.debug;\n\n        if (typeof options.el === 'string') {\n            this.canvas = document.getElementById(options.el);\n        } else {\n            this.canvas = options.el;\n        }\n\n        // create rendering context\n        this.gl = this.canvas.getContext('webgl2');\n\n        if (this.debug) {\n            WebGLDebugUtils.init(this.gl);\n            this.gl = WebGLDebugUtils.makeDebugContext(this.gl, undefined, logGLCall);\n        }\n\n        registerContext(this.gl);\n\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n\n        this.framebuffer = attachFramebuffer(gl, this.resolution.width, this.resolution.height);\n        this.framebufferRenderer = new SpriteRenderer({\n            game: this,\n            textureInfo: {\n                texture: this.framebuffer.texture,\n                ...this.resolution\n            }\n        });\n        this.loader = new Loader();\n        this.projection = mat4.ortho(mat4.create(), 0, this.resolution.width, 0, this.resolution.height, -1, 1);\n        this.camera = new Camera(this.resolution);\n        this.cameraEnabled = true;\n        this.updateCanvasSize();\n        this.adjustViewport();\n    }\n\n    updateCanvasSize() {\n        const width = this.resolution.width * this.pixelMultiplier;\n        const height = this.resolution.height * this.pixelMultiplier;\n\n        this.canvas.style.width = `${width}px`;\n        this.canvas.style.height = `${height}px`;\n\n        this.canvas.width = width * (window.devicePixelRatio || 1);\n        this.canvas.height = height * (window.devicePixelRatio || 1);\n    }\n\n    adjustViewport() {\n        // Use device pixels rather than CSS pixels to set viewport\n        // This will handle devicePixelRatios different than 1\n        const canvas_width = this.canvas.width;\n        const canvas_height = this.canvas.height;\n\n        this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n\n        this._canvasToWorld = CoordinateConversions.canvasToWorldMatrix(\n            this.camera.matrix,\n            {width: canvas_width, height: canvas_height},\n            this.resolution\n        );\n    }\n\n    clear() {\n        this.gl.clearColor(...this.clearColor);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n    }\n\n    load(paths) {\n        return this.loader.load(paths);\n    }\n\n    getProgram(key) {\n        const ret = this.loader.getProgram(key);\n\n        if (!ret) {\n            throw `No program loaded for key '${key}'`;\n        }\n\n        return ret;\n    }\n\n    enableCamera() {\n        this.cameraEnabled = true;\n    }\n\n    disableCamera() {\n        this.cameraEnabled = false;\n    }\n\n    get canvasToWorld() {\n        return this._canvasToWorld;\n    }\n\n    get viewMatrix() {\n        let camera = mat4.create();\n        if (this.cameraEnabled) {\n            camera = this.camera.matrix;\n        }\n        return mat4.multiply(mat4.create(), this.projection, camera);\n    }\n\n    beginRenderToTexture() {\n        this.framebuffer.attach();\n        this.clear();\n    }\n\n    endRenderToTexture() {\n        this.framebuffer.detach();\n        this.adjustViewport();\n    }\n\n    start() {\n        let timestamp;\n\n        const update = time => {\n            if (!timestamp) {\n                timestamp = time;\n            }\n\n            let dt = time - timestamp;\n            timestamp = time;\n            //this.framebuffer.attach();\n\n            if (this.stage) {\n                this.stage.prerender(dt);\n\n                this.beginRenderToTexture();\n\n                this.stage.render(dt);\n\n                this.stage.postrender(dt);\n\n                this.endRenderToTexture();\n\n                this.clear();\n\n                this.framebufferRenderer.render(\n                    [new Sprite({\n                        position: [0, 0],\n                        size: [this.resolution.width, this.resolution.height]\n                    })],\n                    this.projection\n                );\n\n                // possible post fullscreen render hook here\n            }\n\n            if (this.running) {\n                requestAnimationFrame(update);\n            }\n        };\n\n        if (!this.running) {\n            requestAnimationFrame(update);\n            this.running = true;\n        }\n    }\n\n    setStage(stage) {\n        this.stage = stage;\n        stage.app = this;\n        stage.init(this);\n    }\n}\n\nexport default App;\n\nexport {\n    App,\n    initCanvas\n};\n","import * as twgl from '../../node_modules/twgl.js';\n\nexport {twgl};\n\nexport default twgl;\n","import twgl from '../twgl';\nimport {gl} from '../gl';\n\nimport vs from '../../shaders/grid.vert';\nimport fs from '../../shaders/grid.frag';\n\nexport {Grid};\n\nconst GRID_VERTICES = new Float32Array([\n    0, 0, // bottom left\n    1, 0, // bottom right\n    0, 1, // top left\n    1, 1  // top right\n]);\n\nfunction makeGridVertices({xcells, ycells}, {w, h}, {lineWidth}) {\n    const position = new Float32Array(2 * (xcells + ycells));\n    const size = new Float32Array(2 * (xcells + ycells));\n    const width = w * (xcells + 1);\n    const height = h * (ycells + 1);\n\n    for (let row = 0; row < ycells; ++row) {\n        position[2 * row] = 0;     // pos x\n        position[2 * row + 1] = row * h; // pos y\n        size[2 * row] = width;     // line length\n        size[2 * row + 1] = lineWidth; // line thickness\n    }\n\n    for (let col = 0; col < xcells; ++col) {\n        position[2 * ycells + 2 * col] = col * w; // pos x\n        position[2 * ycells + 2 * col + 1] = 0;     // pos y\n        size[2 * ycells + 2 * col] = lineWidth; // line length\n        size[2 * ycells + 2 * col + 1] = height;    // line thickness\n    }\n\n    return {\n        position,\n        size\n    }\n}\n\nlet sharedProgram = null;\n\nclass Grid {\n    constructor(options) {\n        this.resolution = options.resolution;\n\n        if (!sharedProgram) {\n            sharedProgram = twgl.createProgramInfo(gl, [vs, fs]);\n        }\n        this.programInfo = sharedProgram;\n\n        this.bufferInfo = twgl.createBufferInfoFromArrays(gl, {\n            vertex: {\n                data: GRID_VERTICES,\n                numComponents: 2,\n                divisor: 0,\n                drawType: gl.STATIC_DRAW\n            },\n            position: {\n                numComponents: 2,\n                divisor: 1,\n                drawType: gl.DYNAMIC_DRAW\n            },\n            size: {\n                numComponents: 2,\n                divisor: 1,\n                drawType: gl.DYNAMIC_DRAW\n            },\n            indices: {\n                data: [\n                    0,\n                    1,\n                    2,\n                    3\n                ]\n            }\n        });\n\n        this.vao = twgl.createVertexArrayInfo(gl, this.programInfo, this.bufferInfo);\n\n        this.grids = [];\n    }\n\n    addGrid(sx = 32, sy = 32, lineColor = [1, 1, 1, 1], lineWidth = 2) {\n        const xcells = Math.ceil(this.resolution.width / sx) + 1;\n        const ycells = Math.ceil(this.resolution.height / sy) + 1;\n        const instanceCount = xcells + ycells;\n\n        const {position, size} = makeGridVertices({xcells, ycells}, {w: sx, h: sy}, {lineWidth: lineWidth});\n\n        this.grids.push({\n            position,\n            size,\n            instanceCount,\n            lineColor,\n            sx,\n            sy\n        })\n    }\n\n    render(x, y, projection) {\n        gl.useProgram(this.programInfo.program);\n\n        twgl.setBuffersAndAttributes(gl, this.programInfo, this.vao);\n\n        const cameraPos = [x, y];\n\n        this.grids.forEach(gridInfo => {\n            const {position, size, instanceCount, lineColor, sx, sy} = gridInfo;\n\n            const offset = [cameraPos[0] % sx, cameraPos[1] % sy];\n            if (offset[0] > 0) {\n                offset[0] = offset[0] - sx;\n            }\n\n            if (offset[1] > 0) {\n                offset[1] = offset[1] - sy;\n            }\n\n            twgl.setAttribInfoBufferFromArray(\n                gl,\n                this.bufferInfo.attribs.position,\n                position\n            );\n\n            twgl.setAttribInfoBufferFromArray(\n                gl,\n                this.bufferInfo.attribs.size,\n                size\n            );\n\n            twgl.setUniforms(this.programInfo, {\n                line_color: lineColor,\n                projection: projection,\n                offset: offset\n            });\n\n            twgl.drawBufferInfo(gl, this.vao, gl.TRIANGLE_STRIP, undefined, undefined, instanceCount);\n        });\n    }\n}","module.exports = \"#version 300 es\\n\\nprecision mediump float;\\n\\nuniform vec4 line_color;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n    out_color = line_color;\\n}\\n\"","module.exports = \"#version 300 es\\n\\nlayout(location = 0) in vec2 vertex;\\nlayout(location = 1) in vec2 position;\\nlayout(location = 2) in vec2 size;\\n\\nuniform mat4 projection;\\nuniform vec2 offset;\\n\\nvoid main() {\\n    vec4 transformed_position = projection * vec4(position + size * vertex + offset, 0, 1);\\n    gl_Position = transformed_position;\\n}\\n\""],"sourceRoot":""}
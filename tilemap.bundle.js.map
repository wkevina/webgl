{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/gl.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/js/controls.js","webpack:///./src/js/util.js","webpack:///./src/js/graphics/Sprite.js","webpack:///./src/js/graphics/SpriteRenderer.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/common.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2d.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat4.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec4.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/quat.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/quat2.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec2.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/js/graphics.js","webpack:///./src/shaders/tilemap.frag","webpack:///./src/shaders/tilemap.vert","webpack:///./src/js/graphics/TilemapRenderer.js","webpack:///./src/demo/tilemap.js","webpack:///./node_modules/underscore/underscore.js","webpack:///./src/js/graphics/Camera.js","webpack:///./src/css/app.css","webpack:///./src/css/app.css?13d6","webpack:///./src/shaders/sprite.frag","webpack:///./src/shaders/sprite.vert","webpack:///./src/js/vendor/webgl-debug.js","webpack:///./node_modules/twgl.js/dist/4.x/twgl-full.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/js/resource.js","webpack:///./src/js/app.js","webpack:///./src/js/twgl.js","webpack:///./src/js/graphics/Grid.js","webpack:///./src/shaders/grid.frag","webpack:///./src/shaders/grid.vert"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_gl","gl","g","this","Function","eval","e","window","_glMatrix","MouseDrawingEvents","MouseDrawing","options","_this","_classCallCheck","game","connected","endKeys","length","listeners","reduce","acc","evt","keys","forEach","addListener","_lineData","Float32Array","currentLineIdx","available","isDrawing","canvas","addEventListener","update","convertMouseCoordinates","x","offsetX","y","offsetY","endLine","startLine","includes","endDrawing","listener","push","_len","arguments","args","Array","_key","coord","mvec","vec4","fromValues","transformMat4","canvasToWorld","inBounds","lineIndex","notifyListeners","currentLineStart","currentLine","currentLineEnd","fill","slice","start","end","Keyboard","Map","document","keydown","keyup","set","startsWith","preventDefault","delete","CameraPan","app","_this2","pandir","speed","keyboard","loopStartTime","loopId","requestAnimationFrame","loop","now","delta","isdown","Math","max","camera","translate","CameraBodyTracker","body","cancelAnimationFrame","centerAt","position","buffer","count","newElements","Error","h","b","isFinite","min","abs","round","width","height","framebuffer","createFramebuffer","texture","createTexture","bindTexture","TEXTURE_2D","texStorage2D","RGBA8","texParameteri","TEXTURE_MIN_FILTER","NEAREST","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","attach","viewport","detach","src","Promise","resolve","reject","img","Image","removeListeners","removeEventListener","error","Sprite","size","angle","offset","backgroundColor","textureName","_twgl","_interopRequireDefault","_sprite","_sprite2","SPRITE_RECT_VERTICES","SpriteRenderer","_ref","textureInfo","loader","setup","programInfo","twgl","createProgramInfo","vs","fs","_arrays","vertex","data","numComponents","divisor","drawType","STATIC_DRAW","DYNAMIC_DRAW","texcoord","type","Int16Array","indices","bufferInfo","createBufferInfoFromArrays","vao","createVertexArrayInfo","sprites","projection","positions","sizes","offsets","sprite","spriteIndex","v","compIndex","setAttribInfoBufferFromArray","attribs","useProgram","program","setUniforms","setBuffersAndAttributes","drawBufferInfo","TRIANGLE_STRIP","undefined","EPSILON","ARRAY_TYPE","RANDOM","random","setMatrixArrayType","degree","PI","toRadian","a","equals","out","clone","copy","identity","m00","m01","m10","m11","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","sin","cos","mat2_scale","v0","v1","fromRotation","fromScaling","str","frob","sqrt","pow","LDU","L","D","U","add","subtract","exactEquals","mat2_equals","multiplyScalar","multiplyScalarAndAdd","scale","mul","sub","mat2d_create","mat2d_clone","mat2d_copy","mat2d_identity","mat2d_fromValues","tx","ty","mat2d_set","mat2d_invert","aa","ab","ac","ad","atx","aty","mat2d_determinant","mat2d_multiply","a4","a5","b4","b5","mat2d_rotate","mat2d_scale","mat2d_fromRotation","mat2d_fromScaling","fromTranslation","mat2d_str","mat2d_frob","mat2d_add","mat2d_subtract","mat2d_multiplyScalar","mat2d_multiplyScalarAndAdd","mat2d_exactEquals","mat2d_equals","mat2d_mul","mat2d_sub","mat3_create","fromMat4","mat3_clone","mat3_copy","mat3_fromValues","m02","m12","m20","m21","m22","mat3_set","mat3_identity","mat3_transpose","a01","a02","a12","mat3_invert","a00","a10","a11","a20","a21","a22","b01","b11","b21","mat3_adjoint","mat3_determinant","mat3_multiply","b00","b02","b10","b12","b20","b22","mat3_translate","mat3_rotate","mat3_scale","mat3_fromTranslation","mat3_fromRotation","mat3_fromScaling","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","mat3_str","mat3_frob","mat3_add","mat3_subtract","mat3_multiplyScalar","mat3_multiplyScalarAndAdd","mat3_exactEquals","mat3_equals","a6","a7","a8","b6","b7","b8","mat3_mul","mat3_sub","mat4_create","mat4_clone","mat4_copy","mat4_fromValues","m03","m13","m23","m30","m31","m32","m33","mat4_set","mat4_identity","mat4_transpose","mat4_invert","mat4_adjoint","mat4_determinant","mat4_multiply","mat4_translate","mat4_scale","mat4_rotate","axis","len","rotateX","rotateY","rotateZ","mat4_fromTranslation","mat4_fromScaling","mat4_fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","mat4_fromQuat","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","mat4_str","mat4_frob","mat4_add","mat4_subtract","mat4_multiplyScalar","mat4_multiplyScalarAndAdd","mat4_exactEquals","mat4_equals","a9","a14","a15","b9","b13","b14","b15","mat4_mul","mat4_sub","vec3_create","vec3_clone","vec3_length","vec3_fromValues","vec3_copy","vec3_set","vec3_add","vec3_subtract","vec3_multiply","divide","ceil","floor","vec3_scale","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","vec3_dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","vec3_rotateX","vec3_rotateY","vec3_rotateZ","tempA","tempB","cosine","acos","vec3_str","vec3_exactEquals","vec3_equals","vec3_sub","vec3_mul","div","dist","sqrDist","vec3_len","sqrLen","vec","stride","fn","arg","vec4_create","vec4_clone","vec4_fromValues","vec4_copy","vec4_set","vec4_add","vec4_subtract","vec4_multiply","vec4_divide","vec4_ceil","vec4_floor","vec4_min","vec4_max","vec4_round","vec4_scale","vec4_scaleAndAdd","vec4_distance","vec4_squaredDistance","vec4_length","vec4_squaredLength","vec4_negate","vec4_inverse","vec4_normalize","vec4_dot","vec4_lerp","vec4_random","vectorScale","v2","v3","v4","s1","s2","vec4_transformMat4","vec4_transformQuat","ix","iy","iz","iw","vec4_str","vec4_exactEquals","vec4_equals","vec4_sub","vec4_mul","vec4_div","vec4_dist","vec4_sqrDist","vec4_len","vec4_sqrLen","vec4_forEach","quat_create","quat_identity","setAxisAngle","getAxisAngle","out_axis","quat_multiply","quat_rotateX","quat_rotateY","quat_rotateZ","calculateW","slerp","omega","cosom","sinom","scale0","scale1","quat_invert","dot","invDot","conjugate","fromMat3","fRoot","fTrace","j","k","fromEuler","halfToRad","cx","cy","cz","quat_str","quat_clone","quat_fromValues","quat_copy","quat_set","quat_add","quat_mul","quat_scale","quat_dot","quat_lerp","quat_length","quat_len","quat_squaredLength","quat_sqrLen","quat_normalize","quat_exactEquals","quat_equals","rotationTo","tmpvec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","view","quat2_create","dq","quat2_clone","quat2_fromValues","w1","fromRotationTranslationValues","quat2_fromRotationTranslation","quat2_fromTranslation","quat2_fromRotation","quat2_fromMat4","outer","quat2_copy","quat2_identity","quat2_set","getReal","getDual","setReal","setDual","quat2_getTranslation","quat2_translate","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","quat2_rotateX","quat2_rotateY","quat2_rotateZ","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","quat2_add","quat2_multiply","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","quat2_mul","quat2_scale","quat2_dot","quat2_lerp","mt","quat2_invert","sqlen","quat2_squaredLength","quat2_conjugate","quat2_length","quat2_len","quat2_sqrLen","quat2_normalize","quat2_str","quat2_exactEquals","quat2_equals","vec2_create","vec2_clone","vec2_fromValues","vec2_copy","vec2_set","vec2_add","vec2_subtract","vec2_multiply","vec2_divide","vec2_ceil","vec2_floor","vec2_min","vec2_max","vec2_round","vec2_scale","vec2_scaleAndAdd","vec2_distance","vec2_squaredDistance","vec2_length","vec2_squaredLength","vec2_negate","vec2_inverse","vec2_normalize","vec2_dot","vec2_cross","vec2_lerp","vec2_random","transformMat2","transformMat2d","vec2_transformMat3","vec2_transformMat4","vec2_rotate","p0","p1","sinC","cosC","vec2_angle","len1","len2","vec2_str","vec2_exactEquals","vec2_equals","vec2_len","vec2_sub","vec2_mul","vec2_div","vec2_dist","vec2_sqrDist","vec2_sqrLen","vec2_forEach","stylesInDom","isOldIE","memo","apply","memoize","all","atob","getElement","selector","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","item","domStyle","id","refs","parts","addStyle","listToStyles","list","newStyles","base","part","css","media","sourceMap","insertStyleElement","style","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","attrs","addAttrs","el","setAttribute","obj","remove","result","transform","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","index","replacement","filter","Boolean","join","cssNode","childNodes","useSourceMap","toString","map","content","cssMapping","sourceMapping","toComment","sourceURLs","sources","source","sourceRoot","concat","cssWithMappingToString","mediaQuery","alreadyImportedModules","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","TilemapTextureBuilder","opts","assign","_objectSpread","tileWidth","tileHeight","layers","copyIndex","TEXTURE_2D_ARRAY","texStorage3D","tileWide","detectWidthInTiles","tileHigh","detectHeightInTiles","ctx","getContext","drawImage","copyTile","tileX","tileY","imageData","getImageData","_this$tileCoordinates","tileCoordinates","texSubImage3D","RGBA","UNSIGNED_BYTE","pixelStorei","UNPACK_FLIP_Y_WEBGL","isFull","maxIndex","Uint8Array","layerWidth","layerHeight","fb","READ_FRAMEBUFFER","layer","framebufferTextureLayer","readPixels","ImageData","Uint8ClampedArray","CoordinateConversions","canvasToWorldMatrix","viewMatrix","displaySize","virtualSize","mat4","temp","_util","_tilemap","_tilemap2","sharedProgram","TilemapRenderer","tilemap","textureArray","tile_index","arrays","maxCells","maxWidthInCells","maxHeightInCells","tileCount","startIndex","addPosition","arraySetter","addTileIndex","row","yCoord","col","xCoord","getTile","tile_size","resolution","_graphics","_Sprite","_app2","_TilemapRenderer","_SpriteRenderer","_controls","_Grid","mountPoint","getElementById","classList","App","clearColor","pixelMultiplier","load","basePath","programs","tilemapTex","_callee","framebufferRenderer","renderer","grid","regeneratorRuntime","wrap","_context","prev","next","loading","t0","loadImage","t1","sent","addTiles","Grid","addGrid","render","adjustViewport","clear","enableCamera","draw","disableCamera","debug","stop","run","__WEBPACK_AMD_DEFINE_RESULT__","root","self","global","previousUnderscore","_","ArrayProto","ObjProto","SymbolProto","nativeIsArray","isArray","nativeKeys","nativeCreate","Ctor","_wrapped","nodeType","VERSION","builtinIteratee","optimizeCb","func","context","argCount","collection","accumulator","cb","iteratee","isFunction","isObject","matcher","Infinity","restArguments","rest","baseCreate","shallowProperty","has","path","deepGet","MAX_ARRAY_INDEX","getLength","isArrayLike","each","collect","results","currentKey","createReduce","dir","initial","reducer","foldl","inject","reduceRight","foldr","find","detect","predicate","findIndex","findKey","select","every","some","any","contains","include","fromIndex","guard","values","invoke","contextPath","method","pluck","where","findWhere","computed","lastComputed","shuffle","sample","last","rand","sortBy","criteria","sort","group","behavior","partition","groupBy","indexBy","countBy","reStrSymbol","toArray","isString","match","pass","first","take","array","tail","drop","compact","flatten","input","shallow","strict","output","isArguments","without","otherArrays","difference","uniq","unique","isSorted","isBoolean","seen","union","intersection","argsLength","unzip","zip","createPredicateIndexFinder","findLastIndex","sortedIndex","low","high","mid","createIndexFinder","predicateFind","isNaN","lastIndexOf","range","step","chunk","executeBound","sourceFunc","boundFunc","callingContext","TypeError","bound","callArgs","partial","boundArgs","placeholder","bindAll","hasher","cache","address","delay","wait","setTimeout","defer","throttle","timeout","previous","later","leading","throttled","remaining","clearTimeout","trailing","cancel","debounce","immediate","debounced","callNow","wrapper","compose","after","times","once","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","collectNonEnumProps","nonEnumIdx","constructor","proto","prop","allKeys","mapObject","pairs","functions","methods","names","createAssigner","keysFunc","defaults","extend","extendOwn","eq","deepEq","keyInObj","pick","omit","String","props","tap","interceptor","isMatch","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isElement","nodelist","Int8Array","isSymbol","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","RegExp","replaceRegexp","string","escape","fallback","idCounter","uniqueId","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeRegExp","escapeChar","template","text","settings","oldSettings","variable","argument","chain","instance","_chain","chainResult","mixin","toJSON","Camera","bounds","_translation","vec2","_bounds","_toConsumableArray","hmr","locals","WebGLDebugUtils","msg","console","log","glValidEnumContexts","enable","1","0","disable","getParameter","drawArrays","3","drawElements","4","2","createShader","getShaderParameter","getProgramParameter","getShaderPrecisionFormat","getVertexAttrib","vertexAttribPointer","6","activeTexture","getTexParameter","texParameterf","copyTexImage2D","8","copyTexSubImage2D","generateMipmap","bindBuffer","getBufferParameter","bindRenderbuffer","checkFramebufferStatus","framebufferRenderbuffer","5","getFramebufferAttachmentParameter","getRenderbufferParameter","renderbufferStorage","enumBitwiseOr","depthFunc","blendFunc","blendFuncSeparate","blendEquation","blendEquationSeparate","stencilFunc","stencilFuncSeparate","stencilMaskSeparate","stencilOp","stencilOpSeparate","cullFace","frontFace","drawArraysInstancedANGLE","drawElementsInstancedANGLE","blendEquationEXT","bufferData","bufferSubData","copyBufferSubData","getBufferSubData","blitFramebuffer","10","9","invalidateFramebuffer","invalidateSubFramebuffer","readBuffer","getInternalformatParameter","renderbufferStorageMultisample","texImage2D","7","texImage3D","11","texSubImage2D","12","copyTexSubImage3D","compressedTexImage2D","compressedTexImage3D","compressedTexSubImage2D","compressedTexSubImage3D","vertexAttribIPointer","drawArraysInstanced","drawElementsInstanced","drawRangeElements","clearBufferfv","clearBufferiv","clearBufferuiv","clearBufferfi","beginQuery","endQuery","getQuery","getQueryParameter","samplerParameteri","samplerParameterf","getSamplerParameter","fenceSync","clientWaitSync","waitSync","getSyncParameter","bindTransformFeedback","beginTransformFeedback","transformFeedbackVaryings","bindBufferBase","bindBufferRange","getIndexedParameter","getActiveUniforms","getActiveUniformBlockParameter","glEnums","enumStringToValue","init","propertyName","checkInit","glEnumToString","glFunctionArgToString","functionName","numArgs","argumentIndex","funcInfo","enums","orResult","orEnums","enumValue","makePropertyWrapper","original","__defineGetter__","__defineSetter__","resetToInitialState","isWebGL2RenderingContext","createTransformFeedback","bindVertexArray","numAttribs","MAX_VERTEX_ATTRIBS","tmp","createBuffer","ARRAY_BUFFER","ii","disableVertexAttribArray","FLOAT","vertexAttrib1f","vertexAttribDivisor","deleteBuffer","numTextureUnits","MAX_TEXTURE_IMAGE_UNITS","TEXTURE0","TEXTURE_CUBE_MAP","TEXTURE_3D","bindSampler","ELEMENT_ARRAY_BUFFER","RENDERBUFFER","BLEND","CULL_FACE","DEPTH_TEST","DITHER","SCISSOR_TEST","blendColor","FUNC_ADD","ONE","ZERO","clearDepth","clearStencil","colorMask","BACK","LESS","depthMask","depthRange","CCW","hint","GENERATE_MIPMAP_HINT","DONT_CARE","lineWidth","PACK_ALIGNMENT","UNPACK_ALIGNMENT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","BROWSER_DEFAULT_WEBGL","polygonOffset","sampleCoverage","scissor","ALWAYS","stencilMask","KEEP","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","drawBuffers","COPY_READ_BUFFER","COPY_WRITE_BUFFER","PIXEL_PACK_BUFFER","PIXEL_UNPACK_BUFFER","numTransformFeedbacks","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","TRANSFORM_FEEDBACK_BUFFER","numUBOs","MAX_UNIFORM_BUFFER_BINDINGS","UNIFORM_BUFFER","RASTERIZER_DISCARD","UNPACK_IMAGE_HEIGHT","UNPACK_SKIP_IMAGES","UNPACK_ROW_LENGTH","UNPACK_SKIP_ROWS","UNPACK_SKIP_PIXELS","PACK_ROW_LENGTH","PACK_SKIP_ROWS","PACK_SKIP_PIXELS","FRAGMENT_SHADER_DERIVATIVE_HINT","getError","mightBeEnum","glFunctionArgsToString","argStr","makeDebugContext","opt_onErrorFunc","opt_onFunc","opt_err_ctx","err","glErrorShadow","makeErrorWrapper","wrapped","NO_ERROR","makeLostContextSimulatingCanvas","unwrappedContext_","onLost_","onRestored_","wrappedContext_","contextId_","contextLost_","resourceDb_","numCallsToLoseContext_","numCalls_","canRestore_","restoreTimeout_","glErrorShadow_","wrapEvent","info","handleEvent","WebGLRenderingContext","WebGL2RenderingContext","makeLostContextFunctionWrapper","loseContextIfTime","creationFunctions","__webglDebugContextLostId__","functionsThatShouldReturnNull","isFunctions","FRAMEBUFFER_UNSUPPORTED","getAttribLocation","getVertexAttribOffset","isContextLost","getFragDataLocation","WAIT_FAILED","getUniformBlockIndex","INVALID_INDEX","makeLostContextSimulatingContext","addOnContextLostListener","addOnContextRestoredListener","loseContext","makeWebGLContextEvent","statusMessage","bubble","wrapAddEventListener","clearErrors","CONTEXT_LOST_WEBGL","event","callbacks","restoreContext","resource","WebGLBuffer","WebGLFramebuffer","deleteFramebuffer","WebGLProgram","deleteProgram","WebGLRenderbuffer","deleteRenderbuffer","WebGLShader","deleteShader","WebGLTexture","deleteTexture","WebGLQuery","deleteQuery","WebGLSampler","deleteSampler","WebGLSync","deleteSync","WebGLTransformFeedback","deleteTransformFeedback","WebGLVertexArrayObject","deleteVertexArray","freeResources","loseContextInNCalls","numCalls","getNumCalls","setRestoreTimeout","factory","configurable","copyExistingProperties","dst","copyNamedProperties","isBuffer","repBuffer","isRenderbuffer","repRenderbuffer","createRenderbuffer","isShader","repShader","VERTEX_SHADER","isTexture","repTexture","isSampler","repSampler","createSampler","warn","_globalObject","default","getGLTypeForTypedArray","typedArray","BYTE","SHORT","Uint16Array","UNSIGNED_SHORT","Int32Array","INT","Uint32Array","UNSIGNED_INT","getGLTypeForTypedArrayType","typedArrayType","getTypedArrayTypeForGLType","CTOR","glTypeToTypedArray","isArrayBuffer","tt","SharedArrayBuffer","ArrayBuffer","VecType","t2","dx","dy","dz","distanceSq","divScalar","lengthSq","mulScalar","lenSq","setDefaultType","ctor","oldType","isWebGL1","isWebGL2","haveEnumsForType","existing","addEnums","createAttributeSetters","createProgram","createProgramFromScripts","shaderScriptIds","opt_attribs","opt_locations","opt_errorCallback","progOptions","getProgramOptions","shaders","shader","createShaderFromScript","defaultShaderType","errorCallback","createProgramFromSources","shaderSources","good","script","createProgramInfoFromProgram","createUniformSetters","createUniformBlockSpecFromProgram","createUniformBlockInfoFromProgram","createUniformBlockInfo","blockName","uniformBlockSpec","tf","TRANSFORM_FEEDBACK","bindTransformFeedbackInfo","transformFeedbackInfo","varying","unbindTransformFeedbackInfo","createTransformFeedbackInfo","setAttributes","buffers","vertexArrayObject","attribSetters","setters","actualSetters","uniformSetters","andx","vals","numValues","setter","setUniformBlock","uniformBlockInfo","bindUniformBlock","setBlockUniforms","uniforms","utils","_interopRequireWildcard","helper","desc","getOwnPropertyDescriptor","typeMap","getBindPointForSamplerType","bindPoint","intSetter","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","textureOrPair","sampler","samplerArraySetter","units","textures","floatAttribSetter","enableVertexAttribArray","intAttribSetter","matAttribSetter","typeInfo","defaultSize","rowOffset","Type","uniform1f","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","attrTypeMap","spaceRE","loadShader","shaderSource","shaderType","errFn","lineOffset","compileShader","COMPILE_STATUS","lastError","getShaderInfoLog","split","line","ndx","addLineNumbers","opt","attribLocations","attrib","getShaderTypeFromScriptType","scriptType","FRAGMENT_SHADER","deleteShaders","realShaders","newShaders","elem","attachShader","bindAttribLocation","varyings","transformFeedbackMode","SEPARATE_ATTRIBS","linkProgram","LINK_STATUS","getProgramInfoLog","scriptId","opt_shaderType","shaderScript","isBuiltIn","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","substr","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","numVaryings","TRANSFORM_FEEDBACK_VARYINGS","getTransformFeedbackVarying","buf","uniformData","uniformIndices","pair","pname","blockSpecs","numUniformBlocks","ACTIVE_UNIFORM_BLOCKS","_ii","getActiveUniformBlockName","blockSpec","usedByVertexShader","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","usedByFragmentShader","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","used","usedByVertexSahder","arraySuffixRE","uniformBufferIndex","uniformBlockBinding","uniformNdx","BYTES_PER_ELEMENT","asFloat","bufferBindIndex","byteLength","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","axisRotate","angleInRadians","MatType","oneMinusCosine","r00","r01","r02","r10","r11","r12","r20","r21","r22","axisRotation","getAxis","off","xAxis","tempV3a","yAxis","tempV3b","zAxis","tempV3c","b23","b30","b31","b32","b33","fieldOfViewYInRadians","zNear","zFar","rangeInv","rotationX","rotationY","rotationZ","scaling","setAxis","setTranslation","transformDirection","transformNormal","mi","transformPoint","tmp_0","tmp_1","tmp_2","tmp_3","tmp_4","tmp_5","tmp_6","tmp_7","tmp_8","tmp_9","tmp_10","tmp_11","tmp_12","tmp_13","tmp_14","tmp_15","tmp_16","tmp_17","tmp_18","tmp_19","tmp_20","tmp_21","tmp_22","tmp_23","t3","createAttribsFromArrays","createBuffersFromArrays","createBufferFromArray","numElements","elementType","typedArrays","makeTypedArray","positionKeys","getArray","getNumComponents","getNumElementsFromNonIndexedArrays","createBufferFromTypedArray","newIndices","attribPrefix","numBytes","BUFFER_SIZE","bytesPerValue","getBytesPerValueForGLType","totalElements","getNumElementsFromAttributes","setBufferFromTypedArray","setAttributePrefix","setAttributeDefaults_","newDefaults","getNumComponents_","getArray_","isIndices","texcoordRE","colorRE","guessNumComponentsFromName","arrayName","normalization","attribName","arrayType","getNormalizationForTypedArrayType","getNormalizationForTypedArray","setTextureDefaults_","textureColor","setDefaultTextureColor","createSamplers","samplerOptions","samplers","setSamplerParameters","setEmptyTexture","setTextureFromArray","loadTextureFromUrl","setTextureFromElement","setTextureFilteringForSize","setTextureParameters","createTextures","textureOptions","callback","numDownloading","errors","images","callCallbackIfReady","onLoadFn","isAsyncSrc","tex","resizeTexture","level","internalFormat","format","formatType","getFormatAndTypeForInternalFormat","getTextureTypeForArrayType","TEXTURE_CUBE_MAP_POSITIVE_X","getNumComponentsForFormat","formatInfo","numColorComponents","getBytesPerElementForInternalFormat","crossOrigin","RGB","RG","textureInternalFormatInfo","bytesPerElement","bytesPerElementMap","textureFormat","isPowerOf2","defaultType","guessDimensions","color","colorRenderable","textureFilterable","lastPackState","savePackState","colorspaceConversion","premultiplyAlpha","flipY","restorePackState","saveSkipState","unpackAlignment","unpackRowLength","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","restoreSkipState","setTextureSamplerParameters","parameteriFn","minMag","TEXTURE_MAG_FILTER","mag","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","wrapR","wrapS","wrapT","minLod","TEXTURE_MIN_LOD","maxLod","TEXTURE_MAX_LOD","baseLevel","TEXTURE_BASE_LEVEL","maxLevel","TEXTURE_MAX_LEVEL","canGenerateMipmap","filtering","canFilter","LINEAR","CLAMP_TO_EDGE","shouldAutomaticallySetTextureFilteringForSize","auto","getCubeFaceOrder","cubeFaceOrder","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","getCubeFacesWithNdx","facesWithNdx","face","element","slices","imgWidth","imgHeight","nodeName","xOffset","yOffset","createImageBitmap","colorSpaceConversion","then","imageBitmap","smallest","largest","depth","xMult","yMult","srcX","srcY","isTexImageSource","ImageBitmap","HTMLElement","loadAndUseImage","url","clearEventHandlers","onError","onLoad","bm","fetch","response","ok","bitmap","catch","setTextureTo1PixelColor","make1Pixel","loadCubemapFromUrls","urls","imgs","numToLoad","faces","faceTarget","otherTarget","uploadImg","loadSlicesFromUrls","firstImage","dimensions","cbrt","faceSize","subarray","_exportNames","m4","primitives","create3DFVertices","createAugmentedTypedArray","createCubeVertices","createPlaneVertices","createSphereVertices","createTruncatedConeVertices","createXYQuadVertices","createCresentVertices","createCylinderVertices","createTorusVertices","createDiscVertices","deindexVertices","vertices","newVertices","allButIndices","channel","srcBuffer","dstBuffer","jj","flattenNormals","normals","normal","numNormals","nax","nay","naz","nbx","nby","nbz","ncx","ncy","ncz","nx","ny","nz","makeRandomVertexColors","vcolors","randInt","numVertsPerColor","vertsPerColor","numSets","_ii2","reorientDirections","reorientNormals","reorientPositions","reorientVertices","concatVertices","arrayOfArrays","baseName","_loop","arrayInfo","newArrays","arraySpec","spec","getLengthOfCombinedArrays","newArraySpec","createArrayOfSameType","newArray","baseIndex","copyElements","copyArraysToNewArray","duplicateVertices","srcArray","createDiscBuffers","createDiscBufferInfo","createTorusBuffers","createTorusBufferInfo","createCylinderBuffers","createCylinderBufferInfo","createCresentBuffers","createCresentBufferInfo","createXYQuadBuffers","createXYQuadBufferInfo","createTruncatedConeBuffers","createTruncatedConeBufferInfo","createSphereBuffers","createSphereBufferInfo","createPlaneBuffers","createPlaneBufferInfo","createCubeBuffers","createCubeBufferInfo","create3DFBuffers","create3DFBufferInfo","attributes","augmentTypedArray","cursor","reset","opt_index","opt_type","applyFuncToV3Array","matrix","subdivisionsWidth","subdivisionsDepth","numVertices","texcoords","u","numVertsAcross","_z","_x","radius","subdivisionsAxis","subdivisionsHeight","opt_startLatitudeInRadians","opt_endLatitudeInRadians","opt_startLongitudeInRadians","opt_endLongitudeInRadians","latRange","longRange","theta","phi","sinTheta","cosTheta","sinPhi","ux","uy","uz","numVertsAround","_x2","_y","CUBE_FACE_INDICES","cornerVertices","faceNormals","uvCoords","faceIndices","uv","bottomRadius","topRadius","radialSubdivisions","verticalSubdivisions","opt_topCap","opt_bottomCap","topCap","bottomCap","extra","vertsAroundEdge","slant","atan2","cosSlant","sinSlant","ringRadius","_yy","expandRLEData","rleData","padding","runLength","colors","numVerts","verticalRadius","outerRadius","innerRadius","thickness","subdivisionsDown","startOffset","endOffset","subdivisionsThick","offsetRange","createArc","arcRadius","normalMult","normalAdd","uMult","uAdd","uBack","xBack","px","py","pz","createSurface","leftArcOffset","rightArcOffset","numVerticesDown","bodySubdivisions","startAngle","endAngle","radialParts","bodyParts","sliceAngle","sliceSin","ring","ringAngle","xSin","zCos","_slice","_ring","nextRingIndex","nextSliceIndex","divisions","stacks","stackPower","firstIndex","radiusSpan","pointsPerStack","stack","stackRadius","createBufferFunc","createBufferInfoFunc","arraySpecPropertyNames","dstNdx","arraySrc","addExtensionsToContext","getWebGLContext","resizeCanvasToDisplaySize","setDefaults","createContext","create3DContext","multiplier","clientWidth","clientHeight","_draw","_framebuffers","_programs","_typedarrays","_vertexArrays","prefixRE","addExtensionToContext","extensionName","ext","getExtension","fnSuffix","exec","enumSuffix","isFunc","suffix","endsWith","substring","origFn","supportedExtensions","drawObjectList","objectsToDraw","lastUsedProgramInfo","lastUsedBufferInfo","active","vertexArrayInfo","bindBuffers","TRIANGLES","instanceCount","bindFramebufferInfo","framebufferInfo","drawingBufferWidth","drawingBufferHeight","createFramebufferInfo","attachments","colorAttachmentCount","defaultAttachments","attachmentOptions","attachment","attachmentPoint","attachmentsByFormat","getAttachmentPointForFormat","renderbufferFormats","isRenderbufferFormat","texTarget","resizeFramebufferInfo","programInfos","createVertexArray","createVAOAndSetAttributes","createVAOFromBufferInfo","webpackPolyfill","deprecate","paths","children","_underscore","Loader","textureCache","programCache","_basePath$raiseOnFail","raiseOnFailure","loadPromise","_asyncToGenerator","mark","_ref2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","progOpts","_opts","fp","vsName","fsName","loadPaths","iterator","done","abrupt","return","finish","_x3","res","ret","raise","contents","req","status","statusText","_resource","_Camera","logGLCall","containerId","canvasClass","registerContext","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","attachFramebuffer","cameraEnabled","updateCanvasSize","devicePixelRatio","canvas_width","canvas_height","_canvasToWorld","_this$gl","getProgram","timestamp","running","time","dt","stage","prerender","beginRenderToTexture","postrender","endRenderToTexture","_grid","_grid2","GRID_VERTICES","grids","lineColor","xcells","ycells","_makeGridVertices","_ref3","makeGridVertices","cameraPos","gridInfo","line_color"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,yGChFA,SAAyBC,GACrBlC,EAAAmC,KAAKD,eAHT,IAAIC,8BCAJ,IAAAC,EAGAA,EAAA,WACA,OAAAC,KADA,GAIA,IAEAD,KAAAE,SAAA,cAAAA,KAAA,EAAAC,MAAA,QACC,MAAAC,GAED,iBAAAC,SAAAL,EAAAK,QAOAxC,EAAAD,QAAAoC,sJCnBA,IAAAM,EAAA5C,EAAA,gUAEA,IAAM6C,GACF,cACA,YACA,eACA,cAGEC,aAEF,SAAAA,EAAYC,GAAS,IAAAC,EAAAT,KAAAU,EAAAV,KAAAO,GACjBP,KAAKW,KAAOH,EAAQG,KACpBX,KAAKY,UAAYJ,EAAQI,YAAa,EACtCZ,KAAKa,QAAUL,EAAQK,UAAY,SAE9Bb,KAAKa,QAAQC,SACdd,KAAKa,SAAWb,KAAKa,UAGzBb,KAAKe,UAAYT,EAAmBU,OAAO,SAACC,EAAKC,GAE7C,OADAD,EAAIC,MACGD,OAGPT,EAAQO,WACRxC,OAAO4C,KAAKX,EAAQO,WAAWK,QAAQ,SAAAhC,GAAA,OAAOqB,EAAKY,YAAYjC,EAAKoB,EAAQO,UAAU3B,MAG1FY,KAAKsB,UAAY,IAAIC,aAAa,MAClCvB,KAAKwB,eAAiB,EACtBxB,KAAKyB,UAAY,EACjBzB,KAAK0B,WAAY,EAEjB1B,KAAKW,KAAKgB,OAAOC,iBAAiB,YAAa,SAACV,GAC5CT,EAAKoB,OAAOpB,EAAKqB,yBAAyBC,EAAGb,EAAIc,QAASC,EAAGf,EAAIgB,aAGrElC,KAAKW,KAAKgB,OAAOC,iBAAiB,YAAa,SAACV,GACvCT,EAAKiB,UAGNjB,EAAK0B,QAAQ1B,EAAKqB,yBAAyBC,EAAGb,EAAIc,QAASC,EAAGf,EAAIgB,WAFlEzB,EAAK2B,UAAU3B,EAAKqB,yBAAyBC,EAAGb,EAAIc,QAASC,EAAGf,EAAIgB,aAM5E9B,OAAOwB,iBAAiB,UAAW,SAACV,GAC5BT,EAAKI,QAAQwB,SAASnB,EAAI9B,MAAQqB,EAAKiB,WACvCjB,EAAK6B,WAAWpB,mDAKhBA,EAAKqB,GACRvC,KAAKe,UAAUG,KAChBlB,KAAKe,UAAUG,OAEnBlB,KAAKe,UAAUG,GAAKsB,KAAKD,2CAGbrB,GAAc,QAAAuB,EAAAC,UAAA5B,OAAN6B,EAAM,IAAAC,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAANF,EAAME,EAAA,GAAAH,UAAAG,GAC1B7C,KAAKe,UAAUG,GAAKE,QAAQ,SAAAmB,GAAA,OAAYA,eAAYI,qDAGhCG,GACpB,IAAMC,EAAOC,OAAKC,WAAWH,EAAMf,EAAGe,EAAMb,EAAG,EAAG,GAIlD,OAFAe,OAAKE,cAAcH,EAAMA,EAAM/C,KAAKW,KAAKwC,gBAEjCpB,EAAGgB,EAAK,GAAId,EAAGc,EAAK,qCAGvBD,GACL,OAAO,oCAGDA,GACF9C,KAAKoD,SAASN,KAAW9C,KAAK0B,YAC9B1B,KAAK0B,WAAY,EACjB1B,KAAKyB,YAELzB,KAAKsB,UAAUtB,KAAKqD,UAAY,GAAKP,EAAMf,EAC3C/B,KAAKsB,UAAUtB,KAAKqD,UAAY,GAAKP,EAAMb,EAE3CjC,KAAK6B,OAAOiB,GAEZ9C,KAAKsD,gBAAgB,mBACrBtD,KAAKsD,gBAAgB,cAAetD,KAAKuD,mDAiCzCT,GACA9C,KAAK0B,YACL1B,KAAKsB,UAAUtB,KAAKqD,UAAY,GAAKP,EAAMf,EAC3C/B,KAAKsB,UAAUtB,KAAKqD,UAAY,GAAKP,EAAMb,EAE3CjC,KAAKsD,gBAAgB,YAAatD,KAAKwD,aACvCxD,KAAKsD,gBAAgB,cAAetD,KAAKyD,gBAEzCzD,KAAKwB,iBAEAxB,KAAKY,WAGNZ,KAAKyB,YAELzB,KAAKsB,UAAUtB,KAAKqD,UAAY,GAAKP,EAAMf,EAC3C/B,KAAKsB,UAAUtB,KAAKqD,UAAY,GAAKP,EAAMb,EAE3CjC,KAAK6B,OAAOiB,IAPZ9C,KAAK0B,WAAY,sCAYlBR,GACPlB,KAAK0B,WAAY,EAEjB1B,KAAKsD,gBAAgB,aAAcpC,kCAGhC4B,GACC9C,KAAK0B,YACL1B,KAAKsB,UAAUtB,KAAKqD,UAAY,GAAKP,EAAMf,EAC3C/B,KAAKsB,UAAUtB,KAAKqD,UAAY,GAAKP,EAAMb,mCAK/CjC,KAAKyB,UAAY,EACjBzB,KAAKwB,eAAiB,EACtBxB,KAAKsB,UAAUoC,KAAK,qCAnEpB,OAA6B,EAAtB1D,KAAKwB,gDAIZ,OAAOxB,KAAKsB,UAAUqC,MAAM,EAAoB,EAAjB3D,KAAKyB,+CAIpC,OACImC,MAAO5D,KAAKuD,iBACZM,IAAK7D,KAAKyD,yDAKd,OACI1B,EAAG/B,KAAKsB,UAAUtB,KAAKqD,WACvBpB,EAAGjC,KAAKsB,UAAUtB,KAAKqD,UAAY,2CAKvC,OACItB,EAAG/B,KAAKsB,UAAUtB,KAAKqD,UAAY,GACnCpB,EAAGjC,KAAKsB,UAAUtB,KAAKqD,UAAY,kCA+CzCS,aACF,SAAAA,EAAYtD,GAASE,EAAAV,KAAA8D,GACjB9D,KAAKmB,KAAO,IAAI4C,IAChBC,SAASpC,iBAAiB,UAAW5B,KAAKiE,QAAQ5E,KAAKW,OACvDgE,SAASpC,iBAAiB,QAAS5B,KAAKkE,MAAM7E,KAAKW,iDAG/CkB,GACJlB,KAAKmB,KAAKgD,IAAIjD,EAAI9B,KAAK,GAEnB8B,EAAI9B,IAAIgF,WAAW,UACnBlD,EAAImD,+CAINnD,GACFlB,KAAKmB,KAAKmD,OAAOpD,EAAI9B,oCAGlBA,GACH,OAAOY,KAAKmB,KAAKzC,IAAIU,qCAKzB,SAAAmF,EAAYC,GAAK,IAAAC,EAAAzE,KAAAU,EAAAV,KAAAuE,GACbvE,KAAK0E,QAAU,EAAG,GAClB1E,KAAK2E,MAAQ,IACb3E,KAAK4E,SAAW,IAAId,EAEpB,IAAIe,EAAgB,KA4BpB7E,KAAK8E,OAASC,sBA1BD,SAAPC,EAAOC,GACJJ,IACDA,EAAgBI,GAEpB,IAAIC,GAASD,EAAMJ,GAAiB,IACpCA,EAAgBI,EAEhBR,EAAKC,QACDD,EAAKG,SAASO,OAAO,cAAgB,EAAIV,EAAKG,SAASO,OAAO,cAAgB,EAAI,EAClFV,EAAKG,SAASO,OAAO,cAAgB,EAAIV,EAAKG,SAASO,OAAO,WAAa,EAAI,GAG/EV,EAAKG,SAASO,OAAO,KACrBV,EAAKE,OAAS,GACPF,EAAKG,SAASO,OAAO,OAC5BV,EAAKE,OAAS,GACdF,EAAKE,MAAQS,KAAKC,IAAI,IAAKZ,EAAKE,QAGb,IAAnBF,EAAKC,OAAO,IAA+B,IAAnBD,EAAKC,OAAO,IACpCF,EAAIc,OAAOC,UAAUd,EAAKE,MAAQO,EAAQT,EAAKC,OAAO,GAAID,EAAKE,MAAQO,EAAQT,EAAKC,OAAO,IAG/FD,EAAKK,OAASC,sBAAsBC,UAO1CQ,aACF,SAAAA,EAAY7E,EAAM8E,GAAM/E,EAAAV,KAAAwF,GACpBxF,KAAKyF,KAAOA,EACZzF,KAAKW,KAAOA,EACZX,KAAK8E,OAAS,+CAIT9E,KAAK8E,SACN9E,KAAK8E,OAASC,sBAAsB/E,KAAKgF,KAAK3F,KAAKW,uCAKvD0F,qBAAqB1F,KAAK8E,QAC1B9E,KAAK8E,OAAS,oCAIV9E,KAAKyF,MACLzF,KAAKW,KAAK2E,OAAOK,SAAS3F,KAAKyF,KAAKG,SAAS7D,EAAG/B,KAAKyF,KAAKG,SAAS3D,GAGvEjC,KAAK8E,OAASC,sBAAsB/E,KAAKgF,KAAK3F,KAAKW,sICxP3D,SAAqB6F,GACjB,IAAIC,EAAQ,EACZ,OAAO,SAAUC,GACb,IAAKA,EAAYjF,QAETgF,GADJC,GAAeA,IACSjF,OAAS+E,EAAO/E,OACpC,MAAM,IAAIkF,MAAM,6CAGxBH,EAAO1B,IAAI4B,EAAaD,GACxBA,GAASC,EAAYjF,mBAI7B,SAAkBmF,EAAGrG,EAAG9B,GAEpB,IAAIa,EAAGoB,EAAGmG,EAAGjI,EAAGC,EAAG6D,EAEdoE,SAASF,KAAIA,EAAI,GACjBE,SAASvG,KAAIA,EAAI,GACjBuG,SAASrI,KAAIA,EAAI,IAEtBmI,GAAK,IACG,IAAGA,EAAI,IAAMA,EAAI,GACzBA,GAAK,EAELrG,EAAIwF,KAAKC,IAAI,EAAGD,KAAKgB,IAAI,EAAGxG,EAAI,MAChC9B,EAAIsH,KAAKC,IAAI,EAAGD,KAAKgB,IAAI,EAAGtI,EAAI,MAEhCI,GAAK,EAAIkH,KAAKiB,IAAK,EAAIvI,EAAK,IAAM8B,EAClCmC,EAAI7D,GAAK,EAAIkH,KAAKiB,IAAKJ,EAAI,EAAK,IAE5BA,EAAI,GACJtH,EAAIT,EACJ6B,EAAIgC,EACJmE,EAAI,GACGD,EAAI,GACXtH,EAAIoD,EACJhC,EAAI7B,EACJgI,EAAI,GACGD,EAAI,GACXtH,EAAI,EACJoB,EAAI7B,EACJgI,EAAInE,GACGkE,EAAI,GACXtH,EAAI,EACJoB,EAAIgC,EACJmE,EAAIhI,GACG+H,EAAI,GACXtH,EAAIoD,EACJhC,EAAI,EACJmG,EAAIhI,IAEJS,EAAIT,EACJ6B,EAAI,EACJmG,EAAInE,GAQR,OALA9D,EAAIH,EAAII,EAAI,EACZS,EAAIyG,KAAKkB,MAAgB,KAAT3H,EAAIV,IACpB8B,EAAIqF,KAAKkB,MAAgB,KAATvG,EAAI9B,IACpBiI,EAAId,KAAKkB,MAAgB,KAATJ,EAAIjI,KAEZU,EAAGoB,EAAGmG,wBAGlB,SAA2BpG,EAAIyG,EAAOC,GAClC,IAAMC,EAAc3G,EAAG4G,oBACjBC,EAAU7G,EAAG8G,gBAYnB,OAVA9G,EAAG+G,YAAY/G,EAAGgH,WAAYH,GAC9B7G,EAAGiH,aAAajH,EAAGgH,WAAY,EAAGhH,EAAGkH,MAAOT,EAAOC,GACnD1G,EAAGmH,cAAcnH,EAAGgH,WAAYhH,EAAGoH,mBAAoBpH,EAAGqH,SAE1DrH,EAAGsH,gBAAgBtH,EAAGuH,YAAaZ,GACnC3G,EAAGwH,qBAAqBxH,EAAGuH,YAAavH,EAAGyH,kBAAmBzH,EAAGgH,WAAYH,EAAS,GAEtF7G,EAAGsH,gBAAgBtH,EAAGuH,YAAa,MACnCvH,EAAG+G,YAAY/G,EAAGgH,WAAY,OAG1BP,QACAC,SACAgB,OAHG,WAIC1H,EAAG2H,SAAS,EAAG,EAAGlB,EAAOC,GACzB1G,EAAGsH,gBAAgBtH,EAAGuH,YAAaZ,IAEvCiB,OAPG,WAQC5H,EAAGsH,gBAAgBtH,EAAGuH,YAAa,OAEvCV,UACAF,4BAIR,SAAmBkB,GACf,OAAO,IAAIC,QAAQ,SAACC,EAASC,GACzB,IAAMC,EAAM,IAAIC,MAEhB,SAASC,IACLF,EAAIG,oBAAoB,OAAQ,MAChCH,EAAIG,oBAAoB,QAAS,MAGrCH,EAAInG,iBAAiB,OAAQ,WACzBqG,IACAJ,EAAQE,KAGZA,EAAInG,iBAAiB,QAAS,SAACuG,GAC3BF,IACAH,EAAOK,KAGXJ,EAAIJ,IAAMA,gHC/Gd,SAAAS,EAAY5H,gGAASE,CAAAV,KAAAoI,GACjBpI,KAAK4F,SAAWpF,EAAQoF,WAAa,EAAG,GACxC5F,KAAKqI,KAAO7H,EAAQ6H,KAEpBrI,KAAKsI,MAAQ,EAEbtI,KAAKuI,OAAS/H,EAAQ+H,SAAW,EAAG,GAEpCvI,KAAKwI,gBAAkBhI,EAAQgI,kBAAoB,EAAG,EAAG,EAAG,GAC5DxI,KAAKyI,YAAcjI,EAAQiI,aAAe,gHCZlD,IAAAC,EAAAC,EAAAlL,EAAA,IAEAmL,EAAAD,EAAAlL,EAAA,KACAoL,EAAAF,EAAAlL,EAAA,8NAEA,IAAMqL,EAAuB,IAAIvH,cAC7B,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,IAGDwH,aACF,SAAAA,EAAAC,GAAiC,IAApBrI,EAAoBqI,EAApBrI,KAAMsI,EAAcD,EAAdC,yGAAcvI,CAAAV,KAAA+I,GAC7B/I,KAAKF,GAAKa,EAAKb,GACfE,KAAKkJ,OAASvI,EAAKuI,OACnBlJ,KAAKW,KAAOA,EAEZX,KAAKiJ,YAAcA,EAEnBjJ,KAAKmJ,+FAILnJ,KAAKoJ,YAAcC,UAAKC,kBAAkBtJ,KAAKF,IAAKyJ,UAAIC,YAExDxJ,KAAKyJ,SACDC,QACIC,KAAMb,EACNc,cAAe,EACfC,QAAS,EACTC,SAAU9J,KAAKF,GAAGiK,aAEtBnE,UAEIgE,cAAe,EACfC,QAAS,EACTC,SAAU9J,KAAKF,GAAGkK,cAEtBzB,QAEIqB,cAAe,EACfC,QAAS,EACTC,SAAU9J,KAAKF,GAAGkK,cAEtB3B,MAEIuB,cAAe,EACfC,QAAS,EACTC,SAAU9J,KAAKF,GAAGkK,cAEtBC,UACIN,MAKI,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,GAEPC,cAAe,EACfC,QAAS,EACTK,KAAMC,YAEVC,SACIT,MACI,EACA,EACA,EACA,KAKZ3J,KAAKqK,WAAahB,UAAKiB,2BAA2BtK,KAAKF,GAAIE,KAAKyJ,SAChEzJ,KAAKuK,IAAMlB,UAAKmB,sBAAsBxK,KAAKF,GAAIE,KAAKoJ,YAAapJ,KAAKqK,2CAGnEI,EAASC,GACZ,IAAMC,EAAY,IAAIpJ,aAAa,EAAIkJ,EAAQ3J,QACzC8J,EAAQ,IAAIrJ,aAAa,EAAIkJ,EAAQ3J,QACrC+J,EAAU,IAAItJ,aAAa,EAAIkJ,EAAQ3J,QAE7C2J,EAAQrJ,QAAQ,SAAC0J,EAAQC,GACrBD,EAAOlF,SAASxE,QAAQ,SAAC4J,EAAGC,GACxBN,EAAwB,EAAdI,EAAkBE,GAAaD,IAG7CF,EAAOzC,KAAKjH,QAAQ,SAAC4J,EAAGC,GACpBL,EAAoB,EAAdG,EAAkBE,GAAaD,IAGzCF,EAAOvC,OAAOnH,QAAQ,SAAC4J,EAAGC,GACtBJ,EAAsB,EAAdE,EAAkBE,GAAaD,MAI/C3B,UAAK6B,6BACDlL,KAAKF,GACLE,KAAKqK,WAAWc,QAAQvF,SACxB+E,GAGJtB,UAAK6B,6BACDlL,KAAKF,GACLE,KAAKqK,WAAWc,QAAQ9C,KACxBuC,GAGJvB,UAAK6B,6BACDlL,KAAKF,GACLE,KAAKqK,WAAWc,QAAQ5C,OACxBsC,GAGJ7K,KAAKF,GAAGsL,WAAWpL,KAAKoJ,YAAYiC,SAEpChC,UAAKiC,YAAYtL,KAAKoJ,aAClBsB,WAAYA,EACZ/D,QAAS3G,KAAKiJ,YAAYtC,UAG9B0C,UAAKkC,wBAAwBvL,KAAKF,GAAIE,KAAKoJ,YAAapJ,KAAKuK,KAC7DlB,UAAKmC,eAAexL,KAAKF,GAAIE,KAAKuK,IAAKvK,KAAKF,GAAG2L,oBAAgBC,OAAWA,EAAWjB,EAAQ3J,k0aCvHrG,MAAA6K,EAAA,KACA,IAAAC,EAAA,oBAAArK,0BAAAqB,MACA,MAAAiJ,EAAAzG,KAAA0G,OAOA,SAAAC,EAAA7B,GACA0B,EAAA1B,EAGA,MAAA8B,EAAA5G,KAAA6G,GAAA,IAOA,SAAAC,EAAAC,GACA,OAAAA,EAAAH,EAYA,SAAAI,EAAAD,EAAAjG,GACA,OAAAd,KAAAiB,IAAA8F,EAAAjG,IAAAyF,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA8F,GAAA/G,KAAAiB,IAAAH,IC5BA,SAAA/G,IACA,IAAAkN,EAAA,IAAAT,EAAA,GAKA,OAJAS,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EASA,SAAAC,EAAAH,GACA,IAAAE,EAAA,IAAAT,EAAA,GAKA,OAJAS,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAUA,SAAAE,EAAAF,EAAAF,GAKA,OAJAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EASA,SAAAG,EAAAH,GAKA,OAJAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAYA,SAAApJ,EAAAwJ,EAAAC,EAAAC,EAAAC,GACA,IAAAP,EAAA,IAAAT,EAAA,GAKA,OAJAS,EAAA,GAAAI,EACAJ,EAAA,GAAAK,EACAL,EAAA,GAAAM,EACAN,EAAA,GAAAO,EACAP,EAaA,SAAAlI,EAAAkI,EAAAI,EAAAC,EAAAC,EAAAC,GAKA,OAJAP,EAAA,GAAAI,EACAJ,EAAA,GAAAK,EACAL,EAAA,GAAAM,EACAN,EAAA,GAAAO,EACAP,EAUA,SAAAQ,EAAAR,EAAAF,GAGA,GAAAE,IAAAF,EAAA,CACA,IAAAW,EAAAX,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAS,OAEAT,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GAGA,OAAAE,EAUA,SAAAU,EAAAV,EAAAF,GACA,IAAAa,EAAAb,EAAA,GAAAW,EAAAX,EAAA,GAAAc,EAAAd,EAAA,GAAAe,EAAAf,EAAA,GAGAgB,EAAAH,EAAAE,EAAAD,EAAAH,EAEA,OAAAK,GAGAA,EAAA,EAAAA,EAEAd,EAAA,GAAAa,EAAAC,EACAd,EAAA,IAAAS,EAAAK,EACAd,EAAA,IAAAY,EAAAE,EACAd,EAAA,GAAAW,EAAAG,EAEAd,GATA,KAmBA,SAAAe,EAAAf,EAAAF,GAEA,IAAAa,EAAAb,EAAA,GAMA,OALAE,EAAA,GAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,GACAE,EAAA,GAAAW,EAEAX,EASA,SAAAgB,EAAAlB,GACA,OAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAWA,SAAAmB,EAAAjB,EAAAF,EAAAjG,GACA,IAAA8G,EAAAb,EAAA,GAAAW,EAAAX,EAAA,GAAAc,EAAAd,EAAA,GAAAe,EAAAf,EAAA,GACAoB,EAAArH,EAAA,GAAAsH,EAAAtH,EAAA,GAAAuH,EAAAvH,EAAA,GAAAwH,EAAAxH,EAAA,GAKA,OAJAmG,EAAA,GAAAW,EAAAO,EAAAN,EAAAO,EACAnB,EAAA,GAAAS,EAAAS,EAAAL,EAAAM,EACAnB,EAAA,GAAAW,EAAAS,EAAAR,EAAAS,EACArB,EAAA,GAAAS,EAAAW,EAAAP,EAAAQ,EACArB,EAWA,SAAAsB,EAAAtB,EAAAF,EAAAyB,GACA,IAAAZ,EAAAb,EAAA,GAAAW,EAAAX,EAAA,GAAAc,EAAAd,EAAA,GAAAe,EAAAf,EAAA,GACAvM,EAAAwF,KAAAyI,IAAAD,GACA1P,EAAAkH,KAAA0I,IAAAF,GAKA,OAJAvB,EAAA,GAAAW,EAAA9O,EAAA+O,EAAArN,EACAyM,EAAA,GAAAS,EAAA5O,EAAAgP,EAAAtN,EACAyM,EAAA,GAAAW,GAAApN,EAAAqN,EAAA/O,EACAmO,EAAA,GAAAS,GAAAlN,EAAAsN,EAAAhP,EACAmO,EAWA,SAAA0B,EAAA1B,EAAAF,EAAAnB,GACA,IAAAgC,EAAAb,EAAA,GAAAW,EAAAX,EAAA,GAAAc,EAAAd,EAAA,GAAAe,EAAAf,EAAA,GACA6B,EAAAhD,EAAA,GAAAiD,EAAAjD,EAAA,GAKA,OAJAqB,EAAA,GAAAW,EAAAgB,EACA3B,EAAA,GAAAS,EAAAkB,EACA3B,EAAA,GAAAY,EAAAgB,EACA5B,EAAA,GAAAa,EAAAe,EACA5B,EAcA,SAAA6B,EAAA7B,EAAAuB,GACA,IAAAhO,EAAAwF,KAAAyI,IAAAD,GACA1P,EAAAkH,KAAA0I,IAAAF,GAKA,OAJAvB,EAAA,GAAAnO,EACAmO,EAAA,GAAAzM,EACAyM,EAAA,IAAAzM,EACAyM,EAAA,GAAAnO,EACAmO,EAcA,SAAA8B,EAAA9B,EAAArB,GAKA,OAJAqB,EAAA,GAAArB,EAAA,GACAqB,EAAA,KACAA,EAAA,KACAA,EAAA,GAAArB,EAAA,GACAqB,EASA,SAAA+B,EAAAjC,GACA,cAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,OASA,SAAAkC,EAAAlC,GACA,OAAA/G,KAAAkJ,KAAAlJ,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,OAWA,SAAAqC,EAAAC,EAAAC,EAAAC,EAAAxC,GAKA,OAJAsC,EAAA,GAAAtC,EAAA,GAAAA,EAAA,GACAwC,EAAA,GAAAxC,EAAA,GACAwC,EAAA,GAAAxC,EAAA,GACAwC,EAAA,GAAAxC,EAAA,GAAAsC,EAAA,GAAAE,EAAA,IACAF,EAAAC,EAAAC,GAWA,SAAAC,EAAAvC,EAAAF,EAAAjG,GAKA,OAJAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAWA,SAAAwC,EAAAxC,EAAAF,EAAAjG,GAKA,OAJAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAUA,SAAAyC,EAAA3C,EAAAjG,GACA,OAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,GAUA,SAAA6I,EAAA5C,EAAAjG,GACA,IAAA8G,EAAAb,EAAA,GAAAW,EAAAX,EAAA,GAAAc,EAAAd,EAAA,GAAAe,EAAAf,EAAA,GACAoB,EAAArH,EAAA,GAAAsH,EAAAtH,EAAA,GAAAuH,EAAAvH,EAAA,GAAAwH,EAAAxH,EAAA,GACA,OAAAd,KAAAiB,IAAA2G,EAAAO,IAAA5B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA2G,GAAA5H,KAAAiB,IAAAkH,KACAnI,KAAAiB,IAAAyG,EAAAU,IAAA7B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAyG,GAAA1H,KAAAiB,IAAAmH,KACApI,KAAAiB,IAAA4G,EAAAQ,IAAA9B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA4G,GAAA7H,KAAAiB,IAAAoH,KACArI,KAAAiB,IAAA6G,EAAAQ,IAAA/B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA6G,GAAA9H,KAAAiB,IAAAqH,IAWA,SAAAsB,EAAA3C,EAAAF,EAAAjG,GAKA,OAJAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAYA,SAAA4C,EAAA5C,EAAAF,EAAAjG,EAAAgJ,GAKA,OAJA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAOA,MAAA8C,EAAA7B,EAMA8B,EAAAP,EClYA,SAAAQ,IACA,IAAAhD,EAAA,IAAAT,EAAA,GAOA,OANAS,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EASA,SAAAiD,EAAAnD,GACA,IAAAE,EAAA,IAAAT,EAAA,GAOA,OANAS,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAUA,SAAAkD,EAAAlD,EAAAF,GAOA,OANAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EASA,SAAAmD,EAAAnD,GAOA,OANAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAcA,SAAAoD,EAAAtD,EAAAjG,EAAAhI,EAAAC,EAAAuR,EAAAC,GACA,IAAAtD,EAAA,IAAAT,EAAA,GAOA,OANAS,EAAA,GAAAF,EACAE,EAAA,GAAAnG,EACAmG,EAAA,GAAAnO,EACAmO,EAAA,GAAAlO,EACAkO,EAAA,GAAAqD,EACArD,EAAA,GAAAsD,EACAtD,EAeA,SAAAuD,EAAAvD,EAAAF,EAAAjG,EAAAhI,EAAAC,EAAAuR,EAAAC,GAOA,OANAtD,EAAA,GAAAF,EACAE,EAAA,GAAAnG,EACAmG,EAAA,GAAAnO,EACAmO,EAAA,GAAAlO,EACAkO,EAAA,GAAAqD,EACArD,EAAA,GAAAsD,EACAtD,EAUA,SAAAwD,EAAAxD,EAAAF,GACA,IAAA2D,EAAA3D,EAAA,GAAA4D,EAAA5D,EAAA,GAAA6D,EAAA7D,EAAA,GAAA8D,EAAA9D,EAAA,GACA+D,EAAA/D,EAAA,GAAAgE,EAAAhE,EAAA,GAEAgB,EAAA2C,EAAAG,EAAAF,EAAAC,EACA,OAAA7C,GAGAA,EAAA,EAAAA,EAEAd,EAAA,GAAA4D,EAAA9C,EACAd,EAAA,IAAA0D,EAAA5C,EACAd,EAAA,IAAA2D,EAAA7C,EACAd,EAAA,GAAAyD,EAAA3C,EACAd,EAAA,IAAA2D,EAAAG,EAAAF,EAAAC,GAAA/C,EACAd,EAAA,IAAA0D,EAAAG,EAAAJ,EAAAK,GAAAhD,EACAd,GAVA,KAmBA,SAAA+D,EAAAjE,GACA,OAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAWA,SAAAkE,GAAAhE,EAAAF,EAAAjG,GACA,IAAA8G,EAAAb,EAAA,GAAAW,EAAAX,EAAA,GAAAc,EAAAd,EAAA,GAAAe,EAAAf,EAAA,GAAAmE,EAAAnE,EAAA,GAAAoE,EAAApE,EAAA,GACAoB,EAAArH,EAAA,GAAAsH,EAAAtH,EAAA,GAAAuH,EAAAvH,EAAA,GAAAwH,EAAAxH,EAAA,GAAAsK,EAAAtK,EAAA,GAAAuK,EAAAvK,EAAA,GAOA,OANAmG,EAAA,GAAAW,EAAAO,EAAAN,EAAAO,EACAnB,EAAA,GAAAS,EAAAS,EAAAL,EAAAM,EACAnB,EAAA,GAAAW,EAAAS,EAAAR,EAAAS,EACArB,EAAA,GAAAS,EAAAW,EAAAP,EAAAQ,EACArB,EAAA,GAAAW,EAAAwD,EAAAvD,EAAAwD,EAAAH,EACAjE,EAAA,GAAAS,EAAA0D,EAAAtD,EAAAuD,EAAAF,EACAlE,EAWA,SAAAqE,GAAArE,EAAAF,EAAAyB,GACA,IAAAZ,EAAAb,EAAA,GAAAW,EAAAX,EAAA,GAAAc,EAAAd,EAAA,GAAAe,EAAAf,EAAA,GAAAmE,EAAAnE,EAAA,GAAAoE,EAAApE,EAAA,GACAvM,EAAAwF,KAAAyI,IAAAD,GACA1P,EAAAkH,KAAA0I,IAAAF,GAOA,OANAvB,EAAA,GAAAW,EAAA9O,EAAA+O,EAAArN,EACAyM,EAAA,GAAAS,EAAA5O,EAAAgP,EAAAtN,EACAyM,EAAA,GAAAW,GAAApN,EAAAqN,EAAA/O,EACAmO,EAAA,GAAAS,GAAAlN,EAAAsN,EAAAhP,EACAmO,EAAA,GAAAiE,EACAjE,EAAA,GAAAkE,EACAlE,EAWA,SAAAsE,GAAAtE,EAAAF,EAAAnB,GACA,IAAAgC,EAAAb,EAAA,GAAAW,EAAAX,EAAA,GAAAc,EAAAd,EAAA,GAAAe,EAAAf,EAAA,GAAAmE,EAAAnE,EAAA,GAAAoE,EAAApE,EAAA,GACA6B,EAAAhD,EAAA,GAAAiD,EAAAjD,EAAA,GAOA,OANAqB,EAAA,GAAAW,EAAAgB,EACA3B,EAAA,GAAAS,EAAAkB,EACA3B,EAAA,GAAAY,EAAAgB,EACA5B,EAAA,GAAAa,EAAAe,EACA5B,EAAA,GAAAiE,EACAjE,EAAA,GAAAkE,EACAlE,EAWA,SAAA9G,GAAA8G,EAAAF,EAAAnB,GACA,IAAAgC,EAAAb,EAAA,GAAAW,EAAAX,EAAA,GAAAc,EAAAd,EAAA,GAAAe,EAAAf,EAAA,GAAAmE,EAAAnE,EAAA,GAAAoE,EAAApE,EAAA,GACA6B,EAAAhD,EAAA,GAAAiD,EAAAjD,EAAA,GAOA,OANAqB,EAAA,GAAAW,EACAX,EAAA,GAAAS,EACAT,EAAA,GAAAY,EACAZ,EAAA,GAAAa,EACAb,EAAA,GAAAW,EAAAgB,EAAAf,EAAAgB,EAAAqC,EACAjE,EAAA,GAAAS,EAAAkB,EAAAd,EAAAe,EAAAsC,EACAlE,EAcA,SAAAuE,GAAAvE,EAAAuB,GACA,IAAAhO,EAAAwF,KAAAyI,IAAAD,GAAA1P,EAAAkH,KAAA0I,IAAAF,GAOA,OANAvB,EAAA,GAAAnO,EACAmO,EAAA,GAAAzM,EACAyM,EAAA,IAAAzM,EACAyM,EAAA,GAAAnO,EACAmO,EAAA,KACAA,EAAA,KACAA,EAcA,SAAAwE,GAAAxE,EAAArB,GAOA,OANAqB,EAAA,GAAArB,EAAA,GACAqB,EAAA,KACAA,EAAA,KACAA,EAAA,GAAArB,EAAA,GACAqB,EAAA,KACAA,EAAA,KACAA,EAcA,SAAAyE,GAAAzE,EAAArB,GAOA,OANAqB,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAArB,EAAA,GACAqB,EAAA,GAAArB,EAAA,GACAqB,EASA,SAAA0E,GAAA5E,GACA,eAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QACAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,OASA,SAAA6E,GAAA7E,GACA,OAAA/G,KAAAkJ,KAAAlJ,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,SAWA,SAAA8E,GAAA5E,EAAAF,EAAAjG,GAOA,OANAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAWA,SAAA6E,GAAA7E,EAAAF,EAAAjG,GAOA,OANAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAWA,SAAA8E,GAAA9E,EAAAF,EAAAjG,GAOA,OANAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAYA,SAAA+E,GAAA/E,EAAAF,EAAAjG,EAAAgJ,GAOA,OANA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAUA,SAAAgF,GAAAlF,EAAAjG,GACA,OAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,GAUA,SAAAoL,GAAAnF,EAAAjG,GACA,IAAA8G,EAAAb,EAAA,GAAAW,EAAAX,EAAA,GAAAc,EAAAd,EAAA,GAAAe,EAAAf,EAAA,GAAAmE,EAAAnE,EAAA,GAAAoE,EAAApE,EAAA,GACAoB,EAAArH,EAAA,GAAAsH,EAAAtH,EAAA,GAAAuH,EAAAvH,EAAA,GAAAwH,EAAAxH,EAAA,GAAAsK,EAAAtK,EAAA,GAAAuK,EAAAvK,EAAA,GACA,OAAAd,KAAAiB,IAAA2G,EAAAO,IAAA5B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA2G,GAAA5H,KAAAiB,IAAAkH,KACAnI,KAAAiB,IAAAyG,EAAAU,IAAA7B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAyG,GAAA1H,KAAAiB,IAAAmH,KACApI,KAAAiB,IAAA4G,EAAAQ,IAAA9B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA4G,GAAA7H,KAAAiB,IAAAoH,KACArI,KAAAiB,IAAA6G,EAAAQ,IAAA/B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA6G,GAAA9H,KAAAiB,IAAAqH,KACAtI,KAAAiB,IAAAiK,EAAAE,IAAA7E,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAiK,GAAAlL,KAAAiB,IAAAmK,KACApL,KAAAiB,IAAAkK,EAAAE,IAAA9E,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAkK,GAAAnL,KAAAiB,IAAAoK,IAOA,MAAAc,GAAAlB,GAMAmB,GAAAN,GCjbA,SAAAO,KACA,IAAApF,EAAA,IAAAT,EAAA,GAUA,OATAS,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAUA,SAAAqF,GAAArF,EAAAF,GAUA,OATAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,IACAE,EASA,SAAAsF,GAAAxF,GACA,IAAAE,EAAA,IAAAT,EAAA,GAUA,OATAS,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAUA,SAAAuF,GAAAvF,EAAAF,GAUA,OATAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAiBA,SAAAwF,GAAApF,EAAAC,EAAAoF,EAAAnF,EAAAC,EAAAmF,EAAAC,EAAAC,EAAAC,GACA,IAAA7F,EAAA,IAAAT,EAAA,GAUA,OATAS,EAAA,GAAAI,EACAJ,EAAA,GAAAK,EACAL,EAAA,GAAAyF,EACAzF,EAAA,GAAAM,EACAN,EAAA,GAAAO,EACAP,EAAA,GAAA0F,EACA1F,EAAA,GAAA2F,EACA3F,EAAA,GAAA4F,EACA5F,EAAA,GAAA6F,EACA7F,EAkBA,SAAA8F,GAAA9F,EAAAI,EAAAC,EAAAoF,EAAAnF,EAAAC,EAAAmF,EAAAC,EAAAC,EAAAC,GAUA,OATA7F,EAAA,GAAAI,EACAJ,EAAA,GAAAK,EACAL,EAAA,GAAAyF,EACAzF,EAAA,GAAAM,EACAN,EAAA,GAAAO,EACAP,EAAA,GAAA0F,EACA1F,EAAA,GAAA2F,EACA3F,EAAA,GAAA4F,EACA5F,EAAA,GAAA6F,EACA7F,EASA,SAAA+F,GAAA/F,GAUA,OATAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAUA,SAAAgG,GAAAhG,EAAAF,GAEA,GAAAE,IAAAF,EAAA,CACA,IAAAmG,EAAAnG,EAAA,GAAAoG,EAAApG,EAAA,GAAAqG,EAAArG,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAiG,EACAjG,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAkG,EACAlG,EAAA,GAAAmG,OAEAnG,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GAGA,OAAAE,EAUA,SAAAoG,GAAApG,EAAAF,GACA,IAAAuG,EAAAvG,EAAA,GAAAmG,EAAAnG,EAAA,GAAAoG,EAAApG,EAAA,GACAwG,EAAAxG,EAAA,GAAAyG,EAAAzG,EAAA,GAAAqG,EAAArG,EAAA,GACA0G,EAAA1G,EAAA,GAAA2G,EAAA3G,EAAA,GAAA4G,EAAA5G,EAAA,GAEA6G,EAAAD,EAAAH,EAAAJ,EAAAM,EACAG,GAAAF,EAAAJ,EAAAH,EAAAK,EACAK,EAAAJ,EAAAH,EAAAC,EAAAC,EAGA1F,EAAAuF,EAAAM,EAAAV,EAAAW,EAAAV,EAAAW,EAEA,OAAA/F,GAGAA,EAAA,EAAAA,EAEAd,EAAA,GAAA2G,EAAA7F,EACAd,EAAA,KAAA0G,EAAAT,EAAAC,EAAAO,GAAA3F,EACAd,EAAA,IAAAmG,EAAAF,EAAAC,EAAAK,GAAAzF,EACAd,EAAA,GAAA4G,EAAA9F,EACAd,EAAA,IAAA0G,EAAAL,EAAAH,EAAAM,GAAA1F,EACAd,EAAA,KAAAmG,EAAAE,EAAAH,EAAAI,GAAAxF,EACAd,EAAA,GAAA6G,EAAA/F,EACAd,EAAA,KAAAyG,EAAAJ,EAAAJ,EAAAO,GAAA1F,EACAd,EAAA,IAAAuG,EAAAF,EAAAJ,EAAAK,GAAAxF,EACAd,GAbA,KAuBA,SAAA8G,GAAA9G,EAAAF,GACA,IAAAuG,EAAAvG,EAAA,GAAAmG,EAAAnG,EAAA,GAAAoG,EAAApG,EAAA,GACAwG,EAAAxG,EAAA,GAAAyG,EAAAzG,EAAA,GAAAqG,EAAArG,EAAA,GACA0G,EAAA1G,EAAA,GAAA2G,EAAA3G,EAAA,GAAA4G,EAAA5G,EAAA,GAWA,OATAE,EAAA,GAAAuG,EAAAG,EAAAP,EAAAM,EACAzG,EAAA,GAAAkG,EAAAO,EAAAR,EAAAS,EACA1G,EAAA,GAAAiG,EAAAE,EAAAD,EAAAK,EACAvG,EAAA,GAAAmG,EAAAK,EAAAF,EAAAI,EACA1G,EAAA,GAAAqG,EAAAK,EAAAR,EAAAM,EACAxG,EAAA,GAAAkG,EAAAI,EAAAD,EAAAF,EACAnG,EAAA,GAAAsG,EAAAG,EAAAF,EAAAC,EACAxG,EAAA,GAAAiG,EAAAO,EAAAH,EAAAI,EACAzG,EAAA,GAAAqG,EAAAE,EAAAN,EAAAK,EACAtG,EASA,SAAA+G,GAAAjH,GACA,IAAAuG,EAAAvG,EAAA,GAAAmG,EAAAnG,EAAA,GAAAoG,EAAApG,EAAA,GACAwG,EAAAxG,EAAA,GAAAyG,EAAAzG,EAAA,GAAAqG,EAAArG,EAAA,GACA0G,EAAA1G,EAAA,GAAA2G,EAAA3G,EAAA,GAAA4G,EAAA5G,EAAA,GAEA,OAAAuG,GAAAK,EAAAH,EAAAJ,EAAAM,GAAAR,IAAAS,EAAAJ,EAAAH,EAAAK,GAAAN,GAAAO,EAAAH,EAAAC,EAAAC,GAWA,SAAAQ,GAAAhH,EAAAF,EAAAjG,GACA,IAAAwM,EAAAvG,EAAA,GAAAmG,EAAAnG,EAAA,GAAAoG,EAAApG,EAAA,GACAwG,EAAAxG,EAAA,GAAAyG,EAAAzG,EAAA,GAAAqG,EAAArG,EAAA,GACA0G,EAAA1G,EAAA,GAAA2G,EAAA3G,EAAA,GAAA4G,EAAA5G,EAAA,GAEAmH,EAAApN,EAAA,GAAA8M,EAAA9M,EAAA,GAAAqN,EAAArN,EAAA,GACAsN,EAAAtN,EAAA,GAAA+M,EAAA/M,EAAA,GAAAuN,EAAAvN,EAAA,GACAwN,EAAAxN,EAAA,GAAAgN,EAAAhN,EAAA,GAAAyN,EAAAzN,EAAA,GAaA,OAXAmG,EAAA,GAAAiH,EAAAZ,EAAAM,EAAAL,EAAAY,EAAAV,EACAxG,EAAA,GAAAiH,EAAAhB,EAAAU,EAAAJ,EAAAW,EAAAT,EACAzG,EAAA,GAAAiH,EAAAf,EAAAS,EAAAR,EAAAe,EAAAR,EAEA1G,EAAA,GAAAmH,EAAAd,EAAAO,EAAAN,EAAAc,EAAAZ,EACAxG,EAAA,GAAAmH,EAAAlB,EAAAW,EAAAL,EAAAa,EAAAX,EACAzG,EAAA,GAAAmH,EAAAjB,EAAAU,EAAAT,EAAAiB,EAAAV,EAEA1G,EAAA,GAAAqH,EAAAhB,EAAAQ,EAAAP,EAAAgB,EAAAd,EACAxG,EAAA,GAAAqH,EAAApB,EAAAY,EAAAN,EAAAe,EAAAb,EACAzG,EAAA,GAAAqH,EAAAnB,EAAAW,EAAAV,EAAAmB,EAAAZ,EACA1G,EAWA,SAAAuH,GAAAvH,EAAAF,EAAAnB,GACA,IAAA0H,EAAAvG,EAAA,GAAAmG,EAAAnG,EAAA,GAAAoG,EAAApG,EAAA,GACAwG,EAAAxG,EAAA,GAAAyG,EAAAzG,EAAA,GAAAqG,EAAArG,EAAA,GACA0G,EAAA1G,EAAA,GAAA2G,EAAA3G,EAAA,GAAA4G,EAAA5G,EAAA,GACApK,EAAAiJ,EAAA,GAAA/I,EAAA+I,EAAA,GAaA,OAXAqB,EAAA,GAAAqG,EACArG,EAAA,GAAAiG,EACAjG,EAAA,GAAAkG,EAEAlG,EAAA,GAAAsG,EACAtG,EAAA,GAAAuG,EACAvG,EAAA,GAAAmG,EAEAnG,EAAA,GAAAtK,EAAA2Q,EAAAzQ,EAAA0Q,EAAAE,EACAxG,EAAA,GAAAtK,EAAAuQ,EAAArQ,EAAA2Q,EAAAE,EACAzG,EAAA,GAAAtK,EAAAwQ,EAAAtQ,EAAAuQ,EAAAO,EACA1G,EAWA,SAAAwH,GAAAxH,EAAAF,EAAAyB,GACA,IAAA8E,EAAAvG,EAAA,GAAAmG,EAAAnG,EAAA,GAAAoG,EAAApG,EAAA,GACAwG,EAAAxG,EAAA,GAAAyG,EAAAzG,EAAA,GAAAqG,EAAArG,EAAA,GACA0G,EAAA1G,EAAA,GAAA2G,EAAA3G,EAAA,GAAA4G,EAAA5G,EAAA,GAEAvM,EAAAwF,KAAAyI,IAAAD,GACA1P,EAAAkH,KAAA0I,IAAAF,GAaA,OAXAvB,EAAA,GAAAnO,EAAAwU,EAAA9S,EAAA+S,EACAtG,EAAA,GAAAnO,EAAAoU,EAAA1S,EAAAgT,EACAvG,EAAA,GAAAnO,EAAAqU,EAAA3S,EAAA4S,EAEAnG,EAAA,GAAAnO,EAAAyU,EAAA/S,EAAA8S,EACArG,EAAA,GAAAnO,EAAA0U,EAAAhT,EAAA0S,EACAjG,EAAA,GAAAnO,EAAAsU,EAAA5S,EAAA2S,EAEAlG,EAAA,GAAAwG,EACAxG,EAAA,GAAAyG,EACAzG,EAAA,GAAA0G,EACA1G,EAWA,SAAAyH,GAAAzH,EAAAF,EAAAnB,GACA,IAAAjJ,EAAAiJ,EAAA,GAAA/I,EAAA+I,EAAA,GAaA,OAXAqB,EAAA,GAAAtK,EAAAoK,EAAA,GACAE,EAAA,GAAAtK,EAAAoK,EAAA,GACAE,EAAA,GAAAtK,EAAAoK,EAAA,GAEAE,EAAA,GAAApK,EAAAkK,EAAA,GACAE,EAAA,GAAApK,EAAAkK,EAAA,GACAE,EAAA,GAAApK,EAAAkK,EAAA,GAEAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAcA,SAAA0H,GAAA1H,EAAArB,GAUA,OATAqB,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAArB,EAAA,GACAqB,EAAA,GAAArB,EAAA,GACAqB,EAAA,KACAA,EAcA,SAAA2H,GAAA3H,EAAAuB,GACA,IAAAhO,EAAAwF,KAAAyI,IAAAD,GAAA1P,EAAAkH,KAAA0I,IAAAF,GAaA,OAXAvB,EAAA,GAAAnO,EACAmO,EAAA,GAAAzM,EACAyM,EAAA,KAEAA,EAAA,IAAAzM,EACAyM,EAAA,GAAAnO,EACAmO,EAAA,KAEAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAcA,SAAA4H,GAAA5H,EAAArB,GAYA,OAXAqB,EAAA,GAAArB,EAAA,GACAqB,EAAA,KACAA,EAAA,KAEAA,EAAA,KACAA,EAAA,GAAArB,EAAA,GACAqB,EAAA,KAEAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAUA,SAAA6H,GAAA7H,EAAAF,GAYA,OAXAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,KAEAA,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,KAEAA,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,KACAA,EAWA,SAAA8H,GAAA9H,EAAA+H,GACA,IAAArS,EAAAqS,EAAA,GAAAnS,EAAAmS,EAAA,GAAAC,EAAAD,EAAA,GAAAE,EAAAF,EAAA,GACAG,EAAAxS,IACAyS,EAAAvS,IACAwS,EAAAJ,IAEAK,EAAA3S,EAAAwS,EACAI,EAAA1S,EAAAsS,EACAK,EAAA3S,EAAAuS,EACAK,EAAAR,EAAAE,EACAO,EAAAT,EAAAG,EACAO,EAAAV,EAAAI,EACAO,EAAAV,EAAAC,EACAU,EAAAX,EAAAE,EACAU,EAAAZ,EAAAG,EAcA,OAZApI,EAAA,KAAAuI,EAAAG,EACA1I,EAAA,GAAAsI,EAAAO,EACA7I,EAAA,GAAAwI,EAAAI,EAEA5I,EAAA,GAAAsI,EAAAO,EACA7I,EAAA,KAAAqI,EAAAK,EACA1I,EAAA,GAAAyI,EAAAE,EAEA3I,EAAA,GAAAwI,EAAAI,EACA5I,EAAA,GAAAyI,EAAAE,EACA3I,EAAA,KAAAqI,EAAAE,EAEAvI,EAWA,SAAA8I,GAAA9I,EAAAF,GACA,IAAAuG,EAAAvG,EAAA,GAAAmG,EAAAnG,EAAA,GAAAoG,EAAApG,EAAA,GAAAiJ,EAAAjJ,EAAA,GACAwG,EAAAxG,EAAA,GAAAyG,EAAAzG,EAAA,GAAAqG,EAAArG,EAAA,GAAAkJ,EAAAlJ,EAAA,GACA0G,EAAA1G,EAAA,GAAA2G,EAAA3G,EAAA,GAAA4G,EAAA5G,EAAA,IAAAmJ,EAAAnJ,EAAA,IACAoJ,EAAApJ,EAAA,IAAAqJ,EAAArJ,EAAA,IAAAsJ,EAAAtJ,EAAA,IAAAuJ,EAAAvJ,EAAA,IAEAmH,EAAAZ,EAAAE,EAAAN,EAAAK,EACAK,EAAAN,EAAAF,EAAAD,EAAAI,EACAY,EAAAb,EAAA2C,EAAAD,EAAAzC,EACAgD,EAAArD,EAAAE,EAAAD,EAAAK,EACAgD,EAAAtD,EAAA+C,EAAAD,EAAAxC,EACAiD,EAAAtD,EAAA8C,EAAAD,EAAA5C,EACAsD,EAAAjD,EAAA2C,EAAA1C,EAAAyC,EACAQ,EAAAlD,EAAA4C,EAAA1C,EAAAwC,EACAS,EAAAnD,EAAA6C,EAAAJ,EAAAC,EACAU,EAAAnD,EAAA2C,EAAA1C,EAAAyC,EACAhC,EAAAV,EAAA4C,EAAAJ,EAAAE,EACAvC,EAAAF,EAAA2C,EAAAJ,EAAAG,EAGAtI,EAAAmG,EAAAL,EAAAD,EAAAQ,EAAAD,EAAA0C,EAAAN,EAAAK,EAAAJ,EAAAG,EAAAF,EAAAC,EAEA,OAAA3I,GAGAA,EAAA,EAAAA,EAEAd,EAAA,IAAAuG,EAAAK,EAAAT,EAAAgB,EAAA6B,EAAAY,GAAA9I,EACAd,EAAA,IAAAmG,EAAAwD,EAAArD,EAAAM,EAAAoC,EAAAU,GAAA5I,EACAd,EAAA,IAAAsG,EAAAa,EAAAZ,EAAAoD,EAAAX,EAAAS,GAAA3I,EAEAd,EAAA,IAAAkG,EAAAiB,EAAAlB,EAAAW,EAAAmC,EAAAa,GAAA9I,EACAd,EAAA,IAAAqG,EAAAO,EAAAV,EAAAyD,EAAAZ,EAAAW,GAAA5I,EACAd,EAAA,IAAAiG,EAAA0D,EAAAtD,EAAAc,EAAA4B,EAAAU,GAAA3I,EAEAd,EAAA,IAAAmJ,EAAAK,EAAAJ,EAAAG,EAAAF,EAAAC,GAAAxI,EACAd,EAAA,IAAAoJ,EAAAlC,EAAAgC,EAAAM,EAAAH,EAAA1C,GAAA7F,EACAd,EAAA,IAAAkJ,EAAAK,EAAAJ,EAAAjC,EAAAmC,EAAApC,GAAAnG,EAEAd,GAhBA,KA2BA,SAAA3B,GAAA2B,EAAA9F,EAAAC,GAUA,OATA6F,EAAA,KAAA9F,EACA8F,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAAA7F,EACA6F,EAAA,KACAA,EAAA,MACAA,EAAA,KACAA,EAAA,KACAA,EASA,SAAA6J,GAAA/J,GACA,cAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QACAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QACAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,OASA,SAAAgK,GAAAhK,GACA,OAAA/G,KAAAkJ,KAAAlJ,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,OAWA,SAAAiK,GAAA/J,EAAAF,EAAAjG,GAUA,OATAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAWA,SAAAgK,GAAAhK,EAAAF,EAAAjG,GAUA,OATAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAaA,SAAAiK,GAAAjK,EAAAF,EAAAjG,GAUA,OATAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAYA,SAAAkK,GAAAlK,EAAAF,EAAAjG,EAAAgJ,GAUA,OATA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAUA,SAAAmK,GAAArK,EAAAjG,GACA,OAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IACAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IACAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,GAUA,SAAAuQ,GAAAtK,EAAAjG,GACA,IAAA8G,EAAAb,EAAA,GAAAW,EAAAX,EAAA,GAAAc,EAAAd,EAAA,GAAAe,EAAAf,EAAA,GAAAmE,EAAAnE,EAAA,GAAAoE,EAAApE,EAAA,GAAAuK,EAAAvK,EAAA,GAAAwK,EAAAxK,EAAA,GAAAyK,EAAAzK,EAAA,GACAoB,EAAArH,EAAA,GAAAsH,EAAAtH,EAAA,GAAAuH,EAAAvH,EAAA,GAAAwH,EAAAxH,EAAA,GAAAsK,EAAAtK,EAAA,GAAAuK,EAAAvK,EAAA,GAAA2Q,EAAA3Q,EAAA,GAAA4Q,EAAA5Q,EAAA,GAAA6Q,EAAA7Q,EAAA,GACA,OAAAd,KAAAiB,IAAA2G,EAAAO,IAAA5B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA2G,GAAA5H,KAAAiB,IAAAkH,KACAnI,KAAAiB,IAAAyG,EAAAU,IAAA7B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAyG,GAAA1H,KAAAiB,IAAAmH,KACApI,KAAAiB,IAAA4G,EAAAQ,IAAA9B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA4G,GAAA7H,KAAAiB,IAAAoH,KACArI,KAAAiB,IAAA6G,EAAAQ,IAAA/B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA6G,GAAA9H,KAAAiB,IAAAqH,KACAtI,KAAAiB,IAAAiK,EAAAE,IAAA7E,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAiK,GAAAlL,KAAAiB,IAAAmK,KACApL,KAAAiB,IAAAkK,EAAAE,IAAA9E,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAkK,GAAAnL,KAAAiB,IAAAoK,KACArL,KAAAiB,IAAAqQ,EAAAG,IAAAlL,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAqQ,GAAAtR,KAAAiB,IAAAwQ,KACAzR,KAAAiB,IAAAsQ,EAAAG,IAAAnL,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAsQ,GAAAvR,KAAAiB,IAAAyQ,KACA1R,KAAAiB,IAAAuQ,EAAAG,IAAApL,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAuQ,GAAAxR,KAAAiB,IAAA0Q,IAOA,MAAAC,GAAA3D,GAMA4D,GAAAZ,GC5tBA,SAAAa,KACA,IAAA7K,EAAA,IAAAT,EAAA,IAiBA,OAhBAS,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EASA,SAAA8K,GAAAhL,GACA,IAAAE,EAAA,IAAAT,EAAA,IAiBA,OAhBAS,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAUA,SAAA+K,GAAA/K,EAAAF,GAiBA,OAhBAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAwBA,SAAAgL,GAAA5K,EAAAC,EAAAoF,EAAAwF,EAAA3K,EAAAC,EAAAmF,EAAAwF,EAAAvF,EAAAC,EAAAC,EAAAsF,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAvL,EAAA,IAAAT,EAAA,IAiBA,OAhBAS,EAAA,GAAAI,EACAJ,EAAA,GAAAK,EACAL,EAAA,GAAAyF,EACAzF,EAAA,GAAAiL,EACAjL,EAAA,GAAAM,EACAN,EAAA,GAAAO,EACAP,EAAA,GAAA0F,EACA1F,EAAA,GAAAkL,EACAlL,EAAA,GAAA2F,EACA3F,EAAA,GAAA4F,EACA5F,EAAA,IAAA6F,EACA7F,EAAA,IAAAmL,EACAnL,EAAA,IAAAoL,EACApL,EAAA,IAAAqL,EACArL,EAAA,IAAAsL,EACAtL,EAAA,IAAAuL,EACAvL,EAyBA,SAAAwL,GAAAxL,EAAAI,EAAAC,EAAAoF,EAAAwF,EAAA3K,EAAAC,EAAAmF,EAAAwF,EAAAvF,EAAAC,EAAAC,EAAAsF,EAAAC,EAAAC,EAAAC,EAAAC,GAiBA,OAhBAvL,EAAA,GAAAI,EACAJ,EAAA,GAAAK,EACAL,EAAA,GAAAyF,EACAzF,EAAA,GAAAiL,EACAjL,EAAA,GAAAM,EACAN,EAAA,GAAAO,EACAP,EAAA,GAAA0F,EACA1F,EAAA,GAAAkL,EACAlL,EAAA,GAAA2F,EACA3F,EAAA,GAAA4F,EACA5F,EAAA,IAAA6F,EACA7F,EAAA,IAAAmL,EACAnL,EAAA,IAAAoL,EACApL,EAAA,IAAAqL,EACArL,EAAA,IAAAsL,EACAtL,EAAA,IAAAuL,EACAvL,EAUA,SAAAyL,GAAAzL,GAiBA,OAhBAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAUA,SAAA0L,GAAA1L,EAAAF,GAEA,GAAAE,IAAAF,EAAA,CACA,IAAAmG,EAAAnG,EAAA,GAAAoG,EAAApG,EAAA,GAAAiJ,EAAAjJ,EAAA,GACAqG,EAAArG,EAAA,GAAAkJ,EAAAlJ,EAAA,GACAmJ,EAAAnJ,EAAA,IAEAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,IACAE,EAAA,GAAAiG,EACAjG,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,IACAE,EAAA,GAAAkG,EACAlG,EAAA,GAAAmG,EACAnG,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAA+I,EACA/I,EAAA,IAAAgJ,EACAhJ,EAAA,IAAAiJ,OAEAjJ,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,IACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,IACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IAGA,OAAAE,EAUA,SAAA2L,GAAA3L,EAAAF,GACA,IAAAuG,EAAAvG,EAAA,GAAAmG,EAAAnG,EAAA,GAAAoG,EAAApG,EAAA,GAAAiJ,EAAAjJ,EAAA,GACAwG,EAAAxG,EAAA,GAAAyG,EAAAzG,EAAA,GAAAqG,EAAArG,EAAA,GAAAkJ,EAAAlJ,EAAA,GACA0G,EAAA1G,EAAA,GAAA2G,EAAA3G,EAAA,GAAA4G,EAAA5G,EAAA,IAAAmJ,EAAAnJ,EAAA,IACAoJ,EAAApJ,EAAA,IAAAqJ,EAAArJ,EAAA,IAAAsJ,EAAAtJ,EAAA,IAAAuJ,EAAAvJ,EAAA,IAEAmH,EAAAZ,EAAAE,EAAAN,EAAAK,EACAK,EAAAN,EAAAF,EAAAD,EAAAI,EACAY,EAAAb,EAAA2C,EAAAD,EAAAzC,EACAgD,EAAArD,EAAAE,EAAAD,EAAAK,EACAgD,EAAAtD,EAAA+C,EAAAD,EAAAxC,EACAiD,EAAAtD,EAAA8C,EAAAD,EAAA5C,EACAsD,EAAAjD,EAAA2C,EAAA1C,EAAAyC,EACAQ,EAAAlD,EAAA4C,EAAA1C,EAAAwC,EACAS,EAAAnD,EAAA6C,EAAAJ,EAAAC,EACAU,EAAAnD,EAAA2C,EAAA1C,EAAAyC,EACAhC,EAAAV,EAAA4C,EAAAJ,EAAAE,EACAvC,EAAAF,EAAA2C,EAAAJ,EAAAG,EAGAtI,EAAAmG,EAAAL,EAAAD,EAAAQ,EAAAD,EAAA0C,EAAAN,EAAAK,EAAAJ,EAAAG,EAAAF,EAAAC,EAEA,OAAA3I,GAGAA,EAAA,EAAAA,EAEAd,EAAA,IAAAuG,EAAAK,EAAAT,EAAAgB,EAAA6B,EAAAY,GAAA9I,EACAd,EAAA,IAAAkG,EAAAiB,EAAAlB,EAAAW,EAAAmC,EAAAa,GAAA9I,EACAd,EAAA,IAAAmJ,EAAAK,EAAAJ,EAAAG,EAAAF,EAAAC,GAAAxI,EACAd,EAAA,IAAA0G,EAAA6C,EAAA9C,EAAA+C,EAAAP,EAAAK,GAAAxI,EACAd,EAAA,IAAAmG,EAAAwD,EAAArD,EAAAM,EAAAoC,EAAAU,GAAA5I,EACAd,EAAA,IAAAqG,EAAAO,EAAAV,EAAAyD,EAAAZ,EAAAW,GAAA5I,EACAd,EAAA,IAAAoJ,EAAAlC,EAAAgC,EAAAM,EAAAH,EAAA1C,GAAA7F,EACAd,EAAA,IAAAwG,EAAAgD,EAAA9C,EAAAQ,EAAA+B,EAAAtC,GAAA7F,EACAd,EAAA,IAAAsG,EAAAa,EAAAZ,EAAAoD,EAAAX,EAAAS,GAAA3I,EACAd,EAAA,IAAAiG,EAAA0D,EAAAtD,EAAAc,EAAA4B,EAAAU,GAAA3I,EACAd,EAAA,KAAAkJ,EAAAK,EAAAJ,EAAAjC,EAAAmC,EAAApC,GAAAnG,EACAd,EAAA,KAAAyG,EAAAS,EAAAV,EAAA+C,EAAAN,EAAAhC,GAAAnG,EACAd,EAAA,KAAAuG,EAAAmD,EAAApD,EAAAsD,EAAAzD,EAAAsD,GAAA3I,EACAd,EAAA,KAAAqG,EAAAuD,EAAA3D,EAAAyD,EAAAxD,EAAAuD,GAAA3I,EACAd,EAAA,KAAAmJ,EAAAxC,EAAAuC,EAAAI,EAAAF,EAAAnC,GAAAnG,EACAd,EAAA,KAAAwG,EAAA8C,EAAA7C,EAAAE,EAAAD,EAAAO,GAAAnG,EAEAd,GArBA,KA+BA,SAAA4L,GAAA5L,EAAAF,GACA,IAAAuG,EAAAvG,EAAA,GAAAmG,EAAAnG,EAAA,GAAAoG,EAAApG,EAAA,GAAAiJ,EAAAjJ,EAAA,GACAwG,EAAAxG,EAAA,GAAAyG,EAAAzG,EAAA,GAAAqG,EAAArG,EAAA,GAAAkJ,EAAAlJ,EAAA,GACA0G,EAAA1G,EAAA,GAAA2G,EAAA3G,EAAA,GAAA4G,EAAA5G,EAAA,IAAAmJ,EAAAnJ,EAAA,IACAoJ,EAAApJ,EAAA,IAAAqJ,EAAArJ,EAAA,IAAAsJ,EAAAtJ,EAAA,IAAAuJ,EAAAvJ,EAAA,IAkBA,OAhBAE,EAAA,GAAAuG,GAAAG,EAAA2C,EAAAJ,EAAAG,GAAA3C,GAAAN,EAAAkD,EAAAL,EAAAI,GAAAD,GAAAhD,EAAA8C,EAAAD,EAAAtC,GACA1G,EAAA,KAAAiG,GAAAS,EAAA2C,EAAAJ,EAAAG,GAAA3C,GAAAP,EAAAmD,EAAAN,EAAAK,GAAAD,GAAAjD,EAAA+C,EAAAF,EAAArC,IACA1G,EAAA,GAAAiG,GAAAE,EAAAkD,EAAAL,EAAAI,GAAA7C,GAAAL,EAAAmD,EAAAN,EAAAK,GAAAD,GAAAjD,EAAA8C,EAAAD,EAAA5C,GACAnG,EAAA,KAAAiG,GAAAE,EAAA8C,EAAAD,EAAAtC,GAAAH,GAAAL,EAAA+C,EAAAF,EAAArC,GAAAD,GAAAP,EAAA8C,EAAAD,EAAA5C,IACAnG,EAAA,KAAAsG,GAAAI,EAAA2C,EAAAJ,EAAAG,GAAA5C,GAAAL,EAAAkD,EAAAL,EAAAI,GAAAF,GAAA/C,EAAA8C,EAAAD,EAAAtC,IACA1G,EAAA,GAAAqG,GAAAK,EAAA2C,EAAAJ,EAAAG,GAAA5C,GAAAN,EAAAmD,EAAAN,EAAAK,GAAAF,GAAAhD,EAAA+C,EAAAF,EAAArC,GACA1G,EAAA,KAAAqG,GAAAF,EAAAkD,EAAAL,EAAAI,GAAA9C,GAAAJ,EAAAmD,EAAAN,EAAAK,GAAAF,GAAAhD,EAAA8C,EAAAD,EAAA5C,IACAnG,EAAA,GAAAqG,GAAAF,EAAA8C,EAAAD,EAAAtC,GAAAJ,GAAAJ,EAAA+C,EAAAF,EAAArC,GAAAF,GAAAN,EAAA8C,EAAAD,EAAA5C,GACAnG,EAAA,GAAAsG,GAAAG,EAAA4C,EAAAJ,EAAAE,GAAA3C,GAAAD,EAAA8C,EAAAL,EAAAG,GAAAD,GAAA3C,EAAA0C,EAAAD,EAAAvC,GACAzG,EAAA,KAAAqG,GAAAI,EAAA4C,EAAAJ,EAAAE,GAAA3C,GAAAP,EAAAoD,EAAAN,EAAAI,GAAAD,GAAAjD,EAAAgD,EAAAF,EAAAtC,IACAzG,EAAA,IAAAqG,GAAAE,EAAA8C,EAAAL,EAAAG,GAAA7C,GAAAL,EAAAoD,EAAAN,EAAAI,GAAAD,GAAAjD,EAAA+C,EAAAD,EAAAxC,GACAvG,EAAA,MAAAqG,GAAAE,EAAA0C,EAAAD,EAAAvC,GAAAH,GAAAL,EAAAgD,EAAAF,EAAAtC,GAAAD,GAAAP,EAAA+C,EAAAD,EAAAxC,IACAvG,EAAA,MAAAsG,GAAAG,EAAA2C,EAAA1C,EAAAyC,GAAA3C,GAAAD,EAAA6C,EAAAjD,EAAAgD,GAAAD,GAAA3C,EAAAG,EAAAP,EAAAM,IACAzG,EAAA,IAAAqG,GAAAI,EAAA2C,EAAA1C,EAAAyC,GAAA3C,GAAAP,EAAAmD,EAAAlD,EAAAiD,GAAAD,GAAAjD,EAAAS,EAAAR,EAAAO,GACAzG,EAAA,MAAAqG,GAAAE,EAAA6C,EAAAjD,EAAAgD,GAAA7C,GAAAL,EAAAmD,EAAAlD,EAAAiD,GAAAD,GAAAjD,EAAAE,EAAAD,EAAAK,IACAvG,EAAA,IAAAqG,GAAAE,EAAAG,EAAAP,EAAAM,GAAAH,GAAAL,EAAAS,EAAAR,EAAAO,GAAAD,GAAAP,EAAAE,EAAAD,EAAAK,GACAvG,EASA,SAAA6L,GAAA/L,GACA,IAAAuG,EAAAvG,EAAA,GAAAmG,EAAAnG,EAAA,GAAAoG,EAAApG,EAAA,GAAAiJ,EAAAjJ,EAAA,GACAwG,EAAAxG,EAAA,GAAAyG,EAAAzG,EAAA,GAAAqG,EAAArG,EAAA,GAAAkJ,EAAAlJ,EAAA,GACA0G,EAAA1G,EAAA,GAAA2G,EAAA3G,EAAA,GAAA4G,EAAA5G,EAAA,IAAAmJ,EAAAnJ,EAAA,IACAoJ,EAAApJ,EAAA,IAAAqJ,EAAArJ,EAAA,IAAAsJ,EAAAtJ,EAAA,IAAAuJ,EAAAvJ,EAAA,IAgBA,OAdAuG,EAAAE,EAAAN,EAAAK,IAWAI,EAAA2C,EAAAJ,EAAAG,IAVA/C,EAAAF,EAAAD,EAAAI,IASAG,EAAA4C,EAAAJ,EAAAE,IARA9C,EAAA2C,EAAAD,EAAAzC,IAOAG,EAAA2C,EAAA1C,EAAAyC,IANAlD,EAAAE,EAAAD,EAAAK,IAKAC,EAAA6C,EAAAJ,EAAAC,IAJAjD,EAAA+C,EAAAD,EAAAxC,IAGAC,EAAA4C,EAAA1C,EAAAwC,IAFAhD,EAAA8C,EAAAD,EAAA5C,IACAK,EAAA2C,EAAA1C,EAAAyC,GAmBA,SAAA4C,GAAA9L,EAAAF,EAAAjG,GACA,IAAAwM,EAAAvG,EAAA,GAAAmG,EAAAnG,EAAA,GAAAoG,EAAApG,EAAA,GAAAiJ,EAAAjJ,EAAA,GACAwG,EAAAxG,EAAA,GAAAyG,EAAAzG,EAAA,GAAAqG,EAAArG,EAAA,GAAAkJ,EAAAlJ,EAAA,GACA0G,EAAA1G,EAAA,GAAA2G,EAAA3G,EAAA,GAAA4G,EAAA5G,EAAA,IAAAmJ,EAAAnJ,EAAA,IACAoJ,EAAApJ,EAAA,IAAAqJ,EAAArJ,EAAA,IAAAsJ,EAAAtJ,EAAA,IAAAuJ,EAAAvJ,EAAA,IAGAoB,EAAArH,EAAA,GAAAsH,EAAAtH,EAAA,GAAAuH,EAAAvH,EAAA,GAAAwH,EAAAxH,EAAA,GAuBA,OAtBAmG,EAAA,GAAAkB,EAAAmF,EAAAlF,EAAAmF,EAAAlF,EAAAoF,EAAAnF,EAAA6H,EACAlJ,EAAA,GAAAkB,EAAA+E,EAAA9E,EAAAoF,EAAAnF,EAAAqF,EAAApF,EAAA8H,EACAnJ,EAAA,GAAAkB,EAAAgF,EAAA/E,EAAAgF,EAAA/E,EAAAsF,EAAArF,EAAA+H,EACApJ,EAAA,GAAAkB,EAAA6H,EAAA5H,EAAA6H,EAAA5H,EAAA6H,EAAA5H,EAAAgI,EAEAnI,EAAArH,EAAA,GAAYsH,EAAAtH,EAAA,GAAWuH,EAAAvH,EAAA,GAAWwH,EAAAxH,EAAA,GAClCmG,EAAA,GAAAkB,EAAAmF,EAAAlF,EAAAmF,EAAAlF,EAAAoF,EAAAnF,EAAA6H,EACAlJ,EAAA,GAAAkB,EAAA+E,EAAA9E,EAAAoF,EAAAnF,EAAAqF,EAAApF,EAAA8H,EACAnJ,EAAA,GAAAkB,EAAAgF,EAAA/E,EAAAgF,EAAA/E,EAAAsF,EAAArF,EAAA+H,EACApJ,EAAA,GAAAkB,EAAA6H,EAAA5H,EAAA6H,EAAA5H,EAAA6H,EAAA5H,EAAAgI,EAEAnI,EAAArH,EAAA,GAAYsH,EAAAtH,EAAA,GAAWuH,EAAAvH,EAAA,IAAYwH,EAAAxH,EAAA,IACnCmG,EAAA,GAAAkB,EAAAmF,EAAAlF,EAAAmF,EAAAlF,EAAAoF,EAAAnF,EAAA6H,EACAlJ,EAAA,GAAAkB,EAAA+E,EAAA9E,EAAAoF,EAAAnF,EAAAqF,EAAApF,EAAA8H,EACAnJ,EAAA,IAAAkB,EAAAgF,EAAA/E,EAAAgF,EAAA/E,EAAAsF,EAAArF,EAAA+H,EACApJ,EAAA,IAAAkB,EAAA6H,EAAA5H,EAAA6H,EAAA5H,EAAA6H,EAAA5H,EAAAgI,EAEAnI,EAAArH,EAAA,IAAasH,EAAAtH,EAAA,IAAYuH,EAAAvH,EAAA,IAAYwH,EAAAxH,EAAA,IACrCmG,EAAA,IAAAkB,EAAAmF,EAAAlF,EAAAmF,EAAAlF,EAAAoF,EAAAnF,EAAA6H,EACAlJ,EAAA,IAAAkB,EAAA+E,EAAA9E,EAAAoF,EAAAnF,EAAAqF,EAAApF,EAAA8H,EACAnJ,EAAA,IAAAkB,EAAAgF,EAAA/E,EAAAgF,EAAA/E,EAAAsF,EAAArF,EAAA+H,EACApJ,EAAA,IAAAkB,EAAA6H,EAAA5H,EAAA6H,EAAA5H,EAAA6H,EAAA5H,EAAAgI,EACArJ,EAWA,SAAA+L,GAAA/L,EAAAF,EAAAnB,GACA,IACA0H,EAAAJ,EAAAC,EAAA6C,EACAzC,EAAAC,EAAAJ,EAAA6C,EACAxC,EAAAC,EAAAC,EAAAuC,EAHAvT,EAAAiJ,EAAA,GAAA/I,EAAA+I,EAAA,GAAAqJ,EAAArJ,EAAA,GAyBA,OApBAmB,IAAAE,GACAA,EAAA,IAAAF,EAAA,GAAApK,EAAAoK,EAAA,GAAAlK,EAAAkK,EAAA,GAAAkI,EAAAlI,EAAA,IACAE,EAAA,IAAAF,EAAA,GAAApK,EAAAoK,EAAA,GAAAlK,EAAAkK,EAAA,GAAAkI,EAAAlI,EAAA,IACAE,EAAA,IAAAF,EAAA,GAAApK,EAAAoK,EAAA,GAAAlK,EAAAkK,EAAA,IAAAkI,EAAAlI,EAAA,IACAE,EAAA,IAAAF,EAAA,GAAApK,EAAAoK,EAAA,GAAAlK,EAAAkK,EAAA,IAAAkI,EAAAlI,EAAA,MAEAuG,EAAAvG,EAAA,GAAemG,EAAAnG,EAAA,GAAYoG,EAAApG,EAAA,GAAYiJ,EAAAjJ,EAAA,GACvCwG,EAAAxG,EAAA,GAAeyG,EAAAzG,EAAA,GAAYqG,EAAArG,EAAA,GAAYkJ,EAAAlJ,EAAA,GACvC0G,EAAA1G,EAAA,GAAe2G,EAAA3G,EAAA,GAAY4G,EAAA5G,EAAA,IAAamJ,EAAAnJ,EAAA,IAExCE,EAAA,GAAAqG,EAAiBrG,EAAA,GAAAiG,EAAcjG,EAAA,GAAAkG,EAAclG,EAAA,GAAA+I,EAC7C/I,EAAA,GAAAsG,EAAiBtG,EAAA,GAAAuG,EAAcvG,EAAA,GAAAmG,EAAcnG,EAAA,GAAAgJ,EAC7ChJ,EAAA,GAAAwG,EAAiBxG,EAAA,GAAAyG,EAAczG,EAAA,IAAA0G,EAAe1G,EAAA,IAAAiJ,EAE9CjJ,EAAA,IAAAqG,EAAA3Q,EAAA4Q,EAAA1Q,EAAA4Q,EAAAwB,EAAAlI,EAAA,IACAE,EAAA,IAAAiG,EAAAvQ,EAAA6Q,EAAA3Q,EAAA6Q,EAAAuB,EAAAlI,EAAA,IACAE,EAAA,IAAAkG,EAAAxQ,EAAAyQ,EAAAvQ,EAAA8Q,EAAAsB,EAAAlI,EAAA,IACAE,EAAA,IAAA+I,EAAArT,EAAAsT,EAAApT,EAAAqT,EAAAjB,EAAAlI,EAAA,KAGAE,EAWA,SAAAgM,GAAAhM,EAAAF,EAAAnB,GACA,IAAAjJ,EAAAiJ,EAAA,GAAA/I,EAAA+I,EAAA,GAAAqJ,EAAArJ,EAAA,GAkBA,OAhBAqB,EAAA,GAAAF,EAAA,GAAApK,EACAsK,EAAA,GAAAF,EAAA,GAAApK,EACAsK,EAAA,GAAAF,EAAA,GAAApK,EACAsK,EAAA,GAAAF,EAAA,GAAApK,EACAsK,EAAA,GAAAF,EAAA,GAAAlK,EACAoK,EAAA,GAAAF,EAAA,GAAAlK,EACAoK,EAAA,GAAAF,EAAA,GAAAlK,EACAoK,EAAA,GAAAF,EAAA,GAAAlK,EACAoK,EAAA,GAAAF,EAAA,GAAAkI,EACAhI,EAAA,GAAAF,EAAA,GAAAkI,EACAhI,EAAA,IAAAF,EAAA,IAAAkI,EACAhI,EAAA,IAAAF,EAAA,IAAAkI,EACAhI,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAYA,SAAAiM,GAAAjM,EAAAF,EAAAyB,EAAA2K,GACA,IAEA3Y,EAAA1B,EAAAa,EACA2T,EAAAJ,EAAAC,EAAA6C,EACAzC,EAAAC,EAAAJ,EAAA6C,EACAxC,EAAAC,EAAAC,EAAAuC,EACAhC,EAAAN,EAAAO,EACAC,EAAAP,EAAAQ,EACAC,EAAAR,EAAAS,EARA5R,EAAAwW,EAAA,GAAAtW,EAAAsW,EAAA,GAAAlE,EAAAkE,EAAA,GACAC,EAAApT,KAAAkJ,KAAAvM,IAAAE,IAAAoS,KASA,OAAAmE,EAAA7M,EAA+B,MAG/B5J,GADAyW,EAAA,EAAAA,EAEAvW,GAAAuW,EACAnE,GAAAmE,EAEA5Y,EAAAwF,KAAAyI,IAAAD,GAEA7O,EAAA,GADAb,EAAAkH,KAAA0I,IAAAF,IAGA8E,EAAAvG,EAAA,GAAamG,EAAAnG,EAAA,GAAYoG,EAAApG,EAAA,GAAYiJ,EAAAjJ,EAAA,GACrCwG,EAAAxG,EAAA,GAAayG,EAAAzG,EAAA,GAAYqG,EAAArG,EAAA,GAAYkJ,EAAAlJ,EAAA,GACrC0G,EAAA1G,EAAA,GAAa2G,EAAA3G,EAAA,GAAY4G,EAAA5G,EAAA,IAAamJ,EAAAnJ,EAAA,IAGtCmH,EAAAvR,IAAAhD,EAAAb,EAAsB8U,EAAA/Q,EAAAF,EAAAhD,EAAAsV,EAAAzU,EAAyB2T,EAAAc,EAAAtS,EAAAhD,EAAAkD,EAAArC,EAC/C4T,EAAAzR,EAAAE,EAAAlD,EAAAsV,EAAAzU,EAA0BqT,EAAAhR,IAAAlD,EAAAb,EAAqBuV,EAAAY,EAAApS,EAAAlD,EAAAgD,EAAAnC,EAC/C8T,EAAA3R,EAAAsS,EAAAtV,EAAAkD,EAAArC,EAA0BsT,EAAAjR,EAAAoS,EAAAtV,EAAAgD,EAAAnC,EAAyB+T,EAAAU,IAAAtV,EAAAb,EAGnDmO,EAAA,GAAAqG,EAAAY,EAAAX,EAAAK,EAAAH,EAAAU,EACAlH,EAAA,GAAAiG,EAAAgB,EAAAV,EAAAI,EAAAF,EAAAS,EACAlH,EAAA,GAAAkG,EAAAe,EAAAd,EAAAQ,EAAAD,EAAAQ,EACAlH,EAAA,GAAA+I,EAAA9B,EAAA+B,EAAArC,EAAAsC,EAAA/B,EACAlH,EAAA,GAAAqG,EAAAc,EAAAb,EAAAM,EAAAJ,EAAAY,EACApH,EAAA,GAAAiG,EAAAkB,EAAAZ,EAAAK,EAAAH,EAAAW,EACApH,EAAA,GAAAkG,EAAAiB,EAAAhB,EAAAS,EAAAF,EAAAU,EACApH,EAAA,GAAA+I,EAAA5B,EAAA6B,EAAApC,EAAAqC,EAAA7B,EACApH,EAAA,GAAAqG,EAAAgB,EAAAf,EAAAO,EAAAL,EAAAc,EACAtH,EAAA,GAAAiG,EAAAoB,EAAAd,EAAAM,EAAAJ,EAAAa,EACAtH,EAAA,IAAAkG,EAAAmB,EAAAlB,EAAAU,EAAAH,EAAAY,EACAtH,EAAA,IAAA+I,EAAA1B,EAAA2B,EAAAnC,EAAAoC,EAAA3B,EAEAxH,IAAAE,IACAA,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,KAEAE,GAWA,SAAAoM,GAAApM,EAAAF,EAAAyB,GACA,IAAAhO,EAAAwF,KAAAyI,IAAAD,GACA1P,EAAAkH,KAAA0I,IAAAF,GACA+E,EAAAxG,EAAA,GACAyG,EAAAzG,EAAA,GACAqG,EAAArG,EAAA,GACAkJ,EAAAlJ,EAAA,GACA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA4G,EAAA5G,EAAA,IACAmJ,EAAAnJ,EAAA,IAsBA,OApBAA,IAAAE,IACAA,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,KAIAE,EAAA,GAAAsG,EAAAzU,EAAA2U,EAAAjT,EACAyM,EAAA,GAAAuG,EAAA1U,EAAA4U,EAAAlT,EACAyM,EAAA,GAAAmG,EAAAtU,EAAA6U,EAAAnT,EACAyM,EAAA,GAAAgJ,EAAAnX,EAAAoX,EAAA1V,EACAyM,EAAA,GAAAwG,EAAA3U,EAAAyU,EAAA/S,EACAyM,EAAA,GAAAyG,EAAA5U,EAAA0U,EAAAhT,EACAyM,EAAA,IAAA0G,EAAA7U,EAAAsU,EAAA5S,EACAyM,EAAA,IAAAiJ,EAAApX,EAAAmX,EAAAzV,EACAyM,EAWA,SAAAqM,GAAArM,EAAAF,EAAAyB,GACA,IAAAhO,EAAAwF,KAAAyI,IAAAD,GACA1P,EAAAkH,KAAA0I,IAAAF,GACA8E,EAAAvG,EAAA,GACAmG,EAAAnG,EAAA,GACAoG,EAAApG,EAAA,GACAiJ,EAAAjJ,EAAA,GACA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA4G,EAAA5G,EAAA,IACAmJ,EAAAnJ,EAAA,IAsBA,OApBAA,IAAAE,IACAA,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,KAIAE,EAAA,GAAAqG,EAAAxU,EAAA2U,EAAAjT,EACAyM,EAAA,GAAAiG,EAAApU,EAAA4U,EAAAlT,EACAyM,EAAA,GAAAkG,EAAArU,EAAA6U,EAAAnT,EACAyM,EAAA,GAAA+I,EAAAlX,EAAAoX,EAAA1V,EACAyM,EAAA,GAAAqG,EAAA9S,EAAAiT,EAAA3U,EACAmO,EAAA,GAAAiG,EAAA1S,EAAAkT,EAAA5U,EACAmO,EAAA,IAAAkG,EAAA3S,EAAAmT,EAAA7U,EACAmO,EAAA,IAAA+I,EAAAxV,EAAA0V,EAAApX,EACAmO,EAWA,SAAAsM,GAAAtM,EAAAF,EAAAyB,GACA,IAAAhO,EAAAwF,KAAAyI,IAAAD,GACA1P,EAAAkH,KAAA0I,IAAAF,GACA8E,EAAAvG,EAAA,GACAmG,EAAAnG,EAAA,GACAoG,EAAApG,EAAA,GACAiJ,EAAAjJ,EAAA,GACAwG,EAAAxG,EAAA,GACAyG,EAAAzG,EAAA,GACAqG,EAAArG,EAAA,GACAkJ,EAAAlJ,EAAA,GAsBA,OApBAA,IAAAE,IACAA,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,IACAE,EAAA,IAAAF,EAAA,KAIAE,EAAA,GAAAqG,EAAAxU,EAAAyU,EAAA/S,EACAyM,EAAA,GAAAiG,EAAApU,EAAA0U,EAAAhT,EACAyM,EAAA,GAAAkG,EAAArU,EAAAsU,EAAA5S,EACAyM,EAAA,GAAA+I,EAAAlX,EAAAmX,EAAAzV,EACAyM,EAAA,GAAAsG,EAAAzU,EAAAwU,EAAA9S,EACAyM,EAAA,GAAAuG,EAAA1U,EAAAoU,EAAA1S,EACAyM,EAAA,GAAAmG,EAAAtU,EAAAqU,EAAA3S,EACAyM,EAAA,GAAAgJ,EAAAnX,EAAAkX,EAAAxV,EACAyM,EAcA,SAAAuM,GAAAvM,EAAArB,GAiBA,OAhBAqB,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MACAA,EAAA,MACAA,EAAA,IAAArB,EAAA,GACAqB,EAAA,IAAArB,EAAA,GACAqB,EAAA,IAAArB,EAAA,GACAqB,EAAA,MACAA,EAcA,SAAAwM,GAAAxM,EAAArB,GAiBA,OAhBAqB,EAAA,GAAArB,EAAA,GACAqB,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAArB,EAAA,GACAqB,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,IAAArB,EAAA,GACAqB,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAeA,SAAAyM,GAAAzM,EAAAuB,EAAA2K,GACA,IAEA3Y,EAAA1B,EAAAa,EAFAgD,EAAAwW,EAAA,GAAAtW,EAAAsW,EAAA,GAAAlE,EAAAkE,EAAA,GACAC,EAAApT,KAAAkJ,KAAAvM,IAAAE,IAAAoS,KAGA,OAAAmE,EAAA7M,EAA+B,MAG/B5J,GADAyW,EAAA,EAAAA,EAEAvW,GAAAuW,EACAnE,GAAAmE,EAEA5Y,EAAAwF,KAAAyI,IAAAD,GAEA7O,EAAA,GADAb,EAAAkH,KAAA0I,IAAAF,IAIAvB,EAAA,GAAAtK,IAAAhD,EAAAb,EACAmO,EAAA,GAAApK,EAAAF,EAAAhD,EAAAsV,EAAAzU,EACAyM,EAAA,GAAAgI,EAAAtS,EAAAhD,EAAAkD,EAAArC,EACAyM,EAAA,KACAA,EAAA,GAAAtK,EAAAE,EAAAlD,EAAAsV,EAAAzU,EACAyM,EAAA,GAAApK,IAAAlD,EAAAb,EACAmO,EAAA,GAAAgI,EAAApS,EAAAlD,EAAAgD,EAAAnC,EACAyM,EAAA,KACAA,EAAA,GAAAtK,EAAAsS,EAAAtV,EAAAkD,EAAArC,EACAyM,EAAA,GAAApK,EAAAoS,EAAAtV,EAAAgD,EAAAnC,EACAyM,EAAA,IAAAgI,IAAAtV,EAAAb,EACAmO,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,GAcA,SAAA0M,GAAA1M,EAAAuB,GACA,IAAAhO,EAAAwF,KAAAyI,IAAAD,GACA1P,EAAAkH,KAAA0I,IAAAF,GAmBA,OAhBAvB,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAAnO,EACAmO,EAAA,GAAAzM,EACAyM,EAAA,KACAA,EAAA,KACAA,EAAA,IAAAzM,EACAyM,EAAA,IAAAnO,EACAmO,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAcA,SAAA2M,GAAA3M,EAAAuB,GACA,IAAAhO,EAAAwF,KAAAyI,IAAAD,GACA1P,EAAAkH,KAAA0I,IAAAF,GAmBA,OAhBAvB,EAAA,GAAAnO,EACAmO,EAAA,KACAA,EAAA,IAAAzM,EACAyM,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAAzM,EACAyM,EAAA,KACAA,EAAA,IAAAnO,EACAmO,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAcA,SAAA4M,GAAA5M,EAAAuB,GACA,IAAAhO,EAAAwF,KAAAyI,IAAAD,GACA1P,EAAAkH,KAAA0I,IAAAF,GAmBA,OAhBAvB,EAAA,GAAAnO,EACAmO,EAAA,GAAAzM,EACAyM,EAAA,KACAA,EAAA,KACAA,EAAA,IAAAzM,EACAyM,EAAA,GAAAnO,EACAmO,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAkBA,SAAA6M,GAAA7M,EAAA+H,EAAApJ,GAEA,IAAAjJ,EAAAqS,EAAA,GAAAnS,EAAAmS,EAAA,GAAAC,EAAAD,EAAA,GAAAE,EAAAF,EAAA,GACAG,EAAAxS,IACAyS,EAAAvS,IACAwS,EAAAJ,IAEAK,EAAA3S,EAAAwS,EACA4E,EAAApX,EAAAyS,EACA4E,EAAArX,EAAA0S,EACAG,EAAA3S,EAAAuS,EACA6E,EAAApX,EAAAwS,EACAM,EAAAV,EAAAI,EACAO,EAAAV,EAAAC,EACAU,EAAAX,EAAAE,EACAU,EAAAZ,EAAAG,EAmBA,OAjBApI,EAAA,MAAAuI,EAAAG,GACA1I,EAAA,GAAA8M,EAAAjE,EACA7I,EAAA,GAAA+M,EAAAnE,EACA5I,EAAA,KACAA,EAAA,GAAA8M,EAAAjE,EACA7I,EAAA,MAAAqI,EAAAK,GACA1I,EAAA,GAAAgN,EAAArE,EACA3I,EAAA,KACAA,EAAA,GAAA+M,EAAAnE,EACA5I,EAAA,GAAAgN,EAAArE,EACA3I,EAAA,OAAAqI,EAAAE,GACAvI,EAAA,MACAA,EAAA,IAAArB,EAAA,GACAqB,EAAA,IAAArB,EAAA,GACAqB,EAAA,IAAArB,EAAA,GACAqB,EAAA,MAEAA,EAUA,SAAAiN,GAAAjN,EAAAF,GACA,IAAAoN,EAAA,IAAA3N,EAAA,GACA4N,GAAArN,EAAA,GAAAsN,GAAAtN,EAAA,GAAAuN,GAAAvN,EAAA,GAAAwN,EAAAxN,EAAA,GACAyN,EAAAzN,EAAA,GAAA0N,EAAA1N,EAAA,GAAA2N,EAAA3N,EAAA,GAAA4N,EAAA5N,EAAA,GAEA6N,EAAAR,IAAAC,IAAAC,IAAAC,IAYA,OAVAK,EAAA,GACAT,EAAA,MAAAK,EAAAD,EAAAI,EAAAP,EAAAK,EAAAH,EAAAI,EAAAL,GAAAO,EACAT,EAAA,MAAAM,EAAAF,EAAAI,EAAAN,EAAAK,EAAAN,EAAAI,EAAAF,GAAAM,EACAT,EAAA,MAAAO,EAAAH,EAAAI,EAAAL,EAAAE,EAAAH,EAAAI,EAAAL,GAAAQ,IAEAT,EAAA,MAAAK,EAAAD,EAAAI,EAAAP,EAAAK,EAAAH,EAAAI,EAAAL,GACAF,EAAA,MAAAM,EAAAF,EAAAI,EAAAN,EAAAK,EAAAN,EAAAI,EAAAF,GACAH,EAAA,MAAAO,EAAAH,EAAAI,EAAAL,EAAAE,EAAAH,EAAAI,EAAAL,IAEAN,GAAA7M,EAAAF,EAAAoN,GACAlN,EAYA,SAAA4N,GAAA5N,EAAA6N,GAKA,OAJA7N,EAAA,GAAA6N,EAAA,IACA7N,EAAA,GAAA6N,EAAA,IACA7N,EAAA,GAAA6N,EAAA,IAEA7N,EAaA,SAAA8N,GAAA9N,EAAA6N,GACA,IAAAtN,EAAAsN,EAAA,GACAnI,EAAAmI,EAAA,GACA3C,EAAA2C,EAAA,GACAjI,EAAAiI,EAAA,GACAhI,EAAAgI,EAAA,GACA1C,EAAA0C,EAAA,GACAxC,EAAAwC,EAAA,GACAvC,EAAAuC,EAAA,GACAtC,EAAAsC,EAAA,IAMA,OAJA7N,EAAA,GAAAjH,KAAAkJ,KAAA1B,IAAAmF,IAAAwF,KACAlL,EAAA,GAAAjH,KAAAkJ,KAAA2D,IAAAC,IAAAsF,KACAnL,EAAA,GAAAjH,KAAAkJ,KAAAoJ,IAAAC,IAAAC,KAEAvL,EAYA,SAAA+N,GAAA/N,EAAA6N,GAEA,IAAAG,EAAAH,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAI,EAAA,EA4BA,OA1BAD,EAAA,GACAC,EAAA,EAAAlV,KAAAkJ,KAAA+L,EAAA,GACAhO,EAAA,OAAAiO,EACAjO,EAAA,IAAA6N,EAAA,GAAAA,EAAA,IAAAI,EACAjO,EAAA,IAAA6N,EAAA,GAAAA,EAAA,IAAAI,EACAjO,EAAA,IAAA6N,EAAA,GAAAA,EAAA,IAAAI,GACGJ,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,KACHI,EAAA,EAAAlV,KAAAkJ,KAAA,EAAA4L,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACA7N,EAAA,IAAA6N,EAAA,GAAAA,EAAA,IAAAI,EACAjO,EAAA,OAAAiO,EACAjO,EAAA,IAAA6N,EAAA,GAAAA,EAAA,IAAAI,EACAjO,EAAA,IAAA6N,EAAA,GAAAA,EAAA,IAAAI,GACGJ,EAAA,GAAAA,EAAA,KACHI,EAAA,EAAAlV,KAAAkJ,KAAA,EAAA4L,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACA7N,EAAA,IAAA6N,EAAA,GAAAA,EAAA,IAAAI,EACAjO,EAAA,IAAA6N,EAAA,GAAAA,EAAA,IAAAI,EACAjO,EAAA,OAAAiO,EACAjO,EAAA,IAAA6N,EAAA,GAAAA,EAAA,IAAAI,IAEAA,EAAA,EAAAlV,KAAAkJ,KAAA,EAAA4L,EAAA,IAAAA,EAAA,GAAAA,EAAA,IACA7N,EAAA,IAAA6N,EAAA,GAAAA,EAAA,IAAAI,EACAjO,EAAA,IAAA6N,EAAA,GAAAA,EAAA,IAAAI,EACAjO,EAAA,IAAA6N,EAAA,GAAAA,EAAA,IAAAI,EACAjO,EAAA,OAAAiO,GAGAjO,EAoBA,SAAAkO,GAAAlO,EAAA+H,EAAApJ,EAAApL,GAEA,IAAAmC,EAAAqS,EAAA,GAAAnS,EAAAmS,EAAA,GAAAC,EAAAD,EAAA,GAAAE,EAAAF,EAAA,GACAG,EAAAxS,IACAyS,EAAAvS,IACAwS,EAAAJ,IAEAK,EAAA3S,EAAAwS,EACA4E,EAAApX,EAAAyS,EACA4E,EAAArX,EAAA0S,EACAG,EAAA3S,EAAAuS,EACA6E,EAAApX,EAAAwS,EACAM,EAAAV,EAAAI,EACAO,EAAAV,EAAAC,EACAU,EAAAX,EAAAE,EACAU,EAAAZ,EAAAG,EACA+F,EAAA5a,EAAA,GACA6a,EAAA7a,EAAA,GACA8a,EAAA9a,EAAA,GAmBA,OAjBAyM,EAAA,OAAAuI,EAAAG,IAAAyF,EACAnO,EAAA,IAAA8M,EAAAjE,GAAAsF,EACAnO,EAAA,IAAA+M,EAAAnE,GAAAuF,EACAnO,EAAA,KACAA,EAAA,IAAA8M,EAAAjE,GAAAuF,EACApO,EAAA,OAAAqI,EAAAK,IAAA0F,EACApO,EAAA,IAAAgN,EAAArE,GAAAyF,EACApO,EAAA,KACAA,EAAA,IAAA+M,EAAAnE,GAAAyF,EACArO,EAAA,IAAAgN,EAAArE,GAAA0F,EACArO,EAAA,QAAAqI,EAAAE,IAAA8F,EACArO,EAAA,MACAA,EAAA,IAAArB,EAAA,GACAqB,EAAA,IAAArB,EAAA,GACAqB,EAAA,IAAArB,EAAA,GACAqB,EAAA,MAEAA,EAuBA,SAAAsO,GAAAtO,EAAA+H,EAAApJ,EAAApL,EAAAtB,GAEA,IAAAyD,EAAAqS,EAAA,GAAAnS,EAAAmS,EAAA,GAAAC,EAAAD,EAAA,GAAAE,EAAAF,EAAA,GACAG,EAAAxS,IACAyS,EAAAvS,IACAwS,EAAAJ,IAEAK,EAAA3S,EAAAwS,EACA4E,EAAApX,EAAAyS,EACA4E,EAAArX,EAAA0S,EACAG,EAAA3S,EAAAuS,EACA6E,EAAApX,EAAAwS,EACAM,EAAAV,EAAAI,EACAO,EAAAV,EAAAC,EACAU,EAAAX,EAAAE,EACAU,EAAAZ,EAAAG,EAEA+F,EAAA5a,EAAA,GACA6a,EAAA7a,EAAA,GACA8a,EAAA9a,EAAA,GAEAgb,EAAAtc,EAAA,GACAuc,EAAAvc,EAAA,GACAwc,EAAAxc,EAAA,GAEAyc,GAAA,GAAAnG,EAAAG,IAAAyF,EACAQ,GAAA7B,EAAAjE,GAAAsF,EACAS,GAAA7B,EAAAnE,GAAAuF,EACAU,GAAA/B,EAAAjE,GAAAuF,EACAU,GAAA,GAAAzG,EAAAK,IAAA0F,EACAW,GAAA/B,EAAArE,GAAAyF,EACAY,GAAAjC,EAAAnE,GAAAyF,EACAY,GAAAjC,EAAArE,GAAA0F,EACAa,GAAA,GAAA7G,EAAAE,IAAA8F,EAmBA,OAjBArO,EAAA,GAAA0O,EACA1O,EAAA,GAAA2O,EACA3O,EAAA,GAAA4O,EACA5O,EAAA,KACAA,EAAA,GAAA6O,EACA7O,EAAA,GAAA8O,EACA9O,EAAA,GAAA+O,EACA/O,EAAA,KACAA,EAAA,GAAAgP,EACAhP,EAAA,GAAAiP,EACAjP,EAAA,IAAAkP,EACAlP,EAAA,MACAA,EAAA,IAAArB,EAAA,GAAA4P,GAAAG,EAAAH,EAAAM,EAAAL,EAAAQ,EAAAP,GACAzO,EAAA,IAAArB,EAAA,GAAA6P,GAAAG,EAAAJ,EAAAO,EAAAN,EAAAS,EAAAR,GACAzO,EAAA,IAAArB,EAAA,GAAA8P,GAAAG,EAAAL,EAAAQ,EAAAP,EAAAU,EAAAT,GACAzO,EAAA,MAEAA,EAWA,SAAAmP,GAAAnP,EAAA+H,GACA,IAAArS,EAAAqS,EAAA,GAAAnS,EAAAmS,EAAA,GAAAC,EAAAD,EAAA,GAAAE,EAAAF,EAAA,GACAG,EAAAxS,IACAyS,EAAAvS,IACAwS,EAAAJ,IAEAK,EAAA3S,EAAAwS,EACAI,EAAA1S,EAAAsS,EACAK,EAAA3S,EAAAuS,EACAK,EAAAR,EAAAE,EACAO,EAAAT,EAAAG,EACAO,EAAAV,EAAAI,EACAO,EAAAV,EAAAC,EACAU,EAAAX,EAAAE,EACAU,EAAAZ,EAAAG,EAsBA,OApBApI,EAAA,KAAAuI,EAAAG,EACA1I,EAAA,GAAAsI,EAAAO,EACA7I,EAAA,GAAAwI,EAAAI,EACA5I,EAAA,KAEAA,EAAA,GAAAsI,EAAAO,EACA7I,EAAA,KAAAqI,EAAAK,EACA1I,EAAA,GAAAyI,EAAAE,EACA3I,EAAA,KAEAA,EAAA,GAAAwI,EAAAI,EACA5I,EAAA,GAAAyI,EAAAE,EACA3I,EAAA,MAAAqI,EAAAE,EACAvI,EAAA,MAEAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MAEAA,EAeA,SAAAoP,GAAApP,EAAAqP,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,GAAAL,EAAAD,GACAO,EAAA,GAAAJ,EAAAD,GACAM,EAAA,GAAAJ,EAAAC,GAiBA,OAhBA1P,EAAA,KAAAyP,EAAAE,EACA3P,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KAAAyP,EAAAG,EACA5P,EAAA,KACAA,EAAA,KACAA,EAAA,IAAAsP,EAAAD,GAAAM,EACA3P,EAAA,IAAAwP,EAAAD,GAAAK,EACA5P,EAAA,KAAA0P,EAAAD,GAAAI,EACA7P,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,IAAA0P,EAAAD,EAAA,EAAAI,EACA7P,EAAA,MACAA,EAaA,SAAA8P,GAAA9P,EAAA+P,EAAAC,EAAAP,EAAAC,GACA,IAAAO,EAAA,EAAAlX,KAAAmX,IAAAH,EAAA,GACAF,EAAA,GAAAJ,EAAAC,GAiBA,OAhBA1P,EAAA,GAAAiQ,EAAAD,EACAhQ,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAAiQ,EACAjQ,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KAAA0P,EAAAD,GAAAI,EACA7P,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MAAA0P,EAAAD,EAAAI,EACA7P,EAAA,MACAA,EAcA,SAAAmQ,GAAAnQ,EAAAoQ,EAAAX,EAAAC,GACA,IAAAW,EAAAtX,KAAAmX,IAAAE,EAAAE,UAAAvX,KAAA6G,GAAA,KACA2Q,EAAAxX,KAAAmX,IAAAE,EAAAI,YAAAzX,KAAA6G,GAAA,KACA6Q,EAAA1X,KAAAmX,IAAAE,EAAAM,YAAA3X,KAAA6G,GAAA,KACA+Q,EAAA5X,KAAAmX,IAAAE,EAAAQ,aAAA7X,KAAA6G,GAAA,KACAiR,EAAA,GAAAJ,EAAAE,GACAG,EAAA,GAAAT,EAAAE,GAkBA,OAhBAvQ,EAAA,GAAA6Q,EACA7Q,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAA8Q,EACA9Q,EAAA,KACAA,EAAA,KACAA,EAAA,KAAAyQ,EAAAE,GAAAE,EAAA,GACA7Q,EAAA,IAAAqQ,EAAAE,GAAAO,EAAA,GACA9Q,EAAA,IAAA0P,GAAAD,EAAAC,GACA1P,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,IAAA0P,EAAAD,KAAAC,GACA1P,EAAA,MACAA,EAeA,SAAA+Q,GAAA/Q,EAAAqP,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAsB,EAAA,GAAA3B,EAAAC,GACA2B,EAAA,GAAA1B,EAAAC,GACAK,EAAA,GAAAJ,EAAAC,GAiBA,OAhBA1P,EAAA,MAAAgR,EACAhR,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAAAiR,EACAjR,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAAA6P,EACA7P,EAAA,MACAA,EAAA,KAAAqP,EAAAC,GAAA0B,EACAhR,EAAA,KAAAwP,EAAAD,GAAA0B,EACAjR,EAAA,KAAA0P,EAAAD,GAAAI,EACA7P,EAAA,MACAA,EAaA,SAAAkR,GAAAlR,EAAAmR,EAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAArJ,EAAAsJ,EAAAC,EAAAtJ,EAAAuJ,EAAAC,EAAAvJ,EAAA+D,EACAyF,EAAAT,EAAA,GACAU,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAZ,EAAA,GACAa,EAAAd,EAAA,GACAe,EAAAf,EAAA,GACAgB,EAAAhB,EAAA,GAEA,OAAArY,KAAAiB,IAAA4X,EAAAM,GAAA5S,GACAvG,KAAAiB,IAAA6X,EAAAM,GAAA7S,GACAvG,KAAAiB,IAAA8X,EAAAM,GAAA9S,EACAmM,GAAAzL,IAGA0R,EAAAE,EAAAM,EACAP,EAAAE,EAAAM,EACA/J,EAAA0J,EAAAM,EAOAd,EAAAU,GAFA5J,GAHA+D,EAAA,EAAApT,KAAAkJ,KAAAyP,IAAAC,IAAAvJ,MAKA6J,GAHAN,GAAAxF,GAIAoF,EAAAU,GALAP,GAAAvF,GAKA4F,EAAA3J,EACAF,EAAA6J,EAAAJ,EAAAK,EAAAN,GACAvF,EAAApT,KAAAkJ,KAAAqP,IAAAC,IAAArJ,OAOAoJ,GADAnF,EAAA,EAAAA,EAEAoF,GAAApF,EACAjE,GAAAiE,IAPAmF,EAAA,EACAC,EAAA,EACArJ,EAAA,GAQAsJ,EAAAG,EAAAzJ,EAAAE,EAAAmJ,EACAE,EAAArJ,EAAAkJ,EAAAI,EAAAxJ,EACAC,EAAAuJ,EAAAH,EAAAI,EAAAL,GAEAnF,EAAApT,KAAAkJ,KAAAuP,IAAAC,IAAAtJ,OAOAqJ,GADArF,EAAA,EAAAA,EAEAsF,GAAAtF,EACAhE,GAAAgE,IAPAqF,EAAA,EACAC,EAAA,EACAtJ,EAAA,GAQAnI,EAAA,GAAAsR,EACAtR,EAAA,GAAAwR,EACAxR,EAAA,GAAA0R,EACA1R,EAAA,KACAA,EAAA,GAAAuR,EACAvR,EAAA,GAAAyR,EACAzR,EAAA,GAAA2R,EACA3R,EAAA,KACAA,EAAA,GAAAkI,EACAlI,EAAA,GAAAmI,EACAnI,EAAA,IAAAoI,EACApI,EAAA,MACAA,EAAA,MAAAsR,EAAAM,EAAAL,EAAAM,EAAA3J,EAAA4J,GACA9R,EAAA,MAAAwR,EAAAI,EAAAH,EAAAI,EAAA1J,EAAA2J,GACA9R,EAAA,MAAA0R,EAAAE,EAAAD,EAAAE,EAAAzJ,EAAA0J,GACA9R,EAAA,MAEAA,GAYA,SAAAqS,GAAArS,EAAAmR,EAAAmB,EAAAjB,GACA,IAAAO,EAAAT,EAAA,GACAU,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAZ,EAAA,GAEAK,EAAAE,EAAAU,EAAA,GACAX,EAAAE,EAAAS,EAAA,GACAlK,EAAA0J,EAAAQ,EAAA,GAEAnG,EAAAuF,IAAAC,IAAAvJ,IACA+D,EAAA,IAEAuF,GADAvF,EAAA,EAAApT,KAAAkJ,KAAAkK,GAEAwF,GAAAxF,EACA/D,GAAA+D,GAGA,IAAAmF,EAAAU,EAAA5J,EAAA6J,EAAAN,EACAJ,EAAAU,EAAAP,EAAAK,EAAA3J,EACAF,EAAA6J,EAAAJ,EAAAK,EAAAN,EA0BA,OAxBAvF,EAAAmF,IAAAC,IAAArJ,KACA,IAEAoJ,GADAnF,EAAA,EAAApT,KAAAkJ,KAAAkK,GAEAoF,GAAApF,EACAjE,GAAAiE,GAGAnM,EAAA,GAAAsR,EACAtR,EAAA,GAAAuR,EACAvR,EAAA,GAAAkI,EACAlI,EAAA,KACAA,EAAA,GAAA2R,EAAAzJ,EAAAE,EAAAmJ,EACAvR,EAAA,GAAAoI,EAAAkJ,EAAAI,EAAAxJ,EACAlI,EAAA,GAAA0R,EAAAH,EAAAI,EAAAL,EACAtR,EAAA,KACAA,EAAA,GAAA0R,EACA1R,EAAA,GAAA2R,EACA3R,EAAA,IAAAoI,EACApI,EAAA,MACAA,EAAA,IAAA4R,EACA5R,EAAA,IAAA6R,EACA7R,EAAA,IAAA8R,EACA9R,EAAA,MACAA,EASA,SAAAuS,GAAAzS,GACA,cAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QACAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QACAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,SACAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,QASA,SAAA0S,GAAA1S,GACA,OAAA/G,KAAAkJ,KAAAlJ,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,MAAA/G,KAAAmJ,IAAApC,EAAA,OAAA/G,KAAAmJ,IAAApC,EAAA,OAAA/G,KAAAmJ,IAAApC,EAAA,OAAA/G,KAAAmJ,IAAApC,EAAA,OAAA/G,KAAAmJ,IAAApC,EAAA,OAAA/G,KAAAmJ,IAAApC,EAAA,QAWA,SAAA2S,GAAAzS,EAAAF,EAAAjG,GAiBA,OAhBAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IACAmG,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IACAmG,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IACAmG,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IACAmG,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IACAmG,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IACAmG,EAWA,SAAA0S,GAAA1S,EAAAF,EAAAjG,GAiBA,OAhBAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IACAmG,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IACAmG,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IACAmG,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IACAmG,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IACAmG,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IACAmG,EAWA,SAAA2S,GAAA3S,EAAAF,EAAAjG,GAiBA,OAhBAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,IAAAF,EAAA,IAAAjG,EACAmG,EAAA,IAAAF,EAAA,IAAAjG,EACAmG,EAAA,IAAAF,EAAA,IAAAjG,EACAmG,EAAA,IAAAF,EAAA,IAAAjG,EACAmG,EAAA,IAAAF,EAAA,IAAAjG,EACAmG,EAAA,IAAAF,EAAA,IAAAjG,EACAmG,EAYA,SAAA4S,GAAA5S,EAAAF,EAAAjG,EAAAgJ,GAiBA,OAhBA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IAAAgJ,EACA7C,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IAAAgJ,EACA7C,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IAAAgJ,EACA7C,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IAAAgJ,EACA7C,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IAAAgJ,EACA7C,EAAA,IAAAF,EAAA,IAAAjG,EAAA,IAAAgJ,EACA7C,EAUA,SAAA6S,GAAA/S,EAAAjG,GACA,OAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IACAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IACAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,MAAAjG,EAAA,KAAAiG,EAAA,MAAAjG,EAAA,KACAiG,EAAA,MAAAjG,EAAA,KAAAiG,EAAA,MAAAjG,EAAA,KAAAiG,EAAA,MAAAjG,EAAA,KAAAiG,EAAA,MAAAjG,EAAA,IAUA,SAAAiZ,GAAAhT,EAAAjG,GACA,IAAA8G,EAAAb,EAAA,GAAAW,EAAAX,EAAA,GAAAc,EAAAd,EAAA,GAAAe,EAAAf,EAAA,GACAmE,EAAAnE,EAAA,GAAAoE,EAAApE,EAAA,GAAAuK,EAAAvK,EAAA,GAAAwK,EAAAxK,EAAA,GACAyK,EAAAzK,EAAA,GAAAiT,EAAAjT,EAAA,GAAAwG,EAAAxG,EAAA,IAAAyG,EAAAzG,EAAA,IACAqG,EAAArG,EAAA,IAAAkJ,EAAAlJ,EAAA,IAAAkT,EAAAlT,EAAA,IAAAmT,EAAAnT,EAAA,IAEAoB,EAAArH,EAAA,GAAAsH,EAAAtH,EAAA,GAAAuH,EAAAvH,EAAA,GAAAwH,EAAAxH,EAAA,GACAsK,EAAAtK,EAAA,GAAAuK,EAAAvK,EAAA,GAAA2Q,EAAA3Q,EAAA,GAAA4Q,EAAA5Q,EAAA,GACA6Q,EAAA7Q,EAAA,GAAAqZ,EAAArZ,EAAA,GAAAsN,EAAAtN,EAAA,IAAA+M,EAAA/M,EAAA,IACAuN,EAAAvN,EAAA,IAAAsZ,EAAAtZ,EAAA,IAAAuZ,EAAAvZ,EAAA,IAAAwZ,EAAAxZ,EAAA,IAEA,OAAAd,KAAAiB,IAAA2G,EAAAO,IAAA5B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA2G,GAAA5H,KAAAiB,IAAAkH,KACAnI,KAAAiB,IAAAyG,EAAAU,IAAA7B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAyG,GAAA1H,KAAAiB,IAAAmH,KACApI,KAAAiB,IAAA4G,EAAAQ,IAAA9B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA4G,GAAA7H,KAAAiB,IAAAoH,KACArI,KAAAiB,IAAA6G,EAAAQ,IAAA/B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA6G,GAAA9H,KAAAiB,IAAAqH,KACAtI,KAAAiB,IAAAiK,EAAAE,IAAA7E,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAiK,GAAAlL,KAAAiB,IAAAmK,KACApL,KAAAiB,IAAAkK,EAAAE,IAAA9E,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAkK,GAAAnL,KAAAiB,IAAAoK,KACArL,KAAAiB,IAAAqQ,EAAAG,IAAAlL,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAqQ,GAAAtR,KAAAiB,IAAAwQ,KACAzR,KAAAiB,IAAAsQ,EAAAG,IAAAnL,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAsQ,GAAAvR,KAAAiB,IAAAyQ,KACA1R,KAAAiB,IAAAuQ,EAAAG,IAAApL,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAuQ,GAAAxR,KAAAiB,IAAA0Q,KACA3R,KAAAiB,IAAA+Y,EAAAG,IAAA5T,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA+Y,GAAAha,KAAAiB,IAAAkZ,KACAna,KAAAiB,IAAAsM,EAAAa,IAAA7H,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAsM,GAAAvN,KAAAiB,IAAAmN,KACApO,KAAAiB,IAAAuM,EAAAK,IAAAtH,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAuM,GAAAxN,KAAAiB,IAAA4M,KACA7N,KAAAiB,IAAAmM,EAAAiB,IAAA9H,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAmM,GAAApN,KAAAiB,IAAAoN,KACArO,KAAAiB,IAAAgP,EAAAmK,IAAA7T,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAgP,GAAAjQ,KAAAiB,IAAAmZ,KACApa,KAAAiB,IAAAgZ,EAAAI,IAAA9T,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAgZ,GAAAja,KAAAiB,IAAAoZ,KACAra,KAAAiB,IAAAiZ,EAAAI,IAAA/T,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAiZ,GAAAla,KAAAiB,IAAAqZ,IAOA,MAAAC,GAAAxH,GAMAyH,GAAAb,GC9pDA,SAAAc,KACA,IAAAxT,EAAA,IAAAT,EAAA,GAIA,OAHAS,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EASA,SAAAyT,GAAA3T,GACA,IAAAE,EAAA,IAAAT,EAAA,GAIA,OAHAS,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EASA,SAAA0T,GAAA5T,GACA,IAAApK,EAAAoK,EAAA,GACAlK,EAAAkK,EAAA,GACAkI,EAAAlI,EAAA,GACA,OAAA/G,KAAAkJ,KAAAvM,IAAAE,IAAAoS,KAWA,SAAA2L,GAAAje,EAAAE,EAAAoS,GACA,IAAAhI,EAAA,IAAAT,EAAA,GAIA,OAHAS,EAAA,GAAAtK,EACAsK,EAAA,GAAApK,EACAoK,EAAA,GAAAgI,EACAhI,EAUA,SAAA4T,GAAA5T,EAAAF,GAIA,OAHAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAYA,SAAA6T,GAAA7T,EAAAtK,EAAAE,EAAAoS,GAIA,OAHAhI,EAAA,GAAAtK,EACAsK,EAAA,GAAApK,EACAoK,EAAA,GAAAgI,EACAhI,EAWA,SAAA8T,GAAA9T,EAAAF,EAAAjG,GAIA,OAHAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAWA,SAAA+T,GAAA/T,EAAAF,EAAAjG,GAIA,OAHAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAWA,SAAAgU,GAAAhU,EAAAF,EAAAjG,GAIA,OAHAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAWA,SAAAiU,GAAAjU,EAAAF,EAAAjG,GAIA,OAHAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAUA,SAAAkU,GAAAlU,EAAAF,GAIA,OAHAE,EAAA,GAAAjH,KAAAmb,KAAApU,EAAA,IACAE,EAAA,GAAAjH,KAAAmb,KAAApU,EAAA,IACAE,EAAA,GAAAjH,KAAAmb,KAAApU,EAAA,IACAE,EAUA,SAAAmU,GAAAnU,EAAAF,GAIA,OAHAE,EAAA,GAAAjH,KAAAob,MAAArU,EAAA,IACAE,EAAA,GAAAjH,KAAAob,MAAArU,EAAA,IACAE,EAAA,GAAAjH,KAAAob,MAAArU,EAAA,IACAE,EAWA,SAAAjG,GAAAiG,EAAAF,EAAAjG,GAIA,OAHAmG,EAAA,GAAAjH,KAAAgB,IAAA+F,EAAA,GAAAjG,EAAA,IACAmG,EAAA,GAAAjH,KAAAgB,IAAA+F,EAAA,GAAAjG,EAAA,IACAmG,EAAA,GAAAjH,KAAAgB,IAAA+F,EAAA,GAAAjG,EAAA,IACAmG,EAWA,SAAAhH,GAAAgH,EAAAF,EAAAjG,GAIA,OAHAmG,EAAA,GAAAjH,KAAAC,IAAA8G,EAAA,GAAAjG,EAAA,IACAmG,EAAA,GAAAjH,KAAAC,IAAA8G,EAAA,GAAAjG,EAAA,IACAmG,EAAA,GAAAjH,KAAAC,IAAA8G,EAAA,GAAAjG,EAAA,IACAmG,EAUA,SAAA/F,GAAA+F,EAAAF,GAIA,OAHAE,EAAA,GAAAjH,KAAAkB,MAAA6F,EAAA,IACAE,EAAA,GAAAjH,KAAAkB,MAAA6F,EAAA,IACAE,EAAA,GAAAjH,KAAAkB,MAAA6F,EAAA,IACAE,EAWA,SAAAoU,GAAApU,EAAAF,EAAAjG,GAIA,OAHAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAYA,SAAAqU,GAAArU,EAAAF,EAAAjG,EAAAgJ,GAIA,OAHA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAUA,SAAAsU,GAAAxU,EAAAjG,GACA,IAAAnE,EAAAmE,EAAA,GAAAiG,EAAA,GACAlK,EAAAiE,EAAA,GAAAiG,EAAA,GACAkI,EAAAnO,EAAA,GAAAiG,EAAA,GACA,OAAA/G,KAAAkJ,KAAAvM,IAAAE,IAAAoS,KAUA,SAAAuM,GAAAzU,EAAAjG,GACA,IAAAnE,EAAAmE,EAAA,GAAAiG,EAAA,GACAlK,EAAAiE,EAAA,GAAAiG,EAAA,GACAkI,EAAAnO,EAAA,GAAAiG,EAAA,GACA,OAAApK,IAAAE,IAAAoS,IASA,SAAAwM,GAAA1U,GACA,IAAApK,EAAAoK,EAAA,GACAlK,EAAAkK,EAAA,GACAkI,EAAAlI,EAAA,GACA,OAAApK,IAAAE,IAAAoS,IAUA,SAAAyM,GAAAzU,EAAAF,GAIA,OAHAE,EAAA,IAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,GACAE,EAUA,SAAA0U,GAAA1U,EAAAF,GAIA,OAHAE,EAAA,KAAAF,EAAA,GACAE,EAAA,KAAAF,EAAA,GACAE,EAAA,KAAAF,EAAA,GACAE,EAUA,SAAA2U,GAAA3U,EAAAF,GACA,IAAApK,EAAAoK,EAAA,GACAlK,EAAAkK,EAAA,GACAkI,EAAAlI,EAAA,GACAqM,EAAAzW,IAAAE,IAAAoS,IAQA,OAPAmE,EAAA,IAEAA,EAAA,EAAApT,KAAAkJ,KAAAkK,GACAnM,EAAA,GAAAF,EAAA,GAAAqM,EACAnM,EAAA,GAAAF,EAAA,GAAAqM,EACAnM,EAAA,GAAAF,EAAA,GAAAqM,GAEAnM,EAUA,SAAA4U,GAAA9U,EAAAjG,GACA,OAAAiG,EAAA,GAAAjG,EAAA,GAAAiG,EAAA,GAAAjG,EAAA,GAAAiG,EAAA,GAAAjG,EAAA,GAWA,SAAAgb,GAAA7U,EAAAF,EAAAjG,GACA,IAAA0T,EAAAzN,EAAA,GAAA0N,EAAA1N,EAAA,GAAA2N,EAAA3N,EAAA,GACAqN,EAAAtT,EAAA,GAAAuT,EAAAvT,EAAA,GAAAwT,EAAAxT,EAAA,GAKA,OAHAmG,EAAA,GAAAwN,EAAAH,EAAAI,EAAAL,EACApN,EAAA,GAAAyN,EAAAN,EAAAI,EAAAF,EACArN,EAAA,GAAAuN,EAAAH,EAAAI,EAAAL,EACAnN,EAYA,SAAA8U,GAAA9U,EAAAF,EAAAjG,EAAAnH,GACA,IAAA6a,EAAAzN,EAAA,GACA0N,EAAA1N,EAAA,GACA2N,EAAA3N,EAAA,GAIA,OAHAE,EAAA,GAAAuN,EAAA7a,GAAAmH,EAAA,GAAA0T,GACAvN,EAAA,GAAAwN,EAAA9a,GAAAmH,EAAA,GAAA2T,GACAxN,EAAA,GAAAyN,EAAA/a,GAAAmH,EAAA,GAAA4T,GACAzN,EAcA,SAAA+U,GAAA/U,EAAAF,EAAAjG,EAAAhI,EAAAC,EAAAY,GACA,IAAAsiB,EAAAtiB,IACAuiB,EAAAD,GAAA,EAAAtiB,EAAA,KACAwiB,EAAAF,GAAAtiB,EAAA,GAAAA,EACAyiB,EAAAH,GAAAtiB,EAAA,GACA0iB,EAAAJ,GAAA,IAAAtiB,GAMA,OAJAsN,EAAA,GAAAF,EAAA,GAAAmV,EAAApb,EAAA,GAAAqb,EAAArjB,EAAA,GAAAsjB,EAAArjB,EAAA,GAAAsjB,EACApV,EAAA,GAAAF,EAAA,GAAAmV,EAAApb,EAAA,GAAAqb,EAAArjB,EAAA,GAAAsjB,EAAArjB,EAAA,GAAAsjB,EACApV,EAAA,GAAAF,EAAA,GAAAmV,EAAApb,EAAA,GAAAqb,EAAArjB,EAAA,GAAAsjB,EAAArjB,EAAA,GAAAsjB,EAEApV,EAcA,SAAAqV,GAAArV,EAAAF,EAAAjG,EAAAhI,EAAAC,EAAAY,GACA,IAAA4iB,EAAA,EAAA5iB,EACA6iB,EAAAD,IACAN,EAAAtiB,IACAuiB,EAAAM,EAAAD,EACAJ,EAAA,EAAAxiB,EAAA6iB,EACAJ,EAAA,EAAAH,EAAAM,EACAF,EAAAJ,EAAAtiB,EAMA,OAJAsN,EAAA,GAAAF,EAAA,GAAAmV,EAAApb,EAAA,GAAAqb,EAAArjB,EAAA,GAAAsjB,EAAArjB,EAAA,GAAAsjB,EACApV,EAAA,GAAAF,EAAA,GAAAmV,EAAApb,EAAA,GAAAqb,EAAArjB,EAAA,GAAAsjB,EAAArjB,EAAA,GAAAsjB,EACApV,EAAA,GAAAF,EAAA,GAAAmV,EAAApb,EAAA,GAAAqb,EAAArjB,EAAA,GAAAsjB,EAAArjB,EAAA,GAAAsjB,EAEApV,EAUA,SAAAP,GAAAO,EAAA6C,GACAA,KAAA,EAEA,IAAAvQ,EAAA,EAAAkN,IAAAzG,KAAA6G,GACAoI,EAAA,EAAAxI,IAAA,EACAgW,EAAAzc,KAAAkJ,KAAA,EAAA+F,KAAAnF,EAKA,OAHA7C,EAAA,GAAAjH,KAAA0I,IAAAnP,GAAAkjB,EACAxV,EAAA,GAAAjH,KAAAyI,IAAAlP,GAAAkjB,EACAxV,EAAA,GAAAgI,EAAAnF,EACA7C,EAYA,SAAAnJ,GAAAmJ,EAAAF,EAAAlO,GACA,IAAA8D,EAAAoK,EAAA,GAAAlK,EAAAkK,EAAA,GAAAkI,EAAAlI,EAAA,GACAmI,EAAArW,EAAA,GAAA8D,EAAA9D,EAAA,GAAAgE,EAAAhE,EAAA,IAAAoW,EAAApW,EAAA,IAKA,OAJAqW,KAAA,EACAjI,EAAA,IAAApO,EAAA,GAAA8D,EAAA9D,EAAA,GAAAgE,EAAAhE,EAAA,GAAAoW,EAAApW,EAAA,KAAAqW,EACAjI,EAAA,IAAApO,EAAA,GAAA8D,EAAA9D,EAAA,GAAAgE,EAAAhE,EAAA,GAAAoW,EAAApW,EAAA,KAAAqW,EACAjI,EAAA,IAAApO,EAAA,GAAA8D,EAAA9D,EAAA,GAAAgE,EAAAhE,EAAA,IAAAoW,EAAApW,EAAA,KAAAqW,EACAjI,EAWA,SAAAyV,GAAAzV,EAAAF,EAAAlO,GACA,IAAA8D,EAAAoK,EAAA,GAAAlK,EAAAkK,EAAA,GAAAkI,EAAAlI,EAAA,GAIA,OAHAE,EAAA,GAAAtK,EAAA9D,EAAA,GAAAgE,EAAAhE,EAAA,GAAAoW,EAAApW,EAAA,GACAoO,EAAA,GAAAtK,EAAA9D,EAAA,GAAAgE,EAAAhE,EAAA,GAAAoW,EAAApW,EAAA,GACAoO,EAAA,GAAAtK,EAAA9D,EAAA,GAAAgE,EAAAhE,EAAA,GAAAoW,EAAApW,EAAA,GACAoO,EAYA,SAAA0V,GAAA1V,EAAAF,EAAAiI,GAEA,IAAA4N,EAAA5N,EAAA,GAAA6N,EAAA7N,EAAA,GAAA8N,EAAA9N,EAAA,GAAA+N,EAAA/N,EAAA,GACArS,EAAAoK,EAAA,GAAAlK,EAAAkK,EAAA,GAAAkI,EAAAlI,EAAA,GAGAiW,EAAAH,EAAA5N,EAAA6N,EAAAjgB,EACAogB,EAAAH,EAAAngB,EAAAigB,EAAA3N,EACAiO,EAAAN,EAAA/f,EAAAggB,EAAAlgB,EAEAwgB,EAAAN,EAAAK,EAAAJ,EAAAG,EACAG,EAAAN,EAAAE,EAAAJ,EAAAM,EACAG,EAAAT,EAAAK,EAAAJ,EAAAG,EAEAM,EAAA,EAAAP,EAYA,OAXAC,GAAAM,EACAL,GAAAK,EACAJ,GAAAI,EAEAH,GAAA,EACAC,GAAA,EACAC,GAAA,EAEApW,EAAA,GAAAtK,EAAAqgB,EAAAG,EACAlW,EAAA,GAAApK,EAAAogB,EAAAG,EACAnW,EAAA,GAAAgI,EAAAiO,EAAAG,EACApW,EAWA,SAAAsW,GAAAtW,EAAAF,EAAAjG,EAAAhI,GACA,IAAAyB,KAAAhB,KAgBA,OAdAgB,EAAA,GAAAwM,EAAA,GAAAjG,EAAA,GACAvG,EAAA,GAAAwM,EAAA,GAAAjG,EAAA,GACAvG,EAAA,GAAAwM,EAAA,GAAAjG,EAAA,GAGAvH,EAAA,GAAAgB,EAAA,GACAhB,EAAA,GAAAgB,EAAA,GAAAyF,KAAA0I,IAAA5P,GAAAyB,EAAA,GAAAyF,KAAAyI,IAAA3P,GACAS,EAAA,GAAAgB,EAAA,GAAAyF,KAAAyI,IAAA3P,GAAAyB,EAAA,GAAAyF,KAAA0I,IAAA5P,GAGAmO,EAAA,GAAA1N,EAAA,GAAAuH,EAAA,GACAmG,EAAA,GAAA1N,EAAA,GAAAuH,EAAA,GACAmG,EAAA,GAAA1N,EAAA,GAAAuH,EAAA,GAEAmG,EAWA,SAAAuW,GAAAvW,EAAAF,EAAAjG,EAAAhI,GACA,IAAAyB,KAAAhB,KAgBA,OAdAgB,EAAA,GAAAwM,EAAA,GAAAjG,EAAA,GACAvG,EAAA,GAAAwM,EAAA,GAAAjG,EAAA,GACAvG,EAAA,GAAAwM,EAAA,GAAAjG,EAAA,GAGAvH,EAAA,GAAAgB,EAAA,GAAAyF,KAAAyI,IAAA3P,GAAAyB,EAAA,GAAAyF,KAAA0I,IAAA5P,GACAS,EAAA,GAAAgB,EAAA,GACAhB,EAAA,GAAAgB,EAAA,GAAAyF,KAAA0I,IAAA5P,GAAAyB,EAAA,GAAAyF,KAAAyI,IAAA3P,GAGAmO,EAAA,GAAA1N,EAAA,GAAAuH,EAAA,GACAmG,EAAA,GAAA1N,EAAA,GAAAuH,EAAA,GACAmG,EAAA,GAAA1N,EAAA,GAAAuH,EAAA,GAEAmG,EAWA,SAAAwW,GAAAxW,EAAAF,EAAAjG,EAAAhI,GACA,IAAAyB,KAAAhB,KAgBA,OAdAgB,EAAA,GAAAwM,EAAA,GAAAjG,EAAA,GACAvG,EAAA,GAAAwM,EAAA,GAAAjG,EAAA,GACAvG,EAAA,GAAAwM,EAAA,GAAAjG,EAAA,GAGAvH,EAAA,GAAAgB,EAAA,GAAAyF,KAAA0I,IAAA5P,GAAAyB,EAAA,GAAAyF,KAAAyI,IAAA3P,GACAS,EAAA,GAAAgB,EAAA,GAAAyF,KAAAyI,IAAA3P,GAAAyB,EAAA,GAAAyF,KAAA0I,IAAA5P,GACAS,EAAA,GAAAgB,EAAA,GAGA0M,EAAA,GAAA1N,EAAA,GAAAuH,EAAA,GACAmG,EAAA,GAAA1N,EAAA,GAAAuH,EAAA,GACAmG,EAAA,GAAA1N,EAAA,GAAAuH,EAAA,GAEAmG,EASA,SAAA/D,GAAA6D,EAAAjG,GACA,IAAA4c,EAAA9C,GAAA7T,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA4W,EAAA/C,GAAA9Z,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA8a,GAAA8B,KACA9B,GAAA+B,KAEA,IAAAC,EAAA/B,GAAA6B,EAAAC,GAEA,OAAAC,EAAA,EACA,EAEAA,GAAA,EACA5d,KAAA6G,GAEA7G,KAAA6d,KAAAD,GAUA,SAAAE,GAAA/W,GACA,cAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAUA,SAAAgX,GAAAhX,EAAAjG,GACA,OAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,GAUA,SAAAkd,GAAAjX,EAAAjG,GACA,IAAA8G,EAAAb,EAAA,GAAAW,EAAAX,EAAA,GAAAc,EAAAd,EAAA,GACAoB,EAAArH,EAAA,GAAAsH,EAAAtH,EAAA,GAAAuH,EAAAvH,EAAA,GACA,OAAAd,KAAAiB,IAAA2G,EAAAO,IAAA5B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA2G,GAAA5H,KAAAiB,IAAAkH,KACAnI,KAAAiB,IAAAyG,EAAAU,IAAA7B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAyG,GAAA1H,KAAAiB,IAAAmH,KACApI,KAAAiB,IAAA4G,EAAAQ,IAAA9B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA4G,GAAA7H,KAAAiB,IAAAoH,IAOA,MAAA4V,GAAAjD,GAMAkD,GAAAjD,GAMAkD,GAAAjD,GAMAkD,GAAA7C,GAMA8C,GAAA7C,GAMA8C,GAAA3D,GAMA4D,GAAA9C,GAcAzf,GAAA,WACA,IAAAwiB,EAAA/D,KAEA,gBAAA1T,EAAA0X,EAAAtb,EAAAzC,EAAAge,EAAAC,GACA,IAAAlmB,EAAAC,EAeA,IAdA+lB,IACAA,EAAA,GAGAtb,IACAA,EAAA,GAIAzK,EADAgI,EACAV,KAAAgB,IAAAN,EAAA+d,EAAAtb,EAAA4D,EAAArL,QAEAqL,EAAArL,OAGAjD,EAAA0K,EAAmB1K,EAAAC,EAAOD,GAAAgmB,EAC1BD,EAAA,GAAAzX,EAAAtO,GAAoB+lB,EAAA,GAAAzX,EAAAtO,EAAA,GAAiB+lB,EAAA,GAAAzX,EAAAtO,EAAA,GACrCimB,EAAAF,IAAAG,GACA5X,EAAAtO,GAAA+lB,EAAA,GAAoBzX,EAAAtO,EAAA,GAAA+lB,EAAA,GAAiBzX,EAAAtO,EAAA,GAAA+lB,EAAA,GAGrC,OAAAzX,GAzBA,GCvtBA,SAAA6X,KACA,IAAA3X,EAAA,IAAAT,EAAA,GAKA,OAJAS,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EASA,SAAA4X,GAAA9X,GACA,IAAAE,EAAA,IAAAT,EAAA,GAKA,OAJAS,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAYA,SAAA6X,GAAAniB,EAAAE,EAAAoS,EAAAC,GACA,IAAAjI,EAAA,IAAAT,EAAA,GAKA,OAJAS,EAAA,GAAAtK,EACAsK,EAAA,GAAApK,EACAoK,EAAA,GAAAgI,EACAhI,EAAA,GAAAiI,EACAjI,EAUA,SAAA8X,GAAA9X,EAAAF,GAKA,OAJAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAaA,SAAA+X,GAAA/X,EAAAtK,EAAAE,EAAAoS,EAAAC,GAKA,OAJAjI,EAAA,GAAAtK,EACAsK,EAAA,GAAApK,EACAoK,EAAA,GAAAgI,EACAhI,EAAA,GAAAiI,EACAjI,EAWA,SAAAgY,GAAAhY,EAAAF,EAAAjG,GAKA,OAJAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAWA,SAAAiY,GAAAjY,EAAAF,EAAAjG,GAKA,OAJAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAWA,SAAAkY,GAAAlY,EAAAF,EAAAjG,GAKA,OAJAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAWA,SAAAmY,GAAAnY,EAAAF,EAAAjG,GAKA,OAJAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAUA,SAAAoY,GAAApY,EAAAF,GAKA,OAJAE,EAAA,GAAAjH,KAAAmb,KAAApU,EAAA,IACAE,EAAA,GAAAjH,KAAAmb,KAAApU,EAAA,IACAE,EAAA,GAAAjH,KAAAmb,KAAApU,EAAA,IACAE,EAAA,GAAAjH,KAAAmb,KAAApU,EAAA,IACAE,EAUA,SAAAqY,GAAArY,EAAAF,GAKA,OAJAE,EAAA,GAAAjH,KAAAob,MAAArU,EAAA,IACAE,EAAA,GAAAjH,KAAAob,MAAArU,EAAA,IACAE,EAAA,GAAAjH,KAAAob,MAAArU,EAAA,IACAE,EAAA,GAAAjH,KAAAob,MAAArU,EAAA,IACAE,EAWA,SAAAsY,GAAAtY,EAAAF,EAAAjG,GAKA,OAJAmG,EAAA,GAAAjH,KAAAgB,IAAA+F,EAAA,GAAAjG,EAAA,IACAmG,EAAA,GAAAjH,KAAAgB,IAAA+F,EAAA,GAAAjG,EAAA,IACAmG,EAAA,GAAAjH,KAAAgB,IAAA+F,EAAA,GAAAjG,EAAA,IACAmG,EAAA,GAAAjH,KAAAgB,IAAA+F,EAAA,GAAAjG,EAAA,IACAmG,EAWA,SAAAuY,GAAAvY,EAAAF,EAAAjG,GAKA,OAJAmG,EAAA,GAAAjH,KAAAC,IAAA8G,EAAA,GAAAjG,EAAA,IACAmG,EAAA,GAAAjH,KAAAC,IAAA8G,EAAA,GAAAjG,EAAA,IACAmG,EAAA,GAAAjH,KAAAC,IAAA8G,EAAA,GAAAjG,EAAA,IACAmG,EAAA,GAAAjH,KAAAC,IAAA8G,EAAA,GAAAjG,EAAA,IACAmG,EAUA,SAAAwY,GAAAxY,EAAAF,GAKA,OAJAE,EAAA,GAAAjH,KAAAkB,MAAA6F,EAAA,IACAE,EAAA,GAAAjH,KAAAkB,MAAA6F,EAAA,IACAE,EAAA,GAAAjH,KAAAkB,MAAA6F,EAAA,IACAE,EAAA,GAAAjH,KAAAkB,MAAA6F,EAAA,IACAE,EAWA,SAAAyY,GAAAzY,EAAAF,EAAAjG,GAKA,OAJAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAYA,SAAA0Y,GAAA1Y,EAAAF,EAAAjG,EAAAgJ,GAKA,OAJA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAUA,SAAA2Y,GAAA7Y,EAAAjG,GACA,IAAAnE,EAAAmE,EAAA,GAAAiG,EAAA,GACAlK,EAAAiE,EAAA,GAAAiG,EAAA,GACAkI,EAAAnO,EAAA,GAAAiG,EAAA,GACAmI,EAAApO,EAAA,GAAAiG,EAAA,GACA,OAAA/G,KAAAkJ,KAAAvM,IAAAE,IAAAoS,IAAAC,KAUA,SAAA2Q,GAAA9Y,EAAAjG,GACA,IAAAnE,EAAAmE,EAAA,GAAAiG,EAAA,GACAlK,EAAAiE,EAAA,GAAAiG,EAAA,GACAkI,EAAAnO,EAAA,GAAAiG,EAAA,GACAmI,EAAApO,EAAA,GAAAiG,EAAA,GACA,OAAApK,IAAAE,IAAAoS,IAAAC,IASA,SAAA4Q,GAAA/Y,GACA,IAAApK,EAAAoK,EAAA,GACAlK,EAAAkK,EAAA,GACAkI,EAAAlI,EAAA,GACAmI,EAAAnI,EAAA,GACA,OAAA/G,KAAAkJ,KAAAvM,IAAAE,IAAAoS,IAAAC,KASA,SAAA6Q,GAAAhZ,GACA,IAAApK,EAAAoK,EAAA,GACAlK,EAAAkK,EAAA,GACAkI,EAAAlI,EAAA,GACAmI,EAAAnI,EAAA,GACA,OAAApK,IAAAE,IAAAoS,IAAAC,IAUA,SAAA8Q,GAAA/Y,EAAAF,GAKA,OAJAE,EAAA,IAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,GACAE,EAUA,SAAAgZ,GAAAhZ,EAAAF,GAKA,OAJAE,EAAA,KAAAF,EAAA,GACAE,EAAA,KAAAF,EAAA,GACAE,EAAA,KAAAF,EAAA,GACAE,EAAA,KAAAF,EAAA,GACAE,EAUA,SAAAiZ,GAAAjZ,EAAAF,GACA,IAAApK,EAAAoK,EAAA,GACAlK,EAAAkK,EAAA,GACAkI,EAAAlI,EAAA,GACAmI,EAAAnI,EAAA,GACAqM,EAAAzW,IAAAE,IAAAoS,IAAAC,IAQA,OAPAkE,EAAA,IACAA,EAAA,EAAApT,KAAAkJ,KAAAkK,GACAnM,EAAA,GAAAtK,EAAAyW,EACAnM,EAAA,GAAApK,EAAAuW,EACAnM,EAAA,GAAAgI,EAAAmE,EACAnM,EAAA,GAAAiI,EAAAkE,GAEAnM,EAUA,SAAAkZ,GAAApZ,EAAAjG,GACA,OAAAiG,EAAA,GAAAjG,EAAA,GAAAiG,EAAA,GAAAjG,EAAA,GAAAiG,EAAA,GAAAjG,EAAA,GAAAiG,EAAA,GAAAjG,EAAA,GAYA,SAAAsf,GAAAnZ,EAAAF,EAAAjG,EAAAnH,GACA,IAAA6a,EAAAzN,EAAA,GACA0N,EAAA1N,EAAA,GACA2N,EAAA3N,EAAA,GACA4N,EAAA5N,EAAA,GAKA,OAJAE,EAAA,GAAAuN,EAAA7a,GAAAmH,EAAA,GAAA0T,GACAvN,EAAA,GAAAwN,EAAA9a,GAAAmH,EAAA,GAAA2T,GACAxN,EAAA,GAAAyN,EAAA/a,GAAAmH,EAAA,GAAA4T,GACAzN,EAAA,GAAA0N,EAAAhb,GAAAmH,EAAA,GAAA6T,GACA1N,EAUA,SAAAoZ,GAAApZ,EAAAqZ,GAMA,IAAAzX,EAAA0X,EAAAC,EAAAC,EACAC,EAAAC,EANAL,KAAA,EAOA,GAGAI,GAFA7X,EAAA,EAAApC,IAAA,GAEAoC,GADA0X,EAAA,EAAA9Z,IAAA,GACA8Z,QACGG,GAAA,GACH,GAGAC,GAFAH,EAAA,EAAA/Z,IAAA,GAEA+Z,GADAC,EAAA,EAAAha,IAAA,GACAga,QACGE,GAAA,GAEH,IAAA5nB,EAAAiH,KAAAkJ,MAAA,EAAAwX,GAAAC,GAKA,OAJA1Z,EAAA,GAAAyY,GAAA7W,EACA5B,EAAA,GAAAyY,GAAAa,EACAtZ,EAAA,GAAAyY,GAAAc,EAAAznB,EACAkO,EAAA,GAAAyY,GAAAe,EAAA1nB,EACAkO,EAWA,SAAA2Z,GAAA3Z,EAAAF,EAAAlO,GACA,IAAA8D,EAAAoK,EAAA,GAAAlK,EAAAkK,EAAA,GAAAkI,EAAAlI,EAAA,GAAAmI,EAAAnI,EAAA,GAKA,OAJAE,EAAA,GAAApO,EAAA,GAAA8D,EAAA9D,EAAA,GAAAgE,EAAAhE,EAAA,GAAAoW,EAAApW,EAAA,IAAAqW,EACAjI,EAAA,GAAApO,EAAA,GAAA8D,EAAA9D,EAAA,GAAAgE,EAAAhE,EAAA,GAAAoW,EAAApW,EAAA,IAAAqW,EACAjI,EAAA,GAAApO,EAAA,GAAA8D,EAAA9D,EAAA,GAAAgE,EAAAhE,EAAA,IAAAoW,EAAApW,EAAA,IAAAqW,EACAjI,EAAA,GAAApO,EAAA,GAAA8D,EAAA9D,EAAA,GAAAgE,EAAAhE,EAAA,IAAAoW,EAAApW,EAAA,IAAAqW,EACAjI,EAWA,SAAA4Z,GAAA5Z,EAAAF,EAAAiI,GACA,IAAArS,EAAAoK,EAAA,GAAAlK,EAAAkK,EAAA,GAAAkI,EAAAlI,EAAA,GACA6V,EAAA5N,EAAA,GAAA6N,EAAA7N,EAAA,GAAA8N,EAAA9N,EAAA,GAAA+N,EAAA/N,EAAA,GAGA8R,EAAA/D,EAAApgB,EAAAkgB,EAAA5N,EAAA6N,EAAAjgB,EACAkkB,EAAAhE,EAAAlgB,EAAAigB,EAAAngB,EAAAigB,EAAA3N,EACA+R,EAAAjE,EAAA9N,EAAA2N,EAAA/f,EAAAggB,EAAAlgB,EACAskB,GAAArE,EAAAjgB,EAAAkgB,EAAAhgB,EAAAigB,EAAA7N,EAOA,OAJAhI,EAAA,GAAA6Z,EAAA/D,EAAAkE,GAAArE,EAAAmE,GAAAjE,EAAAkE,GAAAnE,EACA5V,EAAA,GAAA8Z,EAAAhE,EAAAkE,GAAApE,EAAAmE,GAAApE,EAAAkE,GAAAhE,EACA7V,EAAA,GAAA+Z,EAAAjE,EAAAkE,GAAAnE,EAAAgE,GAAAjE,EAAAkE,GAAAnE,EACA3V,EAAA,GAAAF,EAAA,GACAE,EASA,SAAAia,GAAAna,GACA,cAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAUA,SAAAoa,GAAApa,EAAAjG,GACA,OAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,GAUA,SAAAsgB,GAAAra,EAAAjG,GACA,IAAA8G,EAAAb,EAAA,GAAAW,EAAAX,EAAA,GAAAc,EAAAd,EAAA,GAAAe,EAAAf,EAAA,GACAoB,EAAArH,EAAA,GAAAsH,EAAAtH,EAAA,GAAAuH,EAAAvH,EAAA,GAAAwH,EAAAxH,EAAA,GACA,OAAAd,KAAAiB,IAAA2G,EAAAO,IAAA5B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA2G,GAAA5H,KAAAiB,IAAAkH,KACAnI,KAAAiB,IAAAyG,EAAAU,IAAA7B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAyG,GAAA1H,KAAAiB,IAAAmH,KACApI,KAAAiB,IAAA4G,EAAAQ,IAAA9B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA4G,GAAA7H,KAAAiB,IAAAoH,KACArI,KAAAiB,IAAA6G,EAAAQ,IAAA/B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA6G,GAAA9H,KAAAiB,IAAAqH,IAOA,MAAA+Y,GAAAnC,GAMAoC,GAAAnC,GAMAoC,GAAAnC,GAMAoC,GAAA5B,GAMA6B,GAAA5B,GAMA6B,GAAA5B,GAMA6B,GAAA5B,GAcA6B,GAAA,WACA,IAAApD,EAAAI,KAEA,gBAAA7X,EAAA0X,EAAAtb,EAAAzC,EAAAge,EAAAC,GACA,IAAAlmB,EAAAC,EAeA,IAdA+lB,IACAA,EAAA,GAGAtb,IACAA,EAAA,GAIAzK,EADAgI,EACAV,KAAAgB,IAAAN,EAAA+d,EAAAtb,EAAA4D,EAAArL,QAEAqL,EAAArL,OAGAjD,EAAA0K,EAAmB1K,EAAAC,EAAOD,GAAAgmB,EAC1BD,EAAA,GAAAzX,EAAAtO,GAAoB+lB,EAAA,GAAAzX,EAAAtO,EAAA,GAAiB+lB,EAAA,GAAAzX,EAAAtO,EAAA,GAAiB+lB,EAAA,GAAAzX,EAAAtO,EAAA,GACtDimB,EAAAF,IAAAG,GACA5X,EAAAtO,GAAA+lB,EAAA,GAAoBzX,EAAAtO,EAAA,GAAA+lB,EAAA,GAAiBzX,EAAAtO,EAAA,GAAA+lB,EAAA,GAAiBzX,EAAAtO,EAAA,GAAA+lB,EAAA,GAGtD,OAAAzX,GAzBA,GC7iBA,SAAA8a,KACA,IAAA5a,EAAA,IAAAT,EAAA,GAKA,OAJAS,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EASA,SAAA6a,GAAA7a,GAKA,OAJAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAYA,SAAA8a,GAAA9a,EAAAkM,EAAA3K,GACAA,GAAA,GACA,IAAAhO,EAAAwF,KAAAyI,IAAAD,GAKA,OAJAvB,EAAA,GAAAzM,EAAA2Y,EAAA,GACAlM,EAAA,GAAAzM,EAAA2Y,EAAA,GACAlM,EAAA,GAAAzM,EAAA2Y,EAAA,GACAlM,EAAA,GAAAjH,KAAA0I,IAAAF,GACAvB,EAgBA,SAAA+a,GAAAC,EAAAjT,GACA,IAAAxG,EAAA,EAAAxI,KAAA6d,KAAA7O,EAAA,IACAxU,EAAAwF,KAAAyI,IAAAD,EAAA,GAWA,OAVA,GAAAhO,GACAynB,EAAA,GAAAjT,EAAA,GAAAxU,EACAynB,EAAA,GAAAjT,EAAA,GAAAxU,EACAynB,EAAA,GAAAjT,EAAA,GAAAxU,IAGAynB,EAAA,KACAA,EAAA,KACAA,EAAA,MAEAzZ,EAWA,SAAA0Z,GAAAjb,EAAAF,EAAAjG,GACA,IAAA0T,EAAAzN,EAAA,GAAA0N,EAAA1N,EAAA,GAAA2N,EAAA3N,EAAA,GAAA4N,EAAA5N,EAAA,GACAqN,EAAAtT,EAAA,GAAAuT,EAAAvT,EAAA,GAAAwT,EAAAxT,EAAA,GAAAyT,EAAAzT,EAAA,GAMA,OAJAmG,EAAA,GAAAuN,EAAAD,EAAAI,EAAAP,EAAAK,EAAAH,EAAAI,EAAAL,EACApN,EAAA,GAAAwN,EAAAF,EAAAI,EAAAN,EAAAK,EAAAN,EAAAI,EAAAF,EACArN,EAAA,GAAAyN,EAAAH,EAAAI,EAAAL,EAAAE,EAAAH,EAAAI,EAAAL,EACAnN,EAAA,GAAA0N,EAAAJ,EAAAC,EAAAJ,EAAAK,EAAAJ,EAAAK,EAAAJ,EACArN,EAWA,SAAAkb,GAAAlb,EAAAF,EAAAyB,GACAA,GAAA,GAEA,IAAAgM,EAAAzN,EAAA,GAAA0N,EAAA1N,EAAA,GAAA2N,EAAA3N,EAAA,GAAA4N,EAAA5N,EAAA,GACAqN,EAAApU,KAAAyI,IAAAD,GAAA+L,EAAAvU,KAAA0I,IAAAF,GAMA,OAJAvB,EAAA,GAAAuN,EAAAD,EAAAI,EAAAP,EACAnN,EAAA,GAAAwN,EAAAF,EAAAG,EAAAN,EACAnN,EAAA,GAAAyN,EAAAH,EAAAE,EAAAL,EACAnN,EAAA,GAAA0N,EAAAJ,EAAAC,EAAAJ,EACAnN,EAWA,SAAAmb,GAAAnb,EAAAF,EAAAyB,GACAA,GAAA,GAEA,IAAAgM,EAAAzN,EAAA,GAAA0N,EAAA1N,EAAA,GAAA2N,EAAA3N,EAAA,GAAA4N,EAAA5N,EAAA,GACAsN,EAAArU,KAAAyI,IAAAD,GAAA+L,EAAAvU,KAAA0I,IAAAF,GAMA,OAJAvB,EAAA,GAAAuN,EAAAD,EAAAG,EAAAL,EACApN,EAAA,GAAAwN,EAAAF,EAAAI,EAAAN,EACApN,EAAA,GAAAyN,EAAAH,EAAAC,EAAAH,EACApN,EAAA,GAAA0N,EAAAJ,EAAAE,EAAAJ,EACApN,EAWA,SAAAob,GAAApb,EAAAF,EAAAyB,GACAA,GAAA,GAEA,IAAAgM,EAAAzN,EAAA,GAAA0N,EAAA1N,EAAA,GAAA2N,EAAA3N,EAAA,GAAA4N,EAAA5N,EAAA,GACAuN,EAAAtU,KAAAyI,IAAAD,GAAA+L,EAAAvU,KAAA0I,IAAAF,GAMA,OAJAvB,EAAA,GAAAuN,EAAAD,EAAAE,EAAAH,EACArN,EAAA,GAAAwN,EAAAF,EAAAC,EAAAF,EACArN,EAAA,GAAAyN,EAAAH,EAAAI,EAAAL,EACArN,EAAA,GAAA0N,EAAAJ,EAAAG,EAAAJ,EACArN,EAYA,SAAAqb,GAAArb,EAAAF,GACA,IAAApK,EAAAoK,EAAA,GAAAlK,EAAAkK,EAAA,GAAAkI,EAAAlI,EAAA,GAMA,OAJAE,EAAA,GAAAtK,EACAsK,EAAA,GAAApK,EACAoK,EAAA,GAAAgI,EACAhI,EAAA,GAAAjH,KAAAkJ,KAAAlJ,KAAAiB,IAAA,EAAAtE,IAAAE,IAAAoS,MACAhI,EAYA,SAAAsb,GAAAtb,EAAAF,EAAAjG,EAAAnH,GAGA,IAGA6oB,EAAAC,EAAAC,EAAAC,EAAAC,EAHApO,EAAAzN,EAAA,GAAA0N,EAAA1N,EAAA,GAAA2N,EAAA3N,EAAA,GAAA4N,EAAA5N,EAAA,GACAqN,EAAAtT,EAAA,GAAAuT,EAAAvT,EAAA,GAAAwT,EAAAxT,EAAA,GAAAyT,EAAAzT,EAAA,GAiCA,OA5BA2hB,EAAAjO,EAAAJ,EAAAK,EAAAJ,EAAAK,EAAAJ,EAAAK,EAAAJ,GAEA,IACAkO,KACArO,KACAC,KACAC,KACAC,MAGA,EAAAkO,EAAA,MAEAD,EAAAxiB,KAAA6d,KAAA4E,GACAC,EAAA1iB,KAAAyI,IAAA+Z,GACAG,EAAA3iB,KAAAyI,KAAA,EAAA9O,GAAA6oB,GAAAE,EACAE,EAAA5iB,KAAAyI,IAAA9O,EAAA6oB,GAAAE,IAIAC,EAAA,EAAAhpB,EACAipB,EAAAjpB,GAGAsN,EAAA,GAAA0b,EAAAnO,EAAAoO,EAAAxO,EACAnN,EAAA,GAAA0b,EAAAlO,EAAAmO,EAAAvO,EACApN,EAAA,GAAA0b,EAAAjO,EAAAkO,EAAAtO,EACArN,EAAA,GAAA0b,EAAAhO,EAAAiO,EAAArO,EAEAtN,EAUA,SAAA4b,GAAA5b,EAAAF,GACA,IAAAa,EAAAb,EAAA,GAAAW,EAAAX,EAAA,GAAAc,EAAAd,EAAA,GAAAe,EAAAf,EAAA,GACA+b,EAAAlb,IAAAF,IAAAG,IAAAC,IACAib,EAAAD,EAAA,EAAAA,EAAA,EAQA,OAJA7b,EAAA,IAAAW,EAAAmb,EACA9b,EAAA,IAAAS,EAAAqb,EACA9b,EAAA,IAAAY,EAAAkb,EACA9b,EAAA,GAAAa,EAAAib,EACA9b,EAWA,SAAA+b,GAAA/b,EAAAF,GAKA,OAJAE,EAAA,IAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAcA,SAAAgc,GAAAhc,EAAApO,GAGA,IACAqqB,EADAC,EAAAtqB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAGA,GAAAsqB,EAAA,EAEAD,EAAAljB,KAAAkJ,KAAAia,EAAA,GACAlc,EAAA,MAAAic,EACAA,EAAA,GAAAA,EACAjc,EAAA,IAAApO,EAAA,GAAAA,EAAA,IAAAqqB,EACAjc,EAAA,IAAApO,EAAA,GAAAA,EAAA,IAAAqqB,EACAjc,EAAA,IAAApO,EAAA,GAAAA,EAAA,IAAAqqB,MACG,CAEH,IAAAzqB,EAAA,EACAI,EAAA,GAAAA,EAAA,KACAJ,EAAA,GACAI,EAAA,GAAAA,EAAA,EAAAJ,OACAA,EAAA,GACA,IAAA2qB,GAAA3qB,EAAA,KACA4qB,GAAA5qB,EAAA,KAEAyqB,EAAAljB,KAAAkJ,KAAArQ,EAAA,EAAAJ,KAAAI,EAAA,EAAAuqB,KAAAvqB,EAAA,EAAAwqB,KAAA,GACApc,EAAAxO,GAAA,GAAAyqB,EACAA,EAAA,GAAAA,EACAjc,EAAA,IAAApO,EAAA,EAAAuqB,EAAAC,GAAAxqB,EAAA,EAAAwqB,EAAAD,IAAAF,EACAjc,EAAAmc,IAAAvqB,EAAA,EAAAuqB,EAAA3qB,GAAAI,EAAA,EAAAJ,EAAA2qB,IAAAF,EACAjc,EAAAoc,IAAAxqB,EAAA,EAAAwqB,EAAA5qB,GAAAI,EAAA,EAAAJ,EAAA4qB,IAAAH,EAGA,OAAAjc,EAaA,SAAAqc,GAAArc,EAAAtK,EAAAE,EAAAoS,GACA,IAAAsU,EAAA,GAAAvjB,KAAA6G,GAAA,IACAlK,GAAA4mB,EACA1mB,GAAA0mB,EACAtU,GAAAsU,EAEA,IAAAnO,EAAApV,KAAAyI,IAAA9L,GACA6mB,EAAAxjB,KAAA0I,IAAA/L,GACA0Y,EAAArV,KAAAyI,IAAA5L,GACA4mB,EAAAzjB,KAAA0I,IAAA7L,GACAyY,EAAAtV,KAAAyI,IAAAwG,GACAyU,EAAA1jB,KAAA0I,IAAAuG,GAOA,OALAhI,EAAA,GAAAmO,EAAAqO,EAAAC,EAAAF,EAAAnO,EAAAC,EACArO,EAAA,GAAAuc,EAAAnO,EAAAqO,EAAAtO,EAAAqO,EAAAnO,EACArO,EAAA,GAAAuc,EAAAC,EAAAnO,EAAAF,EAAAC,EAAAqO,EACAzc,EAAA,GAAAuc,EAAAC,EAAAC,EAAAtO,EAAAC,EAAAC,EAEArO,EASA,SAAA0c,GAAA5c,GACA,cAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAUA,MAAA6c,GAAA/E,GAYAgF,GAAA/E,GAUAgF,GAAA/E,GAaAgF,GAAA/E,GAWAgF,GAAA/E,GAMAgF,GAAA/B,GAWAgC,GAAAxE,GAUAyE,GAAAhE,GAYAiE,GAAAhE,GAQAiE,GAAAvE,GAMAwE,GAAAD,GASAE,GAAAxE,GAMAyE,GAAAD,GAUAE,GAAAvE,GASAwE,GAAAvD,GASAwD,GAAAvD,GAaAwD,GAAA,WACA,IAAAC,EAAApK,KACAqK,EAAAlK,GAAA,OACAmK,EAAAnK,GAAA,OAEA,gBAAA3T,EAAAF,EAAAjG,GACA,IAAAgiB,EAAAjH,GAAA9U,EAAAjG,GACA,OAAAgiB,GAAA,SACAhH,GAAA+I,EAAAC,EAAA/d,GACAuX,GAAAuG,GAAA,MACA/I,GAAA+I,EAAAE,EAAAhe,GACA6U,GAAAiJ,KACA9C,GAAA9a,EAAA4d,EAAA7kB,KAAA6G,IACAI,GACK6b,EAAA,SACL7b,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,IAEA6U,GAAA+I,EAAA9d,EAAAjG,GACAmG,EAAA,GAAA4d,EAAA,GACA5d,EAAA,GAAA4d,EAAA,GACA5d,EAAA,GAAA4d,EAAA,GACA5d,EAAA,KAAA6b,EACA2B,GAAAxd,OA1BA,GA0CA+d,GAAA,WACA,IAAAC,EAAApD,KACAqD,EAAArD,KAEA,gBAAA5a,EAAAF,EAAAjG,EAAAhI,EAAAC,EAAAY,GAKA,OAJA4oB,GAAA0C,EAAAle,EAAAhO,EAAAY,GACA4oB,GAAA2C,EAAApkB,EAAAhI,EAAAa,GACA4oB,GAAAtb,EAAAge,EAAAC,EAAA,EAAAvrB,GAAA,EAAAA,IAEAsN,GATA,GAuBAke,GAAA,WACA,IAAAC,EAAA/Y,KAEA,gBAAApF,EAAAoe,EAAA9O,EAAA+B,GAaA,OAZA8M,EAAA,GAAA7O,EAAA,GACA6O,EAAA,GAAA7O,EAAA,GACA6O,EAAA,GAAA7O,EAAA,GAEA6O,EAAA,GAAA9M,EAAA,GACA8M,EAAA,GAAA9M,EAAA,GACA8M,EAAA,GAAA9M,EAAA,GAEA8M,EAAA,IAAAC,EAAA,GACAD,EAAA,IAAAC,EAAA,GACAD,EAAA,IAAAC,EAAA,GAEAZ,GAAAxd,EAAAgc,GAAAhc,EAAAme,KAhBA,GCzjBA,SAAAE,KACA,IAAAC,EAAA,IAAA/e,EAAA,GASA,OARA+e,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAUA,SAAAC,GAAAze,GACA,IAAAwe,EAAA,IAAA/e,EAAA,GASA,OARA+e,EAAA,GAAAxe,EAAA,GACAwe,EAAA,GAAAxe,EAAA,GACAwe,EAAA,GAAAxe,EAAA,GACAwe,EAAA,GAAAxe,EAAA,GACAwe,EAAA,GAAAxe,EAAA,GACAwe,EAAA,GAAAxe,EAAA,GACAwe,EAAA,GAAAxe,EAAA,GACAwe,EAAA,GAAAxe,EAAA,GACAwe,EAiBA,SAAAE,GAAAjN,EAAAE,EAAAE,EAAA8M,EAAAvW,EAAAC,EAAAC,EAAAiO,GACA,IAAAiI,EAAA,IAAA/e,EAAA,GASA,OARA+e,EAAA,GAAA/M,EACA+M,EAAA,GAAA7M,EACA6M,EAAA,GAAA3M,EACA2M,EAAA,GAAAG,EACAH,EAAA,GAAApW,EACAoW,EAAA,GAAAnW,EACAmW,EAAA,GAAAlW,EACAkW,EAAA,GAAAjI,EACAiI,EAgBA,SAAAI,GAAAnN,EAAAE,EAAAE,EAAA8M,EAAAvW,EAAAC,EAAAC,GACA,IAAAkW,EAAA,IAAA/e,EAAA,GACA+e,EAAA,GAAA/M,EACA+M,EAAA,GAAA7M,EACA6M,EAAA,GAAA3M,EACA2M,EAAA,GAAAG,EACA,IAAAlR,EAAA,GAAArF,EACAsF,EAAA,GAAArF,EACAsF,EAAA,GAAArF,EAKA,OAJAkW,EAAA,GAAA/Q,EAAAkR,EAAAjR,EAAAmE,EAAAlE,EAAAgE,EACA6M,EAAA,GAAA9Q,EAAAiR,EAAAhR,EAAA8D,EAAAhE,EAAAoE,EACA2M,EAAA,GAAA7Q,EAAAgR,EAAAlR,EAAAkE,EAAAjE,EAAA+D,EACA+M,EAAA,IAAA/Q,EAAAgE,EAAA/D,EAAAiE,EAAAhE,EAAAkE,EACA2M,EAYA,SAAAK,GAAA3e,EAAA+H,EAAArV,GACA,IAAA6a,EAAA,GAAA7a,EAAA,GACA8a,EAAA,GAAA9a,EAAA,GACA+a,EAAA,GAAA/a,EAAA,GACAya,EAAApF,EAAA,GACAqF,EAAArF,EAAA,GACAsF,EAAAtF,EAAA,GACAuF,EAAAvF,EAAA,GASA,OARA/H,EAAA,GAAAmN,EACAnN,EAAA,GAAAoN,EACApN,EAAA,GAAAqN,EACArN,EAAA,GAAAsN,EACAtN,EAAA,GAAAuN,EAAAD,EAAAE,EAAAH,EAAAI,EAAAL,EACApN,EAAA,GAAAwN,EAAAF,EAAAG,EAAAN,EAAAI,EAAAF,EACArN,EAAA,GAAAyN,EAAAH,EAAAC,EAAAH,EAAAI,EAAAL,EACAnN,EAAA,IAAAuN,EAAAJ,EAAAK,EAAAJ,EAAAK,EAAAJ,EACArN,EAWA,SAAA4e,GAAA5e,EAAAtN,GASA,OARAsN,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAAAtN,EAAA,GACAsN,EAAA,MAAAtN,EAAA,GACAsN,EAAA,MAAAtN,EAAA,GACAsN,EAAA,KACAA,EAWA,SAAA6e,GAAA7e,EAAA+H,GASA,OARA/H,EAAA,GAAA+H,EAAA,GACA/H,EAAA,GAAA+H,EAAA,GACA/H,EAAA,GAAA+H,EAAA,GACA/H,EAAA,GAAA+H,EAAA,GACA/H,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAWA,SAAA8e,GAAA9e,EAAAF,GAEA,IAAAif,EAAAnE,KACA7M,GAAAgR,EAAAjf,GACA,IAAApN,EAAA,IAAA6M,EAAA,GAGA,OAFAqO,GAAAlb,EAAAoN,GACA6e,GAAA3e,EAAA+e,EAAArsB,GACAsN,EAWA,SAAAgf,GAAAhf,EAAAF,GASA,OARAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EASA,SAAAif,GAAAjf,GASA,OARAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAkBA,SAAAkf,GAAAlf,EAAAuR,EAAAE,EAAAE,EAAA8M,EAAAvW,EAAAC,EAAAC,EAAAiO,GAUA,OATArW,EAAA,GAAAuR,EACAvR,EAAA,GAAAyR,EACAzR,EAAA,GAAA2R,EACA3R,EAAA,GAAAye,EAEAze,EAAA,GAAAkI,EACAlI,EAAA,GAAAmI,EACAnI,EAAA,GAAAoI,EACApI,EAAA,GAAAqW,EACArW,EASA,MAAAmf,GAAAtC,GAQA,SAAAuC,GAAApf,EAAAF,GAKA,OAJAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAWA,MAAAqf,GAAAxC,GAUA,SAAAyC,GAAAtf,EAAA+H,GAKA,OAJA/H,EAAA,GAAA+H,EAAA,GACA/H,EAAA,GAAA+H,EAAA,GACA/H,EAAA,GAAA+H,EAAA,GACA/H,EAAA,GAAA+H,EAAA,GACA/H,EASA,SAAAuf,GAAAvf,EAAAF,GACA,IAAAyN,EAAAzN,EAAA,GACA0N,EAAA1N,EAAA,GACA2N,EAAA3N,EAAA,GACA4N,EAAA5N,EAAA,GACAqN,GAAArN,EAAA,GACAsN,GAAAtN,EAAA,GACAuN,GAAAvN,EAAA,GACAwN,EAAAxN,EAAA,GAIA,OAHAE,EAAA,MAAAuN,EAAAD,EAAAI,EAAAP,EAAAK,EAAAH,EAAAI,EAAAL,GACApN,EAAA,MAAAwN,EAAAF,EAAAI,EAAAN,EAAAK,EAAAN,EAAAI,EAAAF,GACArN,EAAA,MAAAyN,EAAAH,EAAAI,EAAAL,EAAAE,EAAAH,EAAAI,EAAAL,GACAnN,EAWA,SAAAwf,GAAAxf,EAAAF,EAAAnB,GACA,IAAA8gB,EAAA3f,EAAA,GACA4f,EAAA5f,EAAA,GACA6f,EAAA7f,EAAA,GACA8f,EAAA9f,EAAA,GACA+f,EAAA,GAAAlhB,EAAA,GACAmhB,EAAA,GAAAnhB,EAAA,GACAohB,EAAA,GAAAphB,EAAA,GACAqhB,EAAAlgB,EAAA,GACAmgB,EAAAngB,EAAA,GACAogB,EAAApgB,EAAA,GACAqgB,EAAArgB,EAAA,GASA,OARAE,EAAA,GAAAyf,EACAzf,EAAA,GAAA0f,EACA1f,EAAA,GAAA2f,EACA3f,EAAA,GAAA4f,EACA5f,EAAA,GAAA4f,EAAAC,EAAAH,EAAAK,EAAAJ,EAAAG,EAAAE,EACAhgB,EAAA,GAAA4f,EAAAE,EAAAH,EAAAE,EAAAJ,EAAAM,EAAAE,EACAjgB,EAAA,GAAA4f,EAAAG,EAAAN,EAAAK,EAAAJ,EAAAG,EAAAK,EACAlgB,EAAA,IAAAyf,EAAAI,EAAAH,EAAAI,EAAAH,EAAAI,EAAAI,EACAngB,EAWA,SAAAogB,GAAApgB,EAAAF,EAAAyB,GACA,IAAA4L,GAAArN,EAAA,GACAsN,GAAAtN,EAAA,GACAuN,GAAAvN,EAAA,GACAwN,EAAAxN,EAAA,GACAyN,EAAAzN,EAAA,GACA0N,EAAA1N,EAAA,GACA2N,EAAA3N,EAAA,GACA4N,EAAA5N,EAAA,GACA2f,EAAAlS,EAAAD,EAAAI,EAAAP,EAAAK,EAAAH,EAAAI,EAAAL,EACAsS,EAAAlS,EAAAF,EAAAI,EAAAN,EAAAK,EAAAN,EAAAI,EAAAF,EACAsS,EAAAlS,EAAAH,EAAAI,EAAAL,EAAAE,EAAAH,EAAAI,EAAAL,EACAyS,EAAAlS,EAAAJ,EAAAC,EAAAJ,EAAAK,EAAAJ,EAAAK,EAAAJ,EAUA,OATA6N,GAAAlb,EAAAF,EAAAyB,GACA4L,EAAAnN,EAAA,GACAoN,EAAApN,EAAA,GACAqN,EAAArN,EAAA,GACAsN,EAAAtN,EAAA,GACAA,EAAA,GAAAyf,EAAAnS,EAAAsS,EAAAzS,EAAAuS,EAAArS,EAAAsS,EAAAvS,EACApN,EAAA,GAAA0f,EAAApS,EAAAsS,EAAAxS,EAAAuS,EAAAxS,EAAAsS,EAAApS,EACArN,EAAA,GAAA2f,EAAArS,EAAAsS,EAAAvS,EAAAoS,EAAArS,EAAAsS,EAAAvS,EACAnN,EAAA,GAAA4f,EAAAtS,EAAAmS,EAAAtS,EAAAuS,EAAAtS,EAAAuS,EAAAtS,EACArN,EAWA,SAAAqgB,GAAArgB,EAAAF,EAAAyB,GACA,IAAA4L,GAAArN,EAAA,GACAsN,GAAAtN,EAAA,GACAuN,GAAAvN,EAAA,GACAwN,EAAAxN,EAAA,GACAyN,EAAAzN,EAAA,GACA0N,EAAA1N,EAAA,GACA2N,EAAA3N,EAAA,GACA4N,EAAA5N,EAAA,GACA2f,EAAAlS,EAAAD,EAAAI,EAAAP,EAAAK,EAAAH,EAAAI,EAAAL,EACAsS,EAAAlS,EAAAF,EAAAI,EAAAN,EAAAK,EAAAN,EAAAI,EAAAF,EACAsS,EAAAlS,EAAAH,EAAAI,EAAAL,EAAAE,EAAAH,EAAAI,EAAAL,EACAyS,EAAAlS,EAAAJ,EAAAC,EAAAJ,EAAAK,EAAAJ,EAAAK,EAAAJ,EAUA,OATA8N,GAAAnb,EAAAF,EAAAyB,GACA4L,EAAAnN,EAAA,GACAoN,EAAApN,EAAA,GACAqN,EAAArN,EAAA,GACAsN,EAAAtN,EAAA,GACAA,EAAA,GAAAyf,EAAAnS,EAAAsS,EAAAzS,EAAAuS,EAAArS,EAAAsS,EAAAvS,EACApN,EAAA,GAAA0f,EAAApS,EAAAsS,EAAAxS,EAAAuS,EAAAxS,EAAAsS,EAAApS,EACArN,EAAA,GAAA2f,EAAArS,EAAAsS,EAAAvS,EAAAoS,EAAArS,EAAAsS,EAAAvS,EACAnN,EAAA,GAAA4f,EAAAtS,EAAAmS,EAAAtS,EAAAuS,EAAAtS,EAAAuS,EAAAtS,EACArN,EAWA,SAAAsgB,GAAAtgB,EAAAF,EAAAyB,GACA,IAAA4L,GAAArN,EAAA,GACAsN,GAAAtN,EAAA,GACAuN,GAAAvN,EAAA,GACAwN,EAAAxN,EAAA,GACAyN,EAAAzN,EAAA,GACA0N,EAAA1N,EAAA,GACA2N,EAAA3N,EAAA,GACA4N,EAAA5N,EAAA,GACA2f,EAAAlS,EAAAD,EAAAI,EAAAP,EAAAK,EAAAH,EAAAI,EAAAL,EACAsS,EAAAlS,EAAAF,EAAAI,EAAAN,EAAAK,EAAAN,EAAAI,EAAAF,EACAsS,EAAAlS,EAAAH,EAAAI,EAAAL,EAAAE,EAAAH,EAAAI,EAAAL,EACAyS,EAAAlS,EAAAJ,EAAAC,EAAAJ,EAAAK,EAAAJ,EAAAK,EAAAJ,EAUA,OATA+N,GAAApb,EAAAF,EAAAyB,GACA4L,EAAAnN,EAAA,GACAoN,EAAApN,EAAA,GACAqN,EAAArN,EAAA,GACAsN,EAAAtN,EAAA,GACAA,EAAA,GAAAyf,EAAAnS,EAAAsS,EAAAzS,EAAAuS,EAAArS,EAAAsS,EAAAvS,EACApN,EAAA,GAAA0f,EAAApS,EAAAsS,EAAAxS,EAAAuS,EAAAxS,EAAAsS,EAAApS,EACArN,EAAA,GAAA2f,EAAArS,EAAAsS,EAAAvS,EAAAoS,EAAArS,EAAAsS,EAAAvS,EACAnN,EAAA,GAAA4f,EAAAtS,EAAAmS,EAAAtS,EAAAuS,EAAAtS,EAAAuS,EAAAtS,EACArN,EAWA,SAAAugB,GAAAvgB,EAAAF,EAAAiI,GACA,IAAA4N,EAAA5N,EAAA,GACA6N,EAAA7N,EAAA,GACA8N,EAAA9N,EAAA,GACA+N,EAAA/N,EAAA,GACAwF,EAAAzN,EAAA,GACA0N,EAAA1N,EAAA,GACA2N,EAAA3N,EAAA,GACA4N,EAAA5N,EAAA,GAcA,OAZAE,EAAA,GAAAuN,EAAAuI,EAAApI,EAAAiI,EAAAnI,EAAAqI,EAAApI,EAAAmI,EACA5V,EAAA,GAAAwN,EAAAsI,EAAApI,EAAAkI,EAAAnI,EAAAkI,EAAApI,EAAAsI,EACA7V,EAAA,GAAAyN,EAAAqI,EAAApI,EAAAmI,EAAAtI,EAAAqI,EAAApI,EAAAmI,EACA3V,EAAA,GAAA0N,EAAAoI,EAAAvI,EAAAoI,EAAAnI,EAAAoI,EAAAnI,EAAAoI,EACAtI,EAAAzN,EAAA,GACA0N,EAAA1N,EAAA,GACA2N,EAAA3N,EAAA,GACA4N,EAAA5N,EAAA,GACAE,EAAA,GAAAuN,EAAAuI,EAAApI,EAAAiI,EAAAnI,EAAAqI,EAAApI,EAAAmI,EACA5V,EAAA,GAAAwN,EAAAsI,EAAApI,EAAAkI,EAAAnI,EAAAkI,EAAApI,EAAAsI,EACA7V,EAAA,GAAAyN,EAAAqI,EAAApI,EAAAmI,EAAAtI,EAAAqI,EAAApI,EAAAmI,EACA3V,EAAA,GAAA0N,EAAAoI,EAAAvI,EAAAoI,EAAAnI,EAAAoI,EAAAnI,EAAAoI,EACA7V,EAWA,SAAAwgB,GAAAxgB,EAAA+H,EAAAjI,GACA,IAAA6V,EAAA5N,EAAA,GACA6N,EAAA7N,EAAA,GACA8N,EAAA9N,EAAA,GACA+N,EAAA/N,EAAA,GACAoF,EAAArN,EAAA,GACAsN,EAAAtN,EAAA,GACAuN,EAAAvN,EAAA,GACAwN,EAAAxN,EAAA,GAcA,OAZAE,EAAA,GAAA2V,EAAArI,EAAAwI,EAAA3I,EAAAyI,EAAAvI,EAAAwI,EAAAzI,EACApN,EAAA,GAAA4V,EAAAtI,EAAAwI,EAAA1I,EAAAyI,EAAA1I,EAAAwI,EAAAtI,EACArN,EAAA,GAAA6V,EAAAvI,EAAAwI,EAAAzI,EAAAsI,EAAAvI,EAAAwI,EAAAzI,EACAnN,EAAA,GAAA8V,EAAAxI,EAAAqI,EAAAxI,EAAAyI,EAAAxI,EAAAyI,EAAAxI,EACAF,EAAArN,EAAA,GACAsN,EAAAtN,EAAA,GACAuN,EAAAvN,EAAA,GACAwN,EAAAxN,EAAA,GACAE,EAAA,GAAA2V,EAAArI,EAAAwI,EAAA3I,EAAAyI,EAAAvI,EAAAwI,EAAAzI,EACApN,EAAA,GAAA4V,EAAAtI,EAAAwI,EAAA1I,EAAAyI,EAAA1I,EAAAwI,EAAAtI,EACArN,EAAA,GAAA6V,EAAAvI,EAAAwI,EAAAzI,EAAAsI,EAAAvI,EAAAwI,EAAAzI,EACAnN,EAAA,GAAA8V,EAAAxI,EAAAqI,EAAAxI,EAAAyI,EAAAxI,EAAAyI,EAAAxI,EACArN,EAYA,SAAAygB,GAAAzgB,EAAAF,EAAAoM,EAAA3K,GAEA,GAAAxI,KAAAiB,IAAAuH,GAAAjC,EACA,OAAA0f,GAAAhf,EAAAF,GAEA,IAAA4gB,EAAA3nB,KAAAkJ,KAAAiK,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA3K,GAAA,GACA,IAAAhO,EAAAwF,KAAAyI,IAAAD,GACA4L,EAAA5Z,EAAA2Y,EAAA,GAAAwU,EACAtT,EAAA7Z,EAAA2Y,EAAA,GAAAwU,EACArT,EAAA9Z,EAAA2Y,EAAA,GAAAwU,EACApT,EAAAvU,KAAA0I,IAAAF,GAEAke,EAAA3f,EAAA,GACA4f,EAAA5f,EAAA,GACA6f,EAAA7f,EAAA,GACA8f,EAAA9f,EAAA,GACAE,EAAA,GAAAyf,EAAAnS,EAAAsS,EAAAzS,EAAAuS,EAAArS,EAAAsS,EAAAvS,EACApN,EAAA,GAAA0f,EAAApS,EAAAsS,EAAAxS,EAAAuS,EAAAxS,EAAAsS,EAAApS,EACArN,EAAA,GAAA2f,EAAArS,EAAAsS,EAAAvS,EAAAoS,EAAArS,EAAAsS,EAAAvS,EACAnN,EAAA,GAAA4f,EAAAtS,EAAAmS,EAAAtS,EAAAuS,EAAAtS,EAAAuS,EAAAtS,EAEA,IAAAE,EAAAzN,EAAA,GACA0N,EAAA1N,EAAA,GACA2N,EAAA3N,EAAA,GACA4N,EAAA5N,EAAA,GAMA,OALAE,EAAA,GAAAuN,EAAAD,EAAAI,EAAAP,EAAAK,EAAAH,EAAAI,EAAAL,EACApN,EAAA,GAAAwN,EAAAF,EAAAI,EAAAN,EAAAK,EAAAN,EAAAI,EAAAF,EACArN,EAAA,GAAAyN,EAAAH,EAAAI,EAAAL,EAAAE,EAAAH,EAAAI,EAAAL,EACAnN,EAAA,GAAA0N,EAAAJ,EAAAC,EAAAJ,EAAAK,EAAAJ,EAAAK,EAAAJ,EAEArN,EAYA,SAAA2gB,GAAA3gB,EAAAF,EAAAjG,GASA,OARAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAWA,SAAA4gB,GAAA5gB,EAAAF,EAAAjG,GACA,IAAAgnB,EAAA/gB,EAAA,GACAghB,EAAAhhB,EAAA,GACAihB,EAAAjhB,EAAA,GACAkhB,EAAAlhB,EAAA,GACA+f,EAAAhmB,EAAA,GACAimB,EAAAjmB,EAAA,GACAkmB,EAAAlmB,EAAA,GACAonB,EAAApnB,EAAA,GACA4lB,EAAA3f,EAAA,GACA4f,EAAA5f,EAAA,GACA6f,EAAA7f,EAAA,GACA8f,EAAA9f,EAAA,GACAohB,EAAArnB,EAAA,GACAsnB,EAAAtnB,EAAA,GACAunB,EAAAvnB,EAAA,GACAwnB,EAAAxnB,EAAA,GASA,OARAmG,EAAA,GAAA6gB,EAAAQ,EAAAL,EAAAE,EAAAJ,EAAAM,EAAAL,EAAAI,EACAnhB,EAAA,GAAA8gB,EAAAO,EAAAL,EAAAG,EAAAJ,EAAAG,EAAAL,EAAAO,EACAphB,EAAA,GAAA+gB,EAAAM,EAAAL,EAAAI,EAAAP,EAAAM,EAAAL,EAAAI,EACAlhB,EAAA,GAAAghB,EAAAK,EAAAR,EAAAK,EAAAJ,EAAAK,EAAAJ,EAAAK,EACAphB,EAAA,GAAA6gB,EAAAI,EAAAD,EAAAnB,EAAAiB,EAAAf,EAAAgB,EAAAjB,EAAAL,EAAA4B,EAAAzB,EAAAsB,EAAAxB,EAAA0B,EAAAzB,EAAAwB,EACAnhB,EAAA,GAAA8gB,EAAAG,EAAAD,EAAAlB,EAAAiB,EAAAlB,EAAAgB,EAAAd,EAAAL,EAAA2B,EAAAzB,EAAAuB,EAAAxB,EAAAuB,EAAAzB,EAAA2B,EACAphB,EAAA,GAAA+gB,EAAAE,EAAAD,EAAAjB,EAAAc,EAAAf,EAAAgB,EAAAjB,EAAAF,EAAA0B,EAAAzB,EAAAwB,EAAA3B,EAAA0B,EAAAzB,EAAAwB,EACAlhB,EAAA,GAAAghB,EAAAC,EAAAJ,EAAAhB,EAAAiB,EAAAhB,EAAAiB,EAAAhB,EAAAH,EAAAyB,EAAA5B,EAAAyB,EAAAxB,EAAAyB,EAAAxB,EAAAyB,EACAphB,EAOA,MAAAshB,GAAAV,GAWA,SAAAW,GAAAvhB,EAAAF,EAAAjG,GASA,OARAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAWA,MAAAwhB,GAAAtE,GAYA,SAAAuE,GAAAzhB,EAAAF,EAAAjG,EAAAnH,GACA,IAAAgvB,EAAA,EAAAhvB,EAYA,OAXA8uB,GAAA1hB,EAAAjG,GAAA,IAAAnH,MAEAsN,EAAA,GAAAF,EAAA,GAAA4hB,EAAA7nB,EAAA,GAAAnH,EACAsN,EAAA,GAAAF,EAAA,GAAA4hB,EAAA7nB,EAAA,GAAAnH,EACAsN,EAAA,GAAAF,EAAA,GAAA4hB,EAAA7nB,EAAA,GAAAnH,EACAsN,EAAA,GAAAF,EAAA,GAAA4hB,EAAA7nB,EAAA,GAAAnH,EACAsN,EAAA,GAAAF,EAAA,GAAA4hB,EAAA7nB,EAAA,GAAAnH,EACAsN,EAAA,GAAAF,EAAA,GAAA4hB,EAAA7nB,EAAA,GAAAnH,EACAsN,EAAA,GAAAF,EAAA,GAAA4hB,EAAA7nB,EAAA,GAAAnH,EACAsN,EAAA,GAAAF,EAAA,GAAA4hB,EAAA7nB,EAAA,GAAAnH,EAEAsN,EAUA,SAAA2hB,GAAA3hB,EAAAF,GACA,IAAA8hB,EAAAC,GAAA/hB,GASA,OARAE,EAAA,IAAAF,EAAA,GAAA8hB,EACA5hB,EAAA,IAAAF,EAAA,GAAA8hB,EACA5hB,EAAA,IAAAF,EAAA,GAAA8hB,EACA5hB,EAAA,GAAAF,EAAA,GAAA8hB,EACA5hB,EAAA,IAAAF,EAAA,GAAA8hB,EACA5hB,EAAA,IAAAF,EAAA,GAAA8hB,EACA5hB,EAAA,IAAAF,EAAA,GAAA8hB,EACA5hB,EAAA,GAAAF,EAAA,GAAA8hB,EACA5hB,EAWA,SAAA8hB,GAAA9hB,EAAAF,GASA,OARAE,EAAA,IAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAUA,MAAA+hB,GAAA3E,GAMA4E,GAAAD,GASAF,GAAAvE,GAMA2E,GAAAJ,GAUA,SAAAK,GAAAliB,EAAAF,GACA,IAAA6N,EAAAkU,GAAA/hB,GAYA,OAXA6N,EAAA,IACAA,EAAA5U,KAAAkJ,KAAA0L,GACA3N,EAAA,GAAAF,EAAA,GAAA6N,EACA3N,EAAA,GAAAF,EAAA,GAAA6N,EACA3N,EAAA,GAAAF,EAAA,GAAA6N,EACA3N,EAAA,GAAAF,EAAA,GAAA6N,EACA3N,EAAA,GAAAF,EAAA,GAAA6N,EACA3N,EAAA,GAAAF,EAAA,GAAA6N,EACA3N,EAAA,GAAAF,EAAA,GAAA6N,EACA3N,EAAA,GAAAF,EAAA,GAAA6N,GAEA3N,EASA,SAAAmiB,GAAAriB,GACA,eAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QACAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAUA,SAAAsiB,GAAAtiB,EAAAjG,GACA,OAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IACAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,GAUA,SAAAwoB,GAAAviB,EAAAjG,GACA,IAAA8G,EAAAb,EAAA,GACAW,EAAAX,EAAA,GACAc,EAAAd,EAAA,GACAe,EAAAf,EAAA,GACAmE,EAAAnE,EAAA,GACAoE,EAAApE,EAAA,GACAuK,EAAAvK,EAAA,GACAwK,EAAAxK,EAAA,GACAoB,EAAArH,EAAA,GACAsH,EAAAtH,EAAA,GACAuH,EAAAvH,EAAA,GACAwH,EAAAxH,EAAA,GACAsK,EAAAtK,EAAA,GACAuK,EAAAvK,EAAA,GACA2Q,EAAA3Q,EAAA,GACA4Q,EAAA5Q,EAAA,GACA,OAAAd,KAAAiB,IAAA2G,EAAAO,IAAA5B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA2G,GAAA5H,KAAAiB,IAAAkH,KACAnI,KAAAiB,IAAAyG,EAAAU,IAAA7B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAyG,GAAA1H,KAAAiB,IAAAmH,KACApI,KAAAiB,IAAA4G,EAAAQ,IAAA9B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA4G,GAAA7H,KAAAiB,IAAAoH,KACArI,KAAAiB,IAAA6G,EAAAQ,IAAA/B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA6G,GAAA9H,KAAAiB,IAAAqH,KACAtI,KAAAiB,IAAAiK,EAAAE,IAAA7E,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAiK,GAAAlL,KAAAiB,IAAAmK,KACApL,KAAAiB,IAAAkK,EAAAE,IAAA9E,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAkK,GAAAnL,KAAAiB,IAAAoK,KACArL,KAAAiB,IAAAqQ,EAAAG,IAAAlL,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAqQ,GAAAtR,KAAAiB,IAAAwQ,KACAzR,KAAAiB,IAAAsQ,EAAAG,IAAAnL,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAsQ,GAAAvR,KAAAiB,IAAAyQ,ICxzBA,SAAA6X,KACA,IAAAtiB,EAAA,IAAAT,EAAA,GAGA,OAFAS,EAAA,KACAA,EAAA,KACAA,EASA,SAAAuiB,GAAAziB,GACA,IAAAE,EAAA,IAAAT,EAAA,GAGA,OAFAS,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAUA,SAAAwiB,GAAA9sB,EAAAE,GACA,IAAAoK,EAAA,IAAAT,EAAA,GAGA,OAFAS,EAAA,GAAAtK,EACAsK,EAAA,GAAApK,EACAoK,EAUA,SAAAyiB,GAAAziB,EAAAF,GAGA,OAFAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAWA,SAAA0iB,GAAA1iB,EAAAtK,EAAAE,GAGA,OAFAoK,EAAA,GAAAtK,EACAsK,EAAA,GAAApK,EACAoK,EAWA,SAAA2iB,GAAA3iB,EAAAF,EAAAjG,GAGA,OAFAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAWA,SAAA4iB,GAAA5iB,EAAAF,EAAAjG,GAGA,OAFAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAWA,SAAA6iB,GAAA7iB,EAAAF,EAAAjG,GAGA,OAFAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAWA,SAAA8iB,GAAA9iB,EAAAF,EAAAjG,GAGA,OAFAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GACAmG,EAUA,SAAA+iB,GAAA/iB,EAAAF,GAGA,OAFAE,EAAA,GAAAjH,KAAAmb,KAAApU,EAAA,IACAE,EAAA,GAAAjH,KAAAmb,KAAApU,EAAA,IACAE,EAUA,SAAAgjB,GAAAhjB,EAAAF,GAGA,OAFAE,EAAA,GAAAjH,KAAAob,MAAArU,EAAA,IACAE,EAAA,GAAAjH,KAAAob,MAAArU,EAAA,IACAE,EAWA,SAAAijB,GAAAjjB,EAAAF,EAAAjG,GAGA,OAFAmG,EAAA,GAAAjH,KAAAgB,IAAA+F,EAAA,GAAAjG,EAAA,IACAmG,EAAA,GAAAjH,KAAAgB,IAAA+F,EAAA,GAAAjG,EAAA,IACAmG,EAWA,SAAAkjB,GAAAljB,EAAAF,EAAAjG,GAGA,OAFAmG,EAAA,GAAAjH,KAAAC,IAAA8G,EAAA,GAAAjG,EAAA,IACAmG,EAAA,GAAAjH,KAAAC,IAAA8G,EAAA,GAAAjG,EAAA,IACAmG,EAUA,SAAAmjB,GAAAnjB,EAAAF,GAGA,OAFAE,EAAA,GAAAjH,KAAAkB,MAAA6F,EAAA,IACAE,EAAA,GAAAjH,KAAAkB,MAAA6F,EAAA,IACAE,EAWA,SAAAojB,GAAApjB,EAAAF,EAAAjG,GAGA,OAFAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAAA,GAAAF,EAAA,GAAAjG,EACAmG,EAYA,SAAAqjB,GAAArjB,EAAAF,EAAAjG,EAAAgJ,GAGA,OAFA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAAA,GAAAF,EAAA,GAAAjG,EAAA,GAAAgJ,EACA7C,EAUA,SAAAsjB,GAAAxjB,EAAAjG,GACA,IAAAnE,EAAAmE,EAAA,GAAAiG,EAAA,GACAlK,EAAAiE,EAAA,GAAAiG,EAAA,GACA,OAAA/G,KAAAkJ,KAAAvM,IAAAE,KAUA,SAAA2tB,GAAAzjB,EAAAjG,GACA,IAAAnE,EAAAmE,EAAA,GAAAiG,EAAA,GACAlK,EAAAiE,EAAA,GAAAiG,EAAA,GACA,OAAApK,IAAAE,IASA,SAAA4tB,GAAA1jB,GACA,IAAApK,EAAAoK,EAAA,GACAlK,EAAAkK,EAAA,GACA,OAAA/G,KAAAkJ,KAAAvM,IAAAE,KASA,SAAA6tB,GAAA3jB,GACA,IAAApK,EAAAoK,EAAA,GACAlK,EAAAkK,EAAA,GACA,OAAApK,IAAAE,IAUA,SAAA8tB,GAAA1jB,EAAAF,GAGA,OAFAE,EAAA,IAAAF,EAAA,GACAE,EAAA,IAAAF,EAAA,GACAE,EAUA,SAAA2jB,GAAA3jB,EAAAF,GAGA,OAFAE,EAAA,KAAAF,EAAA,GACAE,EAAA,KAAAF,EAAA,GACAE,EAUA,SAAA4jB,GAAA5jB,EAAAF,GACA,IAAApK,EAAAoK,EAAA,GACAlK,EAAAkK,EAAA,GACAqM,EAAAzW,IAAAE,IAOA,OANAuW,EAAA,IAEAA,EAAA,EAAApT,KAAAkJ,KAAAkK,GACAnM,EAAA,GAAAF,EAAA,GAAAqM,EACAnM,EAAA,GAAAF,EAAA,GAAAqM,GAEAnM,EAUA,SAAA6jB,GAAA/jB,EAAAjG,GACA,OAAAiG,EAAA,GAAAjG,EAAA,GAAAiG,EAAA,GAAAjG,EAAA,GAYA,SAAAiqB,GAAA9jB,EAAAF,EAAAjG,GACA,IAAAmO,EAAAlI,EAAA,GAAAjG,EAAA,GAAAiG,EAAA,GAAAjG,EAAA,GAGA,OAFAmG,EAAA,GAAAA,EAAA,KACAA,EAAA,GAAAgI,EACAhI,EAYA,SAAA+jB,GAAA/jB,EAAAF,EAAAjG,EAAAnH,GACA,IAAA6a,EAAAzN,EAAA,GACA0N,EAAA1N,EAAA,GAGA,OAFAE,EAAA,GAAAuN,EAAA7a,GAAAmH,EAAA,GAAA0T,GACAvN,EAAA,GAAAwN,EAAA9a,GAAAmH,EAAA,GAAA2T,GACAxN,EAUA,SAAAgkB,GAAAhkB,EAAA6C,GACAA,KAAA,EACA,IAAAvQ,EAAA,EAAAkN,IAAAzG,KAAA6G,GAGA,OAFAI,EAAA,GAAAjH,KAAA0I,IAAAnP,GAAAuQ,EACA7C,EAAA,GAAAjH,KAAAyI,IAAAlP,GAAAuQ,EACA7C,EAWA,SAAAikB,GAAAjkB,EAAAF,EAAAlO,GACA,IAAA8D,EAAAoK,EAAA,GACAlK,EAAAkK,EAAA,GAGA,OAFAE,EAAA,GAAApO,EAAA,GAAA8D,EAAA9D,EAAA,GAAAgE,EACAoK,EAAA,GAAApO,EAAA,GAAA8D,EAAA9D,EAAA,GAAAgE,EACAoK,EAWA,SAAAkkB,GAAAlkB,EAAAF,EAAAlO,GACA,IAAA8D,EAAAoK,EAAA,GACAlK,EAAAkK,EAAA,GAGA,OAFAE,EAAA,GAAApO,EAAA,GAAA8D,EAAA9D,EAAA,GAAAgE,EAAAhE,EAAA,GACAoO,EAAA,GAAApO,EAAA,GAAA8D,EAAA9D,EAAA,GAAAgE,EAAAhE,EAAA,GACAoO,EAYA,SAAAmkB,GAAAnkB,EAAAF,EAAAlO,GACA,IAAA8D,EAAAoK,EAAA,GACAlK,EAAAkK,EAAA,GAGA,OAFAE,EAAA,GAAApO,EAAA,GAAA8D,EAAA9D,EAAA,GAAAgE,EAAAhE,EAAA,GACAoO,EAAA,GAAApO,EAAA,GAAA8D,EAAA9D,EAAA,GAAAgE,EAAAhE,EAAA,GACAoO,EAaA,SAAAokB,GAAApkB,EAAAF,EAAAlO,GACA,IAAA8D,EAAAoK,EAAA,GACAlK,EAAAkK,EAAA,GAGA,OAFAE,EAAA,GAAApO,EAAA,GAAA8D,EAAA9D,EAAA,GAAAgE,EAAAhE,EAAA,IACAoO,EAAA,GAAApO,EAAA,GAAA8D,EAAA9D,EAAA,GAAAgE,EAAAhE,EAAA,IACAoO,EAWA,SAAAqkB,GAAArkB,EAAAF,EAAAjG,EAAAhI,GAEA,IAAAyyB,EAAAxkB,EAAA,GAAAjG,EAAA,GACA0qB,EAAAzkB,EAAA,GAAAjG,EAAA,GACA2qB,EAAAzrB,KAAAyI,IAAA3P,GACA4yB,EAAA1rB,KAAA0I,IAAA5P,GAMA,OAHAmO,EAAA,GAAAskB,EAAAG,EAAAF,EAAAC,EAAA3qB,EAAA,GACAmG,EAAA,GAAAskB,EAAAE,EAAAD,EAAAE,EAAA5qB,EAAA,GAEAmG,EASA,SAAA0kB,GAAA5kB,EAAAjG,GACA,IAAA0X,EAAAzR,EAAA,GACA2R,EAAA3R,EAAA,GACAoI,EAAArO,EAAA,GACAsO,EAAAtO,EAAA,GAEA8qB,EAAApT,IAAAE,IACAkT,EAAA,IAEAA,EAAA,EAAA5rB,KAAAkJ,KAAA0iB,IAGA,IAAAC,EAAA1c,IAAAC,IACAyc,EAAA,IAEAA,EAAA,EAAA7rB,KAAAkJ,KAAA2iB,IAGA,IAAAjO,GAAApF,EAAArJ,EAAAuJ,EAAAtJ,GAAAwc,EAAAC,EAGA,OAAAjO,EAAA,EACA,EAEAA,GAAA,EACA5d,KAAA6G,GAEA7G,KAAA6d,KAAAD,GAUA,SAAAkO,GAAA/kB,GACA,cAAAA,EAAA,QAAAA,EAAA,OAUA,SAAAglB,GAAAhlB,EAAAjG,GACA,OAAAiG,EAAA,KAAAjG,EAAA,IAAAiG,EAAA,KAAAjG,EAAA,GAUA,SAAAkrB,GAAAjlB,EAAAjG,GACA,IAAA8G,EAAAb,EAAA,GAAAW,EAAAX,EAAA,GACAoB,EAAArH,EAAA,GAAAsH,EAAAtH,EAAA,GACA,OAAAd,KAAAiB,IAAA2G,EAAAO,IAAA5B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAA2G,GAAA5H,KAAAiB,IAAAkH,KACAnI,KAAAiB,IAAAyG,EAAAU,IAAA7B,EAAAvG,KAAAC,IAAA,EAAAD,KAAAiB,IAAAyG,GAAA1H,KAAAiB,IAAAmH,IAOA,MAAA6jB,GAAAxB,GAMAyB,GAAArC,GAMAsC,GAAArC,GAMAsC,GAAArC,GAMAsC,GAAA9B,GAMA+B,GAAA9B,GAMA+B,GAAA7B,GAcA8B,GAAA,WACA,IAAAhO,EAAA+K,KAEA,gBAAAxiB,EAAA0X,EAAAtb,EAAAzC,EAAAge,EAAAC,GACA,IAAAlmB,EAAAC,EAeA,IAdA+lB,IACAA,EAAA,GAGAtb,IACAA,EAAA,GAIAzK,EADAgI,EACAV,KAAAgB,IAAAN,EAAA+d,EAAAtb,EAAA4D,EAAArL,QAEAqL,EAAArL,OAGAjD,EAAA0K,EAAmB1K,EAAAC,EAAOD,GAAAgmB,EAC1BD,EAAA,GAAAzX,EAAAtO,GAAoB+lB,EAAA,GAAAzX,EAAAtO,EAAA,GACpBimB,EAAAF,IAAAG,GACA5X,EAAAtO,GAAA+lB,EAAA,GAAoBzX,EAAAtO,EAAA,GAAA+lB,EAAA,GAGpB,OAAAzX,GAzBA,2XC9kBA,IAAA0lB,KAWAC,EATA,SAAAhO,GACA,IAAAiO,EAEA,kBAEA,YADA,IAAAA,MAAAjO,EAAAkO,MAAAhyB,KAAA0C,YACAqvB,GAIAE,CAAA,WAMA,OAAA7xB,QAAA4D,mBAAAkuB,MAAA9xB,OAAA+xB,OAGAC,EAAA,SAAAtO,GACA,IAAAiO,KAEA,gBAAAM,GACA,YAAAN,EAAAM,GAAA,CACA,IAAAC,EAeC,SAAA3T,GACD,OAAA3a,SAAAuuB,cAAA5T,IAhBA3gB,KAAAgC,KAAAqyB,GAEA,GAAAC,aAAAlyB,OAAAoyB,kBACA,IAGAF,IAAAG,gBAAAC,KACK,MAAAvyB,GACLmyB,EAAA,KAGAP,EAAAM,GAAAC,EAEA,OAAAP,EAAAM,IAlBA,GAwBAM,EAAA,KACAC,EAAA,EACAC,KAEAC,EAAAr1B,EAAA,IAqDA,SAAAs1B,EAAAC,EAAAxyB,GACA,QAAA3C,EAAA,EAAgBA,EAAAm1B,EAAAlyB,OAAmBjD,IAAA,CACnC,IAAAo1B,EAAAD,EAAAn1B,GACAq1B,EAAArB,EAAAoB,EAAAE,IAEA,GAAAD,EAAA,CACAA,EAAAE,OAEA,QAAA5K,EAAA,EAAiBA,EAAA0K,EAAAG,MAAAvyB,OAA2B0nB,IAC5C0K,EAAAG,MAAA7K,GAAAyK,EAAAI,MAAA7K,IAGA,KAAQA,EAAAyK,EAAAI,MAAAvyB,OAAuB0nB,IAC/B0K,EAAAG,MAAA7wB,KAAA8wB,EAAAL,EAAAI,MAAA7K,GAAAhoB,QAEG,CACH,IAAA6yB,KAEA,IAAA7K,EAAA,EAAiBA,EAAAyK,EAAAI,MAAAvyB,OAAuB0nB,IACxC6K,EAAA7wB,KAAA8wB,EAAAL,EAAAI,MAAA7K,GAAAhoB,IAGAqxB,EAAAoB,EAAAE,KAA2BA,GAAAF,EAAAE,GAAAC,KAAA,EAAAC,WAK3B,SAAAE,EAAAC,EAAAhzB,GAIA,IAHA,IAAAwyB,KACAS,KAEA51B,EAAA,EAAgBA,EAAA21B,EAAA1yB,OAAiBjD,IAAA,CACjC,IAAAo1B,EAAAO,EAAA31B,GACAs1B,EAAA3yB,EAAAkzB,KAAAT,EAAA,GAAAzyB,EAAAkzB,KAAAT,EAAA,GAIAU,GAAcC,IAHdX,EAAA,GAGcY,MAFdZ,EAAA,GAEca,UADdb,EAAA,IAGAQ,EAAAN,GACAM,EAAAN,GAAAE,MAAA7wB,KAAAmxB,GADAX,EAAAxwB,KAAAixB,EAAAN,IAAkDA,KAAAE,OAAAM,KAIlD,OAAAX,EAGA,SAAAe,EAAAvzB,EAAAwzB,GACA,IAAArV,EAAAyT,EAAA5xB,EAAAyzB,YAEA,IAAAtV,EACA,UAAA3Y,MAAA,+GAGA,IAAAkuB,EAAArB,IAAA/xB,OAAA,GAEA,WAAAN,EAAA2zB,SACAD,EAEGA,EAAAE,YACHzV,EAAA0V,aAAAL,EAAAE,EAAAE,aAEAzV,EAAA2V,YAAAN,GAJArV,EAAA0V,aAAAL,EAAArV,EAAA4V,YAMA1B,EAAArwB,KAAAwxB,QACE,cAAAxzB,EAAA2zB,SACFxV,EAAA2V,YAAAN,OACE,qBAAAxzB,EAAA2zB,WAAA3zB,EAAA2zB,SAAAK,OAIF,UAAAxuB,MAAA,8LAHA,IAAAouB,EAAAhC,EAAA5xB,EAAAyzB,WAAA,IAAAzzB,EAAA2zB,SAAAK,QACA7V,EAAA0V,aAAAL,EAAAI,IAMA,SAAAK,EAAAT,GACA,UAAAA,EAAAU,WAAA,SACAV,EAAAU,WAAAC,YAAAX,GAEA,IAAAY,EAAA/B,EAAAgC,QAAAb,GACAY,GAAA,GACA/B,EAAAiC,OAAAF,EAAA,GAIA,SAAAG,EAAAv0B,GACA,IAAAwzB,EAAAhwB,SAAAgxB,cAAA,SAOA,OALAx0B,EAAAy0B,MAAA/qB,KAAA,WAEAgrB,EAAAlB,EAAAxzB,EAAAy0B,OACAlB,EAAAvzB,EAAAwzB,GAEAA,EAeA,SAAAkB,EAAAC,EAAAF,GACA12B,OAAA4C,KAAA8zB,GAAA7zB,QAAA,SAAAhC,GACA+1B,EAAAC,aAAAh2B,EAAA61B,EAAA71B,MAIA,SAAAk0B,EAAA+B,EAAA70B,GACA,IAAAwzB,EAAAnyB,EAAAyzB,EAAAC,EAGA,GAAA/0B,EAAAg1B,WAAAH,EAAAzB,IAAA,CAGA,KAFA2B,EAAA/0B,EAAAg1B,UAAAH,EAAAzB,MASA,oBAJAyB,EAAAzB,IAAA2B,EAUA,GAAA/0B,EAAAmyB,UAAA,CACA,IAAA8C,EAAA7C,IAEAoB,EAAArB,MAAAoC,EAAAv0B,IAEAqB,EAAA6zB,EAAAr2B,KAAA,KAAA20B,EAAAyB,GAAA,GACAH,EAAAI,EAAAr2B,KAAA,KAAA20B,EAAAyB,GAAA,QAGAJ,EAAAvB,WACA,mBAAA6B,KACA,mBAAAA,IAAAC,iBACA,mBAAAD,IAAAE,iBACA,mBAAAC,MACA,mBAAAC,MAEA/B,EAtDA,SAAAxzB,GACA,IAAAw1B,EAAAhyB,SAAAgxB,cAAA,QAQA,OANAx0B,EAAAy0B,MAAA/qB,KAAA,WACA1J,EAAAy0B,MAAAgB,IAAA,aAEAf,EAAAc,EAAAx1B,EAAAy0B,OACAlB,EAAAvzB,EAAAw1B,GAEAA,EA6CAE,CAAA11B,GACAqB,EAiFA,SAAAm0B,EAAAx1B,EAAA60B,GACA,IAAAzB,EAAAyB,EAAAzB,IACAE,EAAAuB,EAAAvB,UAQAqC,OAAAzqB,IAAAlL,EAAA41B,uBAAAtC,GAEAtzB,EAAA41B,uBAAAD,KACAvC,EAAAd,EAAAc,IAGAE,IAEAF,GAAA,uDAAuDmC,KAAAM,SAAAC,mBAAAC,KAAAC,UAAA1C,MAAA,OAGvD,IAAA2C,EAAA,IAAAX,MAAAlC,IAA6B1pB,KAAA,aAE7BwsB,EAAAV,EAAAW,KAEAX,EAAAW,KAAAhB,IAAAC,gBAAAa,GAEAC,GAAAf,IAAAE,gBAAAa,IA5GAr3B,KAAA,KAAA20B,EAAAxzB,GACA80B,EAAA,WACAb,EAAAT,GAEAA,EAAA2C,MAAAhB,IAAAE,gBAAA7B,EAAA2C,SAGA3C,EAAAe,EAAAv0B,GACAqB,EAsDA,SAAAmyB,EAAAqB,GACA,IAAAzB,EAAAyB,EAAAzB,IACAC,EAAAwB,EAAAxB,MAEAA,GACAG,EAAAoB,aAAA,QAAAvB,GAGA,GAAAG,EAAA4C,WACA5C,EAAA4C,WAAAC,QAAAjD,MACE,CACF,KAAAI,EAAAO,YACAP,EAAAW,YAAAX,EAAAO,YAGAP,EAAAM,YAAAtwB,SAAA8yB,eAAAlD,MArEAv0B,KAAA,KAAA20B,GACAsB,EAAA,WACAb,EAAAT,KAMA,OAFAnyB,EAAAwzB,GAEA,SAAA0B,GACA,GAAAA,EAAA,CACA,GACAA,EAAAnD,MAAAyB,EAAAzB,KACAmD,EAAAlD,QAAAwB,EAAAxB,OACAkD,EAAAjD,YAAAuB,EAAAvB,UAEA,OAGAjyB,EAAAwzB,EAAA0B,QAEAzB,KArOA13B,EAAAD,QAAA,SAAA61B,EAAAhzB,GACA,uBAAAw2B,cACA,iBAAAhzB,SAAA,UAAAgC,MAAA,iEAGAxF,SAEAy0B,MAAA,iBAAAz0B,EAAAy0B,MAAAz0B,EAAAy0B,SAIAz0B,EAAAmyB,WAAA,kBAAAnyB,EAAAmyB,YAAAnyB,EAAAmyB,UAAAb,KAGAtxB,EAAAyzB,aAAAzzB,EAAAyzB,WAAA,QAGAzzB,EAAA2zB,WAAA3zB,EAAA2zB,SAAA,UAEA,IAAAnB,EAAAO,EAAAC,EAAAhzB,GAIA,OAFAuyB,EAAAC,EAAAxyB,GAEA,SAAAy2B,GAGA,IAFA,IAAAC,KAEAr5B,EAAA,EAAiBA,EAAAm1B,EAAAlyB,OAAmBjD,IAAA,CACpC,IAAAo1B,EAAAD,EAAAn1B,IACAq1B,EAAArB,EAAAoB,EAAAE,KAEAC,OACA8D,EAAA10B,KAAA0wB,GAGA+D,GAEAlE,EADAQ,EAAA0D,EAAAz2B,GACAA,GAGA,IAAA3C,EAAA,EAAiBA,EAAAq5B,EAAAp2B,OAAsBjD,IAAA,CACvC,IAAAq1B,EAEA,QAFAA,EAAAgE,EAAAr5B,IAEAu1B,KAAA,CACA,QAAA5K,EAAA,EAAmBA,EAAA0K,EAAAG,MAAAvyB,OAA2B0nB,IAAA0K,EAAAG,MAAA7K,YAE9CqJ,EAAAqB,EAAAC,QA6LA,IAAAgE,EAAA,WACA,IAAAC,KAEA,gBAAAC,EAAAC,GAGA,OAFAF,EAAAC,GAAAC,EAEAF,EAAAG,OAAAC,SAAAC,KAAA,OANA,GAUA,SAAA/B,EAAA1B,EAAAqD,EAAA/B,EAAAD,GACA,IAAAzB,EAAA0B,EAAA,GAAAD,EAAAzB,IAEA,GAAAI,EAAA4C,WACA5C,EAAA4C,WAAAC,QAAAM,EAAAE,EAAAzD,OACE,CACF,IAAA8D,EAAA1zB,SAAA8yB,eAAAlD,GACA+D,EAAA3D,EAAA2D,WAEAA,EAAAN,IAAArD,EAAAW,YAAAgD,EAAAN,IAEAM,EAAA72B,OACAkzB,EAAAK,aAAAqD,EAAAC,EAAAN,IAEArD,EAAAM,YAAAoD,uBCpTA95B,EAAAD,QAAA,SAAAi6B,GACA,IAAApE,KAwCA,OArCAA,EAAAqE,SAAA,WACA,OAAA73B,KAAA83B,IAAA,SAAA7E,GACA,IAAA8E,EAsCA,SAAA9E,EAAA2E,GACA,IAAAG,EAAA9E,EAAA,OACA+E,EAAA/E,EAAA,GACA,IAAA+E,EACA,OAAAD,EAGA,GAAAH,GAAA,mBAAA7B,KAAA,CACA,IAAAkC,EAYA,SAAAnE,GAKA,yEAHAiC,KAAAM,SAAAC,mBAAAC,KAAAC,UAAA1C,MAGA,MAjBAoE,CAAAF,GACAG,EAAAH,EAAAI,QAAAN,IAAA,SAAAO,GACA,uBAAAL,EAAAM,WAAAD,EAAA,QAGA,OAAAN,GAAAQ,OAAAJ,GAAAI,QAAAN,IAAAR,KAAA,MAGA,OAAAM,GAAAN,KAAA,MAtDAe,CAAAvF,EAAA2E,GACA,OAAA3E,EAAA,GACA,UAAAA,EAAA,OAAmC8E,EAAA,IAEnCA,IAEGN,KAAA,KAIHjE,EAAA31B,EAAA,SAAAE,EAAA06B,GACA,iBAAA16B,IACAA,IAAA,KAAAA,EAAA,MAEA,IADA,IAAA26B,KACA76B,EAAA,EAAgBA,EAAAmC,KAAAc,OAAiBjD,IAAA,CACjC,IAAAs1B,EAAAnzB,KAAAnC,GAAA,GACA,iBAAAs1B,IACAuF,EAAAvF,IAAA,GAEA,IAAAt1B,EAAA,EAAYA,EAAAE,EAAA+C,OAAoBjD,IAAA,CAChC,IAAAo1B,EAAAl1B,EAAAF,GAKA,iBAAAo1B,EAAA,IAAAyF,EAAAzF,EAAA,MACAwF,IAAAxF,EAAA,GACAA,EAAA,GAAAwF,EACKA,IACLxF,EAAA,OAAAA,EAAA,aAAAwF,EAAA,KAEAjF,EAAAhxB,KAAAywB,MAIAO,qBChCA51B,EAAAD,QAAA,SAAAi2B,GAEA,IAAA+E,EAAA,oBAAAv4B,eAAAu4B,SAEA,IAAAA,EACA,UAAA3yB,MAAA,oCAIA,IAAA4tB,GAAA,iBAAAA,EACA,OAAAA,EAGA,IAAAgF,EAAAD,EAAAE,SAAA,KAAAF,EAAAG,KACAC,EAAAH,EAAAD,EAAAK,SAAAC,QAAA,iBA2DA,OA/BArF,EAAAqF,QAAA,+DAAAC,EAAAC,GAEA,IAWAC,EAXAC,EAAAF,EACAG,OACAL,QAAA,oBAAA36B,EAAAi7B,GAAwC,OAAAA,IACxCN,QAAA,oBAAA36B,EAAAi7B,GAAwC,OAAAA,IAGxC,qDAAAC,KAAAH,GACAH,GAQAE,EAFA,IAAAC,EAAAxE,QAAA,MAEAwE,EACG,IAAAA,EAAAxE,QAAA,KAEH+D,EAAAS,EAGAN,EAAAM,EAAAJ,QAAA,YAIA,OAAA1C,KAAAC,UAAA4C,GAAA,iJCnFA,IAAA/4B,EAAA5C,EAAA,GAEAoC,EAAApC,EAAA,iSAEA,IAGMg8B,aACF,SAAAA,EAAYC,gGAAMh5B,CAAAV,KAAAy5B,GACdl7B,OAAOo7B,OAAO35B,uUAAd45B,EACIC,UAAW,EACXC,WAAY,EACZvzB,MAAO,IACPC,OAAQ,EACRuzB,OAAQ,GACLL,IAGP15B,KAAKg6B,UAAY,EAEjBh6B,KAAK2G,QAAU7G,KAAG8G,gBAClB9G,KAAG+G,YAAY/G,KAAGm6B,iBAAkBj6B,KAAK2G,SACzC7G,KAAGo6B,aAAap6B,KAAGm6B,iBAAkB,EAAGn6B,KAAGkH,MAAOhH,KAAKuG,MAAQvG,KAAK65B,UAAW75B,KAAKwG,OAASxG,KAAK85B,WAAY95B,KAAK+5B,QACnHj6B,KAAGmH,cAAcnH,KAAGm6B,iBAAkBn6B,KAAGoH,mBAAoBpH,KAAGqH,SAChErH,KAAG+G,YAAY/G,KAAGm6B,iBAAkB,uGAKpC,OACIl4B,EAAG/B,KAAKg6B,UAAYh6B,KAAKuG,MACzBtE,EAAGmD,KAAKob,MAAMxgB,KAAKg6B,UAAah6B,KAAKuG,OAAUvG,KAAKwG,OACpD6N,EAAGjP,KAAKob,MAAMxgB,KAAKg6B,WAAah6B,KAAKuG,MAAQvG,KAAKwG,SAAWxG,KAAK+5B,yCAIjEpyB,GAAK,IAAAlH,EAAAT,KACJm6B,EAAWn6B,KAAKo6B,mBAAmBzyB,GACnC0yB,EAAWr6B,KAAKs6B,oBAAoB3yB,GAEpChG,EAASqC,SAASgxB,cAAc,UAChCuF,EAAM54B,EAAO64B,WAAW,MAE9B74B,EAAO4E,MAAQoB,EAAIpB,MACnB5E,EAAO6E,OAASmB,EAAInB,OAEpB+zB,EAAIE,UAAU9yB,EAAK,EAAG,GAMtB,IAAM+yB,EAAW,SAACC,EAAOC,GACrB,IAAMC,EAAYN,EAAIO,aAClBH,EAAQl6B,EAAKo5B,UACbe,EAAQn6B,EAAKq5B,WACbr5B,EAAKo5B,UACLp5B,EAAKq5B,YALsBiB,EAQbt6B,EAAKu6B,kBAAhBj5B,EARwBg5B,EAQxBh5B,EAAGE,EARqB84B,EAQrB94B,EAAGoS,EARkB0mB,EAQlB1mB,EAEbvU,KAAGm7B,cACCn7B,KAAGm6B,iBACH,EACAl4B,EAAItB,EAAKo5B,UACT53B,EAAIxB,EAAKq5B,WACTzlB,EACA5T,EAAKo5B,UACLp5B,EAAKq5B,WACL,EACAh6B,KAAGo7B,KACHp7B,KAAGq7B,cACHN,GAGJp6B,EAAKu5B,aAGTl6B,KAAG+G,YAAY/G,KAAGm6B,iBAAkBj6B,KAAK2G,SAEzC7G,KAAGs7B,YAAYt7B,KAAGu7B,oBAAqB,GAEvC,IAAK,IAAIp5B,EAAI,EAAGA,EAAIo4B,EAAUp4B,IAC1B,IAAK,IAAIF,EAAI,EAAGA,EAAIo4B,IACZn6B,KAAKs7B,SADiBv5B,IAI1B24B,EAAS34B,EAAGE,GAIpBnC,KAAGs7B,YAAYt7B,KAAGu7B,oBAAqB,GAEvCv7B,KAAG+G,YAAY/G,KAAGm6B,iBAAkB,iDAGrBtyB,GACf,OAAOvC,KAAKob,MAAM7Y,EAAIpB,MAAQvG,KAAK65B,uDAGnBlyB,GAChB,OAAOvC,KAAKob,MAAM7Y,EAAInB,OAASxG,KAAK85B,6CAgBpC,OAAO95B,KAAKg6B,WAAah6B,KAAKu7B,4CAQ9B,IAAM11B,EAAS,IAAI21B,WAAWx7B,KAAKy7B,WAAaz7B,KAAK07B,YAAc,GAC7DC,EAAK77B,KAAG4G,oBACRqzB,KAENj6B,KAAGsH,gBAAgBtH,KAAG87B,iBAAkBD,GAExC,IAAK,IAAIE,EAAQ,EAAGA,EAAQ77B,KAAK+5B,OAAQ8B,IACrC/7B,KAAGg8B,wBAAwBh8B,KAAG87B,iBAAkB97B,KAAGyH,kBAAmBvH,KAAK2G,QAAS,EAAGk1B,GACvF/7B,KAAGi8B,WAAW,EAAG,EAAG/7B,KAAKy7B,WAAYz7B,KAAK07B,YAAa57B,KAAGo7B,KAAMp7B,KAAGq7B,cAAet1B,GAClFk0B,EAAOv3B,KAAK,IAAIw5B,UAAU,IAAIC,kBAAkBp2B,GAAS7F,KAAKy7B,WAAYz7B,KAAK07B,cAKnF,OAFA57B,KAAGsH,gBAAgBtH,KAAG87B,iBAAkB,MAEjC7B,qCAlCP,OAAO/5B,KAAK65B,UAAY75B,KAAKuG,0CAI7B,OAAOvG,KAAK85B,WAAa95B,KAAKwG,wCAI9B,OAAOxG,KAAKuG,MAAQvG,KAAKwG,OAASxG,KAAK+5B,0CA+B/C,IAAMmC,GACFC,oBAD0B,SACNC,EAAYC,EAAaC,GACzC,IAAMr7B,EAAMs7B,OAAKp9B,SACXq9B,EAAOD,OAAKp9B,SA6BlB,OAtBAo9B,OAAKjvB,SACDrM,EACAs7B,OAAKt5B,WACD,EAAI,EAAG,EAAG,EACV,GAAI,EAAG,EAAG,EACV,EAAI,EAAG,EAAG,EACV,EAAGo5B,EAAY71B,OAAQ,EAAG,GAE9BvF,GAIJs7B,OAAKpuB,YACDquB,GACCF,EAAY/1B,MAAQ81B,EAAY91B,MAAO+1B,EAAY91B,OAAS61B,EAAY71B,OAAQ,IAErF+1B,OAAKjvB,SAASrM,EAAKu7B,EAAMv7B,GAGzBs7B,OAAKxvB,OAAOyvB,EAAMJ,GAClBG,OAAKjvB,SAASrM,EAAKu7B,EAAMv7B,GAElBA,iDCjLfrD,EAAAD,QAAA,0qBCAAC,EAAAD,QAAA,+jBCAA,IAAA+K,EAAAC,EAAAlL,EAAA,IACAoC,EAAApC,EAAA,GACAg/B,EAAAh/B,EAAA,IACAi/B,EAAA/zB,EAAAlL,EAAA,MACAk/B,EAAAh0B,EAAAlL,EAAA,+NAEA,IAAIm/B,EAAgB,KAEdC,aAUF,SAAAA,EAAYnD,gGAAMh5B,CAAAV,KAAA68B,GAAA,IAEVC,EAGApD,EAHAoD,QACAn8B,EAEA+4B,EAFA/4B,KACAo8B,EACArD,EADAqD,aAGJ/8B,KAAK88B,QAAUA,EACf98B,KAAKW,KAAOA,EACZX,KAAKF,GAAKa,EAAKb,GACfE,KAAK+8B,aAAeA,EAEpB/8B,KAAK65B,UAAY75B,KAAK88B,QAAQjD,UAC9B75B,KAAK85B,WAAa95B,KAAK88B,QAAQhD,WAG1B8C,IACDA,EAAgBvzB,UAAKC,kBAAkBxJ,MAAKyJ,UAAIC,YAChDxJ,KAAKoJ,YAAcwzB,GAGvB58B,KAAKmJ,+FAILnJ,KAAKqK,WAAahB,UAAKiB,2BAA2BxK,MAE9C4J,QACIC,KAAM,IAAIpI,cACN,EAAG,EACHvB,KAAK65B,UAAW,EAChB,EAAG75B,KAAK85B,WACR95B,KAAK65B,UAAW75B,KAAK85B,aAEzBlwB,cAAe,EACfC,QAAS,EACTC,SAAUhK,KAAGiK,aAGjBnE,UACIgE,cAAe,EACfC,QAAS,EACTC,SAAUhK,KAAGkK,cAGjBC,UACIN,MACI,EAAG,EACH3J,KAAK65B,UAAW,EAChB,EAAG75B,KAAK85B,WACR95B,KAAK65B,UAAW75B,KAAK85B,YAEzBlwB,cAAe,EACfC,QAAS,EACTC,SAAUhK,KAAGiK,aAGjBizB,YACIpzB,cAAe,EACfC,QAAS,EACTC,SAAUhK,KAAGkK,aACbE,KAAMC,YAGVC,SACIT,MACI,EACA,EACA,EACA,MAKZ3J,KAAKi9B,QACDr3B,SAAU,IAAIrE,aAAa,EAAIvB,KAAKk9B,YACpCF,WAAY,IAAI7yB,WAAWnK,KAAKk9B,aAGpCl9B,KAAKuK,IAAMlB,UAAKmB,sBAAsB1K,KAAIE,KAAKoJ,YAAapJ,KAAKqK,+CAOjE,OAAOrK,KAAKm9B,gBAAkBn9B,KAAKo9B,iDAWX,IAAtBr7B,EAAsBiH,EAAtBjH,EAAGE,EAAmB+G,EAAnB/G,EAAGsE,EAAgByC,EAAhBzC,MAAOC,EAASwC,EAATxC,OACT62B,GACFt7B,EAAGqD,KAAKob,MAAMja,EAAQvG,KAAK65B,WAAa,EACxC53B,EAAGmD,KAAKob,MAAMha,EAASxG,KAAK85B,YAAc,GAGxCwD,EACCl4B,KAAKob,MAAMze,EAAI/B,KAAK65B,WADrByD,EAECl4B,KAAKob,MAAMve,EAAIjC,KAAK85B,YAG3BuD,EAAUt7B,EAAIqD,KAAKgB,IAAIi3B,EAAUt7B,EAAG/B,KAAK88B,QAAQv2B,MAAQ+2B,EAAct9B,KAAKm9B,iBAC5EE,EAAUp7B,EAAImD,KAAKgB,IAAIi3B,EAAUp7B,EAAGjC,KAAK88B,QAAQt2B,OAAS82B,EAAct9B,KAAKo9B,kBAE7E,IAAM70B,GAAUxG,IAAGE,KAEfF,EAAI,IACJwG,EAAOxG,GAAMA,EAAI/B,KAAK65B,WAGtB53B,EAAI,IACJsG,EAAOtG,GAAMA,EAAIjC,KAAK85B,YAM1B,IAHA,IAAMyD,GAAc,EAAAd,EAAAe,aAAYx9B,KAAKi9B,OAAOr3B,UACtC63B,GAAe,EAAAhB,EAAAe,aAAYx9B,KAAKi9B,OAAOD,YAEpCU,EAAM,EAAGA,EAAML,EAAUp7B,EAAGy7B,IAEjC,IADA,IAAMC,EAASD,EAAM19B,KAAK85B,WAAavxB,EAAOtG,EACrC27B,EAAM,EAAGA,EAAMP,EAAUt7B,EAAG67B,IAAO,CACxC,IAAMC,EAASD,EAAM59B,KAAK65B,UAAYtxB,EAAOxG,EAEvCi7B,EAAah9B,KAAK88B,QAAQgB,QAAQF,EAAMN,EAAcI,EAAMJ,GAElEC,GAAaM,EAAQF,EAAQ,IAC7BF,EAAaT,GAIrB3zB,UAAK6B,6BACDpL,KACAE,KAAKqK,WAAWc,QAAQvF,SACxB5F,KAAKi9B,OAAOr3B,UAGhByD,UAAK6B,6BACDpL,KACAE,KAAKqK,WAAWc,QAAQ6xB,WACxBh9B,KAAKi9B,OAAOD,YAGhBl9B,KAAGsL,WAAWpL,KAAKoJ,YAAYiC,SAE/BhC,UAAKiC,YAAYtL,KAAKoJ,aAClBsB,WAAY1K,KAAKW,KAAKy7B,WACtBz1B,QAAS3G,KAAK+8B,aACdgB,WAAY/9B,KAAK65B,UAAW75B,KAAK85B,cAGrCzwB,UAAKkC,wBAAwBzL,KAAIE,KAAKoJ,YAAapJ,KAAKuK,KACxDlB,UAAKmC,eAAe1L,KAAIE,KAAKuK,IAAKzK,KAAG2L,oBAAgBC,OAAWA,EAAW2xB,EAAUt7B,EAAIs7B,EAAUp7B,2CAnEnG,OAAOmD,KAAKob,MAAMxgB,KAAKW,KAAKq9B,WAAWz3B,MAAQvG,KAAK65B,WAAa,2CAIjE,OAAOz0B,KAAKob,MAAMxgB,KAAKW,KAAKq9B,WAAWx3B,OAASxG,KAAK85B,YAAc,iEChH3E,IAAAmE,EAAAxgC,EAAA,IACAygC,EAAAzgC,EAAA,IACAg/B,EAAAh/B,EAAA,IACAA,EAAA,IAEA,IAAA0gC,mDAAAx1B,CAAAlL,EAAA,KACA2gC,EAAA3gC,EAAA,KACA4gC,EAAA5gC,EAAA,IACA6gC,EAAA7gC,EAAA,KACA8gC,EAAA9gC,EAAA,yjBAGA,IAAM+gC,EAAax6B,SAASy6B,eAAe,WACrC98B,EAASqC,SAASgxB,cAAc,UACtCrzB,EAAO+8B,UAAU9vB,IAAI,QACrB4vB,EAAWlK,YAAY3yB,GAGvB,IAAM6C,EAAM,IAAIm6B,WACZxJ,GAAIxzB,EACJi9B,YAAa,GAAK,GAAK,GAAK,GAC5BZ,YACIz3B,MAAO,IACPC,OAAQ,KAEZq4B,gBAAiB,IAGC,IAAIt6B,YAAUC,GAGpCA,EAAIs6B,MACAC,SAAU,WACVC,UAAW,UAAW,OAAQ,YAiBlC,IAAMC,EAAa,IAAIxF,yBACnBI,UAAW,GACXC,WAAY,GACZvzB,MAAO,GACPC,OAAQ,GACRuzB,OAAQ,kPAGZ,SAAAmF,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACUl7B,EAAI0E,OAAOy2B,QADrB,cAAAH,EAAAI,GAGIX,EAHJO,EAAAE,KAAA,GAG8B,EAAAjD,EAAAoD,WAAU,iBAHxC,OAAAL,EAAAM,GAAAN,EAAAO,KAAAP,EAAAI,GAGeI,SAHfhiC,KAAAwhC,EAAAI,GAAAJ,EAAAM,IAKUX,EAAsB,IAAIp2B,kBAC5BpI,KAAM6D,EACNyE,eACItC,QAASnC,EAAIiC,YAAYE,SACtBnC,EAAIw5B,cAIToB,EAAW,IAAIvC,mBACjBl8B,KAAM6D,EACNu4B,aAAckC,EAAWt4B,QACzBm2B,SACIjD,UAAW,GACXC,WAAY,GACZvzB,MAAO,GACPC,OAAQ,GACRs3B,QALK,SAKG/7B,EAAGE,GAOP,OAHAF,GAHU,QACA,IAGVE,GAHU,IAKU,QAK1Bo9B,EAAO,IAAIY,OAAKz7B,IACjB07B,QAAQ,GAAI,IAAK,EAAG,EAAG,EAAG,IAAM,GAErCn7B,sBAAsB,SAASo7B,IAC3B37B,EAAI47B,iBACJ57B,EAAI67B,QAEJ77B,EAAIiC,YAAYe,SAChBhD,EAAI67B,QAEJ77B,EAAI87B,eAEJlB,EAASmB,MACLx+B,EAAG,EACHE,EAAG,IACHsE,MAAO,IACPC,OAAQ,MAGZ64B,EAAKc,SAEL37B,EAAIg8B,gBAEJh8B,EAAIiC,YAAYiB,SAChBlD,EAAI47B,iBAEJjB,EAAoBgB,QAChB,IAAI/3B,UACAxC,UAAW,EAAG,GACdyC,MAAO7D,EAAIw5B,WAAWz3B,MAAO/B,EAAIw5B,WAAWx3B,YAI/ChC,EAAIi8B,OACL17B,sBAAsBo7B,KAnElC,yBAAAX,EAAAkB,SAAAxB,EAAAl/B,oEAwEA2gC,sCClIA,IAAAC,GAKA,WAQA,IAAAC,EAAA,iBAAAC,8BACA,iBAAAC,oBACA/gC,SAIAghC,EAAAH,EAAAI,EAGAC,EAAAt+B,MAAAnD,UAAA0hC,EAAA5iC,OAAAkB,UACA2hC,EAAA,oBAAAxiC,cAAAa,UAAA,KAGA+C,EAAA0+B,EAAA1+B,KACAmB,EAAAu9B,EAAAv9B,MACAk0B,EAAAsJ,EAAAtJ,SACAn4B,EAAAyhC,EAAAzhC,eAIA2hC,EAAAz+B,MAAA0+B,QACAC,EAAAhjC,OAAA4C,KACAqgC,EAAAjjC,OAAAY,OAGAsiC,EAAA,aAGAR,EAAA,SAAA5L,GACA,OAAAA,aAAA4L,EAAA5L,EACAr1B,gBAAAihC,OACAjhC,KAAA0hC,SAAArM,GADA,IAAA4L,EAAA5L,SASA,IAAA13B,KAAAgkC,SAMAd,EAAAI,UALA,IAAArjC,MAAA+jC,UAAA/jC,EAAAD,UACAA,EAAAC,EAAAD,QAAAsjC,GAEAtjC,EAAAsjC,KAMAA,EAAAW,QAAA,QAKA,IAmBAC,EAnBAC,EAAA,SAAAC,EAAAC,EAAAC,GACA,YAAAD,EAAA,OAAAD,EACA,aAAAE,EAAA,EAAAA,GACA,uBAAAnjC,GACA,OAAAijC,EAAA/jC,KAAAgkC,EAAAljC,IAGA,uBAAAA,EAAAu4B,EAAA6K,GACA,OAAAH,EAAA/jC,KAAAgkC,EAAAljC,EAAAu4B,EAAA6K,IAEA,uBAAAC,EAAArjC,EAAAu4B,EAAA6K,GACA,OAAAH,EAAA/jC,KAAAgkC,EAAAG,EAAArjC,EAAAu4B,EAAA6K,IAGA,kBACA,OAAAH,EAAA/P,MAAAgQ,EAAAt/B,aASA0/B,EAAA,SAAAtjC,EAAAkjC,EAAAC,GACA,OAAAhB,EAAAoB,WAAAR,EAAAZ,EAAAoB,SAAAvjC,EAAAkjC,GACA,MAAAljC,EAAAmiC,EAAAz0B,SACAy0B,EAAAqB,WAAAxjC,GAAAgjC,EAAAhjC,EAAAkjC,EAAAC,GACAhB,EAAAsB,SAAAzjC,KAAAmiC,EAAAK,QAAAxiC,GAAAmiC,EAAAuB,QAAA1jC,GACAmiC,EAAAzhC,SAAAV,IAMAmiC,EAAAoB,SAAAR,EAAA,SAAA/iC,EAAAkjC,GACA,OAAAI,EAAAtjC,EAAAkjC,EAAAS,MAQA,IAAAC,EAAA,SAAAX,EAAAzE,GAEA,OADAA,EAAA,MAAAA,EAAAyE,EAAAjhC,OAAA,GAAAw8B,EACA,WAIA,IAHA,IAAAx8B,EAAAsE,KAAAC,IAAA3C,UAAA5B,OAAAw8B,EAAA,GACAqF,EAAA//B,MAAA9B,GACAu2B,EAAA,EACYA,EAAAv2B,EAAgBu2B,IAC5BsL,EAAAtL,GAAA30B,UAAA20B,EAAAiG,GAEA,OAAAA,GACA,cAAAyE,EAAA/jC,KAAAgC,KAAA2iC,GACA,cAAAZ,EAAA/jC,KAAAgC,KAAA0C,UAAA,GAAAigC,GACA,cAAAZ,EAAA/jC,KAAAgC,KAAA0C,UAAA,GAAAA,UAAA,GAAAigC,GAEA,IAAAhgC,EAAAC,MAAA06B,EAAA,GACA,IAAAjG,EAAA,EAAqBA,EAAAiG,EAAoBjG,IACzC10B,EAAA00B,GAAA30B,UAAA20B,GAGA,OADA10B,EAAA26B,GAAAqF,EACAZ,EAAA/P,MAAAhyB,KAAA2C,KAKAigC,EAAA,SAAAnjC,GACA,IAAAwhC,EAAAsB,SAAA9iC,GAAA,SACA,GAAA+hC,EAAA,OAAAA,EAAA/hC,GACAgiC,EAAAhiC,YACA,IAAA81B,EAAA,IAAAkM,EAEA,OADAA,EAAAhiC,UAAA,KACA81B,GAGAsN,EAAA,SAAAzjC,GACA,gBAAAi2B,GACA,aAAAA,OAAA,EAAAA,EAAAj2B,KAIA0jC,EAAA,SAAAzN,EAAA0N,GACA,aAAA1N,GAAA31B,EAAA1B,KAAAq3B,EAAA0N,IAGAC,EAAA,SAAA3N,EAAA0N,GAEA,IADA,IAAAjiC,EAAAiiC,EAAAjiC,OACAjD,EAAA,EAAmBA,EAAAiD,EAAYjD,IAAA,CAC/B,SAAAw3B,EAAA,OACAA,IAAA0N,EAAAllC,IAEA,OAAAiD,EAAAu0B,OAAA,GAOA4N,EAAA79B,KAAAmJ,IAAA,QACA20B,EAAAL,EAAA,UACAM,EAAA,SAAAjB,GACA,IAAAphC,EAAAoiC,EAAAhB,GACA,uBAAAphC,MAAA,GAAAA,GAAAmiC,GASAhC,EAAAmC,KAAAnC,EAAA7/B,QAAA,SAAAi0B,EAAAgN,EAAAL,GAEA,IAAAnkC,EAAAiD,EACA,GAFAuhC,EAAAP,EAAAO,EAAAL,GAEAmB,EAAA9N,GACA,IAAAx3B,EAAA,EAAAiD,EAAAu0B,EAAAv0B,OAAsCjD,EAAAiD,EAAYjD,IAClDwkC,EAAAhN,EAAAx3B,KAAAw3B,OAEK,CACL,IAAAl0B,EAAA8/B,EAAA9/B,KAAAk0B,GACA,IAAAx3B,EAAA,EAAAiD,EAAAK,EAAAL,OAAuCjD,EAAAiD,EAAYjD,IACnDwkC,EAAAhN,EAAAl0B,EAAAtD,IAAAsD,EAAAtD,GAAAw3B,GAGA,OAAAA,GAIA4L,EAAAnJ,IAAAmJ,EAAAoC,QAAA,SAAAhO,EAAAgN,EAAAL,GACAK,EAAAD,EAAAC,EAAAL,GAIA,IAHA,IAAA7gC,GAAAgiC,EAAA9N,IAAA4L,EAAA9/B,KAAAk0B,GACAv0B,GAAAK,GAAAk0B,GAAAv0B,OACAwiC,EAAA1gC,MAAA9B,GACAu2B,EAAA,EAAuBA,EAAAv2B,EAAgBu2B,IAAA,CACvC,IAAAkM,EAAApiC,IAAAk2B,KACAiM,EAAAjM,GAAAgL,EAAAhN,EAAAkO,KAAAlO,GAEA,OAAAiO,GAIA,IAAAE,EAAA,SAAAC,GAkBA,gBAAApO,EAAAgN,EAAAtQ,EAAAiQ,GACA,IAAA0B,EAAAhhC,UAAA5B,QAAA,EACA,OAjBA,SAAAu0B,EAAAgN,EAAAtQ,EAAA2R,GACA,IAAAviC,GAAAgiC,EAAA9N,IAAA4L,EAAA9/B,KAAAk0B,GACAv0B,GAAAK,GAAAk0B,GAAAv0B,OACAu2B,EAAAoM,EAAA,IAAA3iC,EAAA,EAKA,IAJA4iC,IACA3R,EAAAsD,EAAAl0B,IAAAk2B,MACAA,GAAAoM,GAEYpM,GAAA,GAAAA,EAAAv2B,EAA8Bu2B,GAAAoM,EAAA,CAC1C,IAAAF,EAAApiC,IAAAk2B,KACAtF,EAAAsQ,EAAAtQ,EAAAsD,EAAAkO,KAAAlO,GAEA,OAAAtD,EAKA4R,CAAAtO,EAAAyM,EAAAO,EAAAL,EAAA,GAAAjQ,EAAA2R,KAMAzC,EAAAjgC,OAAAigC,EAAA2C,MAAA3C,EAAA4C,OAAAL,EAAA,GAGAvC,EAAA6C,YAAA7C,EAAA8C,MAAAP,GAAA,GAGAvC,EAAA+C,KAAA/C,EAAAgD,OAAA,SAAA5O,EAAA6O,EAAAlC,GACA,IACA5iC,GADA+jC,EAAA9N,GAAA4L,EAAAkD,UAAAlD,EAAAmD,SACA/O,EAAA6O,EAAAlC,GACA,YAAA5iC,IAAA,IAAAA,EAAA,OAAAi2B,EAAAj2B,IAKA6hC,EAAA1J,OAAA0J,EAAAoD,OAAA,SAAAhP,EAAA6O,EAAAlC,GACA,IAAAsB,KAKA,OAJAY,EAAA9B,EAAA8B,EAAAlC,GACAf,EAAAmC,KAAA/N,EAAA,SAAAv2B,EAAAu4B,EAAA7D,GACA0Q,EAAAplC,EAAAu4B,EAAA7D,IAAA8P,EAAA9gC,KAAA1D,KAEAwkC,GAIArC,EAAAn5B,OAAA,SAAAutB,EAAA6O,EAAAlC,GACA,OAAAf,EAAA1J,OAAAlC,EAAA4L,EAAAngB,OAAAshB,EAAA8B,IAAAlC,IAKAf,EAAAqD,MAAArD,EAAA/O,IAAA,SAAAmD,EAAA6O,EAAAlC,GACAkC,EAAA9B,EAAA8B,EAAAlC,GAGA,IAFA,IAAA7gC,GAAAgiC,EAAA9N,IAAA4L,EAAA9/B,KAAAk0B,GACAv0B,GAAAK,GAAAk0B,GAAAv0B,OACAu2B,EAAA,EAAuBA,EAAAv2B,EAAgBu2B,IAAA,CACvC,IAAAkM,EAAApiC,IAAAk2B,KACA,IAAA6M,EAAA7O,EAAAkO,KAAAlO,GAAA,SAEA,UAKA4L,EAAAsD,KAAAtD,EAAAuD,IAAA,SAAAnP,EAAA6O,EAAAlC,GACAkC,EAAA9B,EAAA8B,EAAAlC,GAGA,IAFA,IAAA7gC,GAAAgiC,EAAA9N,IAAA4L,EAAA9/B,KAAAk0B,GACAv0B,GAAAK,GAAAk0B,GAAAv0B,OACAu2B,EAAA,EAAuBA,EAAAv2B,EAAgBu2B,IAAA,CACvC,IAAAkM,EAAApiC,IAAAk2B,KACA,GAAA6M,EAAA7O,EAAAkO,KAAAlO,GAAA,SAEA,UAKA4L,EAAAwD,SAAAxD,EAAA5+B,SAAA4+B,EAAAyD,QAAA,SAAArP,EAAApC,EAAA0R,EAAAC,GAGA,OAFAzB,EAAA9N,OAAA4L,EAAA4D,OAAAxP,KACA,iBAAAsP,GAAAC,KAAAD,EAAA,GACA1D,EAAApM,QAAAQ,EAAApC,EAAA0R,IAAA,GAIA1D,EAAA6D,OAAApC,EAAA,SAAArN,EAAA0N,EAAApgC,GACA,IAAAoiC,EAAAhD,EAOA,OANAd,EAAAqB,WAAAS,GACAhB,EAAAgB,EACK9B,EAAAK,QAAAyB,KACLgC,EAAAhC,EAAAp/B,MAAA,MACAo/B,MAAAjiC,OAAA,IAEAmgC,EAAAnJ,IAAAzC,EAAA,SAAA2M,GACA,IAAAgD,EAAAjD,EACA,IAAAiD,EAAA,CAIA,GAHAD,KAAAjkC,SACAkhC,EAAAgB,EAAAhB,EAAA+C,IAEA,MAAA/C,EAAA,OACAgD,EAAAhD,EAAAe,GAEA,aAAAiC,MAAAhT,MAAAgQ,EAAAr/B,OAKAs+B,EAAAgE,MAAA,SAAA5P,EAAAj2B,GACA,OAAA6hC,EAAAnJ,IAAAzC,EAAA4L,EAAAzhC,SAAAJ,KAKA6hC,EAAAiE,MAAA,SAAA7P,EAAAJ,GACA,OAAAgM,EAAA1J,OAAAlC,EAAA4L,EAAAuB,QAAAvN,KAKAgM,EAAAkE,UAAA,SAAA9P,EAAAJ,GACA,OAAAgM,EAAA+C,KAAA3O,EAAA4L,EAAAuB,QAAAvN,KAIAgM,EAAA57B,IAAA,SAAAgwB,EAAAgN,EAAAL,GACA,IACAljC,EAAAsmC,EADA7P,GAAAkN,IAAA4C,GAAA5C,IAEA,SAAAJ,GAAA,iBAAAA,GAAA,iBAAAhN,EAAA,UAAAA,EAEA,QAAAx3B,EAAA,EAAAiD,GADAu0B,EAAA8N,EAAA9N,KAAA4L,EAAA4D,OAAAxP,IACAv0B,OAA0CjD,EAAAiD,EAAYjD,IAEtD,OADAiB,EAAAu2B,EAAAx3B,KACAiB,EAAAy2B,IACAA,EAAAz2B,QAIAujC,EAAAD,EAAAC,EAAAL,GACAf,EAAAmC,KAAA/N,EAAA,SAAArqB,EAAAqsB,EAAA7D,KACA4R,EAAA/C,EAAAr3B,EAAAqsB,EAAA7D,IACA6R,GAAAD,KAAA3C,KAAAlN,KAAAkN,OACAlN,EAAAvqB,EACAq6B,EAAAD,KAIA,OAAA7P,GAIA0L,EAAA76B,IAAA,SAAAivB,EAAAgN,EAAAL,GACA,IACAljC,EAAAsmC,EADA7P,EAAAkN,IAAA4C,EAAA5C,IAEA,SAAAJ,GAAA,iBAAAA,GAAA,iBAAAhN,EAAA,UAAAA,EAEA,QAAAx3B,EAAA,EAAAiD,GADAu0B,EAAA8N,EAAA9N,KAAA4L,EAAA4D,OAAAxP,IACAv0B,OAA0CjD,EAAAiD,EAAYjD,IAEtD,OADAiB,EAAAu2B,EAAAx3B,KACAiB,EAAAy2B,IACAA,EAAAz2B,QAIAujC,EAAAD,EAAAC,EAAAL,GACAf,EAAAmC,KAAA/N,EAAA,SAAArqB,EAAAqsB,EAAA7D,KACA4R,EAAA/C,EAAAr3B,EAAAqsB,EAAA7D,IACA6R,GAAAD,IAAA3C,KAAAlN,IAAAkN,OACAlN,EAAAvqB,EACAq6B,EAAAD,KAIA,OAAA7P,GAIA0L,EAAAqE,QAAA,SAAAjQ,GACA,OAAA4L,EAAAsE,OAAAlQ,EAAAoN,MAOAxB,EAAAsE,OAAA,SAAAlQ,EAAA/1B,EAAAslC,GACA,SAAAtlC,GAAAslC,EAEA,OADAzB,EAAA9N,OAAA4L,EAAA4D,OAAAxP,IACAA,EAAA4L,EAAAn1B,OAAAupB,EAAAv0B,OAAA,IAEA,IAAAykC,EAAApC,EAAA9N,GAAA4L,EAAA30B,MAAA+oB,GAAA4L,EAAA4D,OAAAxP,GACAv0B,EAAAoiC,EAAAqC,GACAjmC,EAAA8F,KAAAC,IAAAD,KAAAgB,IAAA9G,EAAAwB,GAAA,GAEA,IADA,IAAA0kC,EAAA1kC,EAAA,EACAu2B,EAAA,EAAuBA,EAAA/3B,EAAW+3B,IAAA,CAClC,IAAAoO,EAAAxE,EAAAn1B,OAAAurB,EAAAmO,GACAhJ,EAAA+I,EAAAlO,GACAkO,EAAAlO,GAAAkO,EAAAE,GACAF,EAAAE,GAAAjJ,EAEA,OAAA+I,EAAA5hC,MAAA,EAAArE,IAIA2hC,EAAAyE,OAAA,SAAArQ,EAAAgN,EAAAL,GACA,IAAA3K,EAAA,EAEA,OADAgL,EAAAD,EAAAC,EAAAL,GACAf,EAAAgE,MAAAhE,EAAAnJ,IAAAzC,EAAA,SAAAv2B,EAAAM,EAAAo0B,GACA,OACA10B,QACAu4B,UACAsO,SAAAtD,EAAAvjC,EAAAM,EAAAo0B,MAEKoS,KAAA,SAAAlqB,EAAAC,GACL,IAAAxP,EAAAuP,EAAAiqB,SACAz/B,EAAAyV,EAAAgqB,SACA,GAAAx5B,IAAAjG,EAAA,CACA,GAAAiG,EAAAjG,QAAA,IAAAiG,EAAA,SACA,GAAAA,EAAAjG,QAAA,IAAAA,EAAA,SAEA,OAAAwV,EAAA2b,MAAA1b,EAAA0b,QACK,UAIL,IAAAwO,EAAA,SAAAC,EAAAC,GACA,gBAAA1Q,EAAAgN,EAAAL,GACA,IAAAzM,EAAAwQ,aAMA,OALA1D,EAAAD,EAAAC,EAAAL,GACAf,EAAAmC,KAAA/N,EAAA,SAAAv2B,EAAAu4B,GACA,IAAAj4B,EAAAijC,EAAAvjC,EAAAu4B,EAAAhC,GACAyQ,EAAAvQ,EAAAz2B,EAAAM,KAEAm2B,IAMA0L,EAAA+E,QAAAH,EAAA,SAAAtQ,EAAAz2B,EAAAM,GACA0jC,EAAAvN,EAAAn2B,GAAAm2B,EAAAn2B,GAAAoD,KAAA1D,GAAkDy2B,EAAAn2B,IAAAN,KAKlDmiC,EAAAgF,QAAAJ,EAAA,SAAAtQ,EAAAz2B,EAAAM,GACAm2B,EAAAn2B,GAAAN,IAMAmiC,EAAAiF,QAAAL,EAAA,SAAAtQ,EAAAz2B,EAAAM,GACA0jC,EAAAvN,EAAAn2B,GAAAm2B,EAAAn2B,KAAwCm2B,EAAAn2B,GAAA,IAGxC,IAAA+mC,EAAA,mEAEAlF,EAAAmF,QAAA,SAAA/Q,GACA,OAAAA,EACA4L,EAAAK,QAAAjM,GAAA1xB,EAAA3F,KAAAq3B,GACA4L,EAAAoF,SAAAhR,GAEAA,EAAAiR,MAAAH,GAEAhD,EAAA9N,GAAA4L,EAAAnJ,IAAAzC,EAAA4L,EAAAz0B,UACAy0B,EAAA4D,OAAAxP,OAIA4L,EAAA54B,KAAA,SAAAgtB,GACA,aAAAA,EAAA,EACA8N,EAAA9N,KAAAv0B,OAAAmgC,EAAA9/B,KAAAk0B,GAAAv0B,QAKAmgC,EAAA8E,UAAAF,EAAA,SAAAtQ,EAAAz2B,EAAAynC,GACAhR,EAAAgR,EAAA,KAAA/jC,KAAA1D,KACG,GAQHmiC,EAAAuF,MAAAvF,EAAAvO,KAAAuO,EAAAwF,KAAA,SAAAC,EAAApnC,EAAAslC,GACA,aAAA8B,KAAA5lC,OAAA,QAAAxB,OAAA,KACA,MAAAA,GAAAslC,EAAA8B,EAAA,GACAzF,EAAAyC,QAAAgD,IAAA5lC,OAAAxB,IAMA2hC,EAAAyC,QAAA,SAAAgD,EAAApnC,EAAAslC,GACA,OAAAjhC,EAAA3F,KAAA0oC,EAAA,EAAAthC,KAAAC,IAAA,EAAAqhC,EAAA5lC,QAAA,MAAAxB,GAAAslC,EAAA,EAAAtlC,MAKA2hC,EAAAuE,KAAA,SAAAkB,EAAApnC,EAAAslC,GACA,aAAA8B,KAAA5lC,OAAA,QAAAxB,OAAA,KACA,MAAAA,GAAAslC,EAAA8B,IAAA5lC,OAAA,GACAmgC,EAAA0B,KAAA+D,EAAAthC,KAAAC,IAAA,EAAAqhC,EAAA5lC,OAAAxB,KAMA2hC,EAAA0B,KAAA1B,EAAA0F,KAAA1F,EAAA2F,KAAA,SAAAF,EAAApnC,EAAAslC,GACA,OAAAjhC,EAAA3F,KAAA0oC,EAAA,MAAApnC,GAAAslC,EAAA,EAAAtlC,IAIA2hC,EAAA4F,QAAA,SAAAH,GACA,OAAAzF,EAAA1J,OAAAmP,EAAAlP,UAIA,IAAAsP,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAGA,IADA,IAAAtS,GADAsS,SACApmC,OACAjD,EAAA,EAAAiD,EAAAoiC,EAAA6D,GAA8ClpC,EAAAiD,EAAYjD,IAAA,CAC1D,IAAAiB,EAAAioC,EAAAlpC,GACA,GAAAslC,EAAArkC,KAAAmiC,EAAAK,QAAAxiC,IAAAmiC,EAAAkG,YAAAroC,IAEA,GAAAkoC,EAEA,IADA,IAAAxe,EAAA,EAAAhQ,EAAA1Z,EAAAgC,OACA0nB,EAAAhQ,GAAA0uB,EAAAtS,KAAA91B,EAAA0pB,UAEAse,EAAAhoC,EAAAkoC,EAAAC,EAAAC,GACAtS,EAAAsS,EAAApmC,YAEOmmC,IACPC,EAAAtS,KAAA91B,GAGA,OAAAooC,GAIAjG,EAAA6F,QAAA,SAAAJ,EAAAM,GACA,OAAAF,EAAAJ,EAAAM,GAAA,IAIA/F,EAAAmG,QAAA1E,EAAA,SAAAgE,EAAAW,GACA,OAAApG,EAAAqG,WAAAZ,EAAAW,KASApG,EAAAsG,KAAAtG,EAAAuG,OAAA,SAAAd,EAAAe,EAAApF,EAAAL,GACAf,EAAAyG,UAAAD,KACAzF,EAAAK,EACAA,EAAAoF,EACAA,GAAA,GAEA,MAAApF,MAAAD,EAAAC,EAAAL,IAGA,IAFA,IAAAzM,KACAoS,KACA9pC,EAAA,EAAAiD,EAAAoiC,EAAAwD,GAA8C7oC,EAAAiD,EAAYjD,IAAA,CAC1D,IAAAiB,EAAA4nC,EAAA7oC,GACAunC,EAAA/C,IAAAvjC,EAAAjB,EAAA6oC,GAAA5nC,EACA2oC,IAAApF,GACAxkC,GAAA8pC,IAAAvC,GAAA7P,EAAA/yB,KAAA1D,GACA6oC,EAAAvC,GACO/C,EACPpB,EAAAwD,SAAAkD,EAAAvC,KACAuC,EAAAnlC,KAAA4iC,GACA7P,EAAA/yB,KAAA1D,IAEOmiC,EAAAwD,SAAAlP,EAAAz2B,IACPy2B,EAAA/yB,KAAA1D,GAGA,OAAAy2B,GAKA0L,EAAA2G,MAAAlF,EAAA,SAAAzF,GACA,OAAAgE,EAAAsG,KAAAT,EAAA7J,GAAA,SAKAgE,EAAA4G,aAAA,SAAAnB,GAGA,IAFA,IAAAnR,KACAuS,EAAAplC,UAAA5B,OACAjD,EAAA,EAAAiD,EAAAoiC,EAAAwD,GAA8C7oC,EAAAiD,EAAYjD,IAAA,CAC1D,IAAAo1B,EAAAyT,EAAA7oC,GACA,IAAAojC,EAAAwD,SAAAlP,EAAAtC,GAAA,CACA,IAAAzK,EACA,IAAAA,EAAA,EAAiBA,EAAAsf,GACjB7G,EAAAwD,SAAA/hC,UAAA8lB,GAAAyK,GADiCzK,KAGjCA,IAAAsf,GAAAvS,EAAA/yB,KAAAywB,IAEA,OAAAsC,GAKA0L,EAAAqG,WAAA5E,EAAA,SAAAgE,EAAA/D,GAEA,OADAA,EAAAmE,EAAAnE,GAAA,MACA1B,EAAA1J,OAAAmP,EAAA,SAAA5nC,GACA,OAAAmiC,EAAAwD,SAAA9B,EAAA7jC,OAMAmiC,EAAA8G,MAAA,SAAArB,GAIA,IAHA,IAAA5lC,EAAA4lC,GAAAzF,EAAA57B,IAAAqhC,EAAAxD,GAAApiC,QAAA,EACAy0B,EAAA3yB,MAAA9B,GAEAu2B,EAAA,EAAuBA,EAAAv2B,EAAgBu2B,IACvC9B,EAAA8B,GAAA4J,EAAAgE,MAAAyB,EAAArP,GAEA,OAAA9B,GAKA0L,EAAA+G,IAAAtF,EAAAzB,EAAA8G,OAKA9G,EAAA1hC,OAAA,SAAAi0B,EAAAqR,GAEA,IADA,IAAAtP,KACA13B,EAAA,EAAAiD,EAAAoiC,EAAA1P,GAA6C31B,EAAAiD,EAAYjD,IACzDgnC,EACAtP,EAAA/B,EAAA31B,IAAAgnC,EAAAhnC,GAEA03B,EAAA/B,EAAA31B,GAAA,IAAA21B,EAAA31B,GAAA,GAGA,OAAA03B,GAIA,IAAA0S,EAAA,SAAAxE,GACA,gBAAAiD,EAAAxC,EAAAlC,GACAkC,EAAA9B,EAAA8B,EAAAlC,GAGA,IAFA,IAAAlhC,EAAAoiC,EAAAwD,GACArP,EAAAoM,EAAA,IAAA3iC,EAAA,EACYu2B,GAAA,GAAAA,EAAAv2B,EAA8Bu2B,GAAAoM,EAC1C,GAAAS,EAAAwC,EAAArP,KAAAqP,GAAA,OAAArP,EAEA,WAKA4J,EAAAkD,UAAA8D,EAAA,GACAhH,EAAAiH,cAAAD,GAAA,GAIAhH,EAAAkH,YAAA,SAAAzB,EAAArR,EAAAgN,EAAAL,GAIA,IAFA,IAAAljC,GADAujC,EAAAD,EAAAC,EAAAL,EAAA,IACA3M,GACA+S,EAAA,EAAAC,EAAAnF,EAAAwD,GACA0B,EAAAC,GAAA,CACA,IAAAC,EAAAljC,KAAAob,OAAA4nB,EAAAC,GAAA,GACAhG,EAAAqE,EAAA4B,IAAAxpC,EAAAspC,EAAAE,EAAA,EAAsDD,EAAAC,EAEtD,OAAAF,GAIA,IAAAG,EAAA,SAAA9E,EAAA+E,EAAAL,GACA,gBAAAzB,EAAAzT,EAAA2B,GACA,IAAA/2B,EAAA,EAAAiD,EAAAoiC,EAAAwD,GACA,oBAAA9R,EACA6O,EAAA,EACA5lC,EAAA+2B,GAAA,EAAAA,EAAAxvB,KAAAC,IAAAuvB,EAAA9zB,EAAAjD,GAEAiD,EAAA8zB,GAAA,EAAAxvB,KAAAgB,IAAAwuB,EAAA,EAAA9zB,GAAA8zB,EAAA9zB,EAAA,OAEO,GAAAqnC,GAAAvT,GAAA9zB,EAEP,OAAA4lC,EADA9R,EAAAuT,EAAAzB,EAAAzT,MACAA,EAAA2B,GAAA,EAEA,GAAA3B,KAEA,OADA2B,EAAA4T,EAAA7kC,EAAA3F,KAAA0oC,EAAA7oC,EAAAiD,GAAAmgC,EAAAwH,SACA,EAAA7T,EAAA/2B,GAAA,EAEA,IAAA+2B,EAAA6O,EAAA,EAAA5lC,EAAAiD,EAAA,EAA0C8zB,GAAA,GAAAA,EAAA9zB,EAA0B8zB,GAAA6O,EACpE,GAAAiD,EAAA9R,KAAA3B,EAAA,OAAA2B,EAEA,WAQAqM,EAAApM,QAAA0T,EAAA,EAAAtH,EAAAkD,UAAAlD,EAAAkH,aACAlH,EAAAyH,YAAAH,GAAA,EAAAtH,EAAAiH,eAKAjH,EAAA0H,MAAA,SAAA/kC,EAAA88B,EAAAkI,GACA,MAAAlI,IACAA,EAAA98B,GAAA,EACAA,EAAA,GAEAglC,IACAA,EAAAlI,EAAA98B,GAAA,KAMA,IAHA,IAAA9C,EAAAsE,KAAAC,IAAAD,KAAAmb,MAAAmgB,EAAA98B,GAAAglC,GAAA,GACAD,EAAA/lC,MAAA9B,GAEA8zB,EAAA,EAAqBA,EAAA9zB,EAAc8zB,IAAAhxB,GAAAglC,EACnCD,EAAA/T,GAAAhxB,EAGA,OAAA+kC,GAKA1H,EAAA4H,MAAA,SAAAnC,EAAA5gC,GACA,SAAAA,KAAA,WAGA,IAFA,IAAAyvB,KACA13B,EAAA,EAAAiD,EAAA4lC,EAAA5lC,OACAjD,EAAAiD,GACAy0B,EAAA/yB,KAAAmB,EAAA3F,KAAA0oC,EAAA7oC,KAAAiI,IAEA,OAAAyvB,GAQA,IAAAuT,EAAA,SAAAC,EAAAC,EAAAhH,EAAAiH,EAAAtmC,GACA,KAAAsmC,aAAAD,GAAA,OAAAD,EAAA/W,MAAAgQ,EAAAr/B,GACA,IAAAm+B,EAAA8B,EAAAmG,EAAAtpC,WACA81B,EAAAwT,EAAA/W,MAAA8O,EAAAn+B,GACA,OAAAs+B,EAAAsB,SAAAhN,KACAuL,GAMAG,EAAA5hC,KAAAqjC,EAAA,SAAAX,EAAAC,EAAAr/B,GACA,IAAAs+B,EAAAqB,WAAAP,GAAA,UAAAmH,UAAA,qCACA,IAAAC,EAAAzG,EAAA,SAAA0G,GACA,OAAAN,EAAA/G,EAAAoH,EAAAnH,EAAAhiC,KAAA2C,EAAA41B,OAAA6Q,MAEA,OAAAD,IAOAlI,EAAAoI,QAAA3G,EAAA,SAAAX,EAAAuH,GACA,IAAAC,EAAAtI,EAAAoI,QAAAE,YACAJ,EAAA,WAGA,IAFA,IAAAvjC,EAAA,EAAA9E,EAAAwoC,EAAAxoC,OACA6B,EAAAC,MAAA9B,GACAjD,EAAA,EAAqBA,EAAAiD,EAAYjD,IACjC8E,EAAA9E,GAAAyrC,EAAAzrC,KAAA0rC,EAAA7mC,UAAAkD,KAAA0jC,EAAAzrC,GAEA,KAAA+H,EAAAlD,UAAA5B,QAAA6B,EAAAH,KAAAE,UAAAkD,MACA,OAAAkjC,EAAA/G,EAAAoH,EAAAnpC,UAAA2C,IAEA,OAAAwmC,IAGAlI,EAAAoI,QAAAE,YAAAtI,EAKAA,EAAAuI,QAAA9G,EAAA,SAAArN,EAAAl0B,GAEA,IAAAk2B,GADAl2B,EAAA2lC,EAAA3lC,GAAA,OACAL,OACA,GAAAu2B,EAAA,YAAArxB,MAAA,yCACA,KAAAqxB,KAAA,CACA,IAAAj4B,EAAA+B,EAAAk2B,GACAhC,EAAAj2B,GAAA6hC,EAAA5hC,KAAAg2B,EAAAj2B,GAAAi2B,MAKA4L,EAAAhP,QAAA,SAAA8P,EAAA0H,GACA,IAAAxX,EAAA,SAAA7yB,GACA,IAAAsqC,EAAAzX,EAAAyX,MACAC,EAAA,IAAAF,IAAAzX,MAAAhyB,KAAA0C,WAAAtD,GAEA,OADA0jC,EAAA4G,EAAAC,KAAAD,EAAAC,GAAA5H,EAAA/P,MAAAhyB,KAAA0C,YACAgnC,EAAAC,IAGA,OADA1X,EAAAyX,SACAzX,GAKAgP,EAAA2I,MAAAlH,EAAA,SAAAX,EAAA8H,EAAAlnC,GACA,OAAAmnC,WAAA,WACA,OAAA/H,EAAA/P,MAAA,KAAArvB,IACKknC,KAKL5I,EAAA8I,MAAA9I,EAAAoI,QAAApI,EAAA2I,MAAA3I,EAAA,GAOAA,EAAA+I,SAAA,SAAAjI,EAAA8H,EAAArpC,GACA,IAAAypC,EAAAjI,EAAAr/B,EAAA4yB,EACA2U,EAAA,EACA1pC,UAEA,IAAA2pC,EAAA,WACAD,GAAA,IAAA1pC,EAAA4pC,QAAA,EAAAnJ,EAAAh8B,MACAglC,EAAA,KACA1U,EAAAwM,EAAA/P,MAAAgQ,EAAAr/B,GACAsnC,IAAAjI,EAAAr/B,EAAA,OAGA0nC,EAAA,WACA,IAAAplC,EAAAg8B,EAAAh8B,MACAilC,IAAA,IAAA1pC,EAAA4pC,UAAAF,EAAAjlC,GACA,IAAAqlC,EAAAT,GAAA5kC,EAAAilC,GAcA,OAbAlI,EAAAhiC,KACA2C,EAAAD,UACA4nC,GAAA,GAAAA,EAAAT,GACAI,IACAM,aAAAN,GACAA,EAAA,MAEAC,EAAAjlC,EACAswB,EAAAwM,EAAA/P,MAAAgQ,EAAAr/B,GACAsnC,IAAAjI,EAAAr/B,EAAA,OACOsnC,IAAA,IAAAzpC,EAAAgqC,WACPP,EAAAH,WAAAK,EAAAG,IAEA/U,GASA,OANA8U,EAAAI,OAAA,WACAF,aAAAN,GACAC,EAAA,EACAD,EAAAjI,EAAAr/B,EAAA,MAGA0nC,GAOApJ,EAAAyJ,SAAA,SAAA3I,EAAA8H,EAAAc,GACA,IAAAV,EAAA1U,EAEA4U,EAAA,SAAAnI,EAAAr/B,GACAsnC,EAAA,KACAtnC,IAAA4yB,EAAAwM,EAAA/P,MAAAgQ,EAAAr/B,KAGAioC,EAAAlI,EAAA,SAAA//B,GAEA,GADAsnC,GAAAM,aAAAN,GACAU,EAAA,CACA,IAAAE,GAAAZ,EACAA,EAAAH,WAAAK,EAAAN,GACAgB,IAAAtV,EAAAwM,EAAA/P,MAAAhyB,KAAA2C,SAEAsnC,EAAAhJ,EAAA2I,MAAAO,EAAAN,EAAA7pC,KAAA2C,GAGA,OAAA4yB,IAQA,OALAqV,EAAAH,OAAA,WACAF,aAAAN,GACAA,EAAA,MAGAW,GAMA3J,EAAA1B,KAAA,SAAAwC,EAAA+I,GACA,OAAA7J,EAAAoI,QAAAyB,EAAA/I,IAIAd,EAAAngB,OAAA,SAAAojB,GACA,kBACA,OAAAA,EAAAlS,MAAAhyB,KAAA0C,aAMAu+B,EAAA8J,QAAA,WACA,IAAApoC,EAAAD,UACAkB,EAAAjB,EAAA7B,OAAA,EACA,kBAGA,IAFA,IAAAjD,EAAA+F,EACA2xB,EAAA5yB,EAAAiB,GAAAouB,MAAAhyB,KAAA0C,WACA7E,KAAA03B,EAAA5yB,EAAA9E,GAAAG,KAAAgC,KAAAu1B,GACA,OAAAA,IAKA0L,EAAA+J,MAAA,SAAAC,EAAAlJ,GACA,kBACA,KAAAkJ,EAAA,EACA,OAAAlJ,EAAA/P,MAAAhyB,KAAA0C,aAMAu+B,EAAAzM,OAAA,SAAAyW,EAAAlJ,GACA,IAAAhQ,EACA,kBAKA,QAJAkZ,EAAA,IACAlZ,EAAAgQ,EAAA/P,MAAAhyB,KAAA0C,YAEAuoC,GAAA,IAAAlJ,EAAA,MACAhQ,IAMAkP,EAAAiK,KAAAjK,EAAAoI,QAAApI,EAAAzM,OAAA,GAEAyM,EAAAyB,gBAMA,IAAAyI,IAAqBtT,SAAA,MAAeuT,qBAAA,YACpCC,GAAA,qCACA,0DAEAC,EAAA,SAAAjW,EAAAl0B,GACA,IAAAoqC,EAAAF,EAAAvqC,OACA0qC,EAAAnW,EAAAmW,YACAC,EAAAxK,EAAAqB,WAAAkJ,MAAA/rC,WAAA0hC,EAGAuK,EAAA,cAGA,IAFA5I,EAAAzN,EAAAqW,KAAAzK,EAAAwD,SAAAtjC,EAAAuqC,IAAAvqC,EAAAqB,KAAAkpC,GAEAH,MACAG,EAAAL,EAAAE,MACAlW,KAAAqW,KAAAD,EAAAC,KAAAzK,EAAAwD,SAAAtjC,EAAAuqC,IACAvqC,EAAAqB,KAAAkpC,IAOAzK,EAAA9/B,KAAA,SAAAk0B,GACA,IAAA4L,EAAAsB,SAAAlN,GAAA,SACA,GAAAkM,EAAA,OAAAA,EAAAlM,GACA,IAAAl0B,KACA,QAAA/B,KAAAi2B,EAAAyN,EAAAzN,EAAAj2B,IAAA+B,EAAAqB,KAAApD,GAGA,OADA+rC,GAAAG,EAAAjW,EAAAl0B,GACAA,GAIA8/B,EAAA0K,QAAA,SAAAtW,GACA,IAAA4L,EAAAsB,SAAAlN,GAAA,SACA,IAAAl0B,KACA,QAAA/B,KAAAi2B,EAAAl0B,EAAAqB,KAAApD,GAGA,OADA+rC,GAAAG,EAAAjW,EAAAl0B,GACAA,GAIA8/B,EAAA4D,OAAA,SAAAxP,GAIA,IAHA,IAAAl0B,EAAA8/B,EAAA9/B,KAAAk0B,GACAv0B,EAAAK,EAAAL,OACA+jC,EAAAjiC,MAAA9B,GACAjD,EAAA,EAAmBA,EAAAiD,EAAYjD,IAC/BgnC,EAAAhnC,GAAAw3B,EAAAl0B,EAAAtD,IAEA,OAAAgnC,GAKA5D,EAAA2K,UAAA,SAAAvW,EAAAgN,EAAAL,GACAK,EAAAD,EAAAC,EAAAL,GAIA,IAHA,IAAA7gC,EAAA8/B,EAAA9/B,KAAAk0B,GACAv0B,EAAAK,EAAAL,OACAwiC,KACAjM,EAAA,EAAuBA,EAAAv2B,EAAgBu2B,IAAA,CACvC,IAAAkM,EAAApiC,EAAAk2B,GACAiM,EAAAC,GAAAlB,EAAAhN,EAAAkO,KAAAlO,GAEA,OAAAiO,GAKArC,EAAA4K,MAAA,SAAAxW,GAIA,IAHA,IAAAl0B,EAAA8/B,EAAA9/B,KAAAk0B,GACAv0B,EAAAK,EAAAL,OACA+qC,EAAAjpC,MAAA9B,GACAjD,EAAA,EAAmBA,EAAAiD,EAAYjD,IAC/BguC,EAAAhuC,IAAAsD,EAAAtD,GAAAw3B,EAAAl0B,EAAAtD,KAEA,OAAAguC,GAIA5K,EAAAl0B,OAAA,SAAAsoB,GAGA,IAFA,IAAAE,KACAp0B,EAAA8/B,EAAA9/B,KAAAk0B,GACAx3B,EAAA,EAAAiD,EAAAK,EAAAL,OAAyCjD,EAAAiD,EAAYjD,IACrD03B,EAAAF,EAAAl0B,EAAAtD,KAAAsD,EAAAtD,GAEA,OAAA03B,GAKA0L,EAAA6K,UAAA7K,EAAA8K,QAAA,SAAA1W,GACA,IAAA2W,KACA,QAAA5sC,KAAAi2B,EACA4L,EAAAqB,WAAAjN,EAAAj2B,KAAA4sC,EAAAxpC,KAAApD,GAEA,OAAA4sC,EAAApG,QAIA,IAAAqG,EAAA,SAAAC,EAAAC,GACA,gBAAA9W,GACA,IAAAv0B,EAAA4B,UAAA5B,OAEA,GADAqrC,IAAA9W,EAAA92B,OAAA82B,IACAv0B,EAAA,SAAAu0B,EAAA,OAAAA,EACA,QAAAgC,EAAA,EAAyBA,EAAAv2B,EAAgBu2B,IAIzC,IAHA,IAAAgB,EAAA31B,UAAA20B,GACAl2B,EAAA+qC,EAAA7T,GACAv6B,EAAAqD,EAAAL,OACAjD,EAAA,EAAuBA,EAAAC,EAAOD,IAAA,CAC9B,IAAAuB,EAAA+B,EAAAtD,GACAsuC,QAAA,IAAA9W,EAAAj2B,KAAAi2B,EAAAj2B,GAAAi5B,EAAAj5B,IAGA,OAAAi2B,IAKA4L,EAAAmL,OAAAH,EAAAhL,EAAA0K,SAIA1K,EAAAoL,UAAApL,EAAAtH,OAAAsS,EAAAhL,EAAA9/B,MAGA8/B,EAAAmD,QAAA,SAAA/O,EAAA6O,EAAAlC,GACAkC,EAAA9B,EAAA8B,EAAAlC,GAEA,IADA,IAAA5iC,EAAA+B,EAAA8/B,EAAA9/B,KAAAk0B,GACAx3B,EAAA,EAAAiD,EAAAK,EAAAL,OAAyCjD,EAAAiD,EAAYjD,IAErD,GAAAqmC,EAAA7O,EADAj2B,EAAA+B,EAAAtD,IACAuB,EAAAi2B,GAAA,OAAAj2B,GAKA,IA+EAktC,EAAAC,EA/EAC,EAAA,SAAA1tC,EAAAM,EAAAi2B,GACA,OAAAj2B,KAAAi2B,GAIA4L,EAAAwL,KAAA/J,EAAA,SAAArN,EAAAl0B,GACA,IAAAo0B,KAAmB8M,EAAAlhC,EAAA,GACnB,SAAAk0B,EAAA,OAAAE,EACA0L,EAAAqB,WAAAD,IACAlhC,EAAAL,OAAA,IAAAuhC,EAAAP,EAAAO,EAAAlhC,EAAA,KACAA,EAAA8/B,EAAA0K,QAAAtW,KAEAgN,EAAAmK,EACArrC,EAAA2lC,EAAA3lC,GAAA,MACAk0B,EAAA92B,OAAA82B,IAEA,QAAAx3B,EAAA,EAAAiD,EAAAK,EAAAL,OAAyCjD,EAAAiD,EAAYjD,IAAA,CACrD,IAAAuB,EAAA+B,EAAAtD,GACAiB,EAAAu2B,EAAAj2B,GACAijC,EAAAvjC,EAAAM,EAAAi2B,KAAAE,EAAAn2B,GAAAN,GAEA,OAAAy2B,IAIA0L,EAAAyL,KAAAhK,EAAA,SAAArN,EAAAl0B,GACA,IAAA6gC,EAAAK,EAAAlhC,EAAA,GAUA,OATA8/B,EAAAqB,WAAAD,IACAA,EAAApB,EAAAngB,OAAAuhB,GACAlhC,EAAAL,OAAA,IAAAkhC,EAAA7gC,EAAA,MAEAA,EAAA8/B,EAAAnJ,IAAAgP,EAAA3lC,GAAA,MAAAwrC,QACAtK,EAAA,SAAAvjC,EAAAM,GACA,OAAA6hC,EAAAwD,SAAAtjC,EAAA/B,KAGA6hC,EAAAwL,KAAApX,EAAAgN,EAAAL,KAIAf,EAAAkL,SAAAF,EAAAhL,EAAA0K,SAAA,GAKA1K,EAAA9hC,OAAA,SAAAM,EAAAmtC,GACA,IAAArX,EAAAqN,EAAAnjC,GAEA,OADAmtC,GAAA3L,EAAAoL,UAAA9W,EAAAqX,GACArX,GAIA0L,EAAA30B,MAAA,SAAA+oB,GACA,OAAA4L,EAAAsB,SAAAlN,GACA4L,EAAAK,QAAAjM,KAAA1xB,QAAAs9B,EAAAmL,UAAqD/W,GADrDA,GAOA4L,EAAA4L,IAAA,SAAAxX,EAAAyX,GAEA,OADAA,EAAAzX,GACAA,GAIA4L,EAAA8L,QAAA,SAAAxtC,EAAA01B,GACA,IAAA9zB,EAAA8/B,EAAA9/B,KAAA8zB,GAAAn0B,EAAAK,EAAAL,OACA,SAAAvB,EAAA,OAAAuB,EAEA,IADA,IAAAu0B,EAAA92B,OAAAgB,GACA1B,EAAA,EAAmBA,EAAAiD,EAAYjD,IAAA,CAC/B,IAAAuB,EAAA+B,EAAAtD,GACA,GAAAo3B,EAAA71B,KAAAi2B,EAAAj2B,WAAAi2B,GAAA,SAEA,UAMAiX,EAAA,SAAAngC,EAAAjG,EAAA8mC,EAAAC,GAGA,GAAA9gC,IAAAjG,EAAA,WAAAiG,GAAA,EAAAA,GAAA,EAAAjG,EAEA,SAAAiG,GAAA,MAAAjG,EAAA,SAEA,GAAAiG,KAAA,OAAAjG,KAEA,IAAAgE,SAAAiC,EACA,oBAAAjC,GAAA,WAAAA,GAAA,iBAAAhE,IACAqmC,EAAApgC,EAAAjG,EAAA8mC,EAAAC,IAIAV,EAAA,SAAApgC,EAAAjG,EAAA8mC,EAAAC,GAEA9gC,aAAA80B,IAAA90B,IAAAu1B,UACAx7B,aAAA+6B,IAAA/6B,IAAAw7B,UAEA,IAAAwL,EAAArV,EAAA75B,KAAAmO,GACA,GAAA+gC,IAAArV,EAAA75B,KAAAkI,GAAA,SACA,OAAAgnC,GAEA,sBAEA,sBAGA,SAAA/gC,GAAA,GAAAjG,EACA,sBAGA,OAAAiG,OAAAjG,MAEA,IAAAiG,EAAA,GAAAA,GAAA,EAAAjG,GAAAiG,IAAAjG,EACA,oBACA,uBAIA,OAAAiG,IAAAjG,EACA,sBACA,OAAAk7B,EAAA+L,QAAAnvC,KAAAmO,KAAAi1B,EAAA+L,QAAAnvC,KAAAkI,GAGA,IAAAknC,EAAA,mBAAAF,EACA,IAAAE,EAAA,CACA,oBAAAjhC,GAAA,iBAAAjG,EAAA,SAIA,IAAAmnC,EAAAlhC,EAAAq/B,YAAA8B,EAAApnC,EAAAslC,YACA,GAAA6B,IAAAC,KAAArM,EAAAqB,WAAA+K,oBACApM,EAAAqB,WAAAgL,qBACA,gBAAAnhC,GAAA,gBAAAjG,EACA,SAQA8mC,QACAC,QAEA,IADA,IAAAnsC,EAAAksC,EAAAlsC,OACAA,KAGA,GAAAksC,EAAAlsC,KAAAqL,EAAA,OAAA8gC,EAAAnsC,KAAAoF,EAQA,GAJA8mC,EAAAxqC,KAAA2J,GACA8gC,EAAAzqC,KAAA0D,GAGAknC,EAAA,CAGA,IADAtsC,EAAAqL,EAAArL,UACAoF,EAAApF,OAAA,SAEA,KAAAA,KACA,IAAAwrC,EAAAngC,EAAArL,GAAAoF,EAAApF,GAAAksC,EAAAC,GAAA,aAEK,CAEL,IAAA7tC,EAAA+B,EAAA8/B,EAAA9/B,KAAAgL,GAGA,GAFArL,EAAAK,EAAAL,OAEAmgC,EAAA9/B,KAAA+E,GAAApF,WAAA,SACA,KAAAA,KAGA,GADA1B,EAAA+B,EAAAL,IACAgiC,EAAA58B,EAAA9G,KAAAktC,EAAAngC,EAAA/M,GAAA8G,EAAA9G,GAAA4tC,EAAAC,GAAA,SAMA,OAFAD,EAAAO,MACAN,EAAAM,OACA,GAIAtM,EAAAuM,QAAA,SAAArhC,EAAAjG,GACA,OAAAomC,EAAAngC,EAAAjG,IAKA+6B,EAAAwM,QAAA,SAAApY,GACA,aAAAA,IACA8N,EAAA9N,KAAA4L,EAAAK,QAAAjM,IAAA4L,EAAAoF,SAAAhR,IAAA4L,EAAAkG,YAAA9R,IAAA,IAAAA,EAAAv0B,OACA,IAAAmgC,EAAA9/B,KAAAk0B,GAAAv0B,SAIAmgC,EAAAyM,UAAA,SAAArY,GACA,SAAAA,GAAA,IAAAA,EAAAsM,WAKAV,EAAAK,QAAAD,GAAA,SAAAhM,GACA,yBAAAwC,EAAA75B,KAAAq3B,IAIA4L,EAAAsB,SAAA,SAAAlN,GACA,IAAAnrB,SAAAmrB,EACA,mBAAAnrB,GAAA,WAAAA,KAAAmrB,GAIA4L,EAAAmC,MAAA,oHAAAhlC,GACA6iC,EAAA,KAAA7iC,GAAA,SAAAi3B,GACA,OAAAwC,EAAA75B,KAAAq3B,KAAA,WAAAj3B,EAAA,OAMA6iC,EAAAkG,YAAAzkC,aACAu+B,EAAAkG,YAAA,SAAA9R,GACA,OAAAyN,EAAAzN,EAAA,YAMA,IAAAsY,EAAA9M,EAAA78B,UAAA68B,EAAA78B,SAAA2zB,WACA,wCAAAiW,WAAA,mBAAAD,IACA1M,EAAAqB,WAAA,SAAAjN,GACA,yBAAAA,IAAA,IAKA4L,EAAA96B,SAAA,SAAAkvB,GACA,OAAA4L,EAAA4M,SAAAxY,IAAAlvB,SAAAkvB,KAAAoT,MAAAqF,WAAAzY,KAIA4L,EAAAwH,MAAA,SAAApT,GACA,OAAA4L,EAAA8M,SAAA1Y,IAAAoT,MAAApT,IAIA4L,EAAAyG,UAAA,SAAArS,GACA,WAAAA,IAAA,IAAAA,GAAA,qBAAAwC,EAAA75B,KAAAq3B,IAIA4L,EAAA+M,OAAA,SAAA3Y,GACA,cAAAA,GAIA4L,EAAAgN,YAAA,SAAA5Y,GACA,gBAAAA,GAKA4L,EAAA6B,IAAA,SAAAzN,EAAA0N,GACA,IAAA9B,EAAAK,QAAAyB,GACA,OAAAD,EAAAzN,EAAA0N,GAGA,IADA,IAAAjiC,EAAAiiC,EAAAjiC,OACAjD,EAAA,EAAmBA,EAAAiD,EAAYjD,IAAA,CAC/B,IAAAuB,EAAA2jC,EAAAllC,GACA,SAAAw3B,IAAA31B,EAAA1B,KAAAq3B,EAAAj2B,GACA,SAEAi2B,IAAAj2B,GAEA,QAAA0B,GAQAmgC,EAAAiN,WAAA,WAEA,OADArN,EAAAI,EAAAD,EACAhhC,MAIAihC,EAAAz0B,SAAA,SAAA1N,GACA,OAAAA,GAIAmiC,EAAAkN,SAAA,SAAArvC,GACA,kBACA,OAAAA,IAIAmiC,EAAAmN,KAAA,aAIAnN,EAAAzhC,SAAA,SAAAujC,GACA,OAAA9B,EAAAK,QAAAyB,GAGA,SAAA1N,GACA,OAAA2N,EAAA3N,EAAA0N,IAHAF,EAAAE,IAQA9B,EAAAoN,WAAA,SAAAhZ,GACA,aAAAA,EACA,aAEA,SAAA0N,GACA,OAAA9B,EAAAK,QAAAyB,GAAAC,EAAA3N,EAAA0N,GAAA1N,EAAA0N,KAMA9B,EAAAuB,QAAAvB,EAAAqN,QAAA,SAAArZ,GAEA,OADAA,EAAAgM,EAAAoL,aAA0BpX,GAC1B,SAAAI,GACA,OAAA4L,EAAA8L,QAAA1X,EAAAJ,KAKAgM,EAAAgK,MAAA,SAAA3rC,EAAA+iC,EAAAL,GACA,IAAAuM,EAAA3rC,MAAAwC,KAAAC,IAAA,EAAA/F,IACA+iC,EAAAP,EAAAO,EAAAL,EAAA,GACA,QAAAnkC,EAAA,EAAmBA,EAAAyB,EAAOzB,IAAA0wC,EAAA1wC,GAAAwkC,EAAAxkC,GAC1B,OAAA0wC,GAIAtN,EAAAn1B,OAAA,SAAA1F,EAAAf,GAKA,OAJA,MAAAA,IACAA,EAAAe,EACAA,EAAA,GAEAA,EAAAhB,KAAAob,MAAApb,KAAA0G,UAAAzG,EAAAe,EAAA,KAIA66B,EAAAh8B,IAAAupC,KAAAvpC,KAAA,WACA,WAAAupC,MAAAC,WAIA,IAAAC,GACAC,IAAA,QACAC,IAAA,OACAC,IAAA,OACAC,IAAA,SACAC,IAAA,SACAC,IAAA,UAEAC,EAAAhO,EAAAl0B,OAAA2hC,GAGAQ,EAAA,SAAApX,GACA,IAAAqX,EAAA,SAAA7I,GACA,OAAAxO,EAAAwO,IAGAjO,EAAA,MAAA4I,EAAA9/B,KAAA22B,GAAAL,KAAA,SACA2X,EAAAC,OAAAhX,GACAiX,EAAAD,OAAAhX,EAAA,KACA,gBAAAkX,GAEA,OADAA,EAAA,MAAAA,EAAA,MAAAA,EACAH,EAAA5V,KAAA+V,KAAAtW,QAAAqW,EAAAH,GAAAI,IAGAtO,EAAAuO,OAAAN,EAAAR,GACAzN,EAAA5K,SAAA6Y,EAAAD,GAKAhO,EAAA1L,OAAA,SAAAF,EAAA0N,EAAA0M,GACAxO,EAAAK,QAAAyB,YACA,IAAAjiC,EAAAiiC,EAAAjiC,OACA,IAAAA,EACA,OAAAmgC,EAAAqB,WAAAmN,KAAAzxC,KAAAq3B,GAAAoa,EAEA,QAAA5xC,EAAA,EAAmBA,EAAAiD,EAAYjD,IAAA,CAC/B,IAAA6tC,EAAA,MAAArW,OAAA,EAAAA,EAAA0N,EAAAllC,SACA,IAAA6tC,IACAA,EAAA+D,EACA5xC,EAAAiD,GAEAu0B,EAAA4L,EAAAqB,WAAAoJ,KAAA1tC,KAAAq3B,GAAAqW,EAEA,OAAArW,GAKA,IAAAqa,EAAA,EACAzO,EAAA0O,SAAA,SAAAC,GACA,IAAAzc,IAAAuc,EAAA,GACA,OAAAE,IAAAzc,KAKA8N,EAAA4O,kBACAC,SAAA,kBACAC,YAAA,mBACAP,OAAA,oBAMA,IAAAQ,EAAA,OAIAC,GACAlB,IAAA,IACAmB,KAAA,KACAC,KAAA,IACAC,KAAA,IACAC,SAAA,QACAC,SAAA,SAGAC,EAAA,4BAEAC,EAAA,SAAAlK,GACA,WAAA2J,EAAA3J,IAOArF,EAAAwP,SAAA,SAAAC,EAAAC,EAAAC,IACAD,GAAAC,IAAAD,EAAAC,GACAD,EAAA1P,EAAAkL,YAA4BwE,EAAA1P,EAAA4O,kBAG5B,IAiCA1P,EAjCAqC,EAAA6M,SACAsB,EAAAnB,QAAAQ,GAAA3X,QACAsY,EAAAZ,aAAAC,GAAA3X,QACAsY,EAAAb,UAAAE,GAAA3X,QACAZ,KAAA,eAGAJ,EAAA,EACAgB,EAAA,SACAqY,EAAAzX,QAAAuJ,EAAA,SAAA8D,EAAAkJ,EAAAO,EAAAD,EAAAvnC,GAaA,OAZA8vB,GAAAqY,EAAA/sC,MAAA0zB,EAAA9uB,GAAA0wB,QAAAsX,EAAAC,GACAnZ,EAAA9uB,EAAA+9B,EAAAxlC,OAEA0uC,EACAnX,GAAA,cAAAmX,EAAA,iCACOO,EACP1X,GAAA,cAAA0X,EAAA,uBACOD,IACPzX,GAAA,OAAqByX,EAAA,YAIrBxJ,IAEAjO,GAAA,OAGAsY,EAAAE,WAAAxY,EAAA,mBAAoDA,EAAA,OAEpDA,EAAA,4FAEAA,EAAA,gBAGA,IACA8H,EAAA,IAAAlgC,SAAA0wC,EAAAE,UAAA,UAAAxY,GACK,MAAAl4B,GAEL,MADAA,EAAAk4B,SACAl4B,EAGA,IAAAswC,EAAA,SAAA9mC,GACA,OAAAw2B,EAAAniC,KAAAgC,KAAA2J,EAAAs3B,IAIA6P,EAAAH,EAAAE,UAAA,MAGA,OAFAJ,EAAApY,OAAA,YAAAyY,EAAA,OAAkDzY,EAAA,IAElDoY,GAIAxP,EAAA8P,MAAA,SAAA1b,GACA,IAAA2b,EAAA/P,EAAA5L,GAEA,OADA2b,EAAAC,QAAA,EACAD,GAUA,IAAAE,EAAA,SAAAF,EAAA3b,GACA,OAAA2b,EAAAC,OAAAhQ,EAAA5L,GAAA0b,QAAA1b,GAIA4L,EAAAkQ,MAAA,SAAA9b,GASA,OARA4L,EAAAmC,KAAAnC,EAAA6K,UAAAzW,GAAA,SAAAj3B,GACA,IAAA2jC,EAAAd,EAAA7iC,GAAAi3B,EAAAj3B,GACA6iC,EAAAxhC,UAAArB,GAAA,WACA,IAAAuE,GAAA3C,KAAA0hC,UAEA,OADAl/B,EAAAwvB,MAAArvB,EAAAD,WACAwuC,EAAAlxC,KAAA+hC,EAAA/P,MAAAiP,EAAAt+B,OAGAs+B,GAIAA,EAAAkQ,MAAAlQ,GAGAA,EAAAmC,MAAA,mEAAAhlC,GACA,IAAA4mC,EAAA9D,EAAA9iC,GACA6iC,EAAAxhC,UAAArB,GAAA,WACA,IAAAi3B,EAAAr1B,KAAA0hC,SAGA,OAFAsD,EAAAhT,MAAAqD,EAAA3yB,WACA,UAAAtE,GAAA,WAAAA,GAAA,IAAAi3B,EAAAv0B,eAAAu0B,EAAA,GACA6b,EAAAlxC,KAAAq1B,MAKA4L,EAAAmC,MAAA,kCAAAhlC,GACA,IAAA4mC,EAAA9D,EAAA9iC,GACA6iC,EAAAxhC,UAAArB,GAAA,WACA,OAAA8yC,EAAAlxC,KAAAglC,EAAAhT,MAAAhyB,KAAA0hC,SAAAh/B,eAKAu+B,EAAAxhC,UAAAX,MAAA,WACA,OAAAkB,KAAA0hC,UAKAT,EAAAxhC,UAAA0tC,QAAAlM,EAAAxhC,UAAA2xC,OAAAnQ,EAAAxhC,UAAAX,MAEAmiC,EAAAxhC,UAAAo4B,SAAA,WACA,OAAA8U,OAAA3sC,KAAA0hC,gBAaKh2B,KAFLk1B,EAAA,WACA,OAAAK,GACKjP,MAAAr0B,SAAAC,EAAAD,QAAAijC,GAppDL,iICLA,IAAAvgC,EAAA5C,EAAA,kgBAIM4zC,aACF,SAAAA,EAAYC,gGAAQ5wC,CAAAV,KAAAqxC,GAChBrxC,KAAKuxC,aAAeC,OAAKryC,SACzBa,KAAKyxC,QAAUH,0FAGVvvC,EAAGE,GAMR,OALAjC,KAAKuxC,aAAaptC,OACZpC,EAAI/B,KAAKyxC,QAAQlrC,MAAQ,KACzBtE,EAAIjC,KAAKyxC,QAAQjrC,OAAS,KAGzBxG,uCAGD+B,EAAGE,GAGT,OAFAuvC,OAAKpiC,IAAIpP,KAAKuxC,aAAcvxC,KAAKuxC,cAAexvC,EAAGE,IAE5CjC,sCAIP,OAAOwxC,OAAKllC,MAAMtM,KAAKuxC,kDAIvB,OAAOvxC,KAAK4F,wCAIZ,OAAO22B,OAAKzrB,gBAAgByrB,OAAKp9B,SAAU6D,OAAKC,WAAL+uB,MAAA3xB,EAAA2C,KAAA0uC,EAAmB1xC,KAAKuxC,cAAxBhZ,QAAsC,EAAG,+CClC5F36B,EAAAD,QAAAF,EAAA,GAAAA,EAAA,IAKA+E,MAAA5E,EAAAC,EAAA,qXAA0Y,yBCF1Y,IAAAk6B,EAAAt6B,EAAA,IACA,iBAAAs6B,QAAAn6B,EAAAC,EAAAk6B,EAAA,MAIA,IAAAv3B,GAAemxC,KAAA,EACfnc,eAHAA,GAKA/3B,EAAA,GAAAA,CAAAs6B,EAAAv3B,GACAu3B,EAAA6Z,SAAAh0C,EAAAD,QAAAo6B,EAAA6Z,0BCZAh0C,EAAAD,QAAA,+WCAAC,EAAAD,QAAA,qzBCyBAk0C,gBAAA,WAMA,IAUA1pC,EAAA,SAAA2pC,GACA1xC,OAAA2xC,SAAA3xC,OAAA2xC,QAAA5pC,MACA/H,OAAA2xC,QAAA5pC,MAAA2pC,GAZA,SAAAA,GACA1xC,OAAA2xC,SAAA3xC,OAAA2xC,QAAAC,KACA5xC,OAAA2xC,QAAAC,IAAAF,GAYAE,CAAAF,IAkBAG,GAGAC,QAAaC,GAAIC,GAAA,IACjBC,SAAcF,GAAIC,GAAA,IAClBE,cAAmBH,GAAIC,GAAA,IAIvBG,YAAiBC,GAAGJ,GAAA,IACpBK,cAAmBC,GAAGN,GAAA,EAAAO,GAAA,IAItBC,cAAmBT,GAAIC,GAAA,IACvBS,oBAAyBF,GAAIR,GAAA,IAC7BW,qBAA0BH,GAAIR,GAAA,IAC9BY,0BAA+BJ,GAAIP,GAAA,EAAAD,GAAA,IAInCa,iBAAsBL,GAAIR,GAAA,IAC1Bc,qBAA0BC,GAAIP,GAAA,IAI9B9rC,aAAkB8rC,GAAIP,GAAA,IACtBe,eAAoBhB,GAAIC,GAAA,IACxBgB,iBAAsBT,GAAIP,GAAA,EAAAD,GAAA,IAC1BkB,eAAoBb,GAAIJ,GAAA,EAAAD,GAAA,IACxBlrC,eAAoBurC,GAAIJ,GAAA,EAAAD,GAAA,EAAAQ,GAAA,IAExBW,gBAAqBC,GAAInB,GAAA,EAAAO,GAAA,IACzBa,mBAAwBD,GAAInB,GAAA,IAC5BqB,gBAAqBtB,GAAIC,GAAA,IAKzBsB,YAAiBf,GAAIP,GAAA,IAErBuB,oBAAyBhB,GAAIP,GAAA,EAAAD,GAAA,IAI7B/W,aAAkBuX,GAAIP,GAAA,EAAAD,GAAA,IAEtByB,kBAAuBjB,GAAIP,GAAA,IAC3BhrC,iBAAsBurC,GAAIP,GAAA,IAC1ByB,wBAA6B1B,GAAIC,GAAA,IACjC0B,yBAA8BpB,GAAIN,GAAA,EAAAD,GAAA,EAAAQ,GAAA,IAClCrrC,sBAA2BysC,GAAI3B,GAAA,EAAAD,GAAA,EAAAQ,GAAA,IAC/BqB,mCAAwCxB,GAAIJ,GAAA,EAAAD,GAAA,EAAAQ,GAAA,IAC5CsB,0BAA+BtB,GAAIP,GAAA,EAAAD,GAAA,IACnC+B,qBAA0BxB,GAAIN,GAAA,EAAAD,GAAA,IAI9B9R,OAAY8R,GAAIC,GAAK+B,eAAA,+DACrBC,WAAgBjC,GAAIC,GAAA,IACpBiC,WAAgB1B,GAAIP,GAAA,EAAAD,GAAA,IACpBmC,mBAAwB5B,GAAIN,GAAA,EAAAD,GAAA,EAAAQ,GAAA,EAAAH,GAAA,IAC5B+B,eAAoBpC,GAAIC,GAAA,IACxBoC,uBAA4B7B,GAAIP,GAAA,EAAAD,GAAA,IAChCsC,aAAkBjC,GAAIJ,GAAA,IACtBsC,qBAA0BhC,GAAIN,GAAA,EAAAD,GAAA,IAC9BwC,qBAA0BhC,GAAIP,GAAA,IAC9BwC,WAAgBpC,GAAIJ,GAAA,EAAAD,GAAA,EAAAQ,GAAA,IACpBkC,mBAAwBnC,GAAIN,GAAA,EAAAD,GAAA,EAAAQ,GAAA,EAAAH,GAAA,IAI5BsC,UAAe3C,GAAIC,GAAA,IACnB2C,WAAgB5C,GAAIC,GAAA,IAIpB4C,0BAA+BtC,GAAIN,GAAA,IACnC6C,4BAAiClB,GAAI3B,GAAA,EAAAO,GAAA,IAIrCuC,kBAAuB/C,GAAIC,GAAA,IAI3B+C,YACA3C,GAAQJ,GAAA,EAAAO,GAAA,GACRD,GAAQN,GAAA,EAAAO,GAAA,GACRoB,GAAQ3B,GAAA,EAAAO,GAAA,IAERyC,eACA5C,GAAQJ,GAAA,GACRM,GAAQN,GAAA,GACR2B,GAAQ3B,GAAA,IAERiD,mBAAwBtB,GAAI3B,GAAA,EAAAD,GAAA,IAC5BmD,kBAAuB9C,GAAIJ,GAAA,GAASM,GAAMN,GAAA,GAAS2B,GAAM3B,GAAA,IAIzDmD,iBAAsBC,IAAKjC,GAAKY,eAAA,6DAAkFsB,GAAA,IAClH3Z,yBAA8BiY,GAAI3B,GAAA,EAAAD,GAAA,IAClCuD,uBAA4B/C,GAAIP,GAAA,IAChCuD,0BAA+BzC,GAAId,GAAA,IACnCwD,YAAiBzD,GAAIC,GAAA,IAIrByD,4BAAiCrD,GAAIJ,GAAA,EAAAD,GAAA,EAAAQ,GAAA,IACrCmD,gCAAqC/B,GAAI3B,GAAA,EAAAO,GAAA,IAIzC5rC,cAAmBgtC,GAAI3B,GAAA,EAAAO,GAAA,IACvBzY,cAAmBgZ,GAAId,GAAA,EAAAO,GAAA,IACvBoD,YACAN,GAAQrD,GAAA,EAAAO,GAAA,EAAAO,GAAA,EAAA8C,GAAA,GACR9C,GAAQd,GAAA,EAAAO,GAAA,EAAAH,GAAA,EAAAE,GAAA,GACR8C,IAASpD,GAAA,EAAAO,GAAA,EAAAO,GAAA,EAAA8C,GAAA,IAETC,YACAT,IAASpD,GAAA,EAAAO,GAAA,EAAAqD,GAAA,EAAAzC,GAAA,GACT2C,IAAS9D,GAAA,EAAAO,GAAA,EAAAqD,GAAA,EAAAzC,GAAA,IAET4C,eACAV,GAAQrD,GAAA,EAAAc,GAAA,EAAA8C,GAAA,GACRA,GAAQ5D,GAAA,EAAAM,GAAA,EAAAqB,GAAA,GACRyB,IAASpD,GAAA,EAAAc,GAAA,EAAA8C,GAAA,IAET/a,eACAib,IAAS9D,GAAA,EAAAmB,GAAA,EAAAkC,GAAA,GACTW,IAAShE,GAAA,EAAAmB,GAAA,EAAAkC,GAAA,IAETY,mBAAwBZ,GAAIrD,GAAA,IAC5BkE,sBACAN,GAAQ5D,GAAA,EAAAO,GAAA,GACRY,GAAQnB,GAAA,EAAAO,GAAA,GACR8C,GAAQrD,GAAA,EAAAO,GAAA,IAER4D,sBACAhD,GAAQnB,GAAA,EAAAO,GAAA,GACR8C,GAAQrD,GAAA,EAAAO,GAAA,GACR6C,IAASpD,GAAA,EAAAO,GAAA,IAET6D,yBACAjD,GAAQnB,GAAA,EAAAc,GAAA,GACRuC,GAAQrD,GAAA,EAAAc,GAAA,GACRsC,IAASpD,GAAA,EAAAc,GAAA,IAETuD,yBACAjB,IAASpD,GAAA,EAAAmB,GAAA,GACT2C,IAAS9D,GAAA,EAAAmB,GAAA,GACT6C,IAAShE,GAAA,EAAAmB,GAAA,IAKTmD,sBAA2B3C,GAAIpB,GAAA,IAI/BgE,qBAA0BjE,GAAIN,GAAA,IAC9BwE,uBAA4B7C,GAAI3B,GAAA,EAAAO,GAAA,IAChCkE,mBAAwB3D,GAAId,GAAA,EAAAM,GAAA,IAI5B3W,YACAia,GAAQtD,GAAA,EAAAqB,GAAA,GACRR,GAAQb,GAAA,EAAAqB,GAAA,IAKR+C,eAAoBtE,GAAIJ,GAAA,GAASM,GAAMN,GAAA,IACvC2E,eAAoBvE,GAAIJ,GAAA,GAASM,GAAMN,GAAA,IACvC4E,gBAAqBxE,GAAIJ,GAAA,GAASM,GAAMN,GAAA,IACxC6E,eAAoBvE,GAAIN,GAAA,IAIxB8E,YAAiBvE,GAAIP,GAAA,IACrB+E,UAAehF,GAAIC,GAAA,IACnBgF,UAAezE,GAAIP,GAAA,EAAAD,GAAA,IACnBkF,mBAAwB1E,GAAIR,GAAA,IAI5BmF,mBAAwB9E,GAAIL,GAAA,EAAAQ,GAAA,IAC5B4E,mBAAwB/E,GAAIL,GAAA,IAC5BqF,qBAA0B7E,GAAIR,GAAA,IAI9BsF,WAAgB9E,GAAIP,GAAA,EAAAD,GAAagC,oBACjCuD,gBAAqBlF,GAAIL,GAAKgC,eAAA,8BAC9BwD,UAAenF,GAAIL,GAAKgC,oBACxByD,kBAAuBjF,GAAIR,GAAA,IAI3B0F,uBAA4BlF,GAAIP,GAAA,IAChC0F,wBAA6B3F,GAAIC,GAAA,IACjC2F,2BAAgCvF,GAAIG,GAAA,IAIpCqF,gBAAqBxF,GAAIJ,GAAA,IACzB6F,iBAAsBlE,GAAI3B,GAAA,IAC1B8F,qBAA0BvF,GAAIP,GAAA,IAC9B+F,mBAAwB3F,GAAIG,GAAA,IAC5ByF,gCAAqC5F,GAAIG,GAAA,KAOzC0F,EAAA,KAMAC,EAAA,KAQA,SAAAC,EAAAhe,GACA,SAAA8d,EAGA,QAAAG,KAFAH,KACAC,KACA/d,EACA,iBAAAA,EAAAie,KACAH,EAAA9d,EAAAie,MACAF,EAAAE,GAAAje,EAAAie,IASA,SAAAC,IACA,SAAAJ,EACA,4CAuBA,SAAAK,EAAA55C,GACA25C,IACA,IAAAr6C,EAAAi6C,EAAAv5C,GACA,YAAA4M,IAAAtN,EAAA,MAAAA,EACA,4BAAAU,EAAA+4B,SAAA,IAYA,SAAA8gB,EAAAC,EAAAC,EAAAC,EAAAh6C,GACA,IAEAi6C,EADA,QAAArtC,KADAqtC,EAAA9G,EAAA2G,WAGAltC,KADAqtC,IAAAF,KAEAE,EAAAD,IAAA,CACA,oBAAAC,EAAAD,SACAptC,IAAAqtC,EAAAD,GAAA,eAIA,IAHA,IAAAE,EAAAD,EAAAD,GAAA,cACAG,EAAA,EACAC,KACAr7C,EAAA,EAAyBA,EAAAm7C,EAAAl4C,SAAkBjD,EAAA,CAC3C,IAAAs7C,EAAAb,EAAAU,EAAAn7C,IACA,IAAAiB,EAAAq6C,KACAF,GAAAE,EACAD,EAAA12C,KAAAk2C,EAAAS,KAGA,OAAAF,IAAAn6C,EACAo6C,EAAAzhB,KAAA,OAEAihB,EAAA55C,GAGA,OAAA45C,EAAA55C,GAKA,cAAAA,EACA,YACG4M,IAAA5M,EACH,YAEAA,EAAA+4B,WAwBA,SAAAuhB,EAAAtO,EAAAuO,EAAAb,GAEA1N,EAAAwO,iBAAAd,EAAA,WACA,OAAAa,EAAAb,KAIA1N,EAAAyO,iBAAAf,EAAA,SAAA15C,GAEAu6C,EAAAb,GAAA15C,IAyGA,SAAA06C,EAAAjf,GACA,IAAAkf,IAAAlf,EAAAmf,wBAEAD,GACAlf,EAAAof,gBAAA,MAGA,IAAAC,EAAArf,EAAA+X,aAAA/X,EAAAsf,oBACAC,EAAAvf,EAAAwf,eACAxf,EAAAmZ,WAAAnZ,EAAAyf,aAAAF,GACA,QAAAG,EAAA,EAAkBA,EAAAL,IAAiBK,EACnC1f,EAAA2f,yBAAAD,GACA1f,EAAA0Y,oBAAAgH,EAAA,EAAA1f,EAAA4f,OAAA,OACA5f,EAAA6f,eAAAH,EAAA,GACAR,GACAlf,EAAA8f,oBAAAJ,EAAA,GAGA1f,EAAA+f,aAAAR,GAEA,IAAAS,EAAAhgB,EAAA+X,aAAA/X,EAAAigB,yBACA,IAAAP,EAAA,EAAkBA,EAAAM,IAAsBN,EACxC1f,EAAA4Y,cAAA5Y,EAAAkgB,SAAAR,GACA1f,EAAA1zB,YAAA0zB,EAAAmgB,iBAAA,MACAngB,EAAA1zB,YAAA0zB,EAAAzzB,WAAA,MACA2yC,IACAlf,EAAA1zB,YAAA0zB,EAAAN,iBAAA,MACAM,EAAA1zB,YAAA0zB,EAAAogB,WAAA,MACApgB,EAAAqgB,YAAAX,EAAA,OA8CA,GA1CA1f,EAAA4Y,cAAA5Y,EAAAkgB,UACAlgB,EAAAnvB,WAAA,MACAmvB,EAAAmZ,WAAAnZ,EAAAyf,aAAA,MACAzf,EAAAmZ,WAAAnZ,EAAAsgB,qBAAA,MACAtgB,EAAAnzB,gBAAAmzB,EAAAlzB,YAAA,MACAkzB,EAAAqZ,iBAAArZ,EAAAugB,aAAA,MACAvgB,EAAA8X,QAAA9X,EAAAwgB,OACAxgB,EAAA8X,QAAA9X,EAAAygB,WACAzgB,EAAA8X,QAAA9X,EAAA0gB,YACA1gB,EAAA8X,QAAA9X,EAAA2gB,QACA3gB,EAAA8X,QAAA9X,EAAA4gB,cACA5gB,EAAA6gB,WAAA,SACA7gB,EAAAga,cAAAha,EAAA8gB,UACA9gB,EAAA8Z,UAAA9Z,EAAA+gB,IAAA/gB,EAAAghB,MACAhhB,EAAAqE,WAAA,SACArE,EAAAihB,WAAA,GACAjhB,EAAAkhB,cAAA,GACAlhB,EAAAmhB,WAAA,YACAnhB,EAAAua,SAAAva,EAAAohB,MACAphB,EAAA6Z,UAAA7Z,EAAAqhB,MACArhB,EAAAshB,WAAA,GACAthB,EAAAuhB,WAAA,KACAvhB,EAAAwa,UAAAxa,EAAAwhB,KACAxhB,EAAAyhB,KAAAzhB,EAAA0hB,qBAAA1hB,EAAA2hB,WACA3hB,EAAA4hB,UAAA,GACA5hB,EAAAa,YAAAb,EAAA6hB,eAAA,GACA7hB,EAAAa,YAAAb,EAAA8hB,iBAAA,GACA9hB,EAAAa,YAAAb,EAAAc,qBAAA,GACAd,EAAAa,YAAAb,EAAA+hB,gCAAA,GAEA/hB,EAAAgiB,oCACAhiB,EAAAa,YAAAb,EAAAgiB,mCAAAhiB,EAAAiiB,uBAEAjiB,EAAAkiB,cAAA,KACAliB,EAAAmiB,eAAA,MACAniB,EAAAoiB,QAAA,IAAApiB,EAAA54B,OAAA4E,MAAAg0B,EAAA54B,OAAA6E,QACA+zB,EAAAka,YAAAla,EAAAqiB,OAAA,cACAriB,EAAAsiB,YAAA,YACAtiB,EAAAqa,UAAAra,EAAAuiB,KAAAviB,EAAAuiB,KAAAviB,EAAAuiB,MACAviB,EAAA9yB,SAAA,IAAA8yB,EAAA54B,OAAA4E,MAAAg0B,EAAA54B,OAAA6E,QACA+zB,EAAA8F,MAAA9F,EAAAwiB,iBAAAxiB,EAAAyiB,iBAAAziB,EAAA0iB,oBAEAxD,EAAA,CACAlf,EAAA2iB,aAAA3iB,EAAAohB,OACAphB,EAAAqb,WAAArb,EAAAohB,MACAphB,EAAAmZ,WAAAnZ,EAAA4iB,iBAAA,MACA5iB,EAAAmZ,WAAAnZ,EAAA6iB,kBAAA,MACA7iB,EAAAmZ,WAAAnZ,EAAA8iB,kBAAA,MACA9iB,EAAAmZ,WAAAnZ,EAAA+iB,oBAAA,MACA,IAAAC,EAAAhjB,EAAA+X,aAAA/X,EAAAijB,yCACA,IAAAvD,EAAA,EAAoBA,EAAAsD,IAA4BtD,EAChD1f,EAAAyd,eAAAzd,EAAAkjB,0BAAAxD,EAAA,MAEA,IAAAyD,EAAAnjB,EAAA+X,aAAA/X,EAAAojB,6BACA,IAAA1D,EAAA,EAAoBA,EAAAyD,IAAczD,EAClC1f,EAAAyd,eAAAzd,EAAAqjB,eAAA3D,EAAA,MAEA1f,EAAA8X,QAAA9X,EAAAsjB,oBACAtjB,EAAAa,YAAAb,EAAAujB,oBAAA,GACAvjB,EAAAa,YAAAb,EAAAwjB,mBAAA,GACAxjB,EAAAa,YAAAb,EAAAyjB,kBAAA,GACAzjB,EAAAa,YAAAb,EAAA0jB,iBAAA,GACA1jB,EAAAa,YAAAb,EAAA2jB,mBAAA,GACA3jB,EAAAa,YAAAb,EAAA4jB,gBAAA,GACA5jB,EAAAa,YAAAb,EAAA6jB,eAAA,GACA7jB,EAAAa,YAAAb,EAAA8jB,iBAAA,GACA9jB,EAAAyhB,KAAAzhB,EAAA+jB,gCAAA/jB,EAAA2hB,WAIA,KAAA3hB,EAAAgkB,cA+bA,OAOAhG,OAOAiG,YA7vBA,SAAA1/C,GAEA,OADA25C,SACA/sC,IAAA2sC,EAAAv5C,IAuwBA45C,iBAkBAC,wBAUA8F,uBAztBA,SAAA7F,EAAAj2C,GAIA,IAFA,IAAA+7C,EAAA,GACA7F,EAAAl2C,EAAA7B,OACAm5C,EAAA,EAAkBA,EAAApB,IAAcoB,EAChCyE,IAAA,GAAAzE,EAAA,SACAtB,EAAAC,EAAAC,EAAAoB,EAAAt3C,EAAAs3C,IAEA,OAAAyE,GA2uBAC,iBA9rBA,SAAAA,EAAApkB,EAAAqkB,EAAAC,EAAAC,GACAA,KAAAvkB,EACAge,EAAAhe,GACAqkB,KAAA,SAAAG,EAAAnG,EAAAj2C,GAIA,IAFA,IAAA+7C,EAAA,GACA7F,EAAAl2C,EAAA7B,OACAm5C,EAAA,EAAwBA,EAAApB,IAAcoB,EACtCyE,IAAA,GAAAzE,EAAA,SACAtB,EAAAC,EAAAC,EAAAoB,EAAAt3C,EAAAs3C,IAEA9xC,EAAA,eAAAuwC,EAAAqG,GAAA,OAAAnG,EACA,IAAA8F,EAAA,MAKA,IAAAM,KAGA,SAAAC,EAAA1kB,EAAAqe,GACA,kBACAiG,GACAA,EAAAjG,EAAAl2C,WAEA,IAAA6yB,EAAAgF,EAAAqe,GAAA5mB,MAAAuI,EAAA73B,WACAq8C,EAAAD,EAAAP,WAKA,OAJA,GAAAQ,IACAC,EAAAD,IAAA,EACAH,EAAAG,EAAAnG,EAAAl2C,YAEA6yB,GAMA,IAAAuV,KACA,QAAA0N,KAAAje,EACA,sBAAAA,EAAAie,GACA,mBAAAA,EACA1N,EAAA0N,GAAAyG,EAAA1kB,EAAAie,OACO,CACP,IAAA0G,EAAAD,EAAA1kB,EAAAie,GACA1N,EAAA0N,GAAA,WACA,IAAAjjB,EAAA2pB,EAAAltB,MAAAuI,EAAA73B,WACA,OAAA6yB,EAGAopB,EAAAppB,EAAAqpB,EAAAC,EAAAC,GAFA,WAMA1F,EAAAtO,EAAAvQ,EAAAie,GAiBA,OAZA1N,EAAAyT,SAAA,WACA,QAAAQ,KAAAC,EACA,GAAAA,EAAAt/C,eAAAq/C,IACAC,EAAAD,GAEA,OADAC,EAAAD,IAAA,EACAA,EAIA,OAAAxkB,EAAA4kB,UAGArU,GAipBAsU,gCAriBA,SAAAz9C,GACA,IAAA09C,EAaA5F,EAXA6F,KACAC,KACAC,KACAC,EAAA,EACAC,GAAA,EAEAC,KACAC,EAAA,EACAC,EAAA,EACAC,GAAA,EACAC,EAAA,EAIAC,KAqBA,SAAAC,EAAA19C,GACA,2BACAA,EAEA,SAAA29C,GACA39C,EAAA49C,YAAAD,IAxBAv+C,EAAA64B,WAAA,SAAAle,GACA,kBACA,IAAAie,EAAAje,EAAA0V,MAAArwB,EAAAe,WAEA,GAAA63B,aAAA6lB,uBAAAhgD,OAAAigD,wBAAA9lB,aAAA8lB,uBAAA,CACA,GAAA9lB,GAAA8kB,EAAA,CACA,GAAAA,EACA,6BAEA5F,EAAAr5C,OAAAigD,wBAAA9lB,aAAA8lB,uBAEAb,EA4MA,SAAAjlB,GAEA,QAAAie,KAAAje,EACA,mBAAAA,EAAAie,GACAgH,EAAAhH,GAAA8H,EACA/lB,EAAAie,GAEAY,EAAAoG,EAAAjlB,EAAAie,GAKAgH,EAAAjB,SAAA,WAEA,GADAgC,KACAb,EAEA,KAAAX,EAAAM,EAAAd,YACAyB,EAAAjB,IAAA,EAGA,QAAAA,KAAAiB,EACA,GAAAA,EAAAjB,GAEA,cADAiB,EAAAjB,GACAA,EAGA,OAAAS,EAAAL,UAGA,IAAAqB,GACA,eACA,oBACA,gBACA,qBACA,eACA,iBAEA/G,GACA+G,EAAAh+C,KACA,cACA,gBACA,YACA,0BACA,qBAGA,QAAAy3C,EAAA,EAAoBA,EAAAuG,EAAA1/C,SAA+Bm5C,EAAA,CACnD,IAAArB,EAAA4H,EAAAvG,GACAuF,EAAA5G,GAAA,SAAAt8B,GACA,kBAEA,GADAikC,IACAb,EACA,YAEA,IAAArqB,EAAA/Y,EAAA0V,MAAAuI,EAAA73B,WAGA,OAFA2yB,EAAAorB,4BAAAhB,EACAE,EAAAn9C,KAAA6yB,GACAA,GATA,CAWOkF,EAAAqe,IAGP,IAAA8H,GACA,kBACA,mBACA,qBACA,uBACA,qBACA,oCACA,eACA,sBACA,oBACA,2BACA,qBACA,mBACA,kBACA,kBACA,aACA,qBACA,mBAEAjH,GACAiH,EAAAl+C,KACA,6BACA,WACA,oBACA,sBACA,mBACA,8BACA,sBACA,oBACA,oBACA,iCACA,6BAGA,QAAAy3C,EAAA,EAAoBA,EAAAyG,EAAA5/C,SAA2Cm5C,EAAA,CAC/D,IAAArB,EAAA8H,EAAAzG,GACAuF,EAAA5G,GAAA,SAAAt8B,GACA,kBAEA,OADAikC,IACAb,EACA,KAEApjC,EAAA0V,MAAAuI,EAAA73B,YANA,CAQO88C,EAAA5G,IAGP,IAAA+H,GACA,WACA,YACA,gBACA,YACA,iBACA,WACA,aAEAlH,GACAkH,EAAAn+C,KACA,UACA,YACA,SACA,sBACA,iBAGA,QAAAy3C,EAAA,EAAoBA,EAAA0G,EAAA7/C,SAAyBm5C,EAAA,CAC7C,IAAArB,EAAA+H,EAAA1G,GACAuF,EAAA5G,GAAA,SAAAt8B,GACA,kBAEA,OADAikC,KACAb,GAGApjC,EAAA0V,MAAAuI,EAAA73B,YANA,CAQO88C,EAAA5G,IAqEP,OAlEA4G,EAAA3L,uBAAA,SAAAv3B,GACA,kBAEA,OADAikC,IACAb,EACAF,EAAAoB,wBAEAtkC,EAAA0V,MAAAuI,EAAA73B,YANA,CAQK88C,EAAA3L,wBAEL2L,EAAAqB,kBAAA,SAAAvkC,GACA,kBAEA,OADAikC,IACAb,GACA,EAEApjC,EAAA0V,MAAAuI,EAAA73B,YANA,CAQK88C,EAAAqB,mBAELrB,EAAAsB,sBAAA,SAAAxkC,GACA,kBAEA,OADAikC,IACAb,EACA,EAEApjC,EAAA0V,MAAAuI,EAAA73B,YANA,CAQK88C,EAAAsB,uBAELtB,EAAAuB,cAAA,WACA,OAAArB,GAGAjG,IACA+F,EAAAwB,oBAAA,SAAA1kC,GACA,kBAEA,OADAikC,IACAb,GACA,EAEApjC,EAAA0V,MAAAuI,EAAA73B,YANA,CAQO88C,EAAAwB,qBAEPxB,EAAA9H,eAAA,SAAAp7B,GACA,kBAEA,OADAikC,IACAb,EACAF,EAAAyB,YAEA3kC,EAAA0V,MAAAuI,EAAA73B,YANA,CAQO88C,EAAA9H,gBAEP8H,EAAA0B,qBAAA,SAAA5kC,GACA,kBAEA,OADAikC,IACAb,EACAF,EAAA2B,cAEA7kC,EAAA0V,MAAAuI,EAAA73B,YANA,CAQO88C,EAAA0B,uBAGP1B,EA1ZA4B,CADA/B,EAAA9kB,GAGA,OAAAilB,EAEA,OAAAjlB,GAfA,CAiBG54B,EAAA64B,YAYH,IAAA6mB,EAAA,SAAA9+C,GACA+8C,EAAA98C,KAAAy9C,EAAA19C,KAGA++C,EAAA,SAAA/+C,GACAg9C,EAAA/8C,KAAAy9C,EAAA19C,KA+GA,SAAAg+C,MACAV,EACAH,GACAE,GAAAC,GACAl+C,EAAA4/C,cAMA,SAAAjB,EAAA/lB,EAAAqe,GACA,IAAAt8B,EAAAie,EAAAqe,GACA,kBAIA,GADA2H,KACAb,EAMA,OADApjC,EAAA0V,MAAAuI,EAAA73B,YAsCA,SAAA8+C,EAAAC,GACA,OACAA,gBACAp9C,eAAA,WACAy7C,GAAA,IAKA,OA/KA,SAAAn+C,GACA,IAAA2a,EAAA3a,EAAAC,iBACAD,EAAAC,iBAAA,SAAAsI,EAAA3H,EAAAm/C,GACA,OAAAx3C,GACA,uBACAm3C,EAAA9+C,GACA,MACA,2BACA++C,EAAA/+C,GACA,MACA,QACA+Z,EAAA0V,MAAArwB,EAAAe,aAKAi/C,CAAAhgD,GAEAA,EAAA4/C,YAAA,WACA,IAAA7B,EAAA,CAIA,IAHAA,GAAA,EACAE,EAAA,IACAH,EACAJ,EAAAd,cA6EA,WAEA,IADA,IAAA91B,EAAAlqB,OAAA4C,KAAA6+C,GACA/F,EAAA,EAAoBA,EAAAxxB,EAAA3nB,SAAem5C,SACnC+F,EAAAv3B,EAAAwxB,IA/EA2H,GACA5B,EAAAX,EAAAwC,qBAAA,EACA,IAAAC,EAAAN,EAAA,gBACAO,EAAAzC,EAAA37C,QACAmmC,WAAA,WAEA,QAAAmQ,EAAA,EAA0BA,EAAA8H,EAAAjhD,SAAuBm5C,EAEjD8H,EAAA9H,GAAA6H,GAEA/B,GAAA,GACAjW,WAAA,WACAnoC,EAAAqgD,kBACejC,IAEN,KAITp+C,EAAAqgD,eAAA,WACAtC,GACAH,EAAAz+C,QACAgpC,WAAA,WACA,IAAAgW,EACA,qFAsFA,WACA,QAAA7F,EAAA,EAAoBA,EAAA0F,EAAA7+C,SAAyBm5C,EAAA,CAC7C,IAAAgI,EAAAtC,EAAA1F,GACAgI,aAAAC,YACA7C,EAAA/E,aAAA2H,GACOA,aAAAE,iBACP9C,EAAA+C,kBAAAH,GACOA,aAAAI,aACPhD,EAAAiD,cAAAL,GACOA,aAAAM,kBACPlD,EAAAmD,mBAAAP,GACOA,aAAAQ,YACPpD,EAAAqD,aAAAT,GACOA,aAAAU,aACPtD,EAAAuD,cAAAX,GAEAxI,IACAwI,aAAAY,WACAxD,EAAAyD,YAAAb,GACSA,aAAAc,aACT1D,EAAA2D,cAAAf,GACSA,aAAAgB,UACT5D,EAAA6D,WAAAjB,GACSA,aAAAkB,uBACT9D,EAAA+D,wBAAAnB,GACSA,aAAAoB,wBACThE,EAAAiE,kBAAArB,KA9GAsB,GACA/J,EAAA6F,GACAK,GAAA,EACAG,EAAA,EACAC,GAAA,EAGA,IAFA,IAAAiC,EAAAxC,EAAA57C,QACAm+C,EAAAN,EAAA,oBACAvH,EAAA,EAA4BA,EAAA8H,EAAAjhD,SAAuBm5C,EACnD8H,EAAA9H,GAAA6H,IAEW,IAKXngD,EAAA6hD,oBAAA,SAAAC,GACA,GAAA/D,EACA,gDAEAE,EAAAC,EAAA4D,GAGA9hD,EAAA+hD,YAAA,WACA,OAAA7D,GAGAl+C,EAAAgiD,kBAAA,SAAA1Z,GACA8V,EAAA9V,GAkGAtoC,GAoUA63C,uBAzoCA;;;;;;CCpBA,SAAA3Y,EAAA+iB,GAEAhmD,EAAAD,QAAAimD,IAFA,CASC,oBAAA9iB,WAAA,WACD,gBAAA/iC,GAEA,IAAAP,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAqCA,OAhCAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAylD,cAAA,EACAplD,YAAA,EACAC,IAAAL,KAMAZ,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAAmC,OAAArB,EAAA,SACnC,WAAyC,OAAAA,GAEzC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAA8D,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAG9D/B,EAAAkC,EAAA,GAGAlC,IAAAmC,EAAA,GA9DA,EAmEA,SAAAhC,EAAAD,EAAAF,GAEA,aAGAE,EAAAsB,YAAA,EACAtB,EAAAmmD,uBAoEA,SAAAn8C,EAAAo8C,GACAxlD,OAAA4C,KAAA4iD,GAAA3iD,QAAA,SAAAhC,GACA2kD,EAAArkD,eAAAN,IAAAuI,EAAAjI,eAAAN,KACA2kD,EAAA3kD,GAAAuI,EAAAvI,OAtEAzB,EAAAqmD,oBAkDA,SAAAhY,EAAArkC,EAAAo8C,GACA/X,EAAA5qC,QAAA,SAAAhD,GACA,IAAAU,EAAA6I,EAAAvJ,QAEAsN,IAAA5M,IACAilD,EAAA3lD,GAAAU,MAtDAnB,EAAAsmD,SAgFA,SAAAnkD,EAAAf,GACAmlD,IACAA,EAAApkD,EAAAi6C,gBAGA,OAAAh7C,aAAAmlD,EAAA1Y,aApFA7tC,EAAAwmD,eAyFA,SAAArkD,EAAAf,GACAqlD,IACAA,EAAAtkD,EAAAukD,sBAGA,OAAAtlD,aAAAqlD,EAAA5Y,aA7FA7tC,EAAA2mD,SAkGA,SAAAxkD,EAAAf,GACAwlD,IACAA,EAAAzkD,EAAA8yC,aAAA9yC,EAAA0kD,gBAGA,OAAAzlD,aAAAwlD,EAAA/Y,aAtGA7tC,EAAA8mD,UA2GA,SAAA3kD,EAAAf,GACA2lD,IACAA,EAAA5kD,EAAA8G,iBAGA,OAAA7H,aAAA2lD,EAAAlZ,aA/GA7tC,EAAAgnD,UAoHA,SAAA7kD,EAAAf,GACA,IAAA6lD,EAAA,CACA,IAAA9kD,EAAA+kD,cAGA,SAFAD,EAAA9kD,EAAA+kD,gBAMA,OAAA9lD,aAAA6lD,EAAApZ,aA5HA7tC,EAAAmnD,KAAAnnD,EAAAwK,WAAA,EAEA,IAAA48C,EAEA,SAAA1vB,GAAsC,OAAAA,KAAAp2B,WAAAo2B,GAAuC2vB,QAAA3vB,GAF7E1sB,CAAAlL,EAAA,IAmEA,IAAA0K,EAAA48C,EAAAC,QAAAjT,SAAAgT,EAAAC,QAAAjT,QAAA5pC,OAAA,mBAAA48C,EAAAC,QAAAjT,QAAA5pC,MAAA48C,EAAAC,QAAAjT,QAAA5pC,MAAA9I,KAAA0lD,EAAAC,QAAAjT,SAAA,aACAp0C,EAAAwK,QACA,IAEA+7C,EAUAE,EAUAG,EAUAG,EAUAE,EA1CAE,EAAAC,EAAAC,QAAAjT,SAAAgT,EAAAC,QAAAjT,QAAA+S,MAAA,mBAAAC,EAAAC,QAAAjT,QAAA+S,KAAAC,EAAAC,QAAAjT,QAAA+S,KAAAzlD,KAAA0lD,EAAAC,QAAAjT,SAAA,aACAp0C,EAAAmnD,QAyDA,SAAAlnD,EAAAD,EAAAF,GAEA,aAGAE,EAAAsB,YAAA,EACAtB,EAAAsnD,uBAuGA,SAAAC,GACA,GAAAA,aAAAtX,UACA,OAAAuX,EAIA,GAAAD,aAAA1pB,WACA,OAAAL,EAIA,GAAA+pB,aAAAjpB,kBACA,OAAAd,EAIA,GAAA+pB,aAAA/6C,WACA,OAAAi7C,EAIA,GAAAF,aAAAG,YACA,OAAAC,EAIA,GAAAJ,aAAAK,WACA,OAAAC,EAIA,GAAAN,aAAAO,YACA,OAAAC,EAIA,GAAAR,aAAA3jD,aACA,OAAA44C,EAIA,qCA/IAx8C,EAAAgoD,2BA0JA,SAAAC,GACA,GAAAA,IAAAhY,UACA,OAAAuX,EAIA,GAAAS,IAAApqB,WACA,OAAAL,EAIA,GAAAyqB,IAAA3pB,kBACA,OAAAd,EAIA,GAAAyqB,IAAAz7C,WACA,OAAAi7C,EAIA,GAAAQ,IAAAP,YACA,OAAAC,EAIA,GAAAM,IAAAL,WACA,OAAAC,EAIA,GAAAI,IAAAH,YACA,OAAAC,EAIA,GAAAE,IAAArkD,aACA,OAAA44C,EAIA,qCAlMAx8C,EAAAkoD,2BA4MA,SAAA37C,GACA,IAAA47C,EAAAC,EAAA77C,GAEA,IAAA47C,EACA,uBAGA,OAAAA,GAlNAnoD,EAAAqoD,mBAAA,EAEA,IAAAjB,EAEA,SAAA1vB,GAAsC,OAAAA,KAAAp2B,WAAAo2B,GAAuC2vB,QAAA3vB,GAF7E1sB,CAAAlL,EAAA,IAkDA,IAIA0nD,EAAA,KACAhqB,EAAA,KACAiqB,EAAA,KACAE,EAAA,KACAE,EAAA,KACAE,EAAA,KACAvL,EAAA,KAUA4L,KAEAE,EAAAF,EACAE,EAAAd,GAAAvX,UACAqY,EAAA9qB,GAAAK,WACAyqB,EAAAb,GAAAj7C,WACA87C,EAAAX,GAAAD,YACAY,EAAAT,GAAAD,WACAU,EAAAP,GAAAD,YACAQ,EAAA9L,GAAA54C,aACA0kD,EAnBA,OAmBAZ,YACAY,EAnBA,OAmBAZ,YACAY,EAnBA,OAmBAZ,YACAY,EAnBA,MAmBAZ,YACAY,EAnBA,OAmBAR,YACAQ,EAnBA,OAmBAR,YACAQ,EAnBA,OAmBAR,YACAQ,EAnBA,OAmBAR,YACAQ,EAnBA,OAmBAR,YA2HA,IAAAO,EAAAjB,EAAAC,QAAAkB,kBAAA,SAAA/5C,GACA,OAAAA,KAAAtG,SAAAsG,EAAAtG,kBAAAsgD,aAAAh6C,EAAAtG,kBAAAk/C,EAAAC,QAAAkB,oBACC,SAAA/5C,GACD,OAAAA,KAAAtG,QAAAsG,EAAAtG,kBAAAsgD,aAEAxoD,EAAAqoD,iBAIA,SAAApoD,EAAAD,EAAAF,GAEA,aAGAE,EAAAsB,YAAA,EACAtB,EAAAqnD,aAAA,EACA,IAAAjkB,OAAA,IAAAA,EACAA,EACA,oBAAAD,UAAA,oBAAA1gC,iBACAzC,EAAAqnD,QAAAjkB,GAIA,SAAAnjC,EAAAD,EAAAF,GAEA,aAGAE,EAAAsB,YAAA,EACAtB,EAAAiR,IA8HA,SAAAzC,EAAAjG,EAAA69C,GAKA,OAJAA,KAAA,IAAAqC,EAAA,IACA,GAAAj6C,EAAA,GAAAjG,EAAA,GACA69C,EAAA,GAAA53C,EAAA,GAAAjG,EAAA,GACA69C,EAAA,GAAA53C,EAAA,GAAAjG,EAAA,GACA69C,GAlIApmD,EAAA4O,KAiVA,SAAAvB,EAAA+4C,GAKA,OAJAA,KAAA,IAAAqC,EAAA,IACA,GAAAp7C,EAAA,GACA+4C,EAAA,GAAA/4C,EAAA,GACA+4C,EAAA,GAAA/4C,EAAA,GACA+4C,GArVApmD,EAAAwB,OAkGA,SAAA4C,EAAAE,EAAAoS,GACA,IAAA0vC,EAAA,IAAAqC,EAAA,GAEArkD,IACAgiD,EAAA,GAAAhiD,GAGAE,IACA8hD,EAAA,GAAA9hD,GAGAoS,IACA0vC,EAAA,GAAA1vC,GAGA,OAAA0vC,GAhHApmD,EAAAujB,MAkNA,SAAA/U,EAAAjG,EAAA69C,GACAA,KAAA,IAAAqC,EAAA,GACA,IAAAtmB,EAAA3zB,EAAA,GAAAjG,EAAA,GAAAiG,EAAA,GAAAjG,EAAA,GACAmgD,EAAAl6C,EAAA,GAAAjG,EAAA,GAAAiG,EAAA,GAAAjG,EAAA,GAIA,OAHA69C,EAAA,GAAA53C,EAAA,GAAAjG,EAAA,GAAAiG,EAAA,GAAAjG,EAAA,GACA69C,EAAA,GAAAjkB,EACAikB,EAAA,GAAAsC,EACAtC,GAxNApmD,EAAAgjB,SAsQA,SAAAxU,EAAAjG,GACA,IAAAogD,EAAAn6C,EAAA,GAAAjG,EAAA,GACAqgD,EAAAp6C,EAAA,GAAAjG,EAAA,GACAsgD,EAAAr6C,EAAA,GAAAjG,EAAA,GACA,OAAAd,KAAAkJ,KAAAg4C,IAAAC,IAAAC,MAzQA7oD,EAAA8oD,WAoRA,SAAAt6C,EAAAjG,GACA,IAAAogD,EAAAn6C,EAAA,GAAAjG,EAAA,GACAqgD,EAAAp6C,EAAA,GAAAjG,EAAA,GACAsgD,EAAAr6C,EAAA,GAAAjG,EAAA,GACA,OAAAogD,IAAAC,IAAAC,KAvRA7oD,EAAA2iB,OAkXA,SAAAnU,EAAAjG,EAAA69C,GAKA,OAJAA,KAAA,IAAAqC,EAAA,IACA,GAAAj6C,EAAA,GAAAjG,EAAA,GACA69C,EAAA,GAAA53C,EAAA,GAAAjG,EAAA,GACA69C,EAAA,GAAA53C,EAAA,GAAAjG,EAAA,GACA69C,GAtXApmD,EAAA+oD,UA4LA,SAAA17C,EAAAyd,EAAAs7B,GAKA,OAJAA,KAAA,IAAAqC,EAAA,IACA,GAAAp7C,EAAA,GAAAyd,EACAs7B,EAAA,GAAA/4C,EAAA,GAAAyd,EACAs7B,EAAA,GAAA/4C,EAAA,GAAAyd,EACAs7B,GAhMApmD,EAAAuqB,IAgOA,SAAA/b,EAAAjG,GACA,OAAAiG,EAAA,GAAAjG,EAAA,GAAAiG,EAAA,GAAAjG,EAAA,GAAAiG,EAAA,GAAAjG,EAAA,IAhOAvI,EAAAwjB,KAwJA,SAAAhV,EAAAjG,EAAAnH,EAAAglD,GAKA,OAJAA,KAAA,IAAAqC,EAAA,IACA,MAAArnD,GAAAoN,EAAA,GAAApN,EAAAmH,EAAA,GACA69C,EAAA,MAAAhlD,GAAAoN,EAAA,GAAApN,EAAAmH,EAAA,GACA69C,EAAA,MAAAhlD,GAAAoN,EAAA,GAAApN,EAAAmH,EAAA,GACA69C,GA5JApmD,EAAAmD,OAyOA,SAAAkK,GACA,OAAA5F,KAAAkJ,KAAAtD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAzOArN,EAAAgpD,SAmPA,SAAA37C,GACA,OAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAnPArN,EAAAipD,UAsKA,SAAA57C,EAAAyd,EAAAs7B,GAKA,OAJAA,KAAA,IAAAqC,EAAA,IACA,GAAAp7C,EAAA,GAAAyd,EACAs7B,EAAA,GAAA/4C,EAAA,GAAAyd,EACAs7B,EAAA,GAAA/4C,EAAA,GAAAyd,EACAs7B,GA1KApmD,EAAA2P,SAwVA,SAAAnB,EAAAjG,EAAA69C,GAKA,OAJAA,KAAA,IAAAqC,EAAA,IACA,GAAAj6C,EAAA,GAAAjG,EAAA,GACA69C,EAAA,GAAA53C,EAAA,GAAAjG,EAAA,GACA69C,EAAA,GAAA53C,EAAA,GAAAjG,EAAA,GACA69C,GA5VApmD,EAAAmjB,OAoTA,SAAA9V,EAAA+4C,GAKA,OAJAA,KAAA,IAAAqC,EAAA,IACA,IAAAp7C,EAAA,GACA+4C,EAAA,IAAA/4C,EAAA,GACA+4C,EAAA,IAAA/4C,EAAA,GACA+4C,GAxTApmD,EAAAqjB,UAyRA,SAAA7U,EAAA43C,GACAA,KAAA,IAAAqC,EAAA,GACA,IAAAS,EAAA16C,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAqM,EAAApT,KAAAkJ,KAAAu4C,GAEAruC,EAAA,MACAurC,EAAA,GAAA53C,EAAA,GAAAqM,EACAurC,EAAA,GAAA53C,EAAA,GAAAqM,EACAurC,EAAA,GAAA53C,EAAA,GAAAqM,IAEAurC,EAAA,KACAA,EAAA,KACAA,EAAA,MAGA,OAAAA,GAvSApmD,EAAAmpD,eAwEA,SAAAC,GACA,IAAAC,EAAAZ,EAEA,OADAA,EAAAW,EACAC,GA1EArpD,EAAAkR,SA6HA,SAAA1C,EAAAjG,EAAA69C,GAKA,OAJAA,KAAA,IAAAqC,EAAA,IACA,GAAAj6C,EAAA,GAAAjG,EAAA,GACA69C,EAAA,GAAA53C,EAAA,GAAAjG,EAAA,GACA69C,EAAA,GAAA53C,EAAA,GAAAjG,EAAA,GACA69C,GA1EA,IAAAqC,EAAA7kD,cAyTA,SAAA3D,EAAAD,EAAAF,GAEA,aAGAE,EAAAsB,YAAA,EACAtB,EAAAspD,SAiEA,SAAAnnD,GAMA,OAAAA,EAAAiH,cAtEApJ,EAAAupD,SAiDA,SAAApnD,GAKA,QAAAA,EAAAiH,cArDApJ,EAAA+6C,oBAAA,EAuHA,IAAAA,EAAA,WACA,IAAAyO,KACAnO,KAiBA,gBAAAl5C,EAAAhB,GAEA,OAjBA,SAAAgB,GACA,IAAAoK,EAAApK,EAAA0rC,YAAAptC,KAEA,IAAA+oD,EAAAj9C,GAAA,CACA,QAAA9K,KAAAU,EACA,oBAAAA,EAAAV,GAAA,CACA,IAAAgoD,EAAApO,EAAAl5C,EAAAV,IACA45C,EAAAl5C,EAAAV,IAAAgoD,EAAA,GAAA7uB,OAAA6uB,EAAA,OAAA7uB,OAAAn5B,KAIA+nD,EAAAj9C,IAAA,GAKAm9C,CAAAvnD,GACAk5C,EAAAl6C,IAAA,KAAAA,EAAA+4B,SAAA,KArBA,GAyBAl6B,EAAA+6C,kBAIA,SAAA96C,EAAAD,EAAAF,GAEA,aAGAE,EAAAsB,YAAA,EACAtB,EAAA2pD,yBACA3pD,EAAA4pD,gBACA5pD,EAAA6pD,yBAs+BA,SAAA1nD,EAAA2nD,EAAAC,EAAAC,EAAAC,GAIA,IAHA,IAAAC,EAAAC,EAAAJ,EAAAC,EAAAC,GACAG,KAEA9N,EAAA,EAAkBA,EAAAwN,EAAA3mD,SAA6Bm5C,EAAA,CAC/C,IAAA+N,EAAAC,EAAAnoD,EAAA2nD,EAAAxN,GAAAn6C,EAAAooD,EAAAjO,IAAA4N,EAAAM,eAEA,IAAAH,EACA,YAGAD,EAAAvlD,KAAAwlD,GAGA,OAAAT,EAAAznD,EAAAioD,EAAAF,IAn/BAlqD,EAAAyqD,2BACAzqD,EAAA2L,kBA+4DA,SAAAxJ,EAAAuoD,EAAAX,EAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAJ,EAAAC,EAAAC,GACAU,GAAA,EAiBA,GAhBAD,IAAAvwB,IAAA,SAAAO,GAEA,GAAAA,EAAAxD,QAAA,SACA,IAAA0zB,EAAA9pB,EAAApG,GAEAkwB,EAIAlwB,EAAAkwB,EAAA7X,MAHAmX,EAAAM,cAAA,uBAAA9vB,GACAiwB,GAAA,GAMA,OAAAjwB,KAGAiwB,EACA,YAGA,IAAAj9C,EAAA+8C,EAAAtoD,EAAAuoD,EAAAR,GAEA,IAAAx8C,EACA,YAGA,OAAAm9C,EAAA1oD,EAAAuL,IA36DA1N,EAAA6qD,+BACA7qD,EAAA8qD,uBACA9qD,EAAA+qD,oCACA/qD,EAAAgrD,oCACAhrD,EAAAirD,uBAs7CA,SAAA9oD,EAAAsJ,EAAAy/C,GACA,OAAAF,EAAA7oD,EAAAsJ,EAAAiC,QAAAjC,EAAA0/C,iBAAAD,IAt7CAlrD,EAAA+7C,wBAouCA,SAAA55C,EAAAsJ,EAAAiB,GACA,IAAA0+C,EAAAjpD,EAAA45C,0BAQA,OAPA55C,EAAA+3C,sBAAA/3C,EAAAkpD,mBAAAD,GACAjpD,EAAAsL,WAAAhC,EAAAiC,SACA49C,EAAAnpD,EAAAsJ,EAAAiB,GACAvK,EAAA+3C,sBAAA/3C,EAAAkpD,mBAAA,MAhCA,SAAAlpD,EAAAopD,EAAA7+C,GASA,QAAAjM,KARA8qD,0BACAA,2BAGA7+C,EAAAc,UACAd,IAAAc,SAGAd,EAAA,CACA,IAAA8+C,EAAAD,EAAA9qD,GAEA+qD,GACArpD,EAAAk4C,eAAAl4C,EAAA29C,0BAAA0L,EAAA9xB,MAAA,OAsBA+xB,CAAAtpD,EAAAsJ,EAAAiB,GACA0+C,GA5uCAprD,EAAA0rD,8BACA1rD,EAAAsrD,4BACAtrD,EAAA2rD,gBACA3rD,EAAA4N,wBA6yDA,SAAAzL,EAAAsJ,EAAAmgD,GACAA,EAAAC,kBACA1pD,EAAA65C,gBAAA4P,EAAAC,oBAEAF,EAAAlgD,EAAAqgD,eAAArgD,EAAAmgD,EAAAp+C,SAEAo+C,EAAAn/C,SACAtK,EAAA4zC,WAAA5zC,EAAA+6C,qBAAA0O,EAAAn/C,WAnzDAzM,EAAA2N,YA4oDA,SAAAA,EAAAo+C,EAAA7kB,GAEA,IAAA8kB,EAAAD,EAAAE,gBAAAF,EACA,IAAA7Q,EAAAn2C,UAAA5B,OAEA,QAAA+oD,EAAA,EAAoBA,EAAAhR,IAAgBgR,EAAA,CACpC,IAAAC,EAAApnD,UAAAmnD,GAEA,GAAAjnD,MAAA0+B,QAAAwoB,GAGA,IAFA,IAAAC,EAAAD,EAAAhpD,OAEAm5C,EAAA,EAAsBA,EAAA8P,IAAgB9P,EACtC3uC,EAAAq+C,EAAAG,EAAA7P,SAGA,QAAA77C,KAAA0rD,EAAA,CACA,IAAAE,EAAAL,EAAAvrD,GAEA4rD,GACAA,EAAAF,EAAA1rD,OA9pDAT,EAAAssD,gBAm+CA,SAAAnqD,EAAAsJ,EAAA8gD,GACAC,EAAArqD,EAAAsJ,EAAA8gD,IACApqD,EAAAq1C,WAAAr1C,EAAA89C,eAAAsM,EAAAxjB,MAAA5mC,EAAAkK,eAp+CArM,EAAAysD,iBAqgDA,SAAAF,EAAArlB,GACA,IAAAwlB,EAAAH,EAAAG,SAEA,QAAAjsD,KAAAymC,EAAA,CACA,IAAA6B,EAAA2jB,EAAAjsD,GAEA,GAAAsoC,EAAA,CACA,IAAA5nC,EAAA+lC,EAAAzmC,GAEAU,EAAAgC,OACA4lC,EAAAviC,IAAArF,GAEA4nC,EAAA,GAAA5nC,KAhhDAnB,EAAAwsD,mBAEA,IAAAG,EAAAC,EAAA9sD,EAAA,IAEA+sD,EAAAD,EAAA9sD,EAAA,IAEAsnD,EAEA,SAAA1vB,GAAsC,OAAAA,KAAAp2B,WAAAo2B,GAAuC2vB,QAAA3vB,GAF7E1sB,CAAAlL,EAAA,IAIA,SAAA8sD,EAAAl1B,GAAuC,GAAAA,KAAAp2B,WAA6B,OAAAo2B,EAAqB,IAAA0B,KAAiB,SAAA1B,EAAmB,QAAAj2B,KAAAi2B,EAAuB,GAAA92B,OAAAkB,UAAAC,eAAA1B,KAAAq3B,EAAAj2B,GAAA,CAAsD,IAAAqrD,EAAAlsD,OAAAC,gBAAAD,OAAAmsD,yBAAAnsD,OAAAmsD,yBAAAr1B,EAAAj2B,MAAsHqrD,EAAA/rD,KAAA+rD,EAAAtmD,IAA4B5F,OAAAC,eAAAu4B,EAAA33B,EAAAqrD,GAAmD1zB,EAAA33B,GAAAi2B,EAAAj2B,GAAsD,OAAtB23B,EAAAiuB,QAAA3vB,EAAsB0B,EA+Crc,IAAA5uB,EAAAqiD,EAAAriD,MACA28C,EAAA0F,EAAA1F,KACArmB,EAAAsmB,EAAAC,SAAAD,EAAAC,QAAAhhD,UAAA+gD,EAAAC,QAAAhhD,SAAAy6B,eAAAsmB,EAAAC,QAAAhhD,SAAAy6B,eAAAp/B,KAAA0lD,EAAAC,QAAAhhD,UAAA,WACA,aA8CA2mD,KAKA,SAAAC,EAAA9qD,EAAAoK,GACA,OAAAygD,EAAAzgD,GAAA2gD,UAmCA,SAAAC,EAAAhrD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAAirD,UAAApyB,EAAA3tB,IAIA,SAAAggD,EAAAlrD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAAmrD,WAAAtyB,EAAA3tB,IAIA,SAAAkgD,EAAAprD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAAqrD,WAAAxyB,EAAA3tB,IAIA,SAAAogD,EAAAtrD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAAurD,WAAA1yB,EAAA3tB,IAIA,SAAAsgD,EAAAxrD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAAyrD,WAAA5yB,EAAA3tB,IAwFA,SAAAwgD,EAAA1rD,EAAAoK,EAAAuhD,EAAA9yB,GACA,IAAAkyB,EAAAD,EAAA9qD,EAAAoK,GACA,OAAAogD,EAAApD,SAAApnD,GAAA,SAAA4rD,GACA,IAAA/kD,EACAglD,EAEAnB,EAAA/F,UAAA3kD,EAAA4rD,IACA/kD,EAAA+kD,EACAC,EAAA,OAEAhlD,EAAA+kD,EAAA/kD,QACAglD,EAAAD,EAAAC,SAGA7rD,EAAAirD,UAAApyB,EAAA8yB,GACA3rD,EAAAqzC,cAAArzC,EAAA26C,SAAAgR,GACA3rD,EAAA+G,YAAAgkD,EAAAlkD,GACA7G,EAAA86C,YAAA6Q,EAAAE,IACG,SAAAhlD,GACH7G,EAAAirD,UAAApyB,EAAA8yB,GACA3rD,EAAAqzC,cAAArzC,EAAA26C,SAAAgR,GACA3rD,EAAA+G,YAAAgkD,EAAAlkD,IAIA,SAAAilD,EAAA9rD,EAAAoK,EAAAuhD,EAAA9yB,EAAAtwB,GAIA,IAHA,IAAAwiD,EAAAD,EAAA9qD,EAAAoK,GACA2hD,EAAA,IAAAtG,WAAAl9C,GAEA4xC,EAAA,EAAkBA,EAAA5xC,IAAW4xC,EAC7B4R,EAAA5R,GAAAwR,EAAAxR,EAGA,OAAAqQ,EAAApD,SAAApnD,GAAA,SAAAgsD,GACAhsD,EAAAmrD,WAAAtyB,EAAAkzB,GACAC,EAAA1qD,QAAA,SAAAsqD,EAAAr0B,GAEA,IAAA1wB,EACAglD,EAFA7rD,EAAAqzC,cAAArzC,EAAA26C,SAAAoR,EAAAx0B,IAIAmzB,EAAA/F,UAAA3kD,EAAA4rD,IACA/kD,EAAA+kD,EACAC,EAAA,OAEAhlD,EAAA+kD,EAAA/kD,QACAglD,EAAAD,EAAAC,SAGA7rD,EAAA86C,YAAA6Q,EAAAE,GACA7rD,EAAA+G,YAAAgkD,EAAAlkD,MAEG,SAAAmlD,GACHhsD,EAAAmrD,WAAAtyB,EAAAkzB,GACAC,EAAA1qD,QAAA,SAAAuF,EAAA0wB,GACAv3B,EAAAqzC,cAAArzC,EAAA26C,SAAAoR,EAAAx0B,IACAv3B,EAAA+G,YAAAgkD,EAAAlkD,MAgPA,SAAAolD,EAAAjsD,EAAAu3B,GACA,gBAAAnxB,GACApG,EAAA4zC,WAAA5zC,EAAAk6C,aAAA9zC,EAAAL,QACA/F,EAAAksD,wBAAA30B,GACAv3B,EAAAmzC,oBAAA5b,EAAAnxB,EAAA0D,eAAA1D,EAAAmC,KAAAnC,EAAAgE,MAAApK,EAAAq6C,MAAAj0C,EAAA8a,YAAA,EAAA9a,EAAA2d,QAAA,EAAA3d,EAAAqC,QAAA,QAEAmD,IAAAxF,EAAA2D,SACA/J,EAAAu6C,oBAAAhjB,EAAAnxB,EAAA2D,UAKA,SAAAoiD,EAAAnsD,EAAAu3B,GACA,gBAAAnxB,GACApG,EAAA4zC,WAAA5zC,EAAAk6C,aAAA9zC,EAAAL,QACA/F,EAAAksD,wBAAA30B,GACAv3B,EAAA42C,qBAAArf,EAAAnxB,EAAA0D,eAAA1D,EAAAmC,KAAAnC,EAAAgE,MAAApK,EAAA0lD,IAAAt/C,EAAA2d,QAAA,EAAA3d,EAAAqC,QAAA,QAEAmD,IAAAxF,EAAA2D,SACA/J,EAAAu6C,oBAAAhjB,EAAAnxB,EAAA2D,UAKA,SAAAqiD,EAAApsD,EAAAu3B,EAAA80B,GACA,IAAAC,EAAAD,EAAA9jD,KACAvC,EAAAqmD,EAAArmD,MACA,gBAAAI,GACApG,EAAA4zC,WAAA5zC,EAAAk6C,aAAA9zC,EAAAL,QAUA,IATA,IAAA+D,EAAA1D,EAAAmC,MAAAnC,EAAA0D,eAAAwiD,EACA/jD,EAAAuB,EAAA9D,EACAoE,EAAAhE,EAAAgE,MAAApK,EAAAq6C,MAEAt2B,EADA8mC,EAAAzgD,GACA7B,KAAAuB,EACAoX,EAAA9a,EAAA8a,YAAA,EACAzY,EAAArC,EAAAqC,QAAA,EACA8jD,EAAAxoC,EAAA/d,EAEAjI,EAAA,EAAmBA,EAAAiI,IAAWjI,EAC9BiC,EAAAksD,wBAAA30B,EAAAx5B,GACAiC,EAAAmzC,oBAAA5b,EAAAx5B,EAAAwK,EAAA6B,EAAA8W,EAAA6C,EAAAtb,EAAA8jD,EAAAxuD,QAEA6N,IAAAxF,EAAA2D,SACA/J,EAAAu6C,oBAAAhjB,EAAAx5B,EAAAqI,EAAA2D,UAtRA8gD,EAnQA,OAoQA2B,KAAA/qD,aACA8G,KAAA,EACA2hD,OA/MA,SAAAlqD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAAysD,UAAA5zB,EAAA3tB,KA8MAwyB,YA1MA,SAAA19B,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAA0sD,WAAA7zB,EAAA3tB,MA0MA2/C,EAxQA,QAyQA2B,KAAA/qD,aACA8G,KAAA,EACA2hD,OAzMA,SAAAlqD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAA2sD,WAAA9zB,EAAA3tB,MAyMA2/C,EA5QA,QA6QA2B,KAAA/qD,aACA8G,KAAA,GACA2hD,OAxMA,SAAAlqD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAA4sD,WAAA/zB,EAAA3tB,MAwMA2/C,EAhRA,QAiRA2B,KAAA/qD,aACA8G,KAAA,GACA2hD,OAvMA,SAAAlqD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAA6sD,WAAAh0B,EAAA3tB,MAuMA2/C,EApRA,OAqRA2B,KAAA/G,WACAl9C,KAAA,EACA2hD,OAAAc,EACAttB,YAAAwtB,GAEAL,EAzRA,QA0RA2B,KAAA/G,WACAl9C,KAAA,EACA2hD,OAAAkB,GAEAP,EA7RA,QA8RA2B,KAAA/G,WACAl9C,KAAA,GACA2hD,OAAAoB,GAEAT,EAjSA,QAkSA2B,KAAA/G,WACAl9C,KAAA,GACA2hD,OAAAsB,GAEAX,EAjRA,OAkRA2B,KAAA7G,YACAp9C,KAAA,EACA2hD,OA7LA,SAAAlqD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAA8sD,WAAAj0B,EAAA3tB,KA4LAwyB,YAxLA,SAAA19B,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAA+sD,YAAAl0B,EAAA3tB,MAwLA2/C,EAtRA,QAuRA2B,KAAA7G,YACAp9C,KAAA,EACA2hD,OAvLA,SAAAlqD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAAgtD,YAAAn0B,EAAA3tB,MAuLA2/C,EA1RA,QA2RA2B,KAAA7G,YACAp9C,KAAA,GACA2hD,OAtLA,SAAAlqD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAAitD,YAAAp0B,EAAA3tB,MAsLA2/C,EA9RA,QA+RA2B,KAAA7G,YACAp9C,KAAA,GACA2hD,OArLA,SAAAlqD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAAktD,YAAAr0B,EAAA3tB,MAqLA2/C,EA1TA,QA2TA2B,KAAA7G,YACAp9C,KAAA,EACA2hD,OAAAc,EACAttB,YAAAwtB,GAEAL,EA/TA,QAgUA2B,KAAA7G,YACAp9C,KAAA,EACA2hD,OAAAkB,GAEAP,EAnUA,QAoUA2B,KAAA7G,YACAp9C,KAAA,GACA2hD,OAAAoB,GAEAT,EAvUA,QAwUA2B,KAAA7G,YACAp9C,KAAA,GACA2hD,OAAAsB,GAEAX,EA3UA,QA4UA2B,KAAA/qD,aACA8G,KAAA,GACA2hD,OAzMA,SAAAlqD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAAmtD,iBAAAt0B,GAAA,EAAA3tB,MAyMA2/C,EA/UA,QAgVA2B,KAAA/qD,aACA8G,KAAA,GACA2hD,OAxMA,SAAAlqD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAAotD,iBAAAv0B,GAAA,EAAA3tB,MAwMA2/C,EAnVA,QAoVA2B,KAAA/qD,aACA8G,KAAA,GACA2hD,OAvMA,SAAAlqD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAAqtD,iBAAAx0B,GAAA,EAAA3tB,MAuMA2/C,EAnVA,QAoVA2B,KAAA/qD,aACA8G,KAAA,GACA2hD,OAtMA,SAAAlqD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAAstD,mBAAAz0B,GAAA,EAAA3tB,MAsMA2/C,EAvVA,QAwVA2B,KAAA/qD,aACA8G,KAAA,GACA2hD,OA/LA,SAAAlqD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAAutD,mBAAA10B,GAAA,EAAA3tB,MA+LA2/C,EA3VA,QA4VA2B,KAAA/qD,aACA8G,KAAA,GACA2hD,OA1MA,SAAAlqD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAAwtD,mBAAA30B,GAAA,EAAA3tB,MA0MA2/C,EA/VA,QAgWA2B,KAAA/qD,aACA8G,KAAA,GACA2hD,OA7LA,SAAAlqD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAAytD,mBAAA50B,GAAA,EAAA3tB,MA6LA2/C,EAnWA,QAoWA2B,KAAA/qD,aACA8G,KAAA,GACA2hD,OAxMA,SAAAlqD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAA0tD,mBAAA70B,GAAA,EAAA3tB,MAwMA2/C,EAvWA,QAwWA2B,KAAA/qD,aACA8G,KAAA,GACA2hD,OAjMA,SAAAlqD,EAAA64B,GACA,gBAAA3tB,GACAlL,EAAA2tD,mBAAA90B,GAAA,EAAA3tB,MAiMA2/C,EArXA,QAsXA2B,KAAA,KACAjkD,KAAA,EACA2hD,OAAAwB,EACAhuB,YAAAouB,EACAf,UAjWA,MAmWAF,EA3XA,QA4XA2B,KAAA,KACAjkD,KAAA,EACA2hD,OAAAwB,EACAhuB,YAAAouB,EACAf,UAvWA,OAyWAF,EAjYA,QAkYA2B,KAAA,KACAjkD,KAAA,EACA2hD,OAAAwB,EACAhuB,YAAAouB,EACAf,UA7WA,OA+WAF,EAvYA,QAwYA2B,KAAA,KACAjkD,KAAA,EACA2hD,OAAAwB,EACAhuB,YAAAouB,EACAf,UAtXA,MAwXAF,EAvYA,QAwYA2B,KAAA,KACAjkD,KAAA,EACA2hD,OAAAwB,EACAhuB,YAAAouB,EACAf,UA1XA,OA4XAF,EA7YA,QA8YA2B,KAAA,KACAjkD,KAAA,EACA2hD,OAAAwB,EACAhuB,YAAAouB,EACAf,UAjYA,OAmYAF,EAnZA,QAoZA2B,KAAA,KACAjkD,KAAA,EACA2hD,OAAAwB,EACAhuB,YAAAouB,EACAf,UA1YA,OA4YAF,EArZA,QAsZA2B,KAAA,KACAjkD,KAAA,EACA2hD,OAAAwB,EACAhuB,YAAAouB,EACAf,UAlZA,MAoZAF,EA3ZA,QA4ZA2B,KAAA,KACAjkD,KAAA,EACA2hD,OAAAwB,EACAhuB,YAAAouB,EACAf,UAvZA,OAyZAF,EAjaA,QAkaA2B,KAAA,KACAjkD,KAAA,EACA2hD,OAAAwB,EACAhuB,YAAAouB,EACAf,UA/ZA,OAiaAF,EAvaA,QAwaA2B,KAAA,KACAjkD,KAAA,EACA2hD,OAAAwB,EACAhuB,YAAAouB,EACAf,UApaA,OAsaAF,EA7aA,QA8aA2B,KAAA,KACAjkD,KAAA,EACA2hD,OAAAwB,EACAhuB,YAAAouB,EACAf,UA9aA,MAgbAF,EAnbA,QAobA2B,KAAA,KACAjkD,KAAA,EACA2hD,OAAAwB,EACAhuB,YAAAouB,EACAf,UAnbA,OAqbAF,EAzbA,QA0bA2B,KAAA,KACAjkD,KAAA,EACA2hD,OAAAwB,EACAhuB,YAAAouB,EACAf,UA3bA,OA6bAF,EA/bA,QAgcA2B,KAAA,KACAjkD,KAAA,EACA2hD,OAAAwB,EACAhuB,YAAAouB,EACAf,UAhcA,OAofA,IAAA6C,KACAA,EAhiBA,OAiiBArlD,KAAA,EACA2hD,OAAA+B,GAEA2B,EAniBA,QAoiBArlD,KAAA,EACA2hD,OAAA+B,GAEA2B,EAtiBA,QAuiBArlD,KAAA,GACA2hD,OAAA+B,GAEA2B,EAziBA,QA0iBArlD,KAAA,GACA2hD,OAAA+B,GAEA2B,EA5iBA,OA6iBArlD,KAAA,EACA2hD,OAAAiC,GAEAyB,EA/iBA,QAgjBArlD,KAAA,EACA2hD,OAAAiC,GAEAyB,EAljBA,QAmjBArlD,KAAA,GACA2hD,OAAAiC,GAEAyB,EArjBA,QAsjBArlD,KAAA,GACA2hD,OAAAiC,GAEAyB,EApiBA,OAqiBArlD,KAAA,EACA2hD,OAAAiC,GAEAyB,EAviBA,QAwiBArlD,KAAA,EACA2hD,OAAAiC,GAEAyB,EA1iBA,QA2iBArlD,KAAA,GACA2hD,OAAAiC,GAEAyB,EA7iBA,QA8iBArlD,KAAA,GACA2hD,OAAAiC,GAEAyB,EAxkBA,QAykBArlD,KAAA,EACA2hD,OAAAiC,GAEAyB,EA3kBA,QA4kBArlD,KAAA,EACA2hD,OAAAiC,GAEAyB,EA9kBA,QA+kBArlD,KAAA,GACA2hD,OAAAiC,GAEAyB,EAjlBA,QAklBArlD,KAAA,GACA2hD,OAAAiC,GAEAyB,EAplBA,QAqlBArlD,KAAA,EACA2hD,OAAAkC,EACApmD,MAAA,GAEA4nD,EAxlBA,QAylBArlD,KAAA,EACA2hD,OAAAkC,EACApmD,MAAA,GAEA4nD,EA5lBA,QA6lBArlD,KAAA,GACA2hD,OAAAkC,EACApmD,MAAA,GAGA,IAAAhG,OAAA4L,EAkBA,IAAAiiD,EAAA,YAUA,SAAAC,EAAA9tD,EAAA+tD,EAAAC,EAAAlG,GACA,IAAAmG,EAAAnG,GAAAz/C,EAEA6/C,EAAAloD,EAAA8yC,aAAAkb,GAYAE,EAAA,EAcA,GAZAL,EAAAn0B,KAAAq0B,KACAG,EAAA,EACAH,IAAA50B,QAAA00B,EAAA,KAIA7tD,EAAA+tD,aAAA7F,EAAA6F,GAEA/tD,EAAAmuD,cAAAjG,IAEAloD,EAAA+yC,mBAAAmV,EAAAloD,EAAAouD,gBAEA,CAEA,IAAAC,EAAAruD,EAAAsuD,iBAAApG,GAGA,OAFA+F,EAlDA,SAAApmD,EAAAqmD,GAGA,OAFAA,KAAA,IACAA,EACArmD,EAAA0mD,MAAA,MAAAv2B,IAAA,SAAAw2B,EAAAC,GACA,OAAAA,EAAAP,EAAA,KAAAM,IACG72B,KAAA,MA6CH+2B,CAAAX,EAAAG,GAAA,iCAAAG,GACAruD,EAAA4iD,aAAAsF,GACA,KAGA,OAAAA,EAuBA,SAAAF,EAAAJ,EAAAC,EAAAC,GACA,IAAA7P,EAOA,GALA,mBAAA4P,IACAC,EAAAD,EACAA,OAAAj8C,GAGA,mBAAAg8C,EACAE,EAAAF,EACAA,OAAAh8C,OACG,GAAAg8C,IAAA9kD,MAAA0+B,QAAAomB,GAAA,CAGH,GAAAA,EAAAS,cACA,OAAAT,EAGA,IAAA+G,EAAA/G,EACAE,EAAA6G,EAAAtG,cACAT,EAAA+G,EAAAC,gBACA3W,EAAA0W,EAAA1W,0BAGA,IAAAv3C,GACA2nD,cAAAP,GAAAz/C,EACA4vC,6BAGA,GAAA2P,EAAA,CACA,IAAAgH,KAEA9rD,MAAA0+B,QAAAomB,GACAA,EAAAtmD,QAAA,SAAAutD,EAAAJ,GACAG,EAAAC,GAAAhH,IAAA4G,OAGAG,EAAAhH,EAGAlnD,EAAAkuD,kBAGA,OAAAluD,EAGA,IAAA0nD,GAAA,mCAEA,SAAA0G,EAAAC,GACA,OAAAA,EAAAh6B,QAAA,WACA/0B,EAAAgvD,gBACGD,EAAAh6B,QAAA,WACH/0B,EAAA0kD,mBADG,EAOH,SAAAuK,EAAAjvD,EAAAioD,GACAA,EAAA3mD,QAAA,SAAA4mD,GACAloD,EAAA4iD,aAAAsF,KAwBA,SAAAT,EAAAznD,EAAAioD,EAAAL,EAAAC,EAAAC,GAKA,IAJA,IAAAC,EAAAC,EAAAJ,EAAAC,EAAAC,GACAoH,KACAC,KAEAV,EAAA,EAAmBA,EAAAxG,EAAAjnD,SAAsBytD,EAAA,CACzC,IAAAvG,EAAAD,EAAAwG,GAEA,oBAAAvG,EAAA,CACA,IAAAkH,EAAAzwB,EAAAupB,GACArgD,EAAAunD,IAAAxe,KAAAsX,EACA99C,EAAApK,EAAAooD,EAAAqG,IAEAW,KAAAhlD,OACAA,EAAA0kD,EAAAM,EAAAhlD,UAGA89C,EAAA4F,EAAA9tD,EAAA6H,EAAAuC,EAAA29C,EAAAM,eACA8G,EAAAzsD,KAAAwlD,GAGAwC,EAAAlG,SAAAxkD,EAAAkoD,IACAgH,EAAAxsD,KAAAwlD,GAIA,GAAAgH,EAAAluD,SAAAinD,EAAAjnD,OAGA,OAFA+mD,EAAAM,cAAA,kCACA4G,EAAAjvD,EAAAmvD,GACA,KAGA,IAAA5jD,EAAAvL,EAAAynD,gBACAyH,EAAA5tD,QAAA,SAAA4mD,GACAloD,EAAAqvD,aAAA9jD,EAAA28C,KAGAH,EAAA6G,iBACAnwD,OAAA4C,KAAA0mD,EAAA6G,iBAAAttD,QAAA,SAAAutD,GACA7uD,EAAAsvD,mBAAA/jD,EAAAw8C,EAAA6G,gBAAAC,QAIA,IAAAU,EAAAxH,EAAA9P,0BAkBA,GAhBAsX,IACAA,EAAAlkD,UACAkkD,IAAAlkD,SAGAvI,MAAA0+B,QAAA+tB,KACAA,EAAA9wD,OAAA4C,KAAAkuD,IAGAvvD,EAAAi4C,0BAAA1sC,EAAAgkD,EAAAxH,EAAAyH,uBAAAxvD,EAAAyvD,mBAGAzvD,EAAA0vD,YAAAnkD,IAEAvL,EAAAgzC,oBAAAznC,EAAAvL,EAAA2vD,aAEA,CAEA,IAAAtB,EAAAruD,EAAA4vD,kBAAArkD,GAIA,OAHAw8C,EAAAM,cAAA,4BAAAgG,GACAruD,EAAAwiD,cAAAj3C,GACA0jD,EAAAjvD,EAAAmvD,GACA,KAGA,OAAA5jD,EAaA,SAAA48C,EAAAnoD,EAAA6vD,EAAAC,EAAAhI,GACA,IAAAiG,EACAgC,EAAApxB,EAAAkxB,GAEA,IAAAE,EACA,yCAAAF,EAGA9B,EAAAgC,EAAAnf,KACA,IAAAod,EAAA8B,GAAAhB,EAAAiB,EAAA3lD,MAEA,IAAA4jD,EACA,sCAGA,OAAAF,EAAA9tD,EAAA+tD,EAAAC,EAAAlG,GAkEA,SAAAQ,EAAAtoD,EAAAuoD,EAAAX,EAAAC,EAAAC,GAIA,IAHA,IAAAC,EAAAC,EAAAJ,EAAAC,EAAAC,GACAG,KAEA9N,EAAA,EAAkBA,EAAAoO,EAAAvnD,SAA2Bm5C,EAAA,CAC7C,IAAA+N,EAAA4F,EAAA9tD,EAAAuoD,EAAApO,GAAAn6C,EAAAooD,EAAAjO,IAAA4N,EAAAM,eAEA,IAAAH,EACA,YAGAD,EAAAvlD,KAAAwlD,GAGA,OAAAT,EAAAznD,EAAAioD,EAAAF,GAoBA,SAAAiI,EAAA5P,GACA,IAAA9hD,EAAA8hD,EAAA9hD,KACA,OAAAA,EAAAgG,WAAA,QAAAhG,EAAAgG,WAAA,UAcA,SAAAqkD,EAAA3oD,EAAAuL,GACA,IAAA0kD,EAAA,EASA,SAAAC,EAAA3kD,EAAA4kD,GACA,IASAjG,EATArxB,EAAA74B,EAAAowD,mBAAA7kD,EAAA4kD,EAAA7xD,MACAkjC,EAAA2uB,EAAA5nD,KAAA,WAAA4nD,EAAA7xD,KAAA+xD,QAAA,GACAjmD,EAAA+lD,EAAA/lD,KACAiiD,EAAAxB,EAAAzgD,GAEA,IAAAiiD,EACA,wBAAAjiD,EAAA2tB,SAAA,IAKA,GAAAs0B,EAAAtB,UAAA,CAEA,IAAAY,EAAAsE,EACAA,GAAAE,EAAA5nD,KAGA2hD,EADA1oB,EACA6qB,EAAA3uB,YAAA19B,EAAAoK,EAAAuhD,EAAA9yB,EAAAs3B,EAAA5nD,MAEA8jD,EAAAnC,OAAAlqD,EAAAoK,EAAAuhD,EAAA9yB,EAAAs3B,EAAA5nD,WAIA2hD,EADAmC,EAAA3uB,aAAA8D,EACA6qB,EAAA3uB,YAAA19B,EAAA64B,GAEAwzB,EAAAnC,OAAAlqD,EAAA64B,GAKA,OADAqxB,EAAArxB,WACAqxB,EAMA,IAHA,IAAAJ,KACAwG,EAAAtwD,EAAAgzC,oBAAAznC,EAAAvL,EAAAuwD,iBAEApW,EAAA,EAAkBA,EAAAmW,IAAkBnW,EAAA,CACpC,IAAAgW,EAAAnwD,EAAAwwD,iBAAAjlD,EAAA4uC,GAEA,IAAA6V,EAAAG,GAAA,CAIA,IAAA7xD,EAAA6xD,EAAA7xD,KAEA,QAAAA,EAAA+xD,QAAA,KACA/xD,IAAA+xD,OAAA,EAAA/xD,EAAA0C,OAAA,IAGA,IAAAkpD,EAAAgG,EAAA3kD,EAAA4kD,GACArG,EAAAxrD,GAAA4rD,GAGA,OAAAJ,EAmBA,SAAAP,EAAAvpD,EAAAuL,GAIA,IAHA,IAAA60C,KACAqQ,EAAAzwD,EAAAgzC,oBAAAznC,EAAAvL,EAAA0wD,6BAEAvW,EAAA,EAAkBA,EAAAsW,IAAkBtW,EAAA,CACpC,IAAAkP,EAAArpD,EAAA2wD,4BAAAplD,EAAA4uC,GACAiG,EAAAiJ,EAAA/qD,OACAi5B,MAAA4iB,EACA/vC,KAAAi/C,EAAAj/C,KACA7B,KAAA8gD,EAAA9gD,MAIA,OAAA63C,EAYA,SAAA+I,EAAAnpD,EAAAopD,EAAA7+C,GASA,QAAAjM,KARA8qD,0BACAA,2BAGA7+C,EAAAc,UACAd,IAAAc,SAGAd,EAAA,CACA,IAAA8+C,EAAAD,EAAA9qD,GAEA,GAAA+qD,EAAA,CACA,IAAAuH,EAAArmD,EAAAjM,GAEAsyD,EAAAnoD,OACAzI,EAAAm4C,gBAAAn4C,EAAA29C,0BAAA0L,EAAA9xB,MAAAq5B,EAAA7qD,OAAA6qD,EAAAnoD,OAAAmoD,EAAAroD,MAEAvI,EAAAk4C,eAAAl4C,EAAA29C,0BAAA0L,EAAA9xB,MAAAq5B,EAAA7qD,UAuGA,SAAA6iD,EAAA5oD,EAAAuL,GAKA,IAJA,IAAA+kD,EAAAtwD,EAAAgzC,oBAAAznC,EAAAvL,EAAAuwD,iBACAM,KACAC,KAEA3W,EAAA,EAAkBA,EAAAmW,IAAkBnW,EAAA,CACpC2W,EAAApuD,KAAAy3C,GACA0W,EAAAnuD,SACA,IAAAytD,EAAAnwD,EAAAwwD,iBAAAjlD,EAAA4uC,GAEA,GAAA6V,EAAAG,GACA,MAIAU,EAAA1W,GAAA77C,KAAA6xD,EAAA7xD,OAGA,gDACA,+DAAAgD,QAAA,SAAAyvD,GACA,IAAAC,EAAAD,EAAA,GACAzxD,EAAAyxD,EAAA,GACA/wD,EAAAq4C,kBAAA9sC,EAAAulD,EAAA9wD,EAAAgxD,IAAA1vD,QAAA,SAAAtC,EAAAyvD,GACAoC,EAAApC,GAAAnvD,GAAAN,MAMA,IAHA,IAAAiyD,KACAC,EAAAlxD,EAAAgzC,oBAAAznC,EAAAvL,EAAAmxD,uBAEAC,EAAA,EAAmBA,EAAAF,IAAwBE,EAAA,CAC3C,IAAA9yD,EAAA0B,EAAAqxD,0BAAA9lD,EAAA6lD,GACAE,GACA/5B,MAAA65B,EACAG,mBAAAvxD,EAAAs4C,+BAAA/sC,EAAA6lD,EAAApxD,EAAAwxD,2CACAC,qBAAAzxD,EAAAs4C,+BAAA/sC,EAAA6lD,EAAApxD,EAAA0xD,6CACAnpD,KAAAvI,EAAAs4C,+BAAA/sC,EAAA6lD,EAAApxD,EAAA2xD,yBACAb,eAAA9wD,EAAAs4C,+BAAA/sC,EAAA6lD,EAAApxD,EAAA4xD,uCAEAN,EAAAO,KAAAP,EAAAQ,oBAAAR,EAAAG,qBACAR,EAAA3yD,GAAAgzD,EAGA,OACAL,aACAJ,eAIA,IAAAkB,EAAA,aAuCA,SAAAlJ,EAAA7oD,EAAAuL,EAAAy9C,EAAAD,GACA,IAAAkI,EAAAjI,EAAAiI,WACAJ,EAAA7H,EAAA6H,YACAS,EAAAL,EAAAlI,GAEA,IAAAuI,EAEA,OADAtM,EAAA,iCAAA+D,IAEAzqD,KAAAyqD,EACAwB,aAIA,IAAA3jB,EAAA,IAAAyf,YAAAiL,EAAA/oD,MACAxC,EAAA/F,EAAAi6C,eACA+X,EAAAV,EAAA/5B,MACAv3B,EAAA4zC,WAAA5zC,EAAA89C,eAAA/3C,GACA/F,EAAAiyD,oBAAA1mD,EAAA+lD,EAAA/5B,MAAAy6B,GACA,IAAAliB,EAAAiZ,EAAA,IAEAgJ,EAAAr4B,KAAAoW,KACAA,IAAA3W,QAAA44B,EAAA,MAGA,IAAAxH,KAcA,OAbA+G,EAAAR,eAAAxvD,QAAA,SAAA4wD,GACA,IAAAroD,EAAAgnD,EAAAqB,GACA7F,EAAAxB,EAAAhhD,EAAAO,MACAoiD,EAAAH,EAAAG,KACAxrD,EAAA6I,EAAAtB,KAAA8jD,EAAA9jD,KACAjK,EAAAuL,EAAAvL,KAEAA,EAAA+xD,OAAA,EAAAvgB,EAAA9uC,UAAA8uC,IACAxxC,IAAA+xD,OAAAvgB,EAAA9uC,SAGAupD,EAAAjsD,GAAA,IAAAkuD,EAAA5lB,EAAA/8B,EAAApB,OAAAzH,EAAAwrD,EAAA2F,sBAGA7zD,KAAAyqD,EACAniB,QACAwrB,QAAA,IAAA3wD,aAAAmlC,GAEA7gC,SACAwkD,YA4CA,SAAAF,EAAArqD,EAAAsJ,EAAA8gD,GACA,IACAkH,GADAhoD,EAAA0/C,kBAAA1/C,GACA2nD,WAAA7G,EAAA9rD,MAEA,GAAAgzD,EAAA,CACA,IAAAe,EAAAf,EAAA/5B,MAEA,OADAv3B,EAAAm4C,gBAAAn4C,EAAA89C,eAAAuU,EAAAjI,EAAArkD,OAAAqkD,EAAA3hD,QAAA,EAAA2hD,EAAAxjB,MAAA0rB,aACA,EAGA,SA+NA,SAAA9K,EAAAxnD,EAAAuL,GAIA,IAHA,IAAAo+C,KACA7P,EAAA95C,EAAAgzC,oBAAAznC,EAAAvL,EAAAuyD,mBAEApY,EAAA,EAAkBA,EAAAL,IAAiBK,EAAA,CACnC,IAAAqY,EAAAxyD,EAAAyyD,gBAAAlnD,EAAA4uC,GAEA,IAAA6V,EAAAwC,GAAA,CAIA,IAAAj7B,EAAAv3B,EAAA+gD,kBAAAx1C,EAAAinD,EAAAl0D,MACA+tD,EAAAuB,EAAA4E,EAAApoD,MACA8/C,EAAAmC,EAAAnC,OAAAlqD,EAAAu3B,EAAA80B,GACAnC,EAAArxB,SAAAtB,EACAoyB,EAAA6I,EAAAl0D,MAAA4rD,GAGA,OAAAP,EA0DA,SAAAH,EAAAI,EAAAH,GACA,QAAAnrD,KAAAmrD,EAAA,CACA,IAAAS,EAAAN,EAAAtrD,GAEA4rD,GACAA,EAAAT,EAAAnrD,KAmFA,SAAAoqD,EAAA1oD,EAAAuL,GACA,IAEAjC,GACAiC,UACAu+C,eAJAnB,EAAA3oD,EAAAuL,GAKAo+C,cAJAnC,EAAAxnD,EAAAuL,IAYA,OALAi/C,EAAApD,SAAApnD,KACAsJ,EAAA0/C,iBAAAJ,EAAA5oD,EAAAuL,GACAjC,EAAA8/C,sBAAAG,EAAAvpD,EAAAuL,IAGAjC,IAoEA,SAAAxL,EAAAD,EAAAF,GAEA,aAGAE,EAAAsB,YAAA,EACAtB,EAAA60D,WA4gCA,SAAAv0D,EAAAsa,EAAAk6C,EAAA1O,GACAA,KAAA,IAAA2O,EAAA,IACA,IAAA3wD,EAAAwW,EAAA,GACAtW,EAAAsW,EAAA,GACAlE,EAAAkE,EAAA,GACAjZ,EAAA8F,KAAAkJ,KAAAvM,IAAAE,IAAAoS,KAIAK,GAHA3S,GAAAzC,GAGAyC,EACA6S,GAHA3S,GAAA3C,GAGA2C,EACA8S,GAHAV,GAAA/U,GAGA+U,EACAnW,EAAAkH,KAAA0I,IAAA2kD,GACA7yD,EAAAwF,KAAAyI,IAAA4kD,GACAE,EAAA,EAAAz0D,EACA00D,EAAAl+C,GAAA,EAAAA,GAAAxW,EACA20D,EAAA9wD,EAAAE,EAAA0wD,EAAAt+C,EAAAzU,EACAkzD,EAAA/wD,EAAAsS,EAAAs+C,EAAA1wD,EAAArC,EACAmzD,EAAAhxD,EAAAE,EAAA0wD,EAAAt+C,EAAAzU,EACAozD,EAAAp+C,GAAA,EAAAA,GAAA1W,EACA+0D,EAAAhxD,EAAAoS,EAAAs+C,EAAA5wD,EAAAnC,EACAszD,EAAAnxD,EAAAsS,EAAAs+C,EAAA1wD,EAAArC,EACAuzD,EAAAlxD,EAAAoS,EAAAs+C,EAAA5wD,EAAAnC,EACAwzD,EAAAr+C,GAAA,EAAAA,GAAA7W,EACAuO,EAAAxO,EAAA,GACAyO,EAAAzO,EAAA,GACA6T,EAAA7T,EAAA,GACAqZ,EAAArZ,EAAA,GACA0O,EAAA1O,EAAA,GACA2O,EAAA3O,EAAA,GACA8T,EAAA9T,EAAA,GACAsZ,EAAAtZ,EAAA,GACA+T,EAAA/T,EAAA,GACAgU,EAAAhU,EAAA,GACAiU,EAAAjU,EAAA,IACAuZ,EAAAvZ,EAAA,IACA8lD,EAAA,GAAA6O,EAAAnmD,EAAAomD,EAAAlmD,EAAAmmD,EAAA9gD,EACA+xC,EAAA,GAAA6O,EAAAlmD,EAAAmmD,EAAAjmD,EAAAkmD,EAAA7gD,EACA8xC,EAAA,GAAA6O,EAAA9gD,EAAA+gD,EAAA9gD,EAAA+gD,EAAA5gD,EACA6xC,EAAA,GAAA6O,EAAAt7C,EAAAu7C,EAAAt7C,EAAAu7C,EAAAt7C,EACAusC,EAAA,GAAAgP,EAAAtmD,EAAAumD,EAAArmD,EAAAsmD,EAAAjhD,EACA+xC,EAAA,GAAAgP,EAAArmD,EAAAsmD,EAAApmD,EAAAqmD,EAAAhhD,EACA8xC,EAAA,GAAAgP,EAAAjhD,EAAAkhD,EAAAjhD,EAAAkhD,EAAA/gD,EACA6xC,EAAA,GAAAgP,EAAAz7C,EAAA07C,EAAAz7C,EAAA07C,EAAAz7C,EACAusC,EAAA,GAAAmP,EAAAzmD,EAAA0mD,EAAAxmD,EAAAymD,EAAAphD,EACA+xC,EAAA,GAAAmP,EAAAxmD,EAAAymD,EAAAvmD,EAAAwmD,EAAAnhD,EACA8xC,EAAA,IAAAmP,EAAAphD,EAAAqhD,EAAAphD,EAAAqhD,EAAAlhD,EACA6xC,EAAA,IAAAmP,EAAA57C,EAAA67C,EAAA57C,EAAA67C,EAAA57C,EAEAvZ,IAAA8lD,IACAA,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,KAGA,OAAA8lD,GAnkCApmD,EAAA01D,aA69BA,SAAA96C,EAAAk6C,EAAA1O,GACAA,KAAA,IAAA2O,EAAA,IACA,IAAA3wD,EAAAwW,EAAA,GACAtW,EAAAsW,EAAA,GACAlE,EAAAkE,EAAA,GACAjZ,EAAA8F,KAAAkJ,KAAAvM,IAAAE,IAAAoS,KAIAK,GAHA3S,GAAAzC,GAGAyC,EACA6S,GAHA3S,GAAA3C,GAGA2C,EACA8S,GAHAV,GAAA/U,GAGA+U,EACAnW,EAAAkH,KAAA0I,IAAA2kD,GACA7yD,EAAAwF,KAAAyI,IAAA4kD,GACAE,EAAA,EAAAz0D,EAiBA,OAhBA6lD,EAAA,GAAArvC,GAAA,EAAAA,GAAAxW,EACA6lD,EAAA,GAAAhiD,EAAAE,EAAA0wD,EAAAt+C,EAAAzU,EACAmkD,EAAA,GAAAhiD,EAAAsS,EAAAs+C,EAAA1wD,EAAArC,EACAmkD,EAAA,KACAA,EAAA,GAAAhiD,EAAAE,EAAA0wD,EAAAt+C,EAAAzU,EACAmkD,EAAA,GAAAnvC,GAAA,EAAAA,GAAA1W,EACA6lD,EAAA,GAAA9hD,EAAAoS,EAAAs+C,EAAA5wD,EAAAnC,EACAmkD,EAAA,KACAA,EAAA,GAAAhiD,EAAAsS,EAAAs+C,EAAA1wD,EAAArC,EACAmkD,EAAA,GAAA9hD,EAAAoS,EAAAs+C,EAAA5wD,EAAAnC,EACAmkD,EAAA,IAAAhvC,GAAA,EAAAA,GAAA7W,EACA6lD,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,GA3/BApmD,EAAA4O,OACA5O,EAAA8d,QAqlBA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAgoC,GACAA,KAAA,IAAA2O,EAAA,IACA,IAAApM,EAAA3qC,EAAAD,EACA6qC,EAAA1qC,EAAAD,EACA4qC,EAAA1qC,EAAAC,EAiBA,OAhBAgoC,EAAA,KAAAjoC,EAAAwqC,EACAvC,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KAAAjoC,EAAAyqC,EACAxC,EAAA,KACAA,EAAA,KACAA,EAAA,IAAAroC,EAAAC,GAAA2qC,EACAvC,EAAA,IAAAloC,EAAAD,GAAA2qC,EACAxC,EAAA,IAAAhoC,EAAAyqC,EACAzC,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,IAAAjoC,EAAAC,EAAAyqC,EACAzC,EAAA,MACAA,GAzmBApmD,EAAA21D,QA+cA,SAAAr1D,EAAAsa,EAAAwrC,GACAA,KAAAn+B,EAAAzmB,SACA,IAAAo0D,EAAA,EAAAh7C,EAIA,OAHAwrC,EAAA,GAAA9lD,EAAAs1D,EAAA,GACAxP,EAAA,GAAA9lD,EAAAs1D,EAAA,GACAxP,EAAA,GAAA9lD,EAAAs1D,EAAA,GACAxP,GApdApmD,EAAAsc,eA6bA,SAAAhc,EAAA8lD,GAKA,OAJAA,KAAAn+B,EAAAzmB,UACA,GAAAlB,EAAA,IACA8lD,EAAA,GAAA9lD,EAAA,IACA8lD,EAAA,GAAA9lD,EAAA,IACA8lD,GAjcApmD,EAAA6O,WACA7O,EAAAojB,UACApjB,EAAA4f,OAunBA,SAAAC,EAAAmB,EAAAjB,EAAAqmC,GACAA,KAAA,IAAA2O,EAAA,IACA,IAAAc,EAAAC,EACAC,EAAAC,EACAC,EAAAC,EAoBA,OAnBAjuC,EAAA5E,UAAA4E,EAAA/W,SAAA2O,EAAAmB,EAAAi1C,MACAhuC,EAAA5E,UAAA4E,EAAA1E,MAAAxD,EAAAk2C,EAAAJ,MACA5tC,EAAA5E,UAAA4E,EAAA1E,MAAA0yC,EAAAJ,EAAAE,MACA3P,EAAA,GAAAyP,EAAA,GACAzP,EAAA,GAAAyP,EAAA,GACAzP,EAAA,GAAAyP,EAAA,GACAzP,EAAA,KACAA,EAAA,GAAA2P,EAAA,GACA3P,EAAA,GAAA2P,EAAA,GACA3P,EAAA,GAAA2P,EAAA,GACA3P,EAAA,KACAA,EAAA,GAAA6P,EAAA,GACA7P,EAAA,GAAA6P,EAAA,GACA7P,EAAA,IAAA6P,EAAA,GACA7P,EAAA,MACAA,EAAA,IAAAvmC,EAAA,GACAumC,EAAA,IAAAvmC,EAAA,GACAumC,EAAA,IAAAvmC,EAAA,GACAumC,EAAA,MACAA,GA9oBApmD,EAAA2P,SAwVA,SAAAnB,EAAAjG,EAAA69C,GACAA,KAAA,IAAA2O,EAAA,IACA,IAAAhgD,EAAAvG,EAAA,GACAmG,EAAAnG,EAAA,GACAoG,EAAApG,EAAA,GACAiJ,EAAAjJ,EAAA,GACAwG,EAAAxG,EAAA,GACAyG,EAAAzG,EAAA,GACAqG,EAAArG,EAAA,GACAkJ,EAAAlJ,EAAA,GACA0G,EAAA1G,EAAA,GACA2G,EAAA3G,EAAA,GACA4G,EAAA5G,EAAA,IACAmJ,EAAAnJ,EAAA,IACAoJ,EAAApJ,EAAA,IACAqJ,EAAArJ,EAAA,IACAsJ,EAAAtJ,EAAA,IACAuJ,EAAAvJ,EAAA,IACAmH,EAAApN,EAAA,GACA8M,EAAA9M,EAAA,GACAqN,EAAArN,EAAA,GACAyP,EAAAzP,EAAA,GACAsN,EAAAtN,EAAA,GACA+M,EAAA/M,EAAA,GACAuN,EAAAvN,EAAA,GACAsZ,EAAAtZ,EAAA,GACAwN,EAAAxN,EAAA,GACAgN,EAAAhN,EAAA,GACAyN,EAAAzN,EAAA,IACA4tD,EAAA5tD,EAAA,IACA6tD,EAAA7tD,EAAA,IACA8tD,EAAA9tD,EAAA,IACA+tD,EAAA/tD,EAAA,IACAguD,EAAAhuD,EAAA,IAiBA,OAhBA69C,EAAA,GAAArxC,EAAAY,EAAAX,EAAAK,EAAAH,EAAAU,EAAAgC,EAAAI,EACAouC,EAAA,GAAAzxC,EAAAgB,EAAAV,EAAAI,EAAAF,EAAAS,EAAAiC,EAAAG,EACAouC,EAAA,GAAAxxC,EAAAe,EAAAd,EAAAQ,EAAAD,EAAAQ,EAAAkC,EAAAE,EACAouC,EAAA,GAAA3uC,EAAA9B,EAAA+B,EAAArC,EAAAsC,EAAA/B,EAAAmC,EAAAC,EACAouC,EAAA,GAAArxC,EAAAc,EAAAb,EAAAM,EAAAJ,EAAAY,EAAA8B,EAAAiK,EACAukC,EAAA,GAAAzxC,EAAAkB,EAAAZ,EAAAK,EAAAH,EAAAW,EAAA+B,EAAAgK,EACAukC,EAAA,GAAAxxC,EAAAiB,EAAAhB,EAAAS,EAAAF,EAAAU,EAAAgC,EAAA+J,EACAukC,EAAA,GAAA3uC,EAAA5B,EAAA6B,EAAApC,EAAAqC,EAAA7B,EAAAiC,EAAA8J,EACAukC,EAAA,GAAArxC,EAAAgB,EAAAf,EAAAO,EAAAL,EAAAc,EAAA4B,EAAAu+C,EACA/P,EAAA,GAAAzxC,EAAAoB,EAAAd,EAAAM,EAAAJ,EAAAa,EAAA6B,EAAAs+C,EACA/P,EAAA,IAAAxxC,EAAAmB,EAAAlB,EAAAU,EAAAH,EAAAY,EAAA8B,EAAAq+C,EACA/P,EAAA,IAAA3uC,EAAA1B,EAAA2B,EAAAnC,EAAAoC,EAAA3B,EAAA+B,EAAAo+C,EACA/P,EAAA,IAAArxC,EAAAqhD,EAAAphD,EAAAqhD,EAAAnhD,EAAAohD,EAAA1+C,EAAA2+C,EACAnQ,EAAA,IAAAzxC,EAAAyhD,EAAAnhD,EAAAohD,EAAAlhD,EAAAmhD,EAAAz+C,EAAA0+C,EACAnQ,EAAA,IAAAxxC,EAAAwhD,EAAAvhD,EAAAwhD,EAAAjhD,EAAAkhD,EAAAx+C,EAAAy+C,EACAnQ,EAAA,IAAA3uC,EAAA2+C,EAAA1+C,EAAA2+C,EAAA1+C,EAAA2+C,EAAAv+C,EAAAw+C,EACAnQ,GAzYApmD,EAAAmjB,OAgHA,SAAA7iB,EAAA8lD,GAkBA,OAjBAA,KAAA,IAAA2O,EAAA,KACA,IAAAz0D,EAAA,GACA8lD,EAAA,IAAA9lD,EAAA,GACA8lD,EAAA,IAAA9lD,EAAA,GACA8lD,EAAA,IAAA9lD,EAAA,GACA8lD,EAAA,IAAA9lD,EAAA,GACA8lD,EAAA,IAAA9lD,EAAA,GACA8lD,EAAA,IAAA9lD,EAAA,GACA8lD,EAAA,IAAA9lD,EAAA,GACA8lD,EAAA,IAAA9lD,EAAA,GACA8lD,EAAA,IAAA9lD,EAAA,GACA8lD,EAAA,KAAA9lD,EAAA,IACA8lD,EAAA,KAAA9lD,EAAA,IACA8lD,EAAA,KAAA9lD,EAAA,IACA8lD,EAAA,KAAA9lD,EAAA,IACA8lD,EAAA,KAAA9lD,EAAA,IACA8lD,EAAA,KAAA9lD,EAAA,IACA8lD,GAjIApmD,EAAAyf,MAoiBA,SAAA1B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAgoC,GAkBA,OAjBAA,KAAA,IAAA2O,EAAA,KACA,MAAA/2C,EAAAD,GACAqoC,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MAAAloC,EAAAD,GACAmoC,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,OAAAjoC,EAAAC,GACAgoC,EAAA,MACAA,EAAA,KAAApoC,EAAAD,MAAAC,GACAooC,EAAA,KAAAloC,EAAAD,MAAAC,GACAkoC,EAAA,KAAAhoC,EAAAD,MAAAC,GACAgoC,EAAA,MACAA,GArjBApmD,EAAAwe,YA2fA,SAAAg4C,EAAA93C,EAAA+3C,EAAAC,EAAAtQ,GACAA,KAAA,IAAA2O,EAAA,IACA,IAAAp2C,EAAAlX,KAAAmX,IAAA,GAAAnX,KAAA6G,GAAA,GAAAkoD,GACAG,EAAA,GAAAF,EAAAC,GAiBA,OAhBAtQ,EAAA,GAAAznC,EAAAD,EACA0nC,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAAznC,EACAynC,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KAAAqQ,EAAAC,GAAAC,EACAvQ,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,IAAAqQ,EAAAC,EAAAC,EAAA,EACAvQ,EAAA,MACAA,GA9gBApmD,EAAA8a,QA0wBA,SAAAxa,EAAAw0D,EAAA1O,GACAA,KAAA,IAAA2O,EAAA,IACA,IAAA/lD,EAAA1O,EAAA,GACA2O,EAAA3O,EAAA,GACA8T,EAAA9T,EAAA,GACAsZ,EAAAtZ,EAAA,GACA+T,EAAA/T,EAAA,GACAgU,EAAAhU,EAAA,GACAiU,EAAAjU,EAAA,IACAuZ,EAAAvZ,EAAA,IACAC,EAAAkH,KAAA0I,IAAA2kD,GACA7yD,EAAAwF,KAAAyI,IAAA4kD,GACA1O,EAAA,GAAA7lD,EAAAyO,EAAA/M,EAAAoS,EACA+xC,EAAA,GAAA7lD,EAAA0O,EAAAhN,EAAAqS,EACA8xC,EAAA,GAAA7lD,EAAA6T,EAAAnS,EAAAsS,EACA6xC,EAAA,GAAA7lD,EAAAqZ,EAAA3X,EAAA4X,EACAusC,EAAA,GAAA7lD,EAAA8T,EAAApS,EAAA+M,EACAo3C,EAAA,GAAA7lD,EAAA+T,EAAArS,EAAAgN,EACAm3C,EAAA,IAAA7lD,EAAAgU,EAAAtS,EAAAmS,EACAgyC,EAAA,IAAA7lD,EAAAsZ,EAAA5X,EAAA2X,EAEAtZ,IAAA8lD,IACAA,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,KAGA,OAAA8lD,GAzyBApmD,EAAA+a,QAq1BA,SAAAza,EAAAw0D,EAAA1O,GACAA,KAAA,IAAA2O,EAAA,IACA,IAAAjmD,EAAAxO,EAAA,GACAyO,EAAAzO,EAAA,GACA6T,EAAA7T,EAAA,GACAqZ,EAAArZ,EAAA,GACA+T,EAAA/T,EAAA,GACAgU,EAAAhU,EAAA,GACAiU,EAAAjU,EAAA,IACAuZ,EAAAvZ,EAAA,IACAC,EAAAkH,KAAA0I,IAAA2kD,GACA7yD,EAAAwF,KAAAyI,IAAA4kD,GACA1O,EAAA,GAAA7lD,EAAAuO,EAAA7M,EAAAoS,EACA+xC,EAAA,GAAA7lD,EAAAwO,EAAA9M,EAAAqS,EACA8xC,EAAA,GAAA7lD,EAAA4T,EAAAlS,EAAAsS,EACA6xC,EAAA,GAAA7lD,EAAAoZ,EAAA1X,EAAA4X,EACAusC,EAAA,GAAA7lD,EAAA8T,EAAApS,EAAA6M,EACAs3C,EAAA,GAAA7lD,EAAA+T,EAAArS,EAAA8M,EACAq3C,EAAA,IAAA7lD,EAAAgU,EAAAtS,EAAAkS,EACAiyC,EAAA,IAAA7lD,EAAAsZ,EAAA5X,EAAA0X,EAEArZ,IAAA8lD,IACAA,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,KAGA,OAAA8lD,GAp3BApmD,EAAAgb,QAg6BA,SAAA1a,EAAAw0D,EAAA1O,GACAA,KAAA,IAAA2O,EAAA,IACA,IAAAjmD,EAAAxO,EAAA,GACAyO,EAAAzO,EAAA,GACA6T,EAAA7T,EAAA,GACAqZ,EAAArZ,EAAA,GACA0O,EAAA1O,EAAA,GACA2O,EAAA3O,EAAA,GACA8T,EAAA9T,EAAA,GACAsZ,EAAAtZ,EAAA,GACAC,EAAAkH,KAAA0I,IAAA2kD,GACA7yD,EAAAwF,KAAAyI,IAAA4kD,GACA1O,EAAA,GAAA7lD,EAAAuO,EAAA7M,EAAA+M,EACAo3C,EAAA,GAAA7lD,EAAAwO,EAAA9M,EAAAgN,EACAm3C,EAAA,GAAA7lD,EAAA4T,EAAAlS,EAAAmS,EACAgyC,EAAA,GAAA7lD,EAAAoZ,EAAA1X,EAAA2X,EACAwsC,EAAA,GAAA7lD,EAAAyO,EAAA/M,EAAA6M,EACAs3C,EAAA,GAAA7lD,EAAA0O,EAAAhN,EAAA8M,EACAq3C,EAAA,GAAA7lD,EAAA6T,EAAAnS,EAAAkS,EACAiyC,EAAA,GAAA7lD,EAAAqZ,EAAA3X,EAAA0X,EAEArZ,IAAA8lD,IACAA,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,KAGA,OAAA8lD,GA/7BApmD,EAAA42D,UAsuBA,SAAA9B,EAAA1O,GACAA,KAAA,IAAA2O,EAAA,IACA,IAAAx0D,EAAAkH,KAAA0I,IAAA2kD,GACA7yD,EAAAwF,KAAAyI,IAAA4kD,GAiBA,OAhBA1O,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAA7lD,EACA6lD,EAAA,GAAAnkD,EACAmkD,EAAA,KACAA,EAAA,KACAA,EAAA,IAAAnkD,EACAmkD,EAAA,IAAA7lD,EACA6lD,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,GAzvBApmD,EAAA62D,UAizBA,SAAA/B,EAAA1O,GACAA,KAAA,IAAA2O,EAAA,IACA,IAAAx0D,EAAAkH,KAAA0I,IAAA2kD,GACA7yD,EAAAwF,KAAAyI,IAAA4kD,GAiBA,OAhBA1O,EAAA,GAAA7lD,EACA6lD,EAAA,KACAA,EAAA,IAAAnkD,EACAmkD,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAAnkD,EACAmkD,EAAA,KACAA,EAAA,IAAA7lD,EACA6lD,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,GAp0BApmD,EAAA82D,UA43BA,SAAAhC,EAAA1O,GACAA,KAAA,IAAA2O,EAAA,IACA,IAAAx0D,EAAAkH,KAAA0I,IAAA2kD,GACA7yD,EAAAwF,KAAAyI,IAAA4kD,GAiBA,OAhBA1O,EAAA,GAAA7lD,EACA6lD,EAAA,GAAAnkD,EACAmkD,EAAA,KACAA,EAAA,KACAA,EAAA,IAAAnkD,EACAmkD,EAAA,GAAA7lD,EACA6lD,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,GA/4BApmD,EAAAuR,MAgmCA,SAAAjR,EAAA+M,EAAA+4C,GACAA,KAAA,IAAA2O,EAAA,IACA,IAAA1kD,EAAAhD,EAAA,GACAiD,EAAAjD,EAAA,GACA2a,EAAA3a,EAAA,GACA+4C,EAAA,GAAA/1C,EAAA/P,EAAA,GACA8lD,EAAA,GAAA/1C,EAAA/P,EAAA,GACA8lD,EAAA,GAAA/1C,EAAA/P,EAAA,GACA8lD,EAAA,GAAA/1C,EAAA/P,EAAA,GACA8lD,EAAA,GAAA91C,EAAAhQ,EAAA,GACA8lD,EAAA,GAAA91C,EAAAhQ,EAAA,GACA8lD,EAAA,GAAA91C,EAAAhQ,EAAA,GACA8lD,EAAA,GAAA91C,EAAAhQ,EAAA,GACA8lD,EAAA,GAAAp+B,EAAA1nB,EAAA,GACA8lD,EAAA,GAAAp+B,EAAA1nB,EAAA,GACA8lD,EAAA,IAAAp+B,EAAA1nB,EAAA,IACA8lD,EAAA,IAAAp+B,EAAA1nB,EAAA,IAEAA,IAAA8lD,IACAA,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,KAGA,OAAA8lD,GAxnCApmD,EAAA+2D,QA8jCA,SAAA1pD,EAAA+4C,GAkBA,OAjBAA,KAAA,IAAA2O,EAAA,KACA,GAAA1nD,EAAA,GACA+4C,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,GAAA/4C,EAAA,GACA+4C,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,IAAA/4C,EAAA,GACA+4C,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,GA/kCApmD,EAAAg3D,QAgdA,SAAAxoD,EAAAnB,EAAAuN,EAAAwrC,GACAA,IAAA53C,IACA43C,EAAAx3C,EAAAJ,EAAA43C,IAGA,IAAAwP,EAAA,EAAAh7C,EAIA,OAHAwrC,EAAAwP,EAAA,GAAAvoD,EAAA,GACA+4C,EAAAwP,EAAA,GAAAvoD,EAAA,GACA+4C,EAAAwP,EAAA,GAAAvoD,EAAA,GACA+4C,GAxdApmD,EAAAmpD,eAsFA,SAAAC,GACA,IAAAC,EAAA0L,EAEA,OADAA,EAAA3L,EACAC,GAxFArpD,EAAAi3D,eAyYA,SAAAzoD,EAAAnB,EAAA+4C,GACAA,KAAAv3C,IAEAL,IAAA43C,IACAA,EAAA,GAAA53C,EAAA,GACA43C,EAAA,GAAA53C,EAAA,GACA43C,EAAA,GAAA53C,EAAA,GACA43C,EAAA,GAAA53C,EAAA,GACA43C,EAAA,GAAA53C,EAAA,GACA43C,EAAA,GAAA53C,EAAA,GACA43C,EAAA,GAAA53C,EAAA,GACA43C,EAAA,GAAA53C,EAAA,GACA43C,EAAA,GAAA53C,EAAA,GACA43C,EAAA,GAAA53C,EAAA,GACA43C,EAAA,IAAA53C,EAAA,IACA43C,EAAA,IAAA53C,EAAA,KAOA,OAJA43C,EAAA,IAAA/4C,EAAA,GACA+4C,EAAA,IAAA/4C,EAAA,GACA+4C,EAAA,IAAA/4C,EAAA,GACA+4C,EAAA,MACAA,GA9ZApmD,EAAAk3D,mBA4pCA,SAAA52D,EAAA+M,EAAA+4C,GACAA,KAAAn+B,EAAAzmB,SACA,IAAA6O,EAAAhD,EAAA,GACAiD,EAAAjD,EAAA,GACA2a,EAAA3a,EAAA,GAIA,OAHA+4C,EAAA,GAAA/1C,EAAA/P,EAAA,GAAAgQ,EAAAhQ,EAAA,GAAA0nB,EAAA1nB,EAAA,GACA8lD,EAAA,GAAA/1C,EAAA/P,EAAA,GAAAgQ,EAAAhQ,EAAA,GAAA0nB,EAAA1nB,EAAA,GACA8lD,EAAA,GAAA/1C,EAAA/P,EAAA,GAAAgQ,EAAAhQ,EAAA,GAAA0nB,EAAA1nB,EAAA,IACA8lD,GAnqCApmD,EAAAm3D,gBAsrCA,SAAA72D,EAAA+M,EAAA+4C,GACAA,KAAAn+B,EAAAzmB,SACA,IAAA41D,EAAAh0C,EAAA9iB,GACA+P,EAAAhD,EAAA,GACAiD,EAAAjD,EAAA,GACA2a,EAAA3a,EAAA,GAIA,OAHA+4C,EAAA,GAAA/1C,EAAA+mD,EAAA,GAAA9mD,EAAA8mD,EAAA,GAAApvC,EAAAovC,EAAA,GACAhR,EAAA,GAAA/1C,EAAA+mD,EAAA,GAAA9mD,EAAA8mD,EAAA,GAAApvC,EAAAovC,EAAA,GACAhR,EAAA,GAAA/1C,EAAA+mD,EAAA,GAAA9mD,EAAA8mD,EAAA,GAAApvC,EAAAovC,EAAA,IACAhR,GA9rCApmD,EAAAq3D,eAgoCA,SAAA/2D,EAAA+M,EAAA+4C,GACAA,KAAAn+B,EAAAzmB,SACA,IAAA6O,EAAAhD,EAAA,GACAiD,EAAAjD,EAAA,GACA2a,EAAA3a,EAAA,GACA7M,EAAA6P,EAAA/P,EAAA,GAAAgQ,EAAAhQ,EAAA,GAAA0nB,EAAA1nB,EAAA,IAAAA,EAAA,IAIA,OAHA8lD,EAAA,IAAA/1C,EAAA/P,EAAA,GAAAgQ,EAAAhQ,EAAA,GAAA0nB,EAAA1nB,EAAA,GAAAA,EAAA,KAAAE,EACA4lD,EAAA,IAAA/1C,EAAA/P,EAAA,GAAAgQ,EAAAhQ,EAAA,GAAA0nB,EAAA1nB,EAAA,GAAAA,EAAA,KAAAE,EACA4lD,EAAA,IAAA/1C,EAAA/P,EAAA,GAAAgQ,EAAAhQ,EAAA,GAAA0nB,EAAA1nB,EAAA,IAAAA,EAAA,KAAAE,EACA4lD,GAxoCApmD,EAAA4H,UAuqBA,SAAAtH,EAAA+M,EAAA+4C,GACAA,KAAA,IAAA2O,EAAA,IACA,IAAA1kD,EAAAhD,EAAA,GACAiD,EAAAjD,EAAA,GACA2a,EAAA3a,EAAA,GACAyB,EAAAxO,EAAA,GACAyO,EAAAzO,EAAA,GACA6T,EAAA7T,EAAA,GACAqZ,EAAArZ,EAAA,GACA0O,EAAA1O,EAAA,GACA2O,EAAA3O,EAAA,GACA8T,EAAA9T,EAAA,GACAsZ,EAAAtZ,EAAA,GACA+T,EAAA/T,EAAA,GACAgU,EAAAhU,EAAA,GACAiU,EAAAjU,EAAA,IACAuZ,EAAAvZ,EAAA,IACAwZ,EAAAxZ,EAAA,IACAyZ,EAAAzZ,EAAA,IACA0Z,EAAA1Z,EAAA,IACA2Z,EAAA3Z,EAAA,IAEAA,IAAA8lD,IACAA,EAAA,GAAAt3C,EACAs3C,EAAA,GAAAr3C,EACAq3C,EAAA,GAAAjyC,EACAiyC,EAAA,GAAAzsC,EACAysC,EAAA,GAAAp3C,EACAo3C,EAAA,GAAAn3C,EACAm3C,EAAA,GAAAhyC,EACAgyC,EAAA,GAAAxsC,EACAwsC,EAAA,GAAA/xC,EACA+xC,EAAA,GAAA9xC,EACA8xC,EAAA,IAAA7xC,EACA6xC,EAAA,IAAAvsC,GAOA,OAJAusC,EAAA,IAAAt3C,EAAAuB,EAAArB,EAAAsB,EAAA+D,EAAA2T,EAAAlO,EACAssC,EAAA,IAAAr3C,EAAAsB,EAAApB,EAAAqB,EAAAgE,EAAA0T,EAAAjO,EACAqsC,EAAA,IAAAjyC,EAAA9D,EAAA+D,EAAA9D,EAAAiE,EAAAyT,EAAAhO,EACAosC,EAAA,IAAAzsC,EAAAtJ,EAAAuJ,EAAAtJ,EAAAuJ,EAAAmO,EAAA/N,EACAmsC,GA/sBApmD,EAAA4b,YAuoBA,SAAAvO,EAAA+4C,GAkBA,OAjBAA,KAAA,IAAA2O,EAAA,KACA,KACA3O,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MACAA,EAAA,MACAA,EAAA,IAAA/4C,EAAA,GACA+4C,EAAA,IAAA/4C,EAAA,GACA+4C,EAAA,IAAA/4C,EAAA,GACA+4C,EAAA,MACAA,GAxpBApmD,EAAAkP,UAoLA,SAAA5O,EAAA8lD,GAGA,IAFAA,KAAA,IAAA2O,EAAA,OAEAz0D,EAAA,CACA,IAAAc,EAmBA,OAlBAA,EAAAd,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAc,EACAA,EAAAd,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAc,EACAA,EAAAd,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAc,EACAA,EAAAd,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAc,EACAA,EAAAd,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAc,EACAA,EAAAd,EAAA,IACAA,EAAA,IAAAA,EAAA,IACAA,EAAA,IAAAc,EACAglD,EAGA,IAAAt3C,EAAAxO,EAAA,GACAyO,EAAAzO,EAAA,GACA6T,EAAA7T,EAAA,GACAqZ,EAAArZ,EAAA,GACA0O,EAAA1O,EAAA,GACA2O,EAAA3O,EAAA,GACA8T,EAAA9T,EAAA,GACAsZ,EAAAtZ,EAAA,GACA+T,EAAA/T,EAAA,GACAgU,EAAAhU,EAAA,GACAiU,EAAAjU,EAAA,IACAuZ,EAAAvZ,EAAA,IACAwZ,EAAAxZ,EAAA,IACAyZ,EAAAzZ,EAAA,IACA0Z,EAAA1Z,EAAA,IACA2Z,EAAA3Z,EAAA,IAiBA,OAhBA8lD,EAAA,GAAAt3C,EACAs3C,EAAA,GAAAp3C,EACAo3C,EAAA,GAAA/xC,EACA+xC,EAAA,GAAAtsC,EACAssC,EAAA,GAAAr3C,EACAq3C,EAAA,GAAAn3C,EACAm3C,EAAA,GAAA9xC,EACA8xC,EAAA,GAAArsC,EACAqsC,EAAA,GAAAjyC,EACAiyC,EAAA,GAAAhyC,EACAgyC,EAAA,IAAA7xC,EACA6xC,EAAA,IAAApsC,EACAosC,EAAA,IAAAzsC,EACAysC,EAAA,IAAAxsC,EACAwsC,EAAA,IAAAvsC,EACAusC,EAAA,IAAAnsC,EACAmsC,GA5OA,IAAAn+B,EAEA,SAAAyP,GAAuC,GAAAA,KAAAp2B,WAA6B,OAAAo2B,EAAqB,IAAA0B,KAAiB,SAAA1B,EAAmB,QAAAj2B,KAAAi2B,EAAuB,GAAA92B,OAAAkB,UAAAC,eAAA1B,KAAAq3B,EAAAj2B,GAAA,CAAsD,IAAAqrD,EAAAlsD,OAAAC,gBAAAD,OAAAmsD,yBAAAnsD,OAAAmsD,yBAAAr1B,EAAAj2B,MAAsHqrD,EAAA/rD,KAAA+rD,EAAAtmD,IAA4B5F,OAAAC,eAAAu4B,EAAA33B,EAAAqrD,GAAmD1zB,EAAA33B,GAAAi2B,EAAAj2B,GAAsD,OAAtB23B,EAAAiuB,QAAA3vB,EAAsB0B,EAFrcwzB,CAAA9sD,EAAA,IA2DA,IAAAi1D,EAAAnxD,aACAkyD,EAAA7tC,EAAAzmB,SACAw0D,EAAA/tC,EAAAzmB,SACA00D,EAAAjuC,EAAAzmB,SA0DA,SAAAoN,EAAAtO,EAAA8lD,GAkBA,OAjBAA,KAAA,IAAA2O,EAAA,KACA,GAAAz0D,EAAA,GACA8lD,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,GAAA9lD,EAAA,GACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAAA,IAAA9lD,EAAA,IACA8lD,EAWA,SAAAv3C,EAAAu3C,GAkBA,OAjBAA,KAAA,IAAA2O,EAAA,KACA,KACA3O,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAgFA,SAAAhjC,EAAA9iB,EAAA8lD,GACAA,KAAA,IAAA2O,EAAA,IACA,IAAAjmD,EAAAxO,EAAA,GACAyO,EAAAzO,EAAA,GACA6T,EAAA7T,EAAA,GACAqZ,EAAArZ,EAAA,GACA0O,EAAA1O,EAAA,GACA2O,EAAA3O,EAAA,GACA8T,EAAA9T,EAAA,GACAsZ,EAAAtZ,EAAA,GACA+T,EAAA/T,EAAA,GACAgU,EAAAhU,EAAA,GACAiU,EAAAjU,EAAA,IACAuZ,EAAAvZ,EAAA,IACAwZ,EAAAxZ,EAAA,IACAyZ,EAAAzZ,EAAA,IACA0Z,EAAA1Z,EAAA,IACA2Z,EAAA3Z,EAAA,IACAg3D,EAAA/iD,EAAA0F,EACAs9C,EAAAv9C,EAAAH,EACA29C,EAAApjD,EAAA6F,EACAw9C,EAAAz9C,EAAAJ,EACA89C,EAAAtjD,EAAAyF,EACA89C,EAAApjD,EAAAqF,EACAg+C,EAAAzjD,EAAA8F,EACA49C,EAAA79C,EAAAL,EACAm+C,EAAA3jD,EAAA0F,EACAk+C,EAAAxjD,EAAAoF,EACAq+C,EAAA7jD,EAAAyF,EACAq+C,EAAA7jD,EAAAuF,EACAu+C,EAAA7jD,EAAA0F,EACAo+C,EAAAr+C,EAAAxF,EACA8jD,EAAAppD,EAAA+K,EACAs+C,EAAAv+C,EAAA7K,EACAqpD,EAAAtpD,EAAAsF,EACAikD,EAAAlkD,EAAApF,EACAupD,EAAA1pD,EAAAiL,EACA0+C,EAAA3+C,EAAA/K,EACA2pD,EAAA5pD,EAAAwF,EACAqkD,EAAAtkD,EAAAtF,EACA6pD,EAAA9pD,EAAAG,EACA4pD,EAAA7pD,EAAAD,EACAkzB,EAAAq1B,EAAAroD,EAAAwoD,EAAAnjD,EAAAojD,EAAA39C,GAAAw9C,EAAAtoD,EAAAuoD,EAAAljD,EAAAqjD,EAAA59C,GACAooB,EAAAo1B,EAAAxoD,EAAA6oD,EAAAtjD,EAAAyjD,EAAAh+C,GAAAu9C,EAAAvoD,EAAA8oD,EAAAvjD,EAAAwjD,EAAA/9C,GACA2uC,EAAA8O,EAAAzoD,EAAA8oD,EAAA5oD,EAAA+oD,EAAAj+C,GAAA09C,EAAA1oD,EAAA6oD,EAAA3oD,EAAAgpD,EAAAl+C,GACA++C,EAAAnB,EAAA5oD,EAAA+oD,EAAA7oD,EAAAgpD,EAAA3jD,GAAAojD,EAAA3oD,EAAAgpD,EAAA9oD,EAAA+oD,EAAA1jD,GACA9T,EAAA,GAAAsO,EAAAmzB,EAAAjzB,EAAAmzB,EAAA9tB,EAAAq0C,EAAA5uC,EAAAg/C,GAiBA,OAhBA1S,EAAA,GAAA5lD,EAAAyhC,EACAmkB,EAAA,GAAA5lD,EAAA2hC,EACAikB,EAAA,GAAA5lD,EAAAkoD,EACAtC,EAAA,GAAA5lD,EAAAs4D,EACA1S,EAAA,GAAA5lD,GAAA+2D,EAAAvoD,EAAAwoD,EAAAnjD,EAAAsjD,EAAA79C,GAAAw9C,EAAAtoD,EAAAyoD,EAAApjD,EAAAqjD,EAAA59C,IACAssC,EAAA,GAAA5lD,GAAA82D,EAAAxoD,EAAA+oD,EAAAxjD,EAAAyjD,EAAAh+C,GAAAy9C,EAAAzoD,EAAA8oD,EAAAvjD,EAAA0jD,EAAAj+C,IACAssC,EAAA,GAAA5lD,GAAAi3D,EAAA3oD,EAAA8oD,EAAA5oD,EAAAipD,EAAAn+C,GAAA09C,EAAA1oD,EAAA+oD,EAAA7oD,EAAAgpD,EAAAl+C,IACAssC,EAAA,GAAA5lD,GAAAk3D,EAAA5oD,EAAAipD,EAAA/oD,EAAAgpD,EAAA3jD,GAAAsjD,EAAA7oD,EAAAgpD,EAAA9oD,EAAAipD,EAAA5jD,IACA+xC,EAAA,GAAA5lD,GAAA03D,EAAAt+C,EAAAy+C,EAAAx+C,EAAAy+C,EAAAr+C,GAAAk+C,EAAAv+C,EAAAw+C,EAAAv+C,EAAA0+C,EAAAt+C,IACAmsC,EAAA,GAAA5lD,GAAA23D,EAAAx+C,EAAA6+C,EAAA3+C,EAAA8+C,EAAA1+C,GAAAi+C,EAAAv+C,EAAA8+C,EAAA5+C,EAAA6+C,EAAAz+C,IACAmsC,EAAA,IAAA5lD,GAAA43D,EAAAz+C,EAAA8+C,EAAA7+C,EAAAg/C,EAAA3+C,GAAAo+C,EAAA1+C,EAAA6+C,EAAA5+C,EAAAi/C,EAAA5+C,IACAmsC,EAAA,IAAA5lD,GAAA+3D,EAAA5+C,EAAA++C,EAAA9+C,EAAAi/C,EAAAh/C,GAAAy+C,EAAA3+C,EAAAg/C,EAAA/+C,EAAAg/C,EAAA/+C,IACAusC,EAAA,IAAA5lD,GAAA43D,EAAA7jD,EAAAgkD,EAAAv+C,EAAAm+C,EAAA/jD,GAAAkkD,EAAAt+C,EAAAk+C,EAAA9jD,EAAAikD,EAAA9jD,IACA6xC,EAAA,IAAA5lD,GAAAk4D,EAAA1+C,EAAAk+C,EAAA/jD,EAAAskD,EAAAlkD,GAAAikD,EAAAjkD,EAAAokD,EAAA3+C,EAAAm+C,EAAAhkD,IACAiyC,EAAA,IAAA5lD,GAAAg4D,EAAApkD,EAAAykD,EAAA7+C,EAAAq+C,EAAAlkD,GAAAykD,EAAA5+C,EAAAo+C,EAAAjkD,EAAAskD,EAAArkD,IACAgyC,EAAA,IAAA5lD,GAAAo4D,EAAArkD,EAAA+jD,EAAAnkD,EAAAwkD,EAAAvkD,GAAAskD,EAAAtkD,EAAAykD,EAAAtkD,EAAAgkD,EAAApkD,IACAiyC,IAw4BA,SAAAnmD,EAAAD,EAAAF,GAEA,aAGAE,EAAAsB,YAAA,EACAtB,EAAA+4D,0BACA/4D,EAAAg5D,wBAutBA,SAAA72D,EAAAm9B,GACA,IAAAssB,KACAhrD,OAAA4C,KAAA87B,GAAA77B,QAAA,SAAAhC,GACAmqD,EAAAnqD,GAAAw3D,EAAA92D,EAAAm9B,EAAA79B,QAGA69B,EAAA7yB,SACAm/C,EAAAsN,YAAA55B,EAAA7yB,QAAAtJ,OACAyoD,EAAAuN,YAAAC,EAAA9R,uBAAA+R,EAAA/5B,EAAA7yB,SAAA,YAEAm/C,EAAAsN,YA7PA,SAAA55B,GAGA,IAFA,IAAA79B,EAEA8xD,EAAA,EAAmBA,EAAA+F,EAAAn2D,WACnB1B,EAAA63D,EAAA/F,MAEAj0B,KAH8Ci0B,GAQ9CjX,KAAAgd,EAAAn2D,SACA1B,EAAAb,OAAA4C,KAAA87B,GAAA,IAGA,IAAAyJ,EAAAzJ,EAAA79B,GACA0B,EAAAo2D,EAAAxwB,GAAA5lC,OACA8I,EAAAutD,EAAAzwB,EAAAtnC,GACAy3D,EAAA/1D,EAAA8I,EAEA,GAAA9I,EAAA8I,EAAA,EACA,sBAAAA,EAAA,2BAAA9I,EAGA,OAAA+1D,EAqOAO,CAAAn6B,GAGA,OAAAssB,GAnuBA5rD,EAAAi5D,wBACAj5D,EAAA05D,6BACA15D,EAAA2M,2BAwoBA,SAAAxK,EAAAm9B,GACA,IAAA5yB,GACAc,QAAAurD,EAAA52D,EAAAm9B,IAEA7yB,EAAA6yB,EAAA7yB,QAEA,GAAAA,EAAA,CACA,IAAAktD,EAAAN,EAAA5sD,EAAA,WACAC,EAAAD,QAAAitD,EAAAv3D,EAAAw3D,EAAAx3D,EAAA+6C,sBACAxwC,EAAAwsD,YAAAS,EAAAx2D,OACAuJ,EAAAysD,YAAAC,EAAA9R,uBAAAqS,QAEAjtD,EAAAwsD,YAxJA,SAAA/2D,EAAAqL,GACA,IAAA/L,EACA66C,EAEA,IAAAA,EAAA,EAAcA,EAAAgd,EAAAn2D,WACd1B,EAAA63D,EAAAhd,MAEA9uC,OAIA/L,EAAA+sC,EAAAorB,aAAAn4D,KAEA+L,KATwC8uC,GAcxCA,IAAAgd,EAAAn2D,SACA1B,EAAAb,OAAA4C,KAAAgK,GAAA,IAGA,IAAAwjD,EAAAxjD,EAAA/L,GACAU,EAAA4zC,WAAA5zC,EAAAk6C,aAAA2U,EAAA9oD,QACA,IAAA2xD,EAAA13D,EAAA6zC,mBAAA7zC,EAAAk6C,aAAAl6C,EAAA23D,aACA33D,EAAA4zC,WAAA5zC,EAAAk6C,aAAA,MACA,IAAA0d,EA7EA,SAAA53D,EAAAoK,GACA,OAAAA,IAAApK,EAAAqlD,KAAA,EAEAj7C,IAAApK,EAAAq7B,cAAA,EAEAjxB,IAAApK,EAAAslD,MAAA,EAEAl7C,IAAApK,EAAAwlD,eAAA,EAEAp7C,IAAApK,EAAA0lD,IAAA,EAEAt7C,IAAApK,EAAA4lD,aAAA,EAEAx7C,IAAApK,EAAAq6C,MAAA,EAEA,EA8DAwd,CAAA73D,EAAA6uD,EAAAzkD,MACA0tD,EAAAJ,EAAAE,EACA9tD,EAAA+kD,EAAA/kD,eAAA+kD,EAAAtmD,KAEAwuD,EAAAe,EAAAhuD,EAEA,GAAAitD,EAAA,KACA,sBAAAjtD,EAAA,2BAAA9I,OAGA,OAAA+1D,EAoHAgB,CAAA/3D,EAAAuK,EAAAc,SAGA,OAAAd,GAtpBA1M,EAAAuN,6BA6bA,SAAApL,EAAAwyD,EAAA5rB,EAAAn+B,GACAm+B,EAAAswB,EAAAtwB,QAEAh7B,IAAAnD,GACAzI,EAAA4zC,WAAA5zC,EAAAk6C,aAAAsY,EAAAzsD,QACA/F,EAAAs1C,cAAAt1C,EAAAk6C,aAAAzxC,EAAAm+B,IAEAoxB,EAAAh4D,IAAAk6C,aAAAsY,EAAAzsD,OAAA6gC,EAAA4rB,EAAAxoD,WAncAnM,EAAAo6D,mBAmFA,SAAAnoB,GACAzD,EAAAorB,aAAA3nB,GAnFAjyC,EAAAq6D,sBAsFA,SAAAC,GACAzN,EAAA1G,uBAAAmU,EAAA9rB,IAtFAxuC,EAAAu6D,kBAAAf,EACAx5D,EAAAw6D,UAAAjB,EAEA,IAAAH,EAAAxM,EAAA9sD,EAAA,IAEA+sD,EAAAD,EAAA9sD,EAAA,IAEA,SAAA8sD,EAAAl1B,GAAuC,GAAAA,KAAAp2B,WAA6B,OAAAo2B,EAAqB,IAAA0B,KAAiB,SAAA1B,EAAmB,QAAAj2B,KAAAi2B,EAAuB,GAAA92B,OAAAkB,UAAAC,eAAA1B,KAAAq3B,EAAAj2B,GAAA,CAAsD,IAAAqrD,EAAAlsD,OAAAC,gBAAAD,OAAAmsD,yBAAAnsD,OAAAmsD,yBAAAr1B,EAAAj2B,MAAsHqrD,EAAA/rD,KAAA+rD,EAAAtmD,IAA4B5F,OAAAC,eAAAu4B,EAAA33B,EAAAqrD,GAAmD1zB,EAAA33B,GAAAi2B,EAAAj2B,GAAsD,OAAtB23B,EAAAiuB,QAAA3vB,EAAsB0B,EAgDrc,IAEAoV,GACAorB,aAAA,IA+BA,SAAAO,EAAAh4D,EAAAoK,EAAArE,EAAA6gC,EAAA58B,GACAhK,EAAA4zC,WAAAxpC,EAAArE,GACA/F,EAAAq1C,WAAAjrC,EAAAw8B,EAAA58B,GAAAhK,EAAAiK,aAeA,SAAAstD,EAAAv3D,EAAAolD,EAAAh7C,EAAAJ,GACA,GAAA0gD,EAAAvG,SAAAnkD,EAAAolD,GACA,OAAAA,EAGAh7C,KAAApK,EAAAk6C,aACA,IAAAn0C,EAAA/F,EAAAi6C,eAEA,OADA+d,EAAAh4D,EAAAoK,EAAArE,EAAAq/C,EAAAp7C,GACAjE,EAGA,SAAAuyD,EAAAh6D,GACA,kBAAAA,EAmCA,SAAA84D,EAAAxwB,GACA,OAAAA,EAAA5lC,OAAA4lC,IAAA/8B,KAGA,IAAA0uD,EAAA,iBACAC,EAAA,gBAEA,SAAAC,EAAAn6D,EAAA0C,GACA,IAAA8I,EAUA,GAAA9I,GAPA8I,EADAyuD,EAAA7+B,KAAAp7B,GACA,EACGk6D,EAAA9+B,KAAAp7B,GACH,EAEA,GAGA,EACA,mDAAAA,EAAA,YAAAwL,EAAA,QAAA9I,EAAA,sCAAA8I,EAAA,2BAGA,OAAAA,EAGA,SAAAutD,EAAAzwB,EAAA8xB,GACA,OAAA9xB,EAAA98B,eAAA88B,EAAAr+B,MAAAkwD,EAAAC,EAAAtB,EAAAxwB,GAAA5lC,QAGA,SAAAk2D,EAAAtwB,EAAAtoC,GACA,GAAA24D,EAAA/Q,cAAAtf,GACA,OAAAA,EAGA,GAAAqwB,EAAA/Q,cAAAtf,EAAA/8B,MACA,OAAA+8B,EAAA/8B,KAGA/G,MAAA0+B,QAAAoF,KACAA,GACA/8B,KAAA+8B,IAIA,IAAA4lB,EAAA5lB,EAAAx8B,KAUA,OARAoiD,IAEAA,EADA8L,EAAAh6D,GACAinD,YAEA9jD,cAIA,IAAA+qD,EAAA5lB,EAAA/8B,MAuJA,SAAA+sD,EAAA52D,EAAAm9B,GACA,IAAA9xB,KA2CA,OA1CA5M,OAAA4C,KAAA87B,GAAA77B,QAAA,SAAAo3D,GACA,IAAAJ,EAAAI,GAAA,CACA,IAEA3yD,EACAqE,EACAuuD,EACA7uD,EACAmgD,EANArjB,EAAAzJ,EAAAu7B,GACAE,EAAAhyB,EAAAioB,QAAAjoB,EAAAtoC,MAAAsoC,EAAAgyB,YAAAvsB,EAAAorB,aAAAiB,EAOA,oBAAA9xB,GAAA,iBAAAA,EAAA/8B,KAAA,CACAogD,EAAArjB,EAAA/8B,MAAA+8B,EACA,IAAAiyB,EAAAjyB,EAAAx8B,MAAA3I,aACAi2D,EAAAzN,EAAA4O,EAAA1G,kBACA/nD,EAAA6sD,EAAApR,2BAAAgT,GACAF,OAAA/sD,IAAAg7B,EAAA1lB,UAAA0lB,EAAA1lB,UA5OA,SAAA4kC,GACA,OAAAA,IAAAhY,WAKAgY,IAAApqB,WAsOAo9B,CAAAD,GACA/uD,EAAA88B,EAAA98B,eAAA88B,EAAAr+B,MAAAkwD,EAAAC,EAAAzO,GACAlkD,EAAA/F,EAAAi6C,eACAj6C,EAAA4zC,WAAA5zC,EAAAk6C,aAAAn0C,GACA/F,EAAAq1C,WAAAr1C,EAAAk6C,aAAAwd,EAAA9wB,EAAA58B,UAAAhK,EAAAiK,iBACO,CACP,IAAAm7C,EAAA8R,EAAAtwB,EAAA8xB,GACA3yD,EAAAwxD,EAAAv3D,EAAAolD,OAAAx5C,EAAAg7B,EAAA58B,UACAI,EAAA6sD,EAAA9R,uBAAAC,GACAuT,OAAA/sD,IAAAg7B,EAAA1lB,UAAA0lB,EAAA1lB,UArQA,SAAAkkC,GACA,OAAAA,aAAAtX,WAKAsX,aAAA1pB,WA+PAq9B,CAAA3T,GACAt7C,EAAAutD,EAAAzwB,EAAA8xB,GACAzO,EAAA7E,EAAApkD,OAGAqK,EAAAutD,IACA7yD,SACA+D,gBACAM,OACA8W,UAAAy3C,EACA50C,OAAA6iB,EAAA7iB,QAAA,EACAtb,OAAAm+B,EAAAn+B,QAAA,EACAsB,aAAA6B,IAAAg7B,EAAA78B,aAAA6B,EAAAg7B,EAAA78B,QACAC,SAAA48B,EAAA58B,aAIAhK,EAAA4zC,WAAA5zC,EAAAk6C,aAAA,MACA7uC,EAyEA,IAAA8rD,GAAA,qCAsNA,SAAAL,EAAA92D,EAAA4mC,EAAA8xB,GACA,IAAAtuD,EAAA,YAAAsuD,EAAA14D,EAAA+6C,qBAAA/6C,EAAAk6C,aAEA,OAAAqd,EAAAv3D,EADAk3D,EAAAtwB,EAAA8xB,GACAtuD,KA8CA,SAAAtM,EAAAD,EAAAF,GAEA,aAGAE,EAAAsB,YAAA,EACAtB,EAAAm7D,oBAs2BA,SAAAb,GACAzN,EAAA1G,uBAAAmU,EAAA9rB,GAEA8rB,EAAAc,cACAC,EAAAf,EAAAc,eAz2BAp7D,EAAAknD,gBACAlnD,EAAAs7D,eAyrCA,SAAAn5D,EAAAo5D,GACA,IAAAC,KAIA,OAHA56D,OAAA4C,KAAA+3D,GAAA93D,QAAA,SAAAhD,GACA+6D,EAAA/6D,GAAAymD,EAAA/kD,EAAAo5D,EAAA96D,MAEA+6D,GA7rCAx7D,EAAAy7D,uBACAz7D,EAAAiJ,gBACAjJ,EAAA07D,kBACA17D,EAAA27D,sBACA37D,EAAA47D,qBACA57D,EAAA67D,wBACA77D,EAAA87D,6BACA97D,EAAA+7D,uBACA/7D,EAAAq7D,yBACAr7D,EAAAg8D,eAqpEA,SAAA75D,EAAA85D,EAAAC,GACAA,KAAAzrB,EACA,IAAA0rB,EAAA,EACAC,KACAjO,KACAkO,KAEA,SAAAC,IACA,IAAAH,GACAhwB,WAAA,WACA+vB,EAAAE,EAAAj5D,OAAAi5D,OAAAruD,EAAAogD,EAAAkO,IACO,GA8BP,OA1BAz7D,OAAA4C,KAAAy4D,GAAAx4D,QAAA,SAAAhD,GACA,IACA87D,EADA15D,EAAAo5D,EAAAx7D,IAhGA,SAAAuJ,GACA,uBAAAA,GAAA/E,MAAA0+B,QAAA35B,IAAA,iBAAAA,EAAA,IAkGAwyD,CAAA35D,EAAAmH,OACAuyD,EAAA,SAAAnb,EAAAqb,EAAAryD,GACAiyD,EAAA57D,GAAA2J,IACA+xD,EAEA/a,GACAgb,EAAAv3D,KAAAu8C,GAGAkb,OAGAH,GAGAhO,EAAA1tD,GAAAwI,EAAA9G,EAAAU,EAAA05D,KAMAD,IACAnO,GA7rEAnuD,EAAA08D,cA+hEA,SAAAv6D,EAAAs6D,EAAA55D,EAAA+F,EAAAC,GACAD,KAAA/F,EAAA+F,MACAC,KAAAhG,EAAAgG,OACA,IAAAmY,EAAAne,EAAAme,QAAA7e,EAAAgH,WACAhH,EAAA+G,YAAA8X,EAAAy7C,GACA,IAIAlwD,EAJAowD,EAAA95D,EAAA85D,OAAA,EACAC,EAAA/5D,EAAA+5D,gBAAA/5D,EAAAg6D,QAAA16D,EAAAo7B,KACAu/B,EAAAC,EAAAH,GACAC,EAAAh6D,EAAAg6D,QAAAC,EAAAD,OAEA7yD,EAAAnH,EAAAmH,IAKAuC,EAHAvC,IAEGq+C,EAAAr+C,IAAA/E,MAAA0+B,QAAA35B,IAAA,iBAAAA,EAAA,IACHnH,EAAA0J,MAAAywD,EAAA76D,EAAA6H,EAAA8yD,EAAAvwD,MAFA1J,EAAA0J,MAAAuwD,EAAAvwD,KAOA,GAAAyU,IAAA7e,EAAA46C,iBACA,QAAAT,EAAA,EAAoBA,EAAA,IAAQA,EAC5Bn6C,EAAAi2C,WAAAj2C,EAAA86D,4BAAA3gB,EAAAqgB,EAAAC,EAAAh0D,EAAAC,EAAA,EAAAg0D,EAAAtwD,EAAA,WAGApK,EAAAi2C,WAAAp3B,EAAA27C,EAAAC,EAAAh0D,EAAAC,EAAA,EAAAg0D,EAAAtwD,EAAA,OAvjEAvM,EAAAk9D,0BA2wBA,SAAAL,GACA,IAAAta,EAAA4a,EAAAN,GAEA,IAAAta,EACA,wBAAAsa,EAGA,OAAAta,EAAA6a,oBAjxBAp9D,EAAAq9D,sCAEA,IAAA1Q,EAAAC,EAAA9sD,EAAA,IAEAs5D,EAAAxM,EAAA9sD,EAAA,IAEA+sD,EAAAD,EAAA9sD,EAAA,IAEAsnD,EAEA,SAAA1vB,GAAsC,OAAAA,KAAAp2B,WAAAo2B,GAAuC2vB,QAAA3vB,GAF7E1sB,CAAAlL,EAAA,IAIA,SAAA8sD,EAAAl1B,GAAuC,GAAAA,KAAAp2B,WAA6B,OAAAo2B,EAAqB,IAAA0B,KAAiB,SAAA1B,EAAmB,QAAAj2B,KAAAi2B,EAAuB,GAAA92B,OAAAkB,UAAAC,eAAA1B,KAAAq3B,EAAAj2B,GAAA,CAAsD,IAAAqrD,EAAAlsD,OAAAC,gBAAAD,OAAAmsD,yBAAAnsD,OAAAmsD,yBAAAr1B,EAAAj2B,MAAsHqrD,EAAA/rD,KAAA+rD,EAAAtmD,IAA4B5F,OAAAC,eAAAu4B,EAAA33B,EAAAqrD,GAAmD1zB,EAAA33B,GAAAi2B,EAAAj2B,GAAsD,OAAtB23B,EAAAiuB,QAAA3vB,EAAsB0B,EAgDrc,IAEAoV,GACA4sB,aAAA,IAAAv9B,YAAA,kBACAo+B,kBACAqB,iBAAAvvD,GAEAs6C,EAAA+Q,EAAA/Q,cAEAzrB,EAAAwqB,EAAAC,QAAAhhD,UAAA+gD,EAAAC,QAAAhhD,SAAAgxB,cAAA+vB,EAAAC,QAAAhhD,SAAAgxB,cAAA,UAAAwF,WAAA,WAcA0gC,EAAA,KAoGAC,EAAA,MAMAL,KAIAx+C,EAAAw+C,EACAx+C,EAhHA,OAiHAy+C,mBAAA,GAEAz+C,EAhHA,OAiHAy+C,mBAAA,GAEAz+C,EAlHA,OAmHAy+C,mBAAA,GAEAz+C,EAAA4+C,IACAH,mBAAA,GAEAz+C,EA1HA,OA2HAy+C,mBAAA,GAEAz+C,EAxBA,OAyBAy+C,mBAAA,GAEAz+C,EA1BA,QA2BAy+C,mBAAA,GAEAz+C,EAAA6+C,IACAJ,mBAAA,GAEAz+C,EAlCA,QAmCAy+C,mBAAA,GAEAz+C,EAAA4+C,IACAH,mBAAA,GAEAz+C,EArCA,QAsCAy+C,mBAAA,GAEAz+C,EA/IA,OAgJAy+C,mBAAA,GAEAz+C,EA1CA,QA2CAy+C,mBAAA,GAEAz+C,EAlJA,OAmJAy+C,mBAAA,GAEAz+C,EApJA,QAqJAy+C,mBAAA,GAGA,IAAAK,KAGAr8D,EAAAq8D,EAwbA,SAAAJ,EAAAT,EAAArwD,GACA,IAAAg2C,EAAAkb,EAAAb,GAEA,IAAAra,EACA,+BAGA,IAAAmb,EAAAnb,EAAAob,mBAAApxD,GAEA,QAAAwB,IAAA2vD,EACA,+BAGA,OAAAA,EAUA,SAAAX,EAAAH,GACA,IAAAra,EAAAkb,EAAAb,GAEA,IAAAra,EACA,+BAGA,OACAsa,OAAAta,EAAAqb,cACArxD,KAAAtH,MAAA0+B,QAAA4e,EAAAh2C,MAAAg2C,EAAAh2C,KAAA,GAAAg2C,EAAAh2C,MAUA,SAAAsxD,EAAA18D,GACA,WAAAA,IAAA,GAoEA,SAAA67D,EAAA76D,EAAA6H,EAAA8zD,GACA,OAAAzV,EAAAr+C,GACAovD,EAAA9R,uBAAAt9C,GAGA8zD,GAAA37D,EAAAq7B,cAGA,SAAAugC,EAAA57D,EAAA6e,EAAApY,EAAAC,EAAAqwD,GACA,GAAAA,EAAA,KACA,8BAGA,GAAAtwD,GAAAC,GAUG,GAAAA,GAMA,IAAAD,IACHA,EAAAswD,EAAArwD,GAEA,EACA,mCAPA,IAFAA,EAAAqwD,EAAAtwD,GAEA,EACA,kCAdA,CACA,IAAA8B,EAAAjD,KAAAkJ,KAAAuoD,GAAAl4C,IAAA7e,EAAA46C,iBAAA,MAEAryC,EAAA,MACA9B,EAAA8B,EACA7B,EAAA6B,IAEA9B,EAAAswD,EACArwD,EAAA,GAgBA,OACAD,QACAC,UAkBA,SAAAwyD,EAAA2C,GACAxvB,EAAA4sB,aAAA,IAAAv9B,YAAA,IAAAmgC,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA/lBA58D,EAnKA,OAoKAw8D,cApKA,KAqKAK,iBAAA,EACAC,mBAAA,EACAR,iBAAA,SACAnxD,MApFA,KASA,KACA,MALA,OAiFAnL,EAvKA,OAwKAw8D,cAxKA,KAyKAK,iBAAA,EACAC,mBAAA,EACAR,iBAAA,SACAnxD,MA3FA,KASA,KACA,MALA,OAwFAnL,EA7KA,OA8KAw8D,cA9KA,KA+KAK,iBAAA,EACAC,mBAAA,EACAR,iBAAA,SACAnxD,MAlGA,KASA,KACA,MALA,OA+FAnL,EAAAm8D,IACAK,cAAAL,EACAU,iBAAA,EACAC,mBAAA,EACAR,iBAAA,YACAnxD,MAzGA,KASA,KACA,MALA,KAGA,QAmGAnL,EA7LA,OA8LAw8D,cA9LA,KA+LAK,iBAAA,EACAC,mBAAA,EACAR,iBAAA,cACAnxD,MAhHA,KASA,KACA,MALA,KACA,MACA,QA4GAnL,EA5KA,QA6KAw8D,cAjGA,KAkGAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAxHA,MA0HAnL,EAlLA,QAmLAw8D,cAxGA,KAyGAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAhIA,MAkIAnL,EAxLA,QAyLAw8D,cA/GA,KAgHAK,iBAAA,EACAC,mBAAA,EACAR,iBAAA,KACAnxD,MAjIA,KAIA,OA+HAnL,EA9LA,QA+LAw8D,cAtHA,KAuHAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAxIA,MA0IAnL,EApMA,QAqMAw8D,cA5HA,MA6HAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KApJA,MAsJAnL,EA1MA,QA2MAw8D,cAnIA,MAoIAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KA5JA,MA8JAnL,EAtMA,QAuMAw8D,cA1IA,MA2IAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAhKA,MAkKAnL,EA5MA,QA6MAw8D,cAjJA,MAkJAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAxKA,MA0KAnL,EAlNA,QAmNAw8D,cAxJA,MAyJAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KA5KA,MA8KAnL,EAxNA,QAyNAw8D,cA/JA,MAgKAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KApLA,MAsLAnL,EAxOA,QAyOAw8D,cAAAJ,EACAS,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KA9LA,MAgMAnL,EA9OA,QA+OAw8D,cAAAJ,EACAS,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAtMA,MAwMAnL,EApPA,QAqPAw8D,cAAAJ,EACAS,iBAAA,EACAC,mBAAA,EACAR,iBAAA,KACAnxD,MAvMA,KAIA,OAqMAnL,EA1PA,QA2PAw8D,cAAAJ,EACAS,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KA9MA,MAgNAnL,EAhQA,QAiQAw8D,cApMA,MAqMAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KA1NA,MA4NAnL,EAtQA,QAuQAw8D,cA3MA,MA4MAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAlOA,MAoOAnL,EAtRA,QAuRAw8D,cAlNA,MAmNAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAtOA,MAwOAnL,EA5RA,QA6RAw8D,cAzNA,MA0NAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KA9OA,MAgPAnL,EAlSA,QAmSAw8D,cAhOA,MAiOAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAlPA,MAoPAnL,EAxSA,QAySAw8D,cAvOA,MAwOAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KA1PA,MA4PAnL,EApSA,QAqSAw8D,cAAAL,EACAU,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KApQA,MAsQAnL,EA1SA,QA2SAw8D,cAAAL,EACAU,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KA3QA,MA6QAnL,EAhTA,QAiTAw8D,cAAAL,EACAU,iBAAA,EACAC,mBAAA,EACAR,iBAAA,KACAnxD,MAlRA,KAQA,QA4QAnL,EAtTA,QAuTAw8D,cAAAL,EACAU,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KA1RA,MA4RAnL,EA5TA,QA6TAw8D,cAAAL,EACAU,iBAAA,EACAC,mBAAA,EACAR,iBAAA,QACAnxD,MA3RA,KAIA,KAIA,QAqRAnL,EAlUA,QAmUAw8D,cAAAL,EACAU,iBAAA,EACAC,mBAAA,EACAR,iBAAA,QACAnxD,MAlSA,KAIA,KAKA,QA2RAnL,EAxUA,QAyUAw8D,cAAAL,EACAU,iBAAA,EACAC,mBAAA,EACAR,iBAAA,MACAnxD,MAzSA,KAIA,OAuSAnL,EA9UA,QA+UAw8D,cAAAL,EACAU,iBAAA,EACAC,mBAAA,EACAR,gBAAA,GACAnxD,KAhTA,MAkTAnL,EApVA,QAqVAw8D,cAnSA,MAoSAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KA5TA,MA8TAnL,EA1VA,QA2VAw8D,cA1SA,MA2SAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KApUA,MAsUAnL,EAhWA,QAiWAw8D,cAjTA,MAkTAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAxUA,MA0UAnL,EAtWA,QAuWAw8D,cAxTA,MAyTAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAhVA,MAkVAnL,EA5WA,QA6WAw8D,cA/TA,MAgUAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,GACAnxD,KApVA,MAsVAnL,EAlXA,QAmXAw8D,cAtUA,MAuUAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,GACAnxD,KA5VA,MA8VAnL,EAxXA,QAyXAw8D,cApbA,KAqbAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAtWA,MAwWAnL,EA9XA,QA+XAw8D,cA3bA,KA4bAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KA7WA,MA+WAnL,EApYA,QAqYAw8D,cAlcA,KAmcAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KArXA,MAuXAnL,EA1YA,QA2YAw8D,cAzcA,KA0cAK,iBAAA,EACAC,mBAAA,EACAR,iBAAA,OACAnxD,MA3XA,KAOA,MAKA,QAiXAnL,EAhZA,QAiZAw8D,cAhdA,KAidAK,iBAAA,EACAC,mBAAA,EACAR,iBAAA,KACAnxD,MAlYA,KAMA,QA8XAnL,EAtZA,QAuZAw8D,cAvdA,KAwdAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KA7XA,OA+XAnL,EA5ZA,QA6ZAw8D,cA9dA,KA+dAK,iBAAA,EACAC,mBAAA,EACAR,iBAAA,MACAnxD,MA3YA,KAIA,OAyYAnL,EAlaA,QAmaAw8D,cAreA,KAseAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,GACAnxD,KAlZA,MAoZAnL,EAxaA,QAyaAw8D,cApYA,MAqYAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KA9ZA,MAgaAnL,EA9aA,QA+aAw8D,cA3YA,MA4YAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAtaA,MAwaAnL,EApbA,QAqbAw8D,cAlZA,MAmZAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAhaA,OAkaAnL,EA1bA,QA2bAw8D,cAzZA,MA0ZAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAjbA,MAmbAnL,EAhcA,QAicAw8D,cAhaA,MAiaAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAzbA,MA2bAnL,EAtcA,QAucAw8D,cAvaA,MAwaAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,GACAnxD,KA9bA,MAgcAnL,EA5cA,QA6cAw8D,cA9aA,MA+aAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,GACAnxD,KApcA,MAucAnL,EAndA,QAodAw8D,cA3hBA,KA4hBAK,iBAAA,EACAC,mBAAA,EACAR,iBAAA,KACAnxD,MA9cA,KAEA,OA8cAnL,EAzdA,QA0dAw8D,cAliBA,KAmiBAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAndA,MAqdAnL,EA/dA,QAgeAw8D,cAziBA,KA0iBAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KAzdA,MA2dAnL,EApeA,QAqeAw8D,cA/iBA,MAgjBAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KArdA,OAudAnL,EA5eA,QA6eAw8D,cAtjBA,MAujBAK,iBAAA,EACAC,mBAAA,EACAR,gBAAA,EACAnxD,KA7dA,OA+dA3L,OAAA4C,KAAApC,GAAAqC,QAAA,SAAAm5D,GACA,IAAAra,EAAAnhD,EAAAw7D,GAGA,GAFAra,EAAAob,sBAEA14D,MAAA0+B,QAAA4e,EAAAmb,iBACAnb,EAAAmb,gBAAAj6D,QAAA,SAAAi6D,EAAA9M,GACA,IAAArkD,EAAAg2C,EAAAh2C,KAAAqkD,GACArO,EAAAob,mBAAApxD,GAAAmxD,QAEK,CACL,IAAAnxD,EAAAg2C,EAAAh2C,KACAg2C,EAAAob,mBAAApxD,GAAAg2C,EAAAmb,mBA+SA,IAAAS,KAOA,SAAAC,EAAAj8D,EAAAU,QACAkL,IAAAlL,EAAAw7D,uBACAF,EAAAE,qBAAAl8D,EAAAwyC,aAAAxyC,EAAAy8C,oCACAz8C,EAAAs7B,YAAAt7B,EAAAy8C,mCAAA/7C,EAAAw7D,4BAGAtwD,IAAAlL,EAAAy7D,mBACAH,EAAAG,iBAAAn8D,EAAAwyC,aAAAxyC,EAAAw8C,gCACAx8C,EAAAs7B,YAAAt7B,EAAAw8C,+BAAA97C,EAAAy7D,wBAGAvwD,IAAAlL,EAAA07D,QACAJ,EAAAI,MAAAp8D,EAAAwyC,aAAAxyC,EAAAu7B,qBACAv7B,EAAAs7B,YAAAt7B,EAAAu7B,oBAAA76B,EAAA07D,QAUA,SAAAC,EAAAr8D,EAAAU,QACAkL,IAAAlL,EAAAw7D,sBACAl8D,EAAAs7B,YAAAt7B,EAAAy8C,mCAAAuf,EAAAE,2BAGAtwD,IAAAlL,EAAAy7D,kBACAn8D,EAAAs7B,YAAAt7B,EAAAw8C,+BAAAwf,EAAAG,uBAGAvwD,IAAAlL,EAAA07D,OACAp8D,EAAAs7B,YAAAt7B,EAAAu7B,oBAAAygC,EAAAI,OASA,SAAAE,EAAAt8D,GACAg8D,EAAAO,gBAAAv8D,EAAAwyC,aAAAxyC,EAAAu8C,kBAEAiO,EAAApD,SAAApnD,KACAg8D,EAAAQ,gBAAAx8D,EAAAwyC,aAAAxyC,EAAAk+C,mBACA8d,EAAAS,kBAAAz8D,EAAAwyC,aAAAxyC,EAAAg+C,qBACAge,EAAAU,iBAAA18D,EAAAwyC,aAAAxyC,EAAAo+C,oBACA4d,EAAAW,eAAA38D,EAAAwyC,aAAAxyC,EAAAm+C,kBACA6d,EAAAY,iBAAA58D,EAAAwyC,aAAAxyC,EAAAi+C,qBASA,SAAA4e,EAAA78D,GACAA,EAAAs7B,YAAAt7B,EAAAu8C,iBAAAyf,EAAAO,iBAEA/R,EAAApD,SAAApnD,KACAA,EAAAs7B,YAAAt7B,EAAAk+C,kBAAA8d,EAAAQ,iBACAx8D,EAAAs7B,YAAAt7B,EAAAg+C,oBAAAge,EAAAS,mBACAz8D,EAAAs7B,YAAAt7B,EAAAo+C,mBAAA4d,EAAAU,kBACA18D,EAAAs7B,YAAAt7B,EAAAm+C,iBAAA6d,EAAAW,gBACA38D,EAAAs7B,YAAAt7B,EAAAi+C,mBAAA+d,EAAAY,mBAcA,SAAAE,EAAA98D,EAAA6e,EAAAk+C,EAAAr8D,GACAA,EAAAs8D,SACAD,EAAA7+D,KAAA8B,EAAA6e,EAAA7e,EAAAoH,mBAAA1G,EAAAs8D,QACAD,EAAA7+D,KAAA8B,EAAA6e,EAAA7e,EAAAi9D,mBAAAv8D,EAAAs8D,SAGAt8D,EAAA4F,KACAy2D,EAAA7+D,KAAA8B,EAAA6e,EAAA7e,EAAAoH,mBAAA1G,EAAA4F,KAGA5F,EAAAw8D,KACAH,EAAA7+D,KAAA8B,EAAA6e,EAAA7e,EAAAi9D,mBAAAv8D,EAAAw8D,KAGAx8D,EAAA++B,OACAs9B,EAAA7+D,KAAA8B,EAAA6e,EAAA7e,EAAAm9D,eAAAz8D,EAAA++B,MACAs9B,EAAA7+D,KAAA8B,EAAA6e,EAAA7e,EAAAo9D,eAAA18D,EAAA++B,OAEA5gB,IAAA7e,EAAA66C,YAAA6P,EAAA7F,UAAA7kD,EAAA6e,KACAk+C,EAAA7+D,KAAA8B,EAAA6e,EAAA7e,EAAAq9D,eAAA38D,EAAA++B,OAIA/+B,EAAA48D,OACAP,EAAA7+D,KAAA8B,EAAA6e,EAAA7e,EAAAq9D,eAAA38D,EAAA48D,OAGA58D,EAAA68D,OACAR,EAAA7+D,KAAA8B,EAAA6e,EAAA7e,EAAAm9D,eAAAz8D,EAAA68D,OAGA78D,EAAA88D,OACAT,EAAA7+D,KAAA8B,EAAA6e,EAAA7e,EAAAo9D,eAAA18D,EAAA88D,OAGA98D,EAAA+8D,QACAV,EAAA7+D,KAAA8B,EAAA6e,EAAA7e,EAAA09D,gBAAAh9D,EAAA+8D,QAGA/8D,EAAAi9D,QACAZ,EAAA7+D,KAAA8B,EAAA6e,EAAA7e,EAAA49D,gBAAAl9D,EAAAi9D,QAGAj9D,EAAAm9D,WACAd,EAAA7+D,KAAA8B,EAAA6e,EAAA7e,EAAA89D,mBAAAp9D,EAAAm9D,WAGAn9D,EAAAq9D,UACAhB,EAAA7+D,KAAA8B,EAAA6e,EAAA7e,EAAAg+D,kBAAAt9D,EAAAq9D,UAaA,SAAAnE,EAAA55D,EAAAs6D,EAAA55D,GACA,IAAAme,EAAAne,EAAAme,QAAA7e,EAAAgH,WACAhH,EAAA+G,YAAA8X,EAAAy7C,GACAwC,EAAA98D,EAAA6e,EAAA7e,EAAAmH,cAAAzG,GAWA,SAAA44D,EAAAt5D,EAAA6rD,EAAAnrD,GACAo8D,EAAA98D,EAAA6rD,EAAA7rD,EAAAw3C,kBAAA92C,GAkBA,SAAAqkD,EAAA/kD,EAAAU,GACA,IAAAmrD,EAAA7rD,EAAA+kD,gBAEA,OADAuU,EAAAt5D,EAAA6rD,EAAAnrD,GACAmrD,EA6EA,SAAA8N,EAAA35D,EAAAs6D,EAAA55D,EAAA+F,EAAAC,EAAA+zD,EAAArwD,GACA1J,KAAA2rC,EAAAytB,eACAW,KAAAz6D,EAAAo7B,KACAhxB,KAAApK,EAAAq7B,cACA,IAAAxc,EAAAne,EAAAme,QAAA7e,EAAAgH,WAKA,GAJAP,KAAA/F,EAAA+F,MACAC,KAAAhG,EAAAgG,OACA1G,EAAA+G,YAAA8X,EAAAy7C,GA3fA,SAAAt6D,EAAAyG,EAAAC,EAAA+zD,GAGA,IAAAjQ,EAAApD,SAAApnD,GACA,OAAA07D,EAAAj1D,IAAAi1D,EAAAh1D,GAGA,IAAA05C,EAAAkb,EAAAb,GAEA,IAAAra,EACA,+BAGA,OAAAA,EAAA0b,iBAAA1b,EAAA2b,kBAgfAkC,CAAAj+D,EAAAyG,EAAAC,EAAA+zD,GACAz6D,EAAA2zC,eAAA90B,OACG,CACH,IAAAq/C,EAzeA,SAAAzD,GAGA,IAAAra,EAAAkb,EAAAb,GAEA,IAAAra,EACA,+BAGA,OAAAA,EAAA2b,kBAgeAoC,CAAA1D,GAAAz6D,EAAAo+D,OAAAp+D,EAAAqH,QACArH,EAAAmH,cAAA0X,EAAA7e,EAAAoH,mBAAA82D,GACAl+D,EAAAmH,cAAA0X,EAAA7e,EAAAi9D,mBAAAiB,GACAl+D,EAAAmH,cAAA0X,EAAA7e,EAAAm9D,eAAAn9D,EAAAq+D,eACAr+D,EAAAmH,cAAA0X,EAAA7e,EAAAo9D,eAAAp9D,EAAAq+D,gBAIA,SAAAC,EAAA59D,GACA,WAAAA,EAAA69D,WAAA3yD,IAAAlL,EAAA69D,WAAA3yD,IAAAlL,EAAA85D,MAWA,SAAAgE,EAAAx+D,EAAAU,GAEA,OADAA,SACA+9D,gBAAAz+D,EAAA86D,4BAAA96D,EAAA0+D,4BAAA1+D,EAAA2+D,4BAAA3+D,EAAA4+D,4BAAA5+D,EAAA6+D,4BAAA7+D,EAAA8+D,6BAuBA,SAAAC,EAAA/+D,EAAAU,GACA,IAEAs+D,EAFAR,EAAAx+D,EAAAU,GAEAs3B,IAAA,SAAAinC,EAAAxQ,GACA,OACAwQ,OACAxQ,SAMA,OAHAuQ,EAAAl5B,KAAA,SAAAz5B,EAAAjG,GACA,OAAAiG,EAAA4yD,KAAA74D,EAAA64D,OAEAD,EAiBA,SAAAtF,EAAA15D,EAAAs6D,EAAA4E,EAAAx+D,GAEA,IAAAme,GADAne,KAAA2rC,EAAAytB,gBACAj7C,QAAA7e,EAAAgH,WACAwzD,EAAA95D,EAAA85D,OAAA,EACA/zD,EAAAy4D,EAAAz4D,MACAC,EAAAw4D,EAAAx4D,OACA+zD,EAAA/5D,EAAA+5D,gBAAA/5D,EAAAg6D,QAAA16D,EAAAo7B,KACAu/B,EAAAC,EAAAH,GACAC,EAAAh6D,EAAAg6D,QAAAC,EAAAD,OACAtwD,EAAA1J,EAAA0J,MAAAuwD,EAAAvwD,KAIA,GAHA6xD,EAAAj8D,EAAAU,GACAV,EAAA+G,YAAA8X,EAAAy7C,GAEAz7C,IAAA7e,EAAA46C,iBAAA,CAEA,IAEAryC,EACA42D,EAHAC,EAAAF,EAAAz4D,MACA44D,EAAAH,EAAAx4D,OAIA,GAAA04D,EAAA,IAAAC,EAEA92D,EAAA82D,EACAF,GAAA,8BACK,GAAAE,EAAA,IAAAD,EAEL72D,EAAA62D,EACAD,GAAA,8BACK,GAAAC,EAAA,GAAAC,EAAA,EAEL92D,EAAA62D,EAAA,EACAD,GAAA,6BACK,IAAAC,EAAA,GAAAC,EAAA,EAKL,iDAAAH,EAAAr3D,IAAAq3D,EAAAr3D,IAAAq3D,EAAAI,UAHA/2D,EAAA62D,EAAA,EACAD,GAAA,yBAKA1kC,GACAA,EAAA54B,OAAA4E,MAAA8B,EACAkyB,EAAA54B,OAAA6E,OAAA6B,EACA9B,EAAA8B,EACA7B,EAAA6B,EACAw2D,EAAA/+D,EAAAU,GAAAY,QAAA,SAAAkb,GACA,IAAA+iD,EAAAJ,EAAA,EAAA3iD,EAAAiyC,IAAA,GAAAlmD,EACAi3D,EAAAL,EAAA,EAAA3iD,EAAAiyC,IAAA,GAAAlmD,EACAkyB,EAAAE,UAAAukC,EAAAK,EAAAC,EAAAj3D,IAAA,IAAAA,KACAvI,EAAAi2C,WAAAz5B,EAAAyiD,KAAAzE,EAAAC,EAAAC,EAAAtwD,EAAAqwB,EAAA54B,UAGA44B,EAAA54B,OAAA4E,MAAA,EACAg0B,EAAA54B,OAAA6E,OAAA,GACKu+C,EAAAC,QAAAua,oBAGLh5D,EAAA8B,EACA7B,EAAA6B,EACAw2D,EAAA/+D,EAAAU,GAAAY,QAAA,SAAAkb,GACA,IAAA+iD,EAAAJ,EAAA,EAAA3iD,EAAAiyC,IAAA,GAAAlmD,EACAi3D,EAAAL,EAAA,EAAA3iD,EAAAiyC,IAAA,GAAAlmD,EAMAvI,EAAAi2C,WAAAz5B,EAAAyiD,KAAAzE,EAAAC,EAAAlyD,IAAA,EAAAmyD,EAAAtwD,EAAA,MAEA66C,EAAAC,QAAAua,kBAAAP,EAAAK,EAAAC,EAAAj3D,KACA4zD,iBAAA,OACAuD,qBAAA,SACSC,KAAA,SAAAC,GACT3D,EAAAj8D,EAAAU,GACAV,EAAA+G,YAAA8X,EAAAy7C,GACAt6D,EAAAi2C,WAAAz5B,EAAAyiD,KAAAzE,EAAAC,EAAAC,EAAAtwD,EAAAw1D,GACAvD,EAAAr8D,EAAAU,GAEA49D,EAAA59D,IACAi5D,EAAA35D,EAAAs6D,EAAA55D,EAAA+F,EAAAC,EAAA+zD,EAAArwD,aAKG,GAAAyU,IAAA7e,EAAA66C,YAAAh8B,IAAA7e,EAAAm6B,iBAAA,CACH,IAAA0lC,EAAAv6D,KAAAgB,IAAA44D,EAAAz4D,MAAAy4D,EAAAx4D,QACAo5D,EAAAx6D,KAAAC,IAAA25D,EAAAz4D,MAAAy4D,EAAAx4D,QACAq5D,EAAAD,EAAAD,EAEA,GAAAE,EAAA,KACA,gDAGA,IAAAC,EAAAd,EAAAz4D,QAAAq5D,EAAA,IACAG,EAAAf,EAAAx4D,SAAAo5D,EAAA,IACAxD,EAAAt8D,GACAA,EAAAs7B,YAAAt7B,EAAAu8C,iBAAA,GACAv8C,EAAAs7B,YAAAt7B,EAAAk+C,kBAAAghB,EAAAz4D,OACAzG,EAAAs7B,YAAAt7B,EAAAg+C,oBAAA,GACAh+C,EAAAs7B,YAAAt7B,EAAAi+C,mBAAA,GACAj+C,EAAAm2C,WAAAt3B,EAAA27C,EAAAC,EAAAoF,MAAA,EAAAnF,EAAAtwD,EAAA,MAEA,QAAA/L,EAAA,EAAmBA,EAAA0hE,IAAW1hE,EAAA,CAC9B,IAAA6hE,EAAA7hE,EAAAwhE,EAAAG,EACAG,EAAA9hE,EAAAwhE,EAAAI,EACAjgE,EAAAs7B,YAAAt7B,EAAAo+C,mBAAA8hB,GACAlgE,EAAAs7B,YAAAt7B,EAAAm+C,iBAAAgiB,GACAngE,EAAAm7B,cAAAtc,EAAA27C,EAAA,IAAAn8D,EAAAwhE,IAAA,EAAAnF,EAAAtwD,EAAA80D,GAGArC,EAAA78D,QAEAA,EAAAi2C,WAAAp3B,EAAA27C,EAAAC,EAAAC,EAAAtwD,EAAA80D,GAGA7C,EAAAr8D,EAAAU,GAEA49D,EAAA59D,IACAi5D,EAAA35D,EAAAs6D,EAAA55D,EAAA+F,EAAAC,EAAA+zD,EAAArwD,GAGAwvD,EAAA55D,EAAAs6D,EAAA55D,GAGA,SAAA4tC,KAgGA,SAAA8xB,EAAA7qC,GACA,OAAA0vB,EAAAC,QAAAmb,aAAA9qC,aAAA0vB,EAAAC,QAAAmb,aAAApb,EAAAC,QAAAhpB,WAAA3G,aAAA0vB,EAAAC,QAAAhpB,WAAA+oB,EAAAC,QAAAob,aAAA/qC,aAAA0vB,EAAAC,QAAAob,YAcA,SAAAC,EAAAhrC,EAAA4lC,EAAApB,GACA,OAAAqG,EAAA7qC,IACAyU,WAAA,WACA+vB,EAAA,KAAAxkC,KAEAA,GAzGA,SAAAirC,EAAArF,EAAApB,GAEA,IAAA9xD,EAEA,GAHA8xD,KAAAzrB,EAGA2W,EAAAC,QAAAh9C,MAAA,CACAD,EAAA,IAAAg9C,EAAAC,QAAAh9C,WAGA0D,KAFAuvD,OAAAvvD,IAAAuvD,IAAA9uB,EAAA8uB,eAGAlzD,EAAAkzD,eAGA,IAAAsF,EAAA,WACAx4D,EAAAG,oBAAA,QAAAs4D,GAEAz4D,EAAAG,oBAAA,OAAAu4D,GAEA14D,EAAA,MAGAy4D,EAAA,WACA,IAAA1uB,EAAA,wBAAAwuB,EACA9V,EAAAriD,MAAA2pC,GACA+nB,EAAA/nB,EAAA/pC,GACAw4D,KAGAE,EAAA,WACA5G,EAAA,KAAA9xD,GACAw4D,KAMA,OAHAx4D,EAAAnG,iBAAA,QAAA4+D,GACAz4D,EAAAnG,iBAAA,OAAA6+D,GACA14D,EAAAJ,IAAA24D,EACAv4D,EACG,GAAAg9C,EAAAC,QAAAmb,YAAA,CACH,IAAAphB,EACA2hB,EAEAt+B,EAAA,WACAy3B,EAAA9a,EAAA2hB,IAGAlgE,KAEAy6D,IACAz6D,EAAAxB,KAAA,QAGA2hE,MAAAL,EAAA9/D,GAAAi/D,KAAA,SAAAmB,GACA,IAAAA,EAAAC,GACA,MAAAD,EAGA,OAAAA,EAAAnqC,SACKgpC,KAAA,SAAAhpC,GACL,OAAAsuB,EAAAC,QAAAua,kBAAA9oC,GACAwlC,iBAAA,OACAuD,qBAAA,WAEKC,KAAA,SAAAqB,GAKLJ,EAAAI,EACAh3B,WAAA1H,KACK2+B,MAAA,SAAA5gE,GACL4+C,EAAA5+C,EACA2pC,WAAA1H,KAEAr6B,EAAA,KAGA,OAAAA,EAiCA83B,CAAAxK,EAAA4lC,EAAApB,GAaA,SAAAmH,EAAAlhE,EAAAs6D,EAAA55D,GAEA,IAAAme,GADAne,KAAA2rC,EAAAytB,gBACAj7C,QAAA7e,EAAAgH,WAGA,GAFAhH,EAAA+G,YAAA8X,EAAAy7C,IAEA,IAAA55D,EAAAm7D,MAAA,CAMA,IAAAA,EA1XA,SAAAA,GAGA,OAFAA,KAAAxvB,EAAA4sB,aAEA/S,EAAA2V,GACAA,EAGA,IAAAngC,YAAA,IAAAmgC,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAmXAsF,CAAAzgE,EAAAm7D,OAEA,GAAAh9C,IAAA7e,EAAA46C,iBACA,QAAAT,EAAA,EAAoBA,EAAA,IAAQA,EAC5Bn6C,EAAAi2C,WAAAj2C,EAAA86D,4BAAA3gB,EAAA,EAAAn6C,EAAAo7B,KAAA,MAAAp7B,EAAAo7B,KAAAp7B,EAAAq7B,cAAAwgC,QAEGh9C,IAAA7e,EAAA66C,YAAAh8B,IAAA7e,EAAAm6B,iBACHn6B,EAAAm2C,WAAAt3B,EAAA,EAAA7e,EAAAo7B,KAAA,QAAAp7B,EAAAo7B,KAAAp7B,EAAAq7B,cAAAwgC,GAEA77D,EAAAi2C,WAAAp3B,EAAA,EAAA7e,EAAAo7B,KAAA,MAAAp7B,EAAAo7B,KAAAp7B,EAAAq7B,cAAAwgC,IAkEA,SAAApC,EAAAz5D,EAAAs6D,EAAA55D,EAAAq5D,GAcA,OAbAA,KAAAzrB,EACA5tC,KAAA2rC,EAAAytB,eACAoH,EAAAlhE,EAAAs6D,EAAA55D,GAGA6/D,GADA7/D,EAAAjC,OAAAo7B,UAA4Bn5B,IAC5BmH,IAAAnH,EAAAy6D,YAAA,SAAAlc,EAAAh3C,GACAg3C,EACA8a,EAAA9a,EAAAqb,EAAAryD,IAEAyxD,EAAA15D,EAAAs6D,EAAAryD,EAAAvH,GACAq5D,EAAA,KAAAO,EAAAryD,MAiBA,SAAAm5D,EAAAphE,EAAAs6D,EAAA55D,EAAAq5D,GACAA,KAAAzrB,EACA,IAAA+yB,EAAA3gE,EAAAmH,IAEA,OAAAw5D,EAAArgE,OACA,0CAGA,IAAAw5D,EAAA95D,EAAA85D,OAAA,EACAC,EAAA/5D,EAAA+5D,gBAAA/5D,EAAAg6D,QAAA16D,EAAAo7B,KACAu/B,EAAAC,EAAAH,GACAC,EAAAh6D,EAAAg6D,QAAAC,EAAAD,OACAtwD,EAAA1J,EAAA0J,MAAApK,EAAAq7B,cACAxc,EAAAne,EAAAme,QAAA7e,EAAAgH,WAEA,GAAA6X,IAAA7e,EAAA46C,iBACA,uCAGAsmB,EAAAlhE,EAAAs6D,EAAA55D,GAEAA,EAAAjC,OAAAo7B,UAA4Bn5B,GAC5B,IAGA4gE,EAHAC,EAAA,EACAtH,KACAuH,EAAAhD,EAAAx+D,EAAAU,GAyCA4gE,EAAAD,EAAArpC,IAAA,SAAAwoC,EAAA/R,GACA,OAAA8R,EAAAC,EAAA9/D,EAAAy6D,YAvCA,SAAAsG,GACA,gBAAAxiB,EAAAh3C,KACAs5D,EAEAtiB,EACAgb,EAAAv3D,KAAAu8C,GAEAh3C,EAAAxB,QAAAwB,EAAAvB,OACAuzD,EAAAv3D,KAAA,qCAAAuF,EAAAJ,MAEAo0D,EAAAj8D,EAAAU,GACAV,EAAA+G,YAAA8X,EAAAy7C,GAGA,IAAAiH,EAEA/C,EAAAx+D,GAAAsB,QAAA,SAAAogE,GAEA1hE,EAAAi2C,WAAAyrB,EAAAlH,EAAAC,EAAAC,EAAAtwD,EAAAnC,KAGAjI,EAAAi2C,WAAAwrB,EAAAjH,EAAAC,EAAAC,EAAAtwD,EAAAnC,GAGAo0D,EAAAr8D,EAAAU,GAEA49D,EAAA59D,IACAV,EAAA2zC,eAAA90B,IAKA,IAAA0iD,GACAxH,EAAAE,EAAAj5D,OAAAi5D,OAAAruD,EAAA0uD,EAAAgH,IAMAK,CAAAH,EAAA/S,OAwBA,SAAAmT,EAAA5hE,EAAAs6D,EAAA55D,EAAAq5D,GACAA,KAAAzrB,EACA,IAAA+yB,EAAA3gE,EAAAmH,IACA4yD,EAAA/5D,EAAA+5D,gBAAA/5D,EAAAg6D,QAAA16D,EAAAo7B,KACAu/B,EAAAC,EAAAH,GACAC,EAAAh6D,EAAAg6D,QAAAC,EAAAD,OACAtwD,EAAA1J,EAAA0J,MAAApK,EAAAq7B,cACAxc,EAAAne,EAAAme,QAAA7e,EAAAm6B,iBAEA,GAAAtb,IAAA7e,EAAA66C,YAAAh8B,IAAA7e,EAAAm6B,iBACA,qDAGA+mC,EAAAlhE,EAAAs6D,EAAA55D,GAEAA,EAAAjC,OAAAo7B,UAA4Bn5B,GAC5B,IAEA4gE,EAFAC,EAAAF,EAAArgE,OACAi5D,KAGAO,EAAA95D,EAAA85D,OAAA,EACA/zD,EAAA/F,EAAA+F,MACAC,EAAAhG,EAAAgG,OACAq5D,EAAAsB,EAAArgE,OACA6gE,GAAA,EAqDAP,EAAAD,EAAArpC,IAAA,SAAAwoC,EAAA/R,GACA,OAAA8R,EAAAC,EAAA9/D,EAAAy6D,YApDA,SAAAt3D,GACA,gBAAAo7C,EAAAh3C,GAGA,KAFAs5D,EAEAtiB,EACAgb,EAAAv3D,KAAAu8C,OACO,CAIP,GAHAgd,EAAAj8D,EAAAU,GACAV,EAAA+G,YAAA8X,EAAAy7C,GAEAuH,EAAA,CACAA,GAAA,EACAp7D,EAAA/F,EAAA+F,OAAAwB,EAAAxB,MACAC,EAAAhG,EAAAgG,QAAAuB,EAAAvB,OACA1G,EAAAm2C,WAAAt3B,EAAA27C,EAAAC,EAAAh0D,EAAAC,EAAAq5D,EAAA,EAAArF,EAAAtwD,EAAA,MAEA,QAAAtK,EAAA,EAAyBA,EAAAigE,IAAWjgE,EACpCE,EAAAm7B,cAAAtc,EAAA27C,EAAA,IAAA16D,EAAA2G,EAAAC,EAAA,EAAAg0D,EAAAtwD,EAAAnC,OAES,CACT,IAAAJ,EAAAI,EAEAA,EAAAxB,WAAAwB,EAAAvB,aAEAmB,EAAA4yB,EAAA54B,OACA44B,EAAA54B,OAAA4E,QACAg0B,EAAA54B,OAAA6E,SACA+zB,EAAAE,UAAA1yB,EAAA,IAAAxB,EAAAC,IAGA1G,EAAAm7B,cAAAtc,EAAA27C,EAAA,IAAA32D,EAAA4C,EAAAC,EAAA,EAAAg0D,EAAAtwD,EAAAvC,GAEAA,IAAA4yB,EAAA54B,SACA44B,EAAA54B,OAAA4E,MAAA,EACAg0B,EAAA54B,OAAA6E,OAAA,GAIA21D,EAAAr8D,EAAAU,GAEA49D,EAAA59D,IACAV,EAAA2zC,eAAA90B,GAIA,IAAA0iD,GACAxH,EAAAE,EAAAj5D,OAAAi5D,OAAAruD,EAAA0uD,EAAAgH,IAMAK,CAAAlT,MAeA,SAAA+K,EAAAx5D,EAAAs6D,EAAAzyD,EAAAnH,GAEA,IAAAme,GADAne,KAAA2rC,EAAAytB,gBACAj7C,QAAA7e,EAAAgH,WACAhH,EAAA+G,YAAA8X,EAAAy7C,GACA,IAAA7zD,EAAA/F,EAAA+F,MACAC,EAAAhG,EAAAgG,OACAq5D,EAAAr/D,EAAAq/D,MACAvF,EAAA95D,EAAA85D,OAAA,EACAC,EAAA/5D,EAAA+5D,gBAAA/5D,EAAAg6D,QAAA16D,EAAAo7B,KACAu/B,EAAAC,EAAAH,GACAC,EAAAh6D,EAAAg6D,QAAAC,EAAAD,OACAtwD,EAAA1J,EAAA0J,MAAAywD,EAAA76D,EAAA6H,EAAA8yD,EAAAvwD,MAEA,GAAA87C,EAAAr+C,GAGGA,aAAAs0B,oBACHt0B,EAAA,IAAA6zB,WAAA7zB,EAAA9B,aAJA,CACA,IAAAymD,EAAAyK,EAAAlR,2BAAA37C,GACAvC,EAAA,IAAA2kD,EAAA3kD,GAKA,IAOAi6D,EAPAvG,EAAAL,EAAAT,EAAArwD,GACA2sD,EAAAlvD,EAAAyqD,WAAAiJ,EAEA,GAAAxE,EAAA,EACA,sCAAAvM,EAAA5R,eAAA54C,EAAA06D,GAKA,GAAA77C,IAAA7e,EAAA66C,WACA,GAAAp0C,GAAAC,GAAAq5D,GAUKt5D,GAAAC,GAAAq5D,GAIAr5D,GAAAD,GAAAs5D,GAKL+B,EAAAlG,EAAA57D,EAAA6e,EAAApY,EAAAC,EAAAqwD,EAAAgJ,GACAt5D,EAAAq7D,EAAAr7D,MACAC,EAAAo7D,EAAAp7D,SANAo7D,EAAAlG,EAAA57D,EAAA6e,EAAApY,EAAAs5D,EAAAhJ,EAAArwD,GACAD,EAAAq7D,EAAAr7D,MACAs5D,EAAA+B,EAAAp7D,SANAo7D,EAAAlG,EAAA57D,EAAA6e,EAAAnY,EAAAq5D,EAAAhJ,EAAAtwD,GACAC,EAAAo7D,EAAAr7D,MACAs5D,EAAA+B,EAAAp7D,YAbA,CACA,IAAA6B,EAAAjD,KAAAy8D,KAAAhL,GAEA,GAAAxuD,EAAA,KACA,uDAAAwuD,EAGAtwD,EAAA8B,EACA7B,EAAA6B,EACAw3D,EAAAx3D,OAeAu5D,EAAAlG,EAAA57D,EAAA6e,EAAApY,EAAAC,EAAAqwD,GACAtwD,EAAAq7D,EAAAr7D,MACAC,EAAAo7D,EAAAp7D,OAOA,GAJA41D,EAAAt8D,GACAA,EAAAs7B,YAAAt7B,EAAAu8C,iBAAA77C,EAAA67D,iBAAA,GACAN,EAAAj8D,EAAAU,GAEAme,IAAA7e,EAAA46C,iBAAA,CACA,IACAonB,EAAAjL,EAAA,GADAwE,EAAA1zD,EAAAsqD,mBAEA4M,EAAA/+D,EAAAU,GAAAY,QAAA,SAAAkb,GACA,IAAA/T,EAAAu5D,EAAAxlD,EAAAiyC,IACA5kD,EAAAhC,EAAAo6D,SAAAx5D,IAAAu5D,GACAhiE,EAAAi2C,WAAAz5B,EAAAyiD,KAAAzE,EAAAC,EAAAh0D,EAAAC,EAAA,EAAAg0D,EAAAtwD,EAAAP,UAEGgV,IAAA7e,EAAA66C,WACH76C,EAAAm2C,WAAAt3B,EAAA27C,EAAAC,EAAAh0D,EAAAC,EAAAq5D,EAAA,EAAArF,EAAAtwD,EAAAvC,GAEA7H,EAAAi2C,WAAAp3B,EAAA27C,EAAAC,EAAAh0D,EAAAC,EAAA,EAAAg0D,EAAAtwD,EAAAvC,GAKA,OAFAw0D,EAAAr8D,EAAAU,GACAm8D,EAAA78D,IAEAyG,QACAC,SACAq5D,QACA31D,QAaA,SAAAmvD,EAAAv5D,EAAAs6D,EAAA55D,GACA,IAAAme,EAAAne,EAAAme,QAAA7e,EAAAgH,WACAhH,EAAA+G,YAAA8X,EAAAy7C,GACA,IAAAE,EAAA95D,EAAA85D,OAAA,EACAC,EAAA/5D,EAAA+5D,gBAAA/5D,EAAAg6D,QAAA16D,EAAAo7B,KACAu/B,EAAAC,EAAAH,GACAC,EAAAh6D,EAAAg6D,QAAAC,EAAAD,OACAtwD,EAAA1J,EAAA0J,MAAAuwD,EAAAvwD,KAGA,GAFA6xD,EAAAj8D,EAAAU,GAEAme,IAAA7e,EAAA46C,iBACA,QAAAT,EAAA,EAAoBA,EAAA,IAAQA,EAC5Bn6C,EAAAi2C,WAAAj2C,EAAA86D,4BAAA3gB,EAAAqgB,EAAAC,EAAA/5D,EAAA+F,MAAA/F,EAAAgG,OAAA,EAAAg0D,EAAAtwD,EAAA,WAEGyU,IAAA7e,EAAA66C,WACH76C,EAAAm2C,WAAAt3B,EAAA27C,EAAAC,EAAA/5D,EAAA+F,MAAA/F,EAAAgG,OAAAhG,EAAAq/D,MAAA,EAAArF,EAAAtwD,EAAA,MAEApK,EAAAi2C,WAAAp3B,EAAA27C,EAAAC,EAAA/5D,EAAA+F,MAAA/F,EAAAgG,OAAA,EAAAg0D,EAAAtwD,EAAA,MAGAiyD,EAAAr8D,EAAAU,GAYA,SAAAoG,EAAA9G,EAAAU,EAAAq5D,GACAA,KAAAzrB,EACA5tC,KAAA2rC,EAAAytB,eACA,IAAAQ,EAAAt6D,EAAA8G,gBACA+X,EAAAne,EAAAme,QAAA7e,EAAAgH,WACAP,EAAA/F,EAAA+F,OAAA,EACAC,EAAAhG,EAAAgG,QAAA,EACA+zD,EAAA/5D,EAAA+5D,gBAAAz6D,EAAAo7B,KACAu/B,EAAAC,EAAAH,GACArwD,EAAA1J,EAAA0J,MAAAuwD,EAAAvwD,KACApK,EAAA+G,YAAA8X,EAAAy7C,GAEAz7C,IAAA7e,EAAA46C,mBAEA56C,EAAAmH,cAAA0X,EAAA7e,EAAAm9D,eAAAn9D,EAAAq+D,eACAr+D,EAAAmH,cAAA0X,EAAA7e,EAAAo9D,eAAAp9D,EAAAq+D,gBAGA,IAAAx2D,EAAAnH,EAAAmH,IAEA,GAAAA,EAKA,GAJA,mBAAAA,IACAA,IAAA7H,EAAAU,IAGA,iBAAAmH,EACA4xD,EAAAz5D,EAAAs6D,EAAA55D,EAAAq5D,QACK,GAAA7T,EAAAr+C,IAAA/E,MAAA0+B,QAAA35B,KAAA,iBAAAA,EAAA,IAAA/E,MAAA0+B,QAAA35B,EAAA,KAAAq+C,EAAAr+C,EAAA,MACL,IAAAi6D,EAAAtI,EAAAx5D,EAAAs6D,EAAAzyD,EAAAnH,GACA+F,EAAAq7D,EAAAr7D,MACAC,EAAAo7D,EAAAp7D,OACA0D,EAAA03D,EAAA13D,UACK,GAAAtH,MAAA0+B,QAAA35B,KAAA,iBAAAA,EAAA,IAAAu4D,EAAAv4D,EAAA,KACLgX,IAAA7e,EAAA46C,iBACAwmB,EAAAphE,EAAAs6D,EAAA55D,EAAAq5D,GAEA6H,EAAA5hE,EAAAs6D,EAAA55D,EAAAq5D,OAEK,KAAAqG,EAAAv4D,GAKL,4BAJA6xD,EAAA15D,EAAAs6D,EAAAzyD,EAAAnH,GACA+F,EAAAoB,EAAApB,MACAC,EAAAmB,EAAAnB,YAKA6yD,EAAAv5D,EAAAs6D,EAAA55D,GAQA,OALA49D,EAAA59D,IACAi5D,EAAA35D,EAAAs6D,EAAA55D,EAAA+F,EAAAC,EAAA+zD,EAAArwD,GAGAwvD,EAAA55D,EAAAs6D,EAAA55D,GACA45D,IAwLA,SAAAx8D,EAAAD,EAAAF,GAEA,aAGAE,EAAAsB,YAAA,EACA,IAAA+iE,GACAC,IAAA,EACAr8C,IAAA,EACAs8C,YAAA,GAEAvkE,EAAAukE,WAAAvkE,EAAAioB,GAAAjoB,EAAAskE,QAAA,EAEA,IAAAA,EAAA1X,EAAA9sD,EAAA,IAEAE,EAAAskE,KAEA,IAAAr8C,EAAA2kC,EAAA9sD,EAAA,IAEAE,EAAAioB,KAEA,IAAAs8C,EAAA3X,EAAA9sD,EAAA,KAEAE,EAAAukE,aAEA,IAAAx5D,EAAAjL,EAAA,IAQA,SAAA8sD,EAAAl1B,GAAuC,GAAAA,KAAAp2B,WAA6B,OAAAo2B,EAAqB,IAAA0B,KAAiB,SAAA1B,EAAmB,QAAAj2B,KAAAi2B,EAAuB,GAAA92B,OAAAkB,UAAAC,eAAA1B,KAAAq3B,EAAAj2B,GAAA,CAAsD,IAAAqrD,EAAAlsD,OAAAC,gBAAAD,OAAAmsD,yBAAAnsD,OAAAmsD,yBAAAr1B,EAAAj2B,MAAsHqrD,EAAA/rD,KAAA+rD,EAAAtmD,IAA4B5F,OAAAC,eAAAu4B,EAAA33B,EAAAqrD,GAAmD1zB,EAAA33B,GAAAi2B,EAAAj2B,GAAsD,OAAtB23B,EAAAiuB,QAAA3vB,EAAsB0B,EANrcx4B,OAAA4C,KAAAuH,GAAAtH,QAAA,SAAAhC,GACA,YAAAA,GAAA,eAAAA,IACAb,OAAAkB,UAAAC,eAAA1B,KAAAgkE,EAAA5iE,KACAzB,EAAAyB,GAAAsJ,EAAAtJ,QAOA,SAAAxB,EAAAD,EAAAF,GAEA,aAGAE,EAAAsB,YAAA,EACAtB,EAAAwkE,oBACAxkE,EAAAykE,4BACAzkE,EAAA0kE,qBACA1kE,EAAA2kE,sBACA3kE,EAAA4kE,uBACA5kE,EAAA6kE,8BACA7kE,EAAA8kE,uBACA9kE,EAAA+kE,wBACA/kE,EAAAglE,yBACAhlE,EAAAilE,sBACAjlE,EAAAklE,qBACAllE,EAAAmlE,gBAuKA,SAAAC,GACA,IAAA34D,EAAA24D,EAAA34D,QACA44D,KACAnM,EAAAzsD,EAAAtJ,OAoBA,OADAvC,OAAA4C,KAAA4hE,GAAAxrC,OAAA0rC,GAAA7hE,QAjBA,SAAA8hE,GAKA,IAJA,IAAAC,EAAAJ,EAAAG,GACAt5D,EAAAu5D,EAAAv5D,cACAw5D,EAAAhB,EAAAx4D,EAAAitD,EAAAsM,EAAA33B,aAEAyO,EAAA,EAAoBA,EAAA4c,IAAkB5c,EAItC,IAHA,IAAAsU,EAAAnkD,EAAA6vC,GACA1xC,EAAAgmD,EAAA3kD,EAEAy5D,EAAA,EAAsBA,EAAAz5D,IAAoBy5D,EAC1CD,EAAA5gE,KAAA2gE,EAAA56D,EAAA86D,IAIAL,EAAAE,GAAAE,IAIAJ,GA7LArlE,EAAA2lE,eAuMA,SAAAP,GACA,GAAAA,EAAA34D,QACA,qEAMA,IAHA,IAAAm5D,EAAAR,EAAAS,OACAC,EAAAF,EAAAziE,OAEAm5C,EAAA,EAAkBA,EAAAwpB,EAAiBxpB,GAAA,GAEnC,IAAAypB,EAAAH,EAAAtpB,EAAA,GACA0pB,EAAAJ,EAAAtpB,EAAA,GACA2pB,EAAAL,EAAAtpB,EAAA,GACA4pB,EAAAN,EAAAtpB,EAAA,GACA6pB,EAAAP,EAAAtpB,EAAA,GACA8pB,EAAAR,EAAAtpB,EAAA,GACA+pB,EAAAT,EAAAtpB,EAAA,GACAgqB,EAAAV,EAAAtpB,EAAA,GACAiqB,EAAAX,EAAAtpB,EAAA,GAEAkqB,EAAAT,EAAAG,EAAAG,EACAI,EAAAT,EAAAG,EAAAG,EACAI,EAAAT,EAAAG,EAAAG,EAEApjE,EAAAsE,KAAAkJ,KAAA61D,IAAAC,IAAAC,KACAF,GAAArjE,EACAsjE,GAAAtjE,EACAujE,GAAAvjE,EAEAyiE,EAAAtpB,EAAA,GAAAkqB,EACAZ,EAAAtpB,EAAA,GAAAmqB,EACAb,EAAAtpB,EAAA,GAAAoqB,EACAd,EAAAtpB,EAAA,GAAAkqB,EACAZ,EAAAtpB,EAAA,GAAAmqB,EACAb,EAAAtpB,EAAA,GAAAoqB,EACAd,EAAAtpB,EAAA,GAAAkqB,EACAZ,EAAAtpB,EAAA,GAAAmqB,EACAb,EAAAtpB,EAAA,GAAAoqB,EAGA,OAAAtB,GA9OAplE,EAAA2mE,uBAo6CA,SAAAvB,EAAAviE,GACAA,QACA,IAAAq2D,EAAAkM,EAAAn9D,SAAAixD,YACA0N,EAAAnC,EAAA,EAAAvL,EAAAr7B,YAEAiK,EAAAjlC,EAAAilC,MAAA,SAAA8oB,EAAA2U,GACA,OAAAA,EAAA,EArCA,SAAAv6B,GACA,OAAAvjC,KAAA0G,SAAA68B,EAAA,EAoCA67B,CAAA,UAKA,GAFAzB,EAAApH,MAAA4I,EAEAxB,EAAA34D,QAEA,QAAA6vC,EAAA,EAAoBA,EAAA4c,IAAkB5c,EACtCsqB,EAAA/hE,KAAAijC,EAAAwU,EAAA,GAAAxU,EAAAwU,EAAA,GAAAxU,EAAAwU,EAAA,GAAAxU,EAAAwU,EAAA,SAOA,IAHA,IAAAwqB,EAAAjkE,EAAAkkE,eAAA,EACAC,EAAA9N,EAAA4N,EAEAG,EAAA,EAAsBA,EAAAD,IAAgBC,EAItC,IAFA,IAAAjJ,GAAAl2B,EAAAm/B,EAAA,GAAAn/B,EAAAm/B,EAAA,GAAAn/B,EAAAm/B,EAAA,GAAAn/B,EAAAm/B,EAAA,IAEAvB,EAAA,EAAsBA,EAAAoB,IAAuBpB,EAC7CkB,EAAA/hE,KAAAm5D,GAKA,OAAAoH,GAl8CAplE,EAAAknE,qBACAlnE,EAAAmnE,kBACAnnE,EAAAonE,oBACApnE,EAAAqnE,mBACArnE,EAAAsnE,eAkiDA,SAAAC,GAyBA,IAxBA,IACAC,EADAn5B,KAIAo5B,EAAA,SAAAnrB,GACA,IAAAhd,EAAAioC,EAAAjrB,GACA17C,OAAA4C,KAAA87B,GAAA77B,QAAA,SAAAhD,GAEA4tC,EAAA5tC,KACA4tC,EAAA5tC,OAGA+mE,GAAA,YAAA/mE,IACA+mE,EAAA/mE,GAGA,IAAAinE,EAAApoC,EAAA7+B,GACAwL,EAAAutD,EAAAkO,EAAAjnE,GACAsoC,EAAAwwB,EAAAmO,GACAxO,EAAAnwB,EAAA5lC,OAAA8I,EACAoiC,EAAA5tC,GAAAoE,KAAAq0D,MAIA5c,EAAA,EAAkBA,EAAAirB,EAAApkE,SAA2Bm5C,EAC7CmrB,EAAAnrB,GA8CA,IAAAvmB,EAAAsY,EAAAm5B,GACAG,KAOA,OANA/mE,OAAA4C,KAAA6qC,GAAA5qC,QAAA,SAAAhD,GACA,IAAA8hD,EA5CA,SAAA9hD,GAIA,IAHA,IACAmnE,EADAzkE,EAAA,EAGAm5C,EAAA,EAAoBA,EAAAirB,EAAApkE,SAA2Bm5C,EAAA,CAC/C,IAAAhd,EAAAioC,EAAAjrB,GACAorB,EAAApoC,EAAA7+B,GACAsoC,EAAAwwB,EAAAmO,GACAvkE,GAAA4lC,EAAA5lC,OAEAykE,IAAAF,EAAA17D,OACA47D,EAAAF,GAIA,OACAvkE,SACA0kE,KAAAD,GA2BAE,CAAArnE,GACAsnE,EAAAC,EAAAzlB,EAAAslB,KAAAtlB,EAAAp/C,SAxBA,SAAA1C,EAAAs1B,EAAAkyC,GAIA,IAHA,IAAAC,EAAA,EACAt9D,EAAA,EAEA0xC,EAAA,EAAoBA,EAAAirB,EAAApkE,SAA2Bm5C,EAAA,CAC/C,IAAAhd,EAAAioC,EAAAjrB,GACAorB,EAAApoC,EAAA7+B,GACAsoC,EAAAwwB,EAAAmO,GAEA,YAAAjnE,GACA0nE,EAAAp/B,EAAAk/B,EAAAr9D,EAAAs9D,GACAA,GAAAnyC,EAAAumB,IAEA6rB,EAAAp/B,EAAAk/B,EAAAr9D,GAGAA,GAAAm+B,EAAA5lC,QASAilE,CAAA3nE,EAAAs1B,EAAAwjC,EAAAwO,IACAJ,EAAAlnE,GAAAsnE,IAEAJ,GAjnDA3nE,EAAAqoE,kBA+nDA,SAAA/oC,GACA,IAAAqoC,KAQA,OAPA/mE,OAAA4C,KAAA87B,GAAA77B,QAAA,SAAAhD,GACA,IAAAmnE,EAAAtoC,EAAA7+B,GACA6nE,EAAA/O,EAAAqO,GACAG,EAAAC,EAAAJ,EAAAU,EAAAnlE,QACAglE,EAAAG,EAAA/O,EAAAwO,GAAA,GACAJ,EAAAlnE,GAAAsnE,IAEAJ,GAvoDA3nE,EAAAuoE,kBAAAvoE,EAAAwoE,qBAAAxoE,EAAAyoE,mBAAAzoE,EAAA0oE,sBAAA1oE,EAAA2oE,sBAAA3oE,EAAA4oE,yBAAA5oE,EAAA6oE,qBAAA7oE,EAAA8oE,wBAAA9oE,EAAA+oE,oBAAA/oE,EAAAgpE,uBAAAhpE,EAAAipE,2BAAAjpE,EAAAkpE,8BAAAlpE,EAAAmpE,oBAAAnpE,EAAAopE,uBAAAppE,EAAAqpE,mBAAArpE,EAAAspE,sBAAAtpE,EAAAupE,kBAAAvpE,EAAAwpE,qBAAAxpE,EAAAypE,iBAAAzpE,EAAA0pE,yBAAA,EAEA,IAAAC,EAAA/c,EAAA9sD,EAAA,IAEA+sD,EAAAD,EAAA9sD,EAAA,IAEAs5D,EAAAxM,EAAA9sD,EAAA,IAEAwkE,EAAA1X,EAAA9sD,EAAA,IAEAmoB,EAAA2kC,EAAA9sD,EAAA,IAEA,SAAA8sD,EAAAl1B,GAAuC,GAAAA,KAAAp2B,WAA6B,OAAAo2B,EAAqB,IAAA0B,KAAiB,SAAA1B,EAAmB,QAAAj2B,KAAAi2B,EAAuB,GAAA92B,OAAAkB,UAAAC,eAAA1B,KAAAq3B,EAAAj2B,GAAA,CAAsD,IAAAqrD,EAAAlsD,OAAAC,gBAAAD,OAAAmsD,yBAAAnsD,OAAAmsD,yBAAAr1B,EAAAj2B,MAAsHqrD,EAAA/rD,KAAA+rD,EAAAtmD,IAA4B5F,OAAAC,eAAAu4B,EAAA33B,EAAAqrD,GAAmD1zB,EAAA33B,GAAAi2B,EAAAj2B,GAAsD,OAAtB23B,EAAAiuB,QAAA3vB,EAAsB0B,EAiErc,IAAAmgC,EAAAoQ,EAAAnP,UAEAhB,EAAAmQ,EAAApP,kBAUA,SAAAqP,EAAAriB,EAAAt7C,GACA,IAAA49D,EAAA,EA0BA,OAxBAtiB,EAAA1iD,KAAA,WACA,QAAAy3C,EAAA,EAAoBA,EAAAv3C,UAAA5B,SAAuBm5C,EAAA,CAC3C,IAAAn7C,EAAA4D,UAAAu3C,GAEA,GAAAn7C,aAAA8D,OAAAm0D,EAAA/Q,cAAAlnD,GACA,QAAAukE,EAAA,EAAwBA,EAAAvkE,EAAAgC,SAAmBuiE,EAC3Cne,EAAAsiB,KAAA1oE,EAAAukE,QAGAne,EAAAsiB,KAAA1oE,IAKAomD,EAAAuiB,MAAA,SAAAC,GACAF,EAAAE,GAAA,GAGAxiB,EAAAt7C,gBACArL,OAAAC,eAAA0mD,EAAA,eACAxmD,IAAA,WACA,OAAAsB,KAAAc,OAAAd,KAAA4J,cAAA,KAGAs7C,EA0BA,SAAAkd,EAAAx4D,EAAAitD,EAAA8Q,GAEA,OAAAJ,EAAA,IADAI,GAAApmE,cACAqI,EAAAitD,GAAAjtD,GAGA,SAAAq5D,EAAA7kE,GACA,kBAAAA,EAsFA,SAAAwpE,EAAAlhC,EAAAmhC,EAAA/jD,GAIA,IAHA,IAAAtL,EAAAkuB,EAAA5lC,OACAg5C,EAAA,IAAAv4C,aAAA,GAEA04C,EAAA,EAAkBA,EAAAzhC,EAAUyhC,GAAA,EAC5Bn2B,EAAA+jD,GAAAnhC,EAAAuT,GAAAvT,EAAAuT,EAAA,GAAAvT,EAAAuT,EAAA,IAAAH,GACApT,EAAAuT,GAAAH,EAAA,GACApT,EAAAuT,EAAA,GAAAH,EAAA,GACApT,EAAAuT,EAAA,GAAAH,EAAA,GAIA,SAAAgb,EAAAC,EAAA/pD,EAAA+4C,GACAA,KAAAn+B,EAAAzmB,SACA,IAAA6O,EAAAhD,EAAA,GACAiD,EAAAjD,EAAA,GACA2a,EAAA3a,EAAA,GAIA,OAHA+4C,EAAA,GAAA/1C,EAAA+mD,EAAA,GAAA9mD,EAAA8mD,EAAA,GAAApvC,EAAAovC,EAAA,GACAhR,EAAA,GAAA/1C,EAAA+mD,EAAA,GAAA9mD,EAAA8mD,EAAA,GAAApvC,EAAAovC,EAAA,GACAhR,EAAA,GAAA/1C,EAAA+mD,EAAA,GAAA9mD,EAAA8mD,EAAA,GAAApvC,EAAAovC,EAAA,IACAhR,EAWA,SAAA8gB,EAAAn+B,EAAAmhC,GAEA,OADAD,EAAAlhC,EAAAmhC,EAAA5F,EAAApN,oBACAnuB,EAYA,SAAAo+B,EAAAp+B,EAAAmhC,GAEA,OADAD,EAAAlhC,EAAAu7B,EAAAlhD,QAAA8mD,GAAA/S,GACApuB,EAYA,SAAAq+B,EAAAr+B,EAAAmhC,GAEA,OADAD,EAAAlhC,EAAAmhC,EAAA5F,EAAAjN,gBACAtuB,EAcA,SAAAs+B,EAAA/nC,EAAA4qC,GAYA,OAXAtpE,OAAA4C,KAAA87B,GAAA77B,QAAA,SAAAhD,GACA,IAAAsoC,EAAAzJ,EAAA7+B,GAEAA,EAAAy2B,QAAA,UACAkwC,EAAAr+B,EAAAmhC,GACKzpE,EAAAy2B,QAAA,WAAAz2B,EAAAy2B,QAAA,aACLgwC,EAAAn+B,EAAAmhC,GACKzpE,EAAAy2B,QAAA,YACLiwC,EAAAp+B,EAAAmhC,KAGA5qC,EAgEA,SAAAwlC,EAAAp6D,EAAAg3D,EAAAC,GAKA,OAJAj3D,KAAA,GAKAzC,UACAgE,cAAA,EACAD,OANA01D,KAAA,IAMA,GAJAh3D,GAAA,KADAi3D,KAAA,IAKA,EAAAj3D,EAAAg3D,EAAA,EAAAh3D,EAAAi3D,GAAA,EAAAj3D,EAAAg3D,GAAA,EAAAh3D,EAAAi3D,EAAA,EAAAj3D,EAAAg3D,EAAA,EAAAh3D,EAAAi3D,EAAA,EAAAj3D,IAEAm7D,QAAA,yBACAv5D,UAAA,iBACAG,SAAA,cAkDA,SAAAk4D,EAAA/7D,EAAAs5D,EAAAiI,EAAAC,EAAAF,GACAthE,KAAA,EACAs5D,KAAA,EACAiI,KAAA,EACAC,KAAA,EACAF,KAAA5F,EAAAz1D,WAMA,IALA,IAAAw7D,GAAAF,EAAA,IAAAC,EAAA,GACAp9D,EAAAy3D,EAAA,EAAA4F,GACAzE,EAAAnB,EAAA,EAAA4F,GACAC,EAAA7F,EAAA,EAAA4F,GAEA3zD,EAAA,EAAiBA,GAAA0zD,EAAwB1zD,IACzC,QAAAtS,EAAA,EAAmBA,GAAA+lE,EAAwB/lE,IAAA,CAC3C,IAAAmmE,EAAAnmE,EAAA+lE,EACA98D,EAAAqJ,EAAA0zD,EACAp9D,EAAAnI,KAAA+D,EAAA2hE,EAAA,GAAA3hE,EAAA,EAAAs5D,EAAA70D,EAAA,GAAA60D,GACA0D,EAAA/gE,KAAA,OACAylE,EAAAzlE,KAAA0lE,EAAAl9D,GAOA,IAHA,IAAAm9D,EAAAL,EAAA,EACA19D,EAAAg4D,EAAA,EAAA0F,EAAAC,EAAA,EAAA1iB,aAEA+iB,EAAA,EAAkBA,EAAAL,EAAwBK,IAE1C,QAAAC,EAAA,EAAoBA,EAAAP,EAAwBO,IAG5Cj+D,EAAA5H,MAAA4lE,EAAA,GAAAD,EAAAE,GAAAD,EAAA,GAAAD,EAAAE,GAAAD,EAAA,GAAAD,EAAAE,EAAA,GAEAj+D,EAAA5H,MAAA4lE,EAAA,GAAAD,EAAAE,GAAAD,EAAA,GAAAD,EAAAE,EAAA,GAAAD,EAAA,GAAAD,EAAAE,EAAA,GAUA,OANArD,GACAp/D,SAAA+E,EACA64D,OAAAD,EACAt5D,SAAAg+D,EACA79D,WACGy9D,GAoEH,SAAAtF,EAAA+F,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAL,GAAA,GAAAC,GAAA,EACA,MAAAxiE,MAAA,qDAGAyiE,KAAA,EACAC,KAAAtjE,KAAA6G,GACA08D,KAAA,EAYA,IAVA,IAAAE,EAAAH,EAAAD,EACAK,GAFAF,KAAA,EAAAxjE,KAAA6G,IAEA08D,EAIAX,GAAAO,EAAA,IAAAC,EAAA,GACA79D,EAAAy3D,EAAA,EAAA4F,GACAzE,EAAAnB,EAAA,EAAA4F,GACAC,EAAA7F,EAAA,EAAA4F,GAEA/lE,EAAA,EAAiBA,GAAAumE,EAAyBvmE,IAC1C,QAAAF,EAAA,EAAmBA,GAAAwmE,EAAuBxmE,IAAA,CAE1C,IAAAmmE,EAAAnmE,EAAAwmE,EACAv9D,EAAA/I,EAAAumE,EACAO,EAAAD,EAAAZ,EACAc,EAAAH,EAAA79D,EACAi+D,EAAA7jE,KAAAyI,IAAAk7D,GACAG,EAAA9jE,KAAA0I,IAAAi7D,GACAI,EAAA/jE,KAAAyI,IAAAm7D,GAEAI,EAAAF,EAAAC,EACAE,EAFAjkE,KAAA0I,IAAAk7D,GAGAM,EAAAL,EAAAE,EACAx+D,EAAAnI,KAAA8lE,EAAAc,EAAAd,EAAAe,EAAAf,EAAAgB,GACA/F,EAAA/gE,KAAA4mE,EAAAC,EAAAC,GACArB,EAAAzlE,KAAA,EAAA0lE,EAAAl9D,GAOA,IAHA,IAAAu+D,EAAAhB,EAAA,EACAn+D,EAAAg4D,EAAA,EAAAmG,EAAAC,EAAA,EAAAnjB,aAEAmkB,EAAA,EAAmBA,EAAAjB,EAAwBiB,IAE3C,QAAAC,EAAA,EAAoBA,EAAAjB,EAAyBiB,IAG7Cr/D,EAAA5H,MAAAinE,EAAA,GAAAF,EAAAC,GAAAC,EAAA,GAAAF,EAAAC,EAAA,GAAAC,EAAA,GAAAF,EAAAC,GAEAp/D,EAAA5H,MAAAinE,EAAA,GAAAF,EAAAC,GAAAC,EAAA,GAAAF,EAAAC,EAAA,GAAAC,EAAA,GAAAF,EAAAC,EAAA,GAIA,OACA5jE,SAAA+E,EACA64D,OAAAD,EACAt5D,SAAAg+D,EACA79D,WASA,IAAAs/D,IAAA,UACA,UACA,UACA,UACA,UACA,UAmCA,SAAArH,EAAAh6D,GAYA,IAVA,IAAAogB,GADApgB,KAAA,GACA,EACAshE,KAAAlhD,uFACAmhD,IAAA,mDACAC,IAAA,wBAEAl/D,EAAAy3D,EAAA,EADA,IAEAmB,EAAAnB,EAAA,EAFA,IAGA6F,EAAA7F,EAAA,EAHA,IAIAh4D,EAAAg4D,EAAA,KAAA/c,aAEA/oC,EAAA,EAAiBA,EAAA,IAAOA,EAAA,CAGxB,IAFA,IAAAwtD,EAAAJ,EAAAptD,GAEAtR,EAAA,EAAmBA,EAAA,IAAOA,EAAA,CAC1B,IAAApF,EAAA+jE,EAAAG,EAAA9+D,IACAw4D,EAAAoG,EAAAttD,GACAytD,EAAAF,EAAA7+D,GAGAL,EAAAnI,KAAAoD,GACA29D,EAAA/gE,KAAAghE,GACAyE,EAAAzlE,KAAAunE,GAIA,IAAAxhE,EAAA,EAAA+T,EACAlS,EAAA5H,KAAA+F,EAAA,EAAAA,EAAA,EAAAA,EAAA,GACA6B,EAAA5H,KAAA+F,EAAA,EAAAA,EAAA,EAAAA,EAAA,GAGA,OACA3C,SAAA+E,EACA64D,OAAAD,EACAt5D,SAAAg+D,EACA79D,WAoEA,SAAAo4D,EAAAwH,EAAAC,EAAAzjE,EAAA0jE,EAAAC,EAAAC,EAAAC,GACA,GAAAH,EAAA,EACA,MAAAlkE,MAAA,2CAGA,GAAAmkE,EAAA,EACA,MAAAnkE,MAAA,6CAmBA,IAhBA,IAAAskE,OAAA5+D,IAAA0+D,KACAG,OAAA7+D,IAAA2+D,KACAG,GAAAF,EAAA,MAAAC,EAAA,KACAvC,GAAAkC,EAAA,IAAAC,EAAA,EAAAK,GACA7/D,EAAAy3D,EAAA,EAAA4F,GACAzE,EAAAnB,EAAA,EAAA4F,GACAC,EAAA7F,EAAA,EAAA4F,GACA59D,EAAAg4D,EAAA,EAAA8H,GAAAC,EAAAK,GAAA,EAAAnlB,aACAolB,EAAAP,EAAA,EAEAQ,EAAAtlE,KAAAulE,MAAAX,EAAAC,EAAAzjE,GACAokE,EAAAxlE,KAAA0I,IAAA48D,GACAG,EAAAzlE,KAAAyI,IAAA68D,GAEA7mE,EAAAsmE,GAAAI,EAAA,KAEA31D,EAHA01D,GAAA,IAGsB11D,GAAA/Q,IAAW+Q,EAAA,CACjC,IAAA5J,EAAA4J,EAAAu1D,EACAloE,EAAAuE,EAAAwE,EACA8/D,OAAA,EAEAl2D,EAAA,GACA3S,EAAA,EACA+I,EAAA,EACA8/D,EAAAd,GACKp1D,EAAAu1D,GACLloE,EAAAuE,EACAwE,EAAA,EACA8/D,EAAAb,GAEAa,EAAAd,EAAAp1D,EAAAu1D,GAAAF,EAAAD,IAGA,IAAAp1D,OAAAu1D,EAAA,IACAW,EAAA,EACA9/D,EAAA,GAGA/I,GAAAuE,EAAA,EAEA,QAAAyzC,EAAA,EAAoBA,EAAAwwB,IAAsBxwB,EAAA,CAC1C,IAAApsC,EAAAzI,KAAAyI,IAAAosC,EAAA70C,KAAA6G,GAAA,EAAAi+D,GACAp8D,EAAA1I,KAAA0I,IAAAmsC,EAAA70C,KAAA6G,GAAA,EAAAi+D,GACAv/D,EAAAnI,KAAAqL,EAAAi9D,EAAA7oE,EAAA6L,EAAAg9D,GACAvH,EAAA/gE,KAAAoS,EAAA,GAAAA,EAAAu1D,EAAA,EAAAt8D,EAAA+8D,EAAAh2D,EAAA,KAAAA,EAAAu1D,EAAA,EAAAU,EAAAj2D,EAAA,GAAAA,EAAAu1D,EAAA,EAAAr8D,EAAA88D,GACA3C,EAAAzlE,KAAAy3C,EAAAiwB,EAAA,EAAAl/D,IAIA,QAAA+/D,EAAA,EAAmBA,EAAAZ,EAAAK,IAAoCO,EAEvD,QAAA7Z,EAAA,EAAqBA,EAAAgZ,IAA0BhZ,EAE/C9mD,EAAA5H,KAAAioE,GAAAM,EAAA,KAAA7Z,EAAAuZ,GAAAM,EAAA,KAAA7Z,EAAAuZ,GAAAM,EAAA,KAAA7Z,GACA9mD,EAAA5H,KAAAioE,GAAAM,EAAA,KAAA7Z,EAAAuZ,GAAAM,EAAA,KAAA7Z,EAAAuZ,GAAAM,EAAA,KAAA7Z,GAIA,OACAtrD,SAAA+E,EACA64D,OAAAD,EACAt5D,SAAAg+D,EACA79D,WAWA,SAAA4gE,EAAAC,EAAAC,GACAA,QAGA,IAFA,IAAAvhE,KAEAswC,EAAA,EAAkBA,EAAAgxB,EAAAnqE,OAAqBm5C,GAAA,GACvC,IAAAkxB,EAAAF,EAAAhxB,GACA+kB,EAAAiM,EAAAtnE,MAAAs2C,EAAA,EAAAA,EAAA,GACA+kB,EAAAx8D,KAAAwvB,MAAAgtC,EAAAkM,GAEA,QAAA7H,EAAA,EAAoBA,EAAA8H,IAAgB9H,EACpC15D,EAAAnH,KAAAwvB,MAAAroB,EAAAq1D,GAIA,OAAAr1D,EAkCA,SAAAw4D,IACA,IAAAx3D,GACA,6CACA,gDACA,gDACA,mDACA,sDACA,sDACA,6CACA,sDACA,sDACA,mDACA,mDACA,mDACA,mDACA,sDACA,sDACA,8CAkBA44D,EAAAyH,GAGA,SAGA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,WACAI,EAAAJ,GAGA,cAGA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,sBACAK,EAAA1gE,EAAA7J,OAAA,EACAm8B,GACAr3B,SAAAw8D,EAAA,EAAAiJ,GACAphE,SAAAm4D,EAAA,EAAAiJ,GACA7H,OAAApB,EAAA,EAAAiJ,GACA1P,MAAAyG,EAAA,EAAAiJ,EAAA7vC,YACApxB,QAAAg4D,EAAA,EAAAiJ,EAAA,EAAAhmB,cAEApoB,EAAAr3B,SAAApD,KAAAmI,GACAsyB,EAAAhzB,SAAAzH,MA3DA,gDACA,gDACA,gDACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,0BA6CAy6B,EAAAumC,OAAAhhE,KAAA+gE,GACAtmC,EAAA0+B,MAAAn5D,KAAA4oE,GAEA,QAAAnxB,EAAA,EAAkBA,EAAAoxB,IAAepxB,EACjChd,EAAA7yB,QAAA5H,KAAAy3C,GAGA,OAAAhd,EAoDA,SAAAylC,EAAA4I,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAF,GAAA,EACA,MAAA1lE,MAAA,+BAGA2lE,KAAA,EAEA,IAAAE,EAAA,EACAC,GAFAF,KAAA,GAEAD,EACA3D,EAAA,GAAA0D,EAAA,MAAAG,GACAlhE,EAAAy3D,EAAA,EAAA4F,GACAzE,EAAAnB,EAAA,EAAA4F,GACAC,EAAA7F,EAAA,EAAA4F,GAEA,SAAA7mD,EAAAhV,EAAAjG,EAAAtG,GACA,OAAAuM,GAAAjG,EAAAiG,GAAAvM,EAGA,SAAAmsE,EAAAC,EAAAjqE,EAAAkqE,EAAAC,EAAAC,EAAAC,GACA,QAAA/3D,EAAA,EAAmBA,GAAAq3D,EAAuBr3D,IAAA,CAC1C,IAAAg4D,EAAAtqE,GAAA8pE,EAAA,GACA7gE,EAAAqJ,EAAAq3D,EACAY,EAAA,GAAAD,EAAA,IACA/jE,GAAAqjE,EAAA3gE,EAAA8gE,GAAA1mE,KAAA6G,GACArM,EAAAwF,KAAAyI,IAAAvF,GACApK,EAAAkH,KAAA0I,IAAAxF,GACAggE,EAAAnnD,EAAAmqD,EAAAU,EAAApsE,GACA2sE,EAAAD,EAAAb,EACAe,EAAAtuE,EAAAotE,EACAmB,EAAA7sE,EAAA0oE,EACA39D,EAAAnI,KAAA+pE,EAAAC,EAAAC,GACA,IAAAntE,EAAAsmB,EAAAhX,IAAAgX,EAAAtY,UAAA,EAAA1N,EAAA1B,GAAA+tE,GAAAC,GACA3I,EAAA/gE,KAAAlD,GACA2oE,EAAAzlE,KAAA6pE,EAAAF,EAAAC,EAAAphE,IAKA,QAAAjJ,EAAA,EAAiBA,EAAA8pE,EAAuB9pE,IAAA,CACxC,IAAAsqE,EAAA,GAAAtqE,GAAA8pE,EAAA,OACAE,EAAAR,EAAAxpE,GAAA,oBACAgqE,EAAAR,EAAAxpE,GAAA,QAAAsqE,EAAA,UACAN,EAAAP,EAAAzpE,GAAA,oBACAgqE,EAAAP,EAAAzpE,GAAA,QAAAsqE,EAAA,UAIA,IAAAjiE,EAAAg4D,EAAA,IAAAsJ,GAAA,EAAAG,GAAAxmB,aAEA,SAAAqnB,EAAAC,EAAAC,GACA,QAAAv4D,EAAA,EAAmBA,EAAAq3D,IAAsBr3D,EAEzCjK,EAAA5H,KAAAmqE,EAAAt4D,EAAA,EAAAs4D,EAAAt4D,EAAA,EAAAu4D,EAAAv4D,EAAA,GAEAjK,EAAA5H,KAAAmqE,EAAAt4D,EAAA,EAAAu4D,EAAAv4D,EAAA,EAAAu4D,EAAAv4D,EAAA,GAIA,IAAAw4D,EAAAnB,EAAA,EASA,OAPAgB,EAAA,EAAAG,EAAA,EAAAA,GAEAH,EAAA,EAAAG,EAAA,EAAAA,GAEAH,EAAA,EAAAG,EAAA,EAAAA,GAEAH,EAAA,EAAAG,EAAA,EAAAA,IAEAjnE,SAAA+E,EACA64D,OAAAD,EACAt5D,SAAAg+D,EACA79D,WAkDA,SAAAu4D,EAAA2F,EAAA9hE,EAAA0jE,EAAAC,EAAAG,EAAAC,GACA,OAAA/H,EAAA8F,IAAA9hE,EAAA0jE,EAAAC,EAAAG,EAAAC,GA8CA,SAAA3H,EAAA0F,EAAAmD,EAAAvB,EAAA4C,EAAAC,EAAAC,GACA,GAAA9C,EAAA,EACA,MAAAlkE,MAAA,2CAGA,GAAA8mE,EAAA,EACA,MAAA9mE,MAAA,6CAGA+mE,KAAA,EAWA,IATA,IAAApkC,GADAqkC,KAAA,EAAA5nE,KAAA6G,IACA8gE,EACAE,EAAA/C,EAAA,EACAgD,EAAAJ,EAAA,EACA9E,EAAAiF,EAAAC,EACAviE,EAAAy3D,EAAA,EAAA4F,GACAzE,EAAAnB,EAAA,EAAA4F,GACAC,EAAA7F,EAAA,EAAA4F,GACA59D,EAAAg4D,EAAA,EAAA8H,EAAA4C,EAAA,EAAAznB,aAEA1hD,EAAA,EAAqBA,EAAAupE,IAAmBvpE,EAQxC,IAPA,IAAAqH,EAAArH,EAAAmpE,EACAK,EAAAniE,EAAA5F,KAAA6G,GAAA,EACAmhE,EAAAhoE,KAAAyI,IAAAs/D,GACArC,EAAAxC,EAAA8E,EAAA3B,EACArH,EAAAh/D,KAAA0I,IAAAq/D,GACAlrE,EAAAmiE,EAAAqH,EAEA4B,EAAA,EAAsBA,EAAAJ,IAAoBI,EAAA,CAC1C,IAAAnF,EAAAmF,EAAAnD,EACAoD,EAAAP,EAAA7E,EAAAv/B,EACA4kC,EAAAnoE,KAAAyI,IAAAy/D,GACAE,EAAApoE,KAAA0I,IAAAw/D,GACAvrE,EAAAwrE,EAAAzC,EACAz2D,EAAAm5D,EAAA1C,EACA3G,EAAAoJ,EAAAH,EACA/I,EAAAmJ,EAAAJ,EACAziE,EAAAnI,KAAAT,EAAAE,EAAAoS,GACAkvD,EAAA/gE,KAAA2hE,EAAAC,EAAAC,GACA4D,EAAAzlE,KAAA0lE,EAAA,EAAAl9D,GAIA,QAAAyiE,EAAA,EAAsBA,EAAAX,IAA2BW,EAEjD,QAAAC,EAAA,EAAuBA,EAAAxD,IAA4BwD,EAAA,CAEnD,IAAAC,EAAA,EAAAD,EACAE,EAAA,EAAAH,EACArjE,EAAA5H,KAAAyqE,EAAAQ,EAAAC,EAAAT,EAAAW,EAAAF,EAAAT,EAAAQ,EAAAE,GACAvjE,EAAA5H,KAAAyqE,EAAAW,EAAAF,EAAAT,EAAAW,EAAAD,EAAAV,EAAAQ,EAAAE,GAIA,OACA/nE,SAAA+E,EACA64D,OAAAD,EACAt5D,SAAAg+D,EACA79D,WAsFA,SAAAy4D,EAAAyF,EAAAuF,EAAAC,EAAAtC,EAAAuC,GACA,GAAAF,EAAA,EACA,MAAA7nE,MAAA,gCAGA8nE,KAAA,EACAC,KAAA,EACAvC,KAAA,EAYA,IATA,IAAAxD,GAAA6F,EAAA,IAAAC,EAAA,GACAnjE,EAAAy3D,EAAA,EAAA4F,GACAzE,EAAAnB,EAAA,EAAA4F,GACAC,EAAA7F,EAAA,EAAA4F,GACA59D,EAAAg4D,EAAA,EAAA0L,EAAAD,EAAA,EAAAxoB,aACA2oB,EAAA,EACAC,EAAA3F,EAAAkD,EACA0C,EAAAL,EAAA,EAEAM,EAAA,EAAqBA,GAAAL,IAAiBK,EAAA,CAGtC,IAFA,IAAAC,EAAA5C,EAAAyC,EAAA7oE,KAAAmJ,IAAA4/D,EAAAL,EAAAC,GAEAlwE,EAAA,EAAmBA,GAAAgwE,IAAgBhwE,EAAA,CACnC,IAAAkrE,EAAA,EAAA3jE,KAAA6G,GAAApO,EAAAgwE,EACA9rE,EAAAqsE,EAAAhpE,KAAA0I,IAAAi7D,GACA10D,EAAA+5D,EAAAhpE,KAAAyI,IAAAk7D,GAKA,GAJAp+D,EAAAnI,KAAAT,EAAA,EAAAsS,GACAkvD,EAAA/gE,KAAA,OACAylE,EAAAzlE,KAAA,EAAA3E,EAAAgwE,EAAAM,EAAAL,GAEAK,EAAA,GAAAtwE,IAAAgwE,EAAA,CAIA,IAAA1hE,EAAA6hE,GAAAnwE,EAAA,GACAqI,EAAA8nE,EAAAnwE,EACAK,EAAA8vE,EAAAnwE,EAAAqwE,EACA/vE,EAAA6vE,GAAAnwE,EAAA,GAAAqwE,EAEA9jE,EAAA5H,KAAA2J,EAAAjG,EAAAhI,GACAkM,EAAA5H,KAAA2J,EAAAjO,EAAAC,IAIA6vE,GAAAH,EAAA,EAGA,OACAjoE,SAAA+E,EACA64D,OAAAD,EACAt5D,SAAAg+D,EACA79D,WAgFA,SAAAikE,EAAAvqD,GACA,gBAAAhkB,GACA,IAAAm9B,EAAAnZ,EAAAkO,MAAAhyB,KAAA4C,MAAAnD,UAAAkE,MAAA3F,KAAA0E,UAAA,IACA,OAAA4kE,EAAA3Q,wBAAA72D,EAAAm9B,IASA,SAAAqxC,EAAAxqD,GACA,gBAAAhkB,GACA,IAAAm9B,EAAAnZ,EAAAkO,MAAA,KAAApvB,MAAAnD,UAAAkE,MAAA3F,KAAA0E,UAAA,IACA,OAAA4kE,EAAAh9D,2BAAAxK,EAAAm9B,IAIA,IAAAsxC,GAAA,0FAUA,SAAAzI,EAAAn+D,EAAAo8C,EAAAyqB,EAAAjmE,GACAA,KAAA,EAGA,IAFA,IAAAzH,EAAA6G,EAAA7G,OAEAm5C,EAAA,EAAkBA,EAAAn5C,IAAam5C,EAC/B8J,EAAAyqB,EAAAv0B,GAAAtyC,EAAAsyC,GAAA1xC,EAYA,SAAAo9D,EAAAM,EAAAnlE,GACA,IAAA2tE,EAAAvX,EAAA+O,GACAL,EAAA,IAAA6I,EAAAjjC,YAAA1qC,GACA4kE,EAAAE,EAcA,OAZA6I,EAAA7kE,eAAA6kE,EAAA5X,aACA0Q,EAAA3B,EAAA6I,EAAA7kE,eAIAq8D,EAAAt8D,OACA+7D,GACA/7D,KAAAi8D,GAEApb,EAAAxG,oBAAAuqB,EAAAtI,EAAAP,IAGAA,EAuIA,IAAA2B,EAAAiH,EAAAnM,GACAxkE,EAAA0pE,sBACA,IAAAD,EAAAiH,EAAAlM,GACAxkE,EAAAypE,mBACA,IAAAD,EAAAmH,EAAAjM,GACA1kE,EAAAwpE,uBACA,IAAAD,EAAAmH,EAAAhM,GACA1kE,EAAAupE,oBACA,IAAAD,EAAAqH,EAAAhM,GACA3kE,EAAAspE,wBACA,IAAAD,EAAAqH,EAAA/L,GACA3kE,EAAAqpE,qBACA,IAAAD,EAAAuH,EAAA/L,GACA5kE,EAAAopE,yBACA,IAAAD,EAAAuH,EAAA9L,GACA5kE,EAAAmpE,sBACA,IAAAD,EAAAyH,EAAA9L,GACA7kE,EAAAkpE,gCACA,IAAAD,EAAAyH,EAAA7L,GACA7kE,EAAAipE,6BACA,IAAAD,EAAA2H,EAAA7L,GACA9kE,EAAAgpE,yBACA,IAAAD,EAAA2H,EAAA5L,GACA9kE,EAAA+oE,sBACA,IAAAD,EAAA6H,EAAA5L,GACA/kE,EAAA8oE,0BACA,IAAAD,EAAA6H,EAAA3L,GACA/kE,EAAA6oE,uBACA,IAAAD,EAAA+H,EAAA3L,GACAhlE,EAAA4oE,2BACA,IAAAD,EAAA+H,EAAA1L,GACAhlE,EAAA2oE,wBACA,IAAAD,EAAAiI,EAAA1L,GACAjlE,EAAA0oE,wBACA,IAAAD,GAAAiI,EAAAzL,GACAjlE,EAAAyoE,sBACA,IAAAD,GAAAmI,EAAAzL,GACAllE,EAAAwoE,wBACA,IAAAD,GAAAmI,EAAAxL,GACAllE,EAAAuoE,sBAIA,SAAAtoE,EAAAD,EAAAF,GAEA,aAGAE,EAAAsB,YAAA,EACA,IAAA+iE,GACA0M,wBAAA,EACAl0C,YAAA,EACAm0C,iBAAA,EACAC,2BAAA,EACAC,aAAA,GAEAlxE,EAAA+wE,yBACA/wE,EAAA68B,WA4aA,SAAA74B,EAAA+lD,GAEA,OAxCA,SAAA/lD,EAAA+lD,GAIA,IAHA,IAAA1b,GAAA,uCACAhK,EAAA,KAEAiY,EAAA,EAAkBA,EAAAjO,EAAAlrC,SAAmBm5C,EAGrC,GAFAjY,EAAArgC,EAAA64B,WAAAwR,EAAAiO,GAAAyN,GAEA,CACAvb,EAAAuiC,wBACAA,EAAA1sC,GAGA,MAIA,OAAAA,EAuBA8sC,CAAAntE,EAAA+lD,IA5aA/pD,EAAAgxE,gBAiXA,SAAAhtE,EAAA+lD,GAEA,OAjCA,SAAA/lD,EAAA+lD,GAIA,IAHA,IAAA1b,GAAA,8BACAhK,EAAA,KAEAiY,EAAA,EAAkBA,EAAAjO,EAAAlrC,SAAmBm5C,EAGrC,GAFAjY,EAAArgC,EAAA64B,WAAAwR,EAAAiO,GAAAyN,GAEA,CACAvb,EAAAuiC,wBACAA,EAAA1sC,GAGA,MAIA,OAAAA,EAgBA+sC,CAAAptE,EAAA+lD,IAjXA/pD,EAAAixE,0BAubA,SAAAjtE,EAAAqtE,GACAA,KAAA,EACAA,EAAA5pE,KAAAC,IAAA,EAAA2pE,GACA,IAAAzoE,EAAA5E,EAAAstE,YAAAD,EAAA,EACAxoE,EAAA7E,EAAAutE,aAAAF,EAAA,EAEA,GAAArtE,EAAA4E,WAAA5E,EAAA6E,WAGA,OAFA7E,EAAA4E,QACA5E,EAAA6E,UACA,EAGA,UAlcA7I,EAAAkxE,YA8MA,SAAA5W,GACAzN,EAAA1G,uBAAAmU,EAAA9rB,GACAm7B,EAAAtP,sBAAAC,GAEAnM,EAAAgN,oBAAAb,IAhNA,IAAAqP,EAAA/c,EAAA9sD,EAAA,IAEAc,OAAA4C,KAAAmmE,GAAAlmE,QAAA,SAAAhC,GACA,YAAAA,GAAA,eAAAA,IACAb,OAAAkB,UAAAC,eAAA1B,KAAAgkE,EAAA5iE,KACAzB,EAAAyB,GAAAkoE,EAAAloE,OAGA,IAAA0sD,EAAAvB,EAAA9sD,EAAA,IAEAc,OAAA4C,KAAA2qD,GAAA1qD,QAAA,SAAAhC,GACA,YAAAA,GAAA,eAAAA,IACAb,OAAAkB,UAAAC,eAAA1B,KAAAgkE,EAAA5iE,KACAzB,EAAAyB,GAAA0sD,EAAA1sD,OAGA,IAAAorD,EAAAD,EAAA9sD,EAAA,IAEA6sD,EAAAC,EAAA9sD,EAAA,IAEAc,OAAA4C,KAAAmpD,GAAAlpD,QAAA,SAAAhC,GACA,YAAAA,GAAA,eAAAA,IACAb,OAAAkB,UAAAC,eAAA1B,KAAAgkE,EAAA5iE,KACAzB,EAAAyB,GAAAkrD,EAAAlrD,OAGA,IAAA+vE,EAAA1xE,EAAA,IAEAc,OAAA4C,KAAAguE,GAAA/tE,QAAA,SAAAhC,GACA,YAAAA,GAAA,eAAAA,IACAb,OAAAkB,UAAAC,eAAA1B,KAAAgkE,EAAA5iE,KACAzB,EAAAyB,GAAA+vE,EAAA/vE,OAGA,IAAAgwE,EAAA3xE,EAAA,IAEAc,OAAA4C,KAAAiuE,GAAAhuE,QAAA,SAAAhC,GACA,YAAAA,GAAA,eAAAA,IACAb,OAAAkB,UAAAC,eAAA1B,KAAAgkE,EAAA5iE,KACAzB,EAAAyB,GAAAgwE,EAAAhwE,OAGA,IAAAiwE,EAAA5xE,EAAA,GAEAc,OAAA4C,KAAAkuE,GAAAjuE,QAAA,SAAAhC,GACA,YAAAA,GAAA,eAAAA,IACAb,OAAAkB,UAAAC,eAAA1B,KAAAgkE,EAAA5iE,KACAzB,EAAAyB,GAAAiwE,EAAAjwE,OAGA,IAAAkwE,EAAA7xE,EAAA,GAEAc,OAAA4C,KAAAmuE,GAAAluE,QAAA,SAAAhC,GACA,YAAAA,GAAA,eAAAA,IACAb,OAAAkB,UAAAC,eAAA1B,KAAAgkE,EAAA5iE,KACAzB,EAAAyB,GAAAkwE,EAAAlwE,OAGA,IAAAmwE,EAAA9xE,EAAA,IAQA,SAAA8sD,EAAAl1B,GAAuC,GAAAA,KAAAp2B,WAA6B,OAAAo2B,EAAqB,IAAA0B,KAAiB,SAAA1B,EAAmB,QAAAj2B,KAAAi2B,EAAuB,GAAA92B,OAAAkB,UAAAC,eAAA1B,KAAAq3B,EAAAj2B,GAAA,CAAsD,IAAAqrD,EAAAlsD,OAAAC,gBAAAD,OAAAmsD,yBAAAnsD,OAAAmsD,yBAAAr1B,EAAAj2B,MAAsHqrD,EAAA/rD,KAAA+rD,EAAAtmD,IAA4B5F,OAAAC,eAAAu4B,EAAA33B,EAAAqrD,GAAmD1zB,EAAA33B,GAAAi2B,EAAAj2B,GAAsD,OAAtB23B,EAAAiuB,QAAA3vB,EAAsB0B,EANrcx4B,OAAA4C,KAAAouE,GAAAnuE,QAAA,SAAAhC,GACA,YAAAA,GAAA,eAAAA,IACAb,OAAAkB,UAAAC,eAAA1B,KAAAgkE,EAAA5iE,KACAzB,EAAAyB,GAAAmwE,EAAAnwE,OAgEA,IAEA+sC,GACAuiC,wBAAA,GAiFA,IAAAc,EAAA,UAEA,SAAAC,EAAA3vE,EAAA4vE,GACAplB,EAAA5R,eAAA54C,EAAA,GACA,IAAA6vE,EAAA7vE,EAAA8vE,aAAAF,GAEA,GAAAC,EAAA,CACA,IAAA32B,KACA62B,EAAAL,EAAAM,KAAAJ,GAAA,GACAK,EAAA,IAAAF,EAEA,QAAAzwE,KAAAuwE,EAAA,CACA,IAAA7wE,EAAA6wE,EAAAvwE,GACA4wE,EAAA,mBAAAlxE,EACAmxE,EAAAD,EAAAH,EAAAE,EACA3xE,EAAAgB,EAGAA,EAAA8wE,SAAAD,KACA7xE,EAAAgB,EAAA+wE,UAAA,EAAA/wE,EAAA0B,OAAAmvE,EAAAnvE,cAGA4K,IAAA5L,EAAA1B,GACA4xE,GAAAlwE,EAAA1B,KAAAU,GACA0rD,EAAA1F,KAAA1mD,EAAA0B,EAAA1B,GAAAU,EAAAM,GAGA4wE,EACAlwE,EAAA1B,GAAA,SAAAgyE,GACA,kBACA,OAAAA,EAAAp+C,MAAA29C,EAAAjtE,YAFA,CAIW5D,IAEXgB,EAAA1B,GAAAU,EACAk6C,EAAA56C,GAAAU,GAMAk6C,EAAAxN,aACAptC,KAAAuxE,EAAAnkC,YAAAptC,MAEAksD,EAAA5R,eAAAM,EAAA,GAGA,OAAA22B,EAYA,IAAAU,GAAA,wpBAkDA,SAAA3B,EAAA5uE,GACA,QAAAm6C,EAAA,EAAkBA,EAAAo2B,EAAAvvE,SAAiCm5C,EACnDw1B,EAAA3vE,EAAAuwE,EAAAp2B,MAmIA,SAAAr8C,EAAAD,EAAAF,GAEA,aAGAE,EAAAsB,YAAA,EACAtB,EAAA6N,iBACA7N,EAAA2yE,eAgIA,SAAAxwE,EAAAywE,GACA,IAAAC,EAAA,KACAC,EAAA,KACAF,EAAAnvE,QAAA,SAAA7B,GACA,QAAAA,EAAAmxE,OAAA,CAIA,IAAAtnE,EAAA7J,EAAA6J,YACAiB,EAAA9K,EAAAoxE,iBAAApxE,EAAA8K,WACAumE,GAAA,EACA1mE,OAAAwB,IAAAnM,EAAA2K,KAAApK,EAAA+wE,UAAAtxE,EAAA2K,KAEAd,IAAAonE,IACAA,EAAApnE,EACAtJ,EAAAsL,WAAAhC,EAAAiC,SAKAulE,GAAA,IAIAA,GAAAvmE,IAAAomE,KACAA,KAAAjnB,oBAAAn/C,EAAAm/C,mBACA1pD,EAAA65C,gBAAA,MAGA82B,EAAApmE,EACA20B,EAAAzzB,wBAAAzL,EAAAsJ,EAAAiB,IAIA20B,EAAA1zB,YAAAlC,EAAA7J,EAAA8qD,UAEA7+C,EAAA1L,EAAAuK,EAAAH,EAAA3K,EAAAuG,MAAAvG,EAAAgJ,OAAAhJ,EAAAuxE,kBAGAL,EAAAjnB,mBACA1pD,EAAA65C,gBAAA,OAtKA,IAAA3a,EAEA,SAAA3J,GAAuC,GAAAA,KAAAp2B,WAA6B,OAAAo2B,EAAqB,IAAA0B,KAAiB,SAAA1B,EAAmB,QAAAj2B,KAAAi2B,EAAuB,GAAA92B,OAAAkB,UAAAC,eAAA1B,KAAAq3B,EAAAj2B,GAAA,CAAsD,IAAAqrD,EAAAlsD,OAAAC,gBAAAD,OAAAmsD,yBAAAnsD,OAAAmsD,yBAAAr1B,EAAAj2B,MAAsHqrD,EAAA/rD,KAAA+rD,EAAAtmD,IAA4B5F,OAAAC,eAAAu4B,EAAA33B,EAAAqrD,GAAmD1zB,EAAA33B,GAAAi2B,EAAAj2B,GAAsD,OAAtB23B,EAAAiuB,QAAA3vB,EAAsB0B,EAFrcwzB,CAAA9sD,EAAA,IA8DA,SAAA+N,EAAA1L,EAAAuK,EAAAH,EAAApE,EAAAyC,EAAAuoE,GACA5mE,OAAAwB,IAAAxB,EAAApK,EAAA+wE,UAAA3mE,EACA,IAAAE,EAAAC,EAAAD,QACA0sD,EAAAzsD,EAAAysD,YACAD,OAAAnrD,IAAA5F,EAAAuE,EAAAwsD,YAAA/wD,EACAyC,OAAAmD,IAAAnD,EAAA,EAAAA,EAEAuuD,GAAA1sD,OACAsB,IAAAolE,EACAhxE,EAAA82C,sBAAA1sC,EAAA2sD,OAAAnrD,IAAAorD,EAAAh3D,EAAAwlD,eAAAj7C,EAAAysD,YAAAvuD,EAAAuoE,GAEAhxE,EAAA2yC,aAAAvoC,EAAA2sD,OAAAnrD,IAAAorD,EAAAh3D,EAAAwlD,eAAAj7C,EAAAysD,YAAAvuD,QAGAmD,IAAAolE,EACAhxE,EAAA62C,oBAAAzsC,EAAA3B,EAAAsuD,EAAAia,GAEAhxE,EAAAyyC,WAAAroC,EAAA3B,EAAAsuD,KA6FA,SAAAj5D,EAAAD,EAAAF,GAEA,aAGAE,EAAAsB,YAAA,EACAtB,EAAAozE,oBAqVA,SAAAjxE,EAAAkxE,EAAAryD,GACAA,KAAA7e,EAAAuH,YAEA2pE,GACAlxE,EAAAsH,gBAAAuX,EAAAqyD,EAAAvqE,aACA3G,EAAA2H,SAAA,IAAAupE,EAAAzqE,MAAAyqE,EAAAxqE,UAEA1G,EAAAsH,gBAAAuX,EAAA,MACA7e,EAAA2H,SAAA,IAAA3H,EAAAmxE,mBAAAnxE,EAAAoxE,uBA5VAvzE,EAAAwzE,sBAqMA,SAAArxE,EAAAsxE,EAAA7qE,EAAAC,GACA,IAAAmY,EAAA7e,EAAAuH,YACAs0B,EAAA77B,EAAA4G,oBACA5G,EAAAsH,gBAAAuX,EAAAgd,GACAp1B,KAAAzG,EAAAmxE,mBACAzqE,KAAA1G,EAAAoxE,oBAEA,IAAAG,EAAA,EACAL,GACAvqE,YAAAk1B,EACAy1C,eACA7qE,QACAC,UA2CA,OAjDA4qE,KAAAE,GAQAlwE,QAAA,SAAAmwE,GACA,IAAAC,EAAAD,EAAAC,WACAhX,EAAA+W,EAAA/W,OACAiX,EA9EA,SAAAjX,GACA,OAAAkX,EAAAlX,GA6EAmX,CAAAnX,GAMA,GAJAiX,IACAA,EAAAlqE,EAAA8pE,MAGAG,EACA,GAxEA,SAAAhX,GACA,OAAAoX,EAAApX,GAuEAqX,CAAArX,GACAgX,EAAA1xE,EAAAukD,qBACAvkD,EAAA8zC,iBAAA9zC,EAAAg7C,aAAA02B,GACA1xE,EAAAo0C,oBAAAp0C,EAAAg7C,aAAA0f,EAAAj0D,EAAAC,OACO,CACP,IAAAozD,EAAAr7D,OAAAo7B,UAA6C43C,GAC7C3X,EAAArzD,QACAqzD,EAAApzD,cAEAkF,IAAAkuD,EAAAyE,OACAzE,EAAAyE,MAAA,EACAzE,EAAAxzD,IAAAwzD,EAAAxzD,KAAAwzD,EAAAkD,QAAAh9D,EAAAo+D,OACAtE,EAAAoD,IAAApD,EAAAoD,KAAApD,EAAAkD,QAAAh9D,EAAAo+D,OACAtE,EAAAyD,MAAAzD,EAAAyD,OAAAzD,EAAAr6B,MAAAz/B,EAAAq+D,cACAvE,EAAA0D,MAAA1D,EAAA0D,OAAA1D,EAAAr6B,MAAAz/B,EAAAq+D,eAGAqT,EAAA1lB,EAAAllD,cAAA9G,EAAA85D,GAIA,GAAApP,EAAArG,eAAArkD,EAAA0xE,GACA1xE,EAAAg0C,wBAAAn1B,EAAA8yD,EAAA3xE,EAAAg7C,aAAA02B,OACK,KAAAhnB,EAAA/F,UAAA3kD,EAAA0xE,GAGL,+BAFA1xE,EAAAwH,qBAAAqX,EAAA8yD,EAAAF,EAAAO,WAAAhyE,EAAAgH,WAAA0qE,EAAAD,EAAAjX,OAAA,GAKA0W,EAAAI,YAAA5uE,KAAAgvE,KAEAR,GA3PArzE,EAAAo0E,sBA0SA,SAAAjyE,EAAAkxE,EAAAI,EAAA7qE,EAAAC,GACAD,KAAAzG,EAAAmxE,mBACAzqE,KAAA1G,EAAAoxE,oBACAF,EAAAzqE,QACAyqE,EAAAxqE,UACA4qE,KAAAE,GACAlwE,QAAA,SAAAmwE,EAAAhjB,GACA,IAAAijB,EAAAR,EAAAI,YAAA7iB,GACAiM,EAAA+W,EAAA/W,OAEA,GAAAhQ,EAAArG,eAAArkD,EAAA0xE,GACA1xE,EAAA8zC,iBAAA9zC,EAAAg7C,aAAA02B,GACA1xE,EAAAo0C,oBAAAp0C,EAAAg7C,aAAA0f,EAAAj0D,EAAAC,OACK,KAAAgkD,EAAA/F,UAAA3kD,EAAA0xE,GAGL,+BAFA1lB,EAAAuO,cAAAv6D,EAAA0xE,EAAAD,EAAAhrE,EAAAC,OAtTA,IAAAslD,EAAAvB,EAAA9sD,EAAA,IAEA+sD,EAAAD,EAAA9sD,EAAA,IAEA,SAAA8sD,EAAAl1B,GAAuC,GAAAA,KAAAp2B,WAA6B,OAAAo2B,EAAqB,IAAA0B,KAAiB,SAAA1B,EAAmB,QAAAj2B,KAAAi2B,EAAuB,GAAA92B,OAAAkB,UAAAC,eAAA1B,KAAAq3B,EAAAj2B,GAAA,CAAsD,IAAAqrD,EAAAlsD,OAAAC,gBAAAD,OAAAmsD,yBAAAnsD,OAAAmsD,yBAAAr1B,EAAAj2B,MAAsHqrD,EAAA/rD,KAAA+rD,EAAAtmD,IAA4B5F,OAAAC,eAAAu4B,EAAA33B,EAAAqrD,GAAmD1zB,EAAA33B,GAAAi2B,EAAAj2B,GAAsD,OAAtB23B,EAAAiuB,QAAA3vB,EAAsB0B,EA4Crc,IAgBAxvB,EAAA,MAsDA+pE,IACA9W,OAjEA,KAkEAtwD,KAtEA,KAuEA9D,IA1CA,KA2CAm5B,KAlDA,QAoDAi7B,OA7DA,QA+DAkX,KACAA,EAhEA,OAIA,MA6DAA,EAnEA,MAKA,MA+DAA,EAnEA,OAIA,MAgEAA,EA7EA,MAYA,MAkEAA,EAvEA,OAKA,MAwEA,IAAAE,KACAA,EAjFA,QAiFA,EACAA,EAjFA,QAiFA,EACAA,EAjFA,QAiFA,EACAA,EA9EA,QA8EA,EACAA,EAlFA,QAkFA,EACAA,EAlFA,OAkFA,EACAA,EAlFA,QAkFA,GA+MA,SAAAh0E,EAAAD,EAAAF,GAEA,aAGAE,EAAAsB,YAAA,EACAtB,EAAA6M,sBAkGA,SAAA1K,EAAAkyE,EAAA3nE,GACA,IAAAE,EAAAzK,EAAAmyE,oBACAnyE,EAAA65C,gBAAApvC,GAEAynE,EAAAlxE,SACAkxE,OAOA,OAJAA,EAAA5wE,QAAA,SAAAgI,GACA41B,EAAAzzB,wBAAAzL,EAAAsJ,EAAAiB,KAEAvK,EAAA65C,gBAAA,OAEAkd,YAAAxsD,EAAAwsD,YACAC,YAAAzsD,EAAAysD,YACAtN,kBAAAj/C,IAhHA5M,EAAAu0E,4BACAv0E,EAAAw0E,wBAwJA,SAAAryE,EAAAsJ,EAAAiB,GACA,OAAA6nE,EAAApyE,EAAAsJ,EAAAqgD,eAAArgD,EAAAiB,EAAAc,QAAAd,EAAAD,UAvJA,IAAA40B,EAEA,SAAA3J,GAAuC,GAAAA,KAAAp2B,WAA6B,OAAAo2B,EAAqB,IAAA0B,KAAiB,SAAA1B,EAAmB,QAAAj2B,KAAAi2B,EAAuB,GAAA92B,OAAAkB,UAAAC,eAAA1B,KAAAq3B,EAAAj2B,GAAA,CAAsD,IAAAqrD,EAAAlsD,OAAAC,gBAAAD,OAAAmsD,yBAAAnsD,OAAAmsD,yBAAAr1B,EAAAj2B,MAAsHqrD,EAAA/rD,KAAA+rD,EAAAtmD,IAA4B5F,OAAAC,eAAAu4B,EAAA33B,EAAAqrD,GAAmD1zB,EAAA33B,GAAAi2B,EAAAj2B,GAAsD,OAAtB23B,EAAAiuB,QAAA3vB,EAAsB0B,EAFrcwzB,CAAA9sD,EAAA,IA2HA,SAAAy0E,EAAApyE,EAAA4pD,EAAAv+C,EAAAf,GACA,IAAAG,EAAAzK,EAAAmyE,oBAWA,OAVAnyE,EAAA65C,gBAAApvC,GACAy0B,EAAAsqB,cAAAI,EAAAv+C,GAEAf,GACAtK,EAAA4zC,WAAA5zC,EAAA+6C,qBAAAzwC,GAKAtK,EAAA65C,gBAAA,MACApvC,0BCx9TA3M,EAAAD,QAAA,SAAAC,GAoBA,OAnBAA,EAAAw0E,kBACAx0E,EAAAy0E,UAAA,aACAz0E,EAAA00E,SAEA10E,EAAA20E,WAAA30E,EAAA20E,aACAh0E,OAAAC,eAAAZ,EAAA,UACAa,YAAA,EACAC,IAAA,WACA,OAAAd,EAAAE,KAGAS,OAAAC,eAAAZ,EAAA,MACAa,YAAA,EACAC,IAAA,WACA,OAAAd,EAAAC,KAGAD,EAAAw0E,gBAAA,GAEAx0E,qGCpBA,IAAA40E,EAAA/0E,EAAA,IACAiL,mDAAAC,CAAAlL,EAAA,IACAoC,EAAApC,EAAA,m3BAQA,SAASk8D,EAAejgC,GACpB,OAAO,IAAI9xB,QAAQ,SAASC,EAASC,GACjCuB,UAAKswD,eAAe75D,KAAI45B,EAAM,SAASqgC,EAAQjO,EAAUkO,GACrDnyD,GAASkyD,SAAQjO,WAAUkO,eAR5Bl6D,SAaL2yE,aACF,SAAAA,EAAY/4C,gGAAMh5B,CAAAV,KAAAyyE,GACdzyE,KAAK0pC,MAAQ,IAAI3lC,IACjB/D,KAAK0yE,aAAe,IAAI3uE,IACxB/D,KAAK2yE,aAAe,IAAI5uE,IACxB/D,KAAK+5D,QACD/6B,SAAU,IAAIj7B,IACd+nD,SAAU,IAAI/nD,IACduuE,MAAO,IAAIvuE,KAEf/D,KAAK2/B,QAAU,KACf3/B,KAAK8+B,KAAKpF,uFAGTA,GAAM,IAAAj5B,EAAAT,KAAA4yE,oUAAAh5C,EAKWmF,SAAU,GAAI8zC,gBAAgB,GAASn5C,GAJpDqF,EADE6zC,EACF7zC,SACD8zC,EAFGD,EAEHC,eACAP,EAHGM,EAGHN,MACAxmB,EAJG8mB,EAIH9mB,SACA9sB,EALG4zC,EAKH5zC,SAEJD,EAAWA,EAAS9F,QAAQ,OAAQ,IAEpC,IAAM65C,EAAc,IAAIlrE,QAAJ,eAAAoB,EAAA+pE,EAAAzzC,mBAAA0zC,KAAY,SAAA9zC,EAAOr3B,EAASC,GAAhB,IAAAmrE,EAAAlZ,EAAAK,EAAA8Y,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAn1E,EAAAo1E,EAAAC,EAAAC,EAAAC,EAAA,OAAAr0C,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACxB4yC,EADwB,CAAA9yC,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAElBj/B,EAAKmzE,UAAUtB,EAAOvzC,EAAU8zC,GAFd,WAKxB/mB,EALwB,CAAAtsB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAMoBi6B,EAAe7N,GANnC,OAAAmnB,EAAAzzC,EAAAO,KAMnBg6B,EANmBkZ,EAMnBlZ,OAAkBK,EANC6Y,EAMXnnB,SANWmnB,EAMIjZ,OACxBD,GACAhoB,QAAQC,IAAI+nB,GAEhBx7D,OAAO4C,KAAKi5D,GAAKh5D,QAAQ,SAAChC,GACtBqB,EAAKiyE,aAAavuE,IAAI/E,EAAKg7D,EAAIh7D,MAXX,YAexB4/B,EAfwB,CAAAQ,EAAAE,KAAA,SAAAwzC,GAAA,EAAAC,GAAA,EAAAC,OAAA1nE,EAAA8zB,EAAAC,KAAA,GAAA4zC,EAgBHr0C,EAhBGpgC,OAAAi1E,YAAA,WAAAX,GAAAI,EAAAD,EAAA3zC,QAAAo0C,KAAA,CAAAt0C,EAAAE,KAAA,YAgBf6zC,EAhBeD,EAAAx0E,MAiBhBV,EAAOm1E,EACP75C,OAlBgB,EAoBhBuH,IAAEsB,SAASgxC,KACXn1E,EAAOm1E,EAASn1E,KAChBs7B,EAAO65C,EAAS75C,OAGhBj5B,EAAKkyE,aAAa7vC,IAAI1kC,GAzBN,CAAAohC,EAAAE,KAAA,gBA0BhBqS,QAAQC,IAAR,sDAAAzZ,OAAkEn6B,EAAlE,MA1BgBohC,EAAAu0C,OAAA,8BA8BdN,EAAKxyC,IAAE4F,SAAS9H,EAAU3gC,EAAKiwD,MAAM,KAAK52B,KAAK,OAAOA,KAAK,KAE3Di8C,EAhCc,GAAAn7C,OAgCFk7C,EAhCE,SAiCdE,EAjCc,GAAAp7C,OAiCFk7C,EAjCE,SAAAj0C,EAAAE,KAAA,GAkCdj/B,EAAKmzE,WAAWF,EAAQC,GAAS,GAAId,GAlCvB,QAmCpBpyE,EAAKkyE,aAAaxuE,IACd/F,EACAiL,UAAKC,kBAAkBxJ,MAAKW,EAAK/B,IAAIg1E,GAASjzE,EAAK/B,IAAIi1E,IAAUj6C,IArCjD,QAAAw5C,GAAA,EAAA1zC,EAAAE,KAAA,iBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAI,GAAAJ,EAAA,UAAA2zC,GAAA,EAAAC,EAAA5zC,EAAAI,GAAA,QAAAJ,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAyzC,GAAA,MAAAG,EAAAW,QAAAX,EAAAW,SAAA,WAAAx0C,EAAAC,KAAA,IAAA0zC,EAAA,CAAA3zC,EAAAE,KAAA,eAAA0zC,EAAA,eAAA5zC,EAAAy0C,OAAA,mBAAAz0C,EAAAy0C,OAAA,YA0C5BpsE,EAAQpH,GA1CoB,yBAAA++B,EAAAkB,SAAAxB,EAAAl/B,OAAA,8BAAZ,gBAAAwpE,EAAA0K,GAAA,OAAAlrE,EAAAgpB,MAAAhyB,KAAA0C,YAAA,IA+CpB,OAFA1C,KAAK2/B,QAAU3/B,KAAK2/B,QAAU3/B,KAAK2/B,QAAQ8/B,KAAK,SAAA0U,GAAA,OAAOrB,IAAeA,EAE/D9yE,KAAK2/B,oCAGZoD,GACA,IAAMqxC,EAAMp0E,KAAK0pC,MAAMhrC,IAAIqkC,GAI3B,YAHYr3B,IAAR0oE,GACAC,UAA0BtxC,GAEvBqxC,qCAGAh2E,GACP,IAAMg2E,EAAMp0E,KAAK0yE,aAAah0E,IAAIN,GAIlC,YAHYsN,IAAR0oE,GACAC,UAAkCtxC,MAE/BqxC,qCAGAh2E,GACP,OAAO4B,KAAK2yE,aAAaj0E,IAAIN,kFAGjBk0E,EAAOvzC,kHAAU8zC,mEACZP,uEAARvvC,WACD/iC,KAAK0pC,MAAM5G,IAAI/D,EAAWgE,2BAC1BgP,QAAQC,IAAR,mDAAAzZ,OAA+DwG,EAAWgE,EAA1E,uDAGmB/iC,KAAK2gE,MAAM5hC,EAAWgE,EAAM8vC,YAA7CyB,WAEFt0E,KAAK0pC,MAAMvlC,IAAI46B,EAAWgE,EAAMuxC,kkBAKhCvxC,6GAAM8vC,8CACIlS,MAAM59B,eAAlBwxC,UAEE1T,oCACS0T,EAAI7jC,2DACVmiC,4DAC4B9vC,2BAAqBwxC,EAAIC,oBAAWD,EAAIE,+BAE3Ez0E,KAAK+5D,OAAOuY,MAAMnuE,IAAI4+B,EAAMwxC,EAAIE,+BAEzB,kPCtInB,IAAAC,EAAAj3E,EAAA,IACAwgC,EAAAxgC,EAAA,IACA4C,EAAA5C,EAAA,GACAoC,EAAApC,EAAA,GACAg/B,EAAAh/B,EAAA,IACAA,EAAA,IACA,IAAAygC,EAAAzgC,EAAA,IACA4gC,EAAA5gC,EAAA,IACAk3E,EAAAl3E,EAAA,unBAIA,SAASm3E,EAAUh8B,EAAcj2C,GAC7BovC,QAAQC,IAAI,MAAQ4G,EAAe,IAC/B/G,gBAAgB4M,uBAAuB7F,EAAcj2C,GAAQ,kBAOlD,SAACkyE,EAAaC,GAC7B,IAAKD,EACD,MAAM,IAAI7uE,MAAM,2DAEpB,IAAMw4B,EAAax6B,SAASy6B,eAAeo2C,GACrClzE,EAASqC,SAASgxB,cAAc,UAMtC,OALI8/C,GACAnzE,EAAO+8B,UAAU9vB,IAAIkmE,GAEzBt2C,EAAWlK,YAAY3yB,GAEhBA,OAWLg9B,aACF,SAAAA,EAAYn+B,gGAASE,CAAAV,KAAA2+B,GACjB3+B,KAAK4+B,WAAap+B,EAAQo+B,aAAe,GAAK,GAAK,GAAK,GACxD5+B,KAAKg+B,WAAax9B,EAAQw9B,aAAez3B,MAAO,IAAKC,OAAQ,KAC7DxG,KAAK6+B,gBAAkBr+B,EAAQq+B,iBAAmB,EAClD7+B,KAAKygC,MAAQjgC,EAAQigC,MAEK,iBAAfjgC,EAAQ20B,GACfn1B,KAAK2B,OAASqC,SAASy6B,eAAej+B,EAAQ20B,IAE9Cn1B,KAAK2B,OAASnB,EAAQ20B,GAI1Bn1B,KAAKF,GAAKE,KAAK2B,OAAO64B,WAAW,UAE7Bx6B,KAAKygC,QACLoR,gBAAgB0G,KAAKv4C,KAAKF,IAC1BE,KAAKF,GAAK+xC,gBAAgB8M,iBAAiB3+C,KAAKF,QAAI4L,EAAWkpE,KAGnE,EAAA/0E,EAAAk1E,iBAAgB/0E,KAAKF,IAErBA,KAAGu0C,UAAUv0C,KAAGk1E,UAAWl1E,KAAGm1E,qBAC9Bn1E,KAAGoyC,OAAOpyC,KAAGi7C,OAEb/6C,KAAKyG,aAAc,EAAAg2B,EAAAy4C,mBAAkBp1E,KAAIE,KAAKg+B,WAAWz3B,MAAOvG,KAAKg+B,WAAWx3B,QAChFxG,KAAKm/B,oBAAsB,IAAIp2B,kBAC3BpI,KAAMX,KACNiJ,gVACItC,QAAS3G,KAAKyG,YAAYE,SACvB3G,KAAKg+B,cAGhBh+B,KAAKkJ,OAAS,IAAIupE,SAClBzyE,KAAK0K,WAAa6xB,OAAKnf,MAAMmf,OAAKp9B,SAAU,EAAGa,KAAKg+B,WAAWz3B,MAAO,EAAGvG,KAAKg+B,WAAWx3B,QAAS,EAAG,GACrGxG,KAAKsF,OAAS,IAAI+rC,SAAOrxC,KAAKg+B,YAC9Bh+B,KAAKm1E,eAAgB,EACrBn1E,KAAKo1E,mBACLp1E,KAAKogC,mHAIL,IAAM75B,EAAQvG,KAAKg+B,WAAWz3B,MAAQvG,KAAK6+B,gBACrCr4B,EAASxG,KAAKg+B,WAAWx3B,OAASxG,KAAK6+B,gBAE7C7+B,KAAK2B,OAAOqyB,MAAMztB,MAAlB,GAAAgyB,OAA6BhyB,EAA7B,MACAvG,KAAK2B,OAAOqyB,MAAMxtB,OAAlB,GAAA+xB,OAA8B/xB,EAA9B,MAEAxG,KAAK2B,OAAO4E,MAAQA,GAASnG,OAAOi1E,kBAAoB,GACxDr1E,KAAK2B,OAAO6E,OAASA,GAAUpG,OAAOi1E,kBAAoB,4CAM1D,IAAMC,EAAet1E,KAAK2B,OAAO4E,MAC3BgvE,EAAgBv1E,KAAK2B,OAAO6E,OAElCxG,KAAKF,GAAG2H,SAAS,EAAG,EAAGzH,KAAK2B,OAAO4E,MAAOvG,KAAK2B,OAAO6E,QAEtDxG,KAAKw1E,eAAiBt5C,wBAAsBC,oBACxCn8B,KAAKsF,OAAOuiE,QACXthE,MAAO+uE,EAAc9uE,OAAQ+uE,GAC9Bv1E,KAAKg+B,4CAIL,IAAAy3C,GACJA,EAAAz1E,KAAKF,IAAG8+B,WAAR5M,MAAAyjD,EAAA/jC,EAAsB1xC,KAAK4+B,aAC3B5+B,KAAKF,GAAGugC,MAAMrgC,KAAKF,GAAGi9C,+CAGrBu1B,GACD,OAAOtyE,KAAKkJ,OAAO41B,KAAKwzC,sCAGjBlzE,GACP,IAAMg1E,EAAMp0E,KAAKkJ,OAAOwsE,WAAWt2E,GAEnC,IAAKg1E,EACD,mCAAA77C,OAAoCn5B,EAApC,KAGJ,OAAOg1E,yCAIPp0E,KAAKm1E,eAAgB,0CAIrBn1E,KAAKm1E,eAAgB,iDAgBrBn1E,KAAKyG,YAAYe,SACjBxH,KAAKqgC,qDAILrgC,KAAKyG,YAAYiB,SACjB1H,KAAKogC,iDAGD,IACAu1C,EADAl1E,EAAAT,KAyCCA,KAAK41E,UACN7wE,sBAvCW,SAATlD,EAASg0E,GACNF,IACDA,EAAYE,GAGhB,IAAIC,EAAKD,EAAOF,EAChBA,EAAYE,EAGRp1E,EAAKs1E,QACLt1E,EAAKs1E,MAAMC,UAAUF,GAErBr1E,EAAKw1E,uBAELx1E,EAAKs1E,MAAM51C,OAAO21C,GAElBr1E,EAAKs1E,MAAMG,WAAWJ,GAEtBr1E,EAAK01E,qBAEL11E,EAAK4/B,QAEL5/B,EAAK0+B,oBAAoBgB,QACpB,IAAI/3B,UACDxC,UAAW,EAAG,GACdyC,MAAO5H,EAAKu9B,WAAWz3B,MAAO9F,EAAKu9B,WAAWx3B,WAElD/F,EAAKiK,aAMTjK,EAAKm1E,SACL7wE,sBAAsBlD,KAM1B7B,KAAK41E,SAAU,oCAIdG,GACL/1E,KAAK+1E,MAAQA,EACbA,EAAMvxE,IAAMxE,KACZ+1E,EAAMx9B,KAAKv4C,4CAvEX,OAAOA,KAAKw1E,kDAIZ,IAAIlwE,EAASi3B,OAAKp9B,SAIlB,OAHIa,KAAKm1E,gBACL7vE,EAAStF,KAAKsF,OAAOuiE,QAElBtrC,OAAKjvB,SAASivB,OAAKp9B,SAAUa,KAAK0K,WAAYpF,0BAmE9Cq5B,uHCtNf,IAAAt1B,ySAAAkhD,CAAA9sD,EAAA,oBAIe4L,8GCJf,IAAAX,EAAAC,EAAAlL,EAAA,IACAoC,EAAApC,EAAA,GAEA24E,EAAAztE,EAAAlL,EAAA,KACA44E,EAAA1tE,EAAAlL,EAAA,8NAIA,IAAM64E,EAAgB,IAAI/0E,cACtB,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,IA6BP,IAAIq7B,EAAgB,KAEdqD,aACF,SAAAA,EAAYz/B,gGAASE,CAAAV,KAAAigC,GACjBjgC,KAAKg+B,WAAax9B,EAAQw9B,WAErBpB,IACDA,EAAgBvzB,UAAKC,kBAAkBxJ,MAAKyJ,UAAIC,aAEpDxJ,KAAKoJ,YAAcwzB,EAEnB58B,KAAKqK,WAAahB,UAAKiB,2BAA2BxK,MAC9C4J,QACIC,KAAM2sE,EACN1sE,cAAe,EACfC,QAAS,EACTC,SAAUhK,KAAGiK,aAEjBnE,UACIgE,cAAe,EACfC,QAAS,EACTC,SAAUhK,KAAGkK,cAEjB3B,MACIuB,cAAe,EACfC,QAAS,EACTC,SAAUhK,KAAGkK,cAEjBI,SACIT,MACI,EACA,EACA,EACA,MAKZ3J,KAAKuK,IAAMlB,UAAKmB,sBAAsB1K,KAAIE,KAAKoJ,YAAapJ,KAAKqK,YAEjErK,KAAKu2E,kGAG0D,IAA3D/7D,EAA2D9X,UAAA5B,OAAA,QAAA4K,IAAAhJ,UAAA,GAAAA,UAAA,GAAtD,GAAI+X,EAAkD/X,UAAA5B,OAAA,QAAA4K,IAAAhJ,UAAA,GAAAA,UAAA,GAA7C,GAAI8zE,EAAyC9zE,UAAA5B,OAAA,QAAA4K,IAAAhJ,UAAA,GAAAA,UAAA,IAA5B,EAAG,EAAG,EAAG,GAAIy5C,EAAez5C,UAAA5B,OAAA,QAAA4K,IAAAhJ,UAAA,GAAAA,UAAA,GAAH,EACtD+zE,EAASrxE,KAAKmb,KAAKvgB,KAAKg+B,WAAWz3B,MAAQiU,GAAM,EACjDk8D,EAAStxE,KAAKmb,KAAKvgB,KAAKg+B,WAAWx3B,OAASiU,GAAM,EAClDq2D,EAAgB2F,EAASC,EAHgCC,EArEvE,SAAA3tE,EAAAiqE,EAAA2D,GAMI,IAN6D,IAAtCH,EAAsCztE,EAAtCytE,OAAQC,EAA8B1tE,EAA9B0tE,OAAUpiE,EAAoB2+D,EAApB3+D,EAAGrO,EAAiBgtE,EAAjBhtE,EAAKk2C,EAAYy6B,EAAZz6B,UAC3Cv2C,EAAW,IAAIrE,aAAa,GAAKk1E,EAASC,IAC1CruE,EAAO,IAAI9G,aAAa,GAAKk1E,EAASC,IACtCnwE,EAAQ+N,GAAKmiE,EAAS,GACtBjwE,EAASP,GAAKywE,EAAS,GAEpBh5C,EAAM,EAAGA,EAAMg5C,IAAUh5C,EAC9B93B,EAAS,EAAI83B,GAAO,EACpB93B,EAAS,EAAI83B,EAAM,GAAKA,EAAMz3B,EAC9BoC,EAAK,EAAIq1B,GAAOn3B,EAChB8B,EAAK,EAAIq1B,EAAM,GAAKye,EAGxB,IAAK,IAAIve,EAAM,EAAGA,EAAM64C,IAAU74C,EAC9Bh4B,EAAS,EAAI8wE,EAAS,EAAI94C,GAAOA,EAAMtpB,EACvC1O,EAAS,EAAI8wE,EAAS,EAAI94C,EAAM,GAAK,EACrCv1B,EAAK,EAAIquE,EAAS,EAAI94C,GAAOue,EAC7B9zC,EAAK,EAAIquE,EAAS,EAAI94C,EAAM,GAAKp3B,EAGrC,OACIZ,WACAyC,QAoDyBwuE,EAAkBJ,SAAQC,WAAUpiE,EAAGkG,EAAIvU,EAAGwU,IAAM0hC,UAAWA,IAAjFv2C,EALwD+wE,EAKxD/wE,SAAUyC,EAL8CsuE,EAK9CtuE,KAEjBrI,KAAKu2E,MAAM/zE,MACPoD,WACAyC,OACAyoE,gBACA0F,YACAh8D,KACAC,sCAID1Y,EAAGE,EAAGyI,GAAY,IAAAjK,EAAAT,KACrBF,KAAGsL,WAAWpL,KAAKoJ,YAAYiC,SAE/BhC,UAAKkC,wBAAwBzL,KAAIE,KAAKoJ,YAAapJ,KAAKuK,KAExD,IAAMusE,GAAa/0E,EAAGE,GAEtBjC,KAAKu2E,MAAMn1E,QAAQ,SAAA21E,GAAY,IACpBnxE,EAAoDmxE,EAApDnxE,SAAUyC,EAA0C0uE,EAA1C1uE,KAAMyoE,EAAoCiG,EAApCjG,cAAe0F,EAAqBO,EAArBP,UAAWh8D,EAAUu8D,EAAVv8D,GAAIC,EAAMs8D,EAANt8D,GAE/ClS,GAAUuuE,EAAU,GAAKt8D,EAAIs8D,EAAU,GAAKr8D,GAC9ClS,EAAO,GAAK,IACZA,EAAO,GAAKA,EAAO,GAAKiS,GAGxBjS,EAAO,GAAK,IACZA,EAAO,GAAKA,EAAO,GAAKkS,GAG5BpR,UAAK6B,6BACDpL,KACAW,EAAK4J,WAAWc,QAAQvF,SACxBA,GAGJyD,UAAK6B,6BACDpL,KACAW,EAAK4J,WAAWc,QAAQ9C,KACxBA,GAGJgB,UAAKiC,YAAY7K,EAAK2I,aAClB4tE,WAAYR,EACZ9rE,WAAYA,EACZnC,OAAQA,IAGZc,UAAKmC,eAAe1L,KAAIW,EAAK8J,IAAKzK,KAAG2L,oBAAgBC,OAAWA,EAAWolE,yCC1IvFlzE,EAAAD,QAAA,sKCAAC,EAAAD,QAAA","file":"tilemap.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 269);\n","let gl = {};\n\nfunction registerContext(_gl) {\n    gl = _gl;\n}\n\nexport {registerContext, gl};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import {vec3, vec4} from 'gl-matrix';\n\nconst MouseDrawingEvents = [\n    'vertexadded',\n    'lineadded',\n    'drawingstart',\n    'drawingend'\n];\n\nclass MouseDrawing {\n\n    constructor(options) {\n        this.game = options.game;\n        this.connected = options.connected || true;\n        this.endKeys = options.endKeys || ['Shift'];\n\n        if (!this.endKeys.length) {\n            this.endKeys = [this.endKeys];\n        }\n\n        this.listeners = MouseDrawingEvents.reduce((acc, evt) => {\n            acc[evt] = [];\n            return acc;\n        }, {});\n\n        if (options.listeners) {\n            Object.keys(options.listeners).forEach(key => this.addListener(key, options.listeners[key]));\n        }\n\n        this._lineData = new Float32Array(2 * 2 * 1024);\n        this.currentLineIdx = 0;\n        this.available = 0;\n        this.isDrawing = false;\n\n        this.game.canvas.addEventListener('mousemove', (evt) => {\n            this.update(this.convertMouseCoordinates({x: evt.offsetX, y: evt.offsetY}));\n        });\n\n        this.game.canvas.addEventListener('mousedown', (evt) => {\n            if (!this.isDrawing) {\n                this.startLine(this.convertMouseCoordinates({x: evt.offsetX, y: evt.offsetY}));\n            } else {\n                this.endLine(this.convertMouseCoordinates({x: evt.offsetX, y: evt.offsetY}));\n            }\n        });\n\n        window.addEventListener('keydown', (evt) => {\n            if (this.endKeys.includes(evt.key) && this.isDrawing) {\n                this.endDrawing(evt);\n            }\n        });\n    }\n\n    addListener(evt, listener) {\n        if (!this.listeners[evt]) {\n            this.listeners[evt] = [];\n        }\n        this.listeners[evt].push(listener);\n    }\n\n    notifyListeners(evt, ...args) {\n        this.listeners[evt].forEach(listener => listener(...args));\n    }\n\n    convertMouseCoordinates(coord) {\n        const mvec = vec4.fromValues(coord.x, coord.y, 0, 1);\n\n        vec4.transformMat4(mvec, mvec, this.game.canvasToWorld);\n\n        return {x: mvec[0], y: mvec[1]};\n    }\n\n    inBounds(coord) {\n        return true;\n    }\n\n    startLine(coord) {\n        if (this.inBounds(coord) && !this.isDrawing) {\n            this.isDrawing = true;\n            this.available++;\n\n            this._lineData[this.lineIndex + 0] = coord.x;\n            this._lineData[this.lineIndex + 1] = coord.y;\n\n            this.update(coord);\n\n            this.notifyListeners('drawingstart', {});\n            this.notifyListeners('vertexadded', this.currentLineStart);\n        }\n    }\n\n    get lineIndex() {\n        return this.currentLineIdx * 4;\n    }\n\n    get lineData() {\n        return this._lineData.slice(0, this.available * 4);\n    }\n\n    get currentLine() {\n        return {\n            start: this.currentLineStart,\n            end: this.currentLineEnd\n        }\n    }\n\n    get currentLineStart() {\n        return {\n            x: this._lineData[this.lineIndex],\n            y: this._lineData[this.lineIndex + 1]\n        };\n    }\n\n    get currentLineEnd() {\n        return {\n            x: this._lineData[this.lineIndex + 2],\n            y: this._lineData[this.lineIndex + 3]\n        }\n    }\n\n    endLine(coord) {\n        if (this.isDrawing) {\n            this._lineData[this.lineIndex + 2] = coord.x;\n            this._lineData[this.lineIndex + 3] = coord.y;\n\n            this.notifyListeners('lineadded', this.currentLine);\n            this.notifyListeners('vertexadded', this.currentLineEnd);\n\n            this.currentLineIdx++;\n\n            if (!this.connected) {\n                this.isDrawing = false;\n            } else {\n                this.available++;\n\n                this._lineData[this.lineIndex + 0] = coord.x;\n                this._lineData[this.lineIndex + 1] = coord.y;\n\n                this.update(coord);\n            }\n        }\n    }\n\n    endDrawing(evt) {\n        this.isDrawing = false;\n\n        this.notifyListeners('drawingend', evt);\n    }\n\n    update(coord) {\n        if (this.isDrawing) {\n            this._lineData[this.lineIndex + 2] = coord.x;\n            this._lineData[this.lineIndex + 3] = coord.y;\n        }\n    }\n\n    clear() {\n        this.available = 0;\n        this.currentLineIdx = 0;\n        this._lineData.fill(0);\n    }\n}\n\nclass Keyboard {\n    constructor(options) {\n        this.keys = new Map();\n        document.addEventListener('keydown', this.keydown.bind(this));\n        document.addEventListener('keyup', this.keyup.bind(this))\n    }\n\n    keydown(evt) {\n        this.keys.set(evt.key, true);\n\n        if (evt.key.startsWith('Arrow')) {\n            evt.preventDefault();\n        }\n    }\n\n    keyup(evt) {\n        this.keys.delete(evt.key);\n    }\n\n    isdown(key) {\n        return this.keys.get(key);\n    }\n}\n\nclass CameraPan {\n    constructor(app) {\n        this.pandir = [0, 0];\n        this.speed = 200;\n        this.keyboard = new Keyboard();\n\n        let loopStartTime = null;\n\n        const loop = now => {\n            if (!loopStartTime) {\n                loopStartTime = now;\n            }\n            let delta = (now - loopStartTime) / 1000;\n            loopStartTime = now;\n\n            this.pandir = [\n                this.keyboard.isdown('ArrowLeft') ? -1 : this.keyboard.isdown('ArrowRight') ? 1 : 0,\n                this.keyboard.isdown('ArrowDown') ? -1 : this.keyboard.isdown('ArrowUp') ? 1 : 0,\n            ];\n\n            if (this.keyboard.isdown('+')) {\n                this.speed += 10;\n            } else if (this.keyboard.isdown('-')) {\n                this.speed -= 10;\n                this.speed = Math.max(200, this.speed);\n            }\n\n            if (this.pandir[0] !== 0 || this.pandir[1] !== 0) {\n                app.camera.translate(this.speed * delta * this.pandir[0], this.speed * delta * this.pandir[1])\n            }\n\n            this.loopId = requestAnimationFrame(loop);\n        };\n\n        this.loopId = requestAnimationFrame(loop);\n    }\n}\n\nclass CameraBodyTracker {\n    constructor(game, body) {\n        this.body = body;\n        this.game = game;\n        this.loopId = null;\n    }\n\n    start() {\n        if (!this.loopId) {\n            this.loopId = requestAnimationFrame(this.loop.bind(this));\n        }\n    }\n\n    stop() {\n        cancelAnimationFrame(this.loopId);\n        this.loopId = null;\n    }\n\n    loop() {\n        if (this.body) {\n            this.game.camera.centerAt(this.body.position.x, this.body.position.y);\n        }\n\n        this.loopId = requestAnimationFrame(this.loop.bind(this));\n    }\n}\n\nexport {\n    CameraPan,\n    CameraBodyTracker,\n    MouseDrawing,\n    Keyboard\n};\n","function arraySetter(buffer) {\n    let count = 0;\n    return function (newElements) {\n        if (!newElements.length) {\n            newElements = [newElements];\n            if (count + newElements.length > buffer.length) {\n                throw new Error('attempting to append beyond buffer length');\n            }\n        }\n        buffer.set(newElements, count);\n        count += newElements.length;\n    }\n}\n\nfunction hsl2rgb (h, s, l) {\n\n    var r, g, b, m, c, x\n\n    if (!isFinite(h)) h = 0\n    if (!isFinite(s)) s = 0\n    if (!isFinite(l)) l = 0\n\n    h /= 60\n    if (h < 0) h = 6 - (-h % 6)\n    h %= 6\n\n    s = Math.max(0, Math.min(1, s / 100))\n    l = Math.max(0, Math.min(1, l / 100))\n\n    c = (1 - Math.abs((2 * l) - 1)) * s\n    x = c * (1 - Math.abs((h % 2) - 1))\n\n    if (h < 1) {\n        r = c\n        g = x\n        b = 0\n    } else if (h < 2) {\n        r = x\n        g = c\n        b = 0\n    } else if (h < 3) {\n        r = 0\n        g = c\n        b = x\n    } else if (h < 4) {\n        r = 0\n        g = x\n        b = c\n    } else if (h < 5) {\n        r = x\n        g = 0\n        b = c\n    } else {\n        r = c\n        g = 0\n        b = x\n    }\n\n    m = l - c / 2\n    r = Math.round((r + m) * 255)\n    g = Math.round((g + m) * 255)\n    b = Math.round((b + m) * 255)\n\n    return [r, g, b];\n}\n\nfunction attachFramebuffer(gl, width, height) {\n    const framebuffer = gl.createFramebuffer();\n    const texture = gl.createTexture();\n\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA8, width, height);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    return {\n        width,\n        height,\n        attach() {\n            gl.viewport(0, 0, width, height);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        },\n        detach() {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        },\n        texture,\n        framebuffer\n    }\n}\n\nfunction loadImage(src) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n\n        function removeListeners() {\n            img.removeEventListener('load', null);\n            img.removeEventListener('error', null);\n        }\n\n        img.addEventListener('load', () => {\n            removeListeners();\n            resolve(img);\n        });\n\n        img.addEventListener('error', (error) => {\n            removeListeners();\n            reject(error);\n        });\n\n        img.src = src;\n    });\n}\n\nexport {arraySetter, hsl2rgb, attachFramebuffer, loadImage};\n","export {Sprite};\n\nclass Sprite {\n    constructor(options) {\n        this.position = options.position || [0, 0];\n        this.size = options.size;// || [8, 8];\n        // default angle is 0 radians\n        this.angle = 0;\n        // default is offset sets the sprite's bottom left corner at position\n        this.offset = options.offset || [0, 0];\n        // default backgroundColor is transparent black\n        this.backgroundColor = options.backgroundColor || [0, 0, 0, 0];\n        this.textureName = options.textureName || null;\n    }\n}\n","import twgl from '../twgl';\n\nimport vs from '../../shaders/sprite.vert';\nimport fs from '../../shaders/sprite.frag';\n\nconst SPRITE_RECT_VERTICES = new Float32Array([\n    0, 0, // bottom left\n    1, 0, // bottom right\n    0, 1, // top left\n    1, 1  // top right\n]);\n\nclass SpriteRenderer {\n    constructor({game, textureInfo}) {\n        this.gl = game.gl;\n        this.loader = game.loader;\n        this.game = game;\n\n        this.textureInfo = textureInfo;\n\n        this.setup();\n    }\n\n    setup() {\n        this.programInfo = twgl.createProgramInfo(this.gl, [vs, fs]);\n\n        this._arrays = {\n            vertex: {\n                data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 0,\n                drawType: this.gl.STATIC_DRAW\n            },\n            position: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            offset: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            size: {\n                //data: SPRITE_RECT_VERTICES,\n                numComponents: 2,\n                divisor: 1,\n                drawType: this.gl.DYNAMIC_DRAW\n            },\n            texcoord: {\n                data: [\n                    // 0, 0,\n                    // this.textureInfo.width, 0,\n                    // 0, this.textureInfo.height,\n                    // this.textureInfo.width, this.textureInfo.height\n                    0, 0,\n                    1, 0,\n                    0, 1,\n                    1, 1\n                ],\n                numComponents: 2,\n                divisor: 0,\n                type: Int16Array\n            },\n            indices: {\n                data: [\n                    0,\n                    1,\n                    2,\n                    3\n                ]\n            }\n        };\n\n        this.bufferInfo = twgl.createBufferInfoFromArrays(this.gl, this._arrays);\n        this.vao = twgl.createVertexArrayInfo(this.gl, this.programInfo, this.bufferInfo);\n    }\n\n    render(sprites, projection) {\n        const positions = new Float32Array(2 * sprites.length);\n        const sizes = new Float32Array(2 * sprites.length);\n        const offsets = new Float32Array(2 * sprites.length);\n\n        sprites.forEach((sprite, spriteIndex) => {\n            sprite.position.forEach((v, compIndex) => {\n                positions[spriteIndex * 2 + compIndex] = v;\n            });\n\n            sprite.size.forEach((v, compIndex) => {\n                sizes[spriteIndex * 2 + compIndex] = v;\n            });\n\n            sprite.offset.forEach((v, compIndex) => {\n                offsets[spriteIndex * 2 + compIndex] = v;\n            });\n        });\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.position,\n            positions\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.size,\n            sizes\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            this.gl,\n            this.bufferInfo.attribs.offset,\n            offsets\n        );\n\n        this.gl.useProgram(this.programInfo.program);\n\n        twgl.setUniforms(this.programInfo, {\n            projection: projection,\n            texture: this.textureInfo.texture\n        });\n\n        twgl.setBuffersAndAttributes(this.gl, this.programInfo, this.vao);\n        twgl.drawBufferInfo(this.gl, this.vao, this.gl.TRIANGLE_STRIP, undefined, undefined, sprites.length);\n    }\n}\n\nexport {SpriteRenderer};\n","/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nexport const RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\n\nconst degree = Math.PI / 180;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n","import * as glMatrix from \"./common.js\"\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nexport function fromValues(m00, m01, m10, m11) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    let a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\n  // Calculate the determinant\n  let det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] =  a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] =  a0 * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  let a0 = a[0];\n  out[0] =  a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] =  a0;\n\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n}\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix\n * @param {mat2} D the diagonal matrix\n * @param {mat2} U the upper triangular matrix\n * @param {mat2} a the input matrix to factorize\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2]/a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 2x3 Matrix\n * @module mat2d\n *\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nexport function fromValues(a, b, c, d, tx, ty) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function invert(out, a) {\n  let aa = a[0], ab = a[1], ac = a[2], ad = a[3];\n  let atx = a[4], aty = a[5];\n\n  let det = aa * ad - ab * ac;\n  if(!det){\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nexport function translate(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}\n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));\n}\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b01 = a22 * a11 - a12 * a21;\n  let b11 = -a22 * a10 + a12 * a20;\n  let b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  out[0] = (a11 * a22 - a12 * a21);\n  out[1] = (a02 * a21 - a01 * a22);\n  out[2] = (a01 * a12 - a02 * a11);\n  out[3] = (a12 * a20 - a10 * a22);\n  out[4] = (a00 * a22 - a02 * a20);\n  out[5] = (a02 * a10 - a00 * a12);\n  out[6] = (a10 * a21 - a11 * a20);\n  out[7] = (a01 * a20 - a00 * a21);\n  out[8] = (a00 * a11 - a01 * a10);\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b00 = b[0], b01 = b[1], b02 = b[2];\n  let b10 = b[3], b11 = b[4], b12 = b[5];\n  let b20 = b[6], b21 = b[7], b22 = b[8];\n\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n    x = v[0], y = v[1];\n\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n\n    s = Math.sin(rad),\n    c = Math.cos(rad);\n\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1];\n\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n\n  return out;\n}\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nexport function normalFromMat4(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ', ' +\n          a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] &&\n         a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\n         a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a03 = a[3];\n    let a12 = a[6], a13 = a[7];\n    let a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n  out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n  out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n  out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n  out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n  out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  let b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n  out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n  out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n  out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n    out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n    out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n  let b00, b01, b02;\n  let b10, b11, b12;\n  let b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n  a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n  a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[0]  = a[0];\n    out[1]  = a[1];\n    out[2]  = a[2];\n    out[3]  = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[4]  = a[4];\n    out[5]  = a[5];\n    out[6]  = a[6];\n    out[7]  = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[8]  = a[8];\n    out[9]  = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function fromRotation(out, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n\n  if (len < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromXRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = 1;\n  out[1]  = 0;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromYRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = 0;\n  out[2]  = -s;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromZRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = s;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {quat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\nexport function fromQuat2(out, a) {\n  let translation = new glMatrix.ARRAY_TYPE(3);\n  let bx = -a[0], by = -a[1], bz = -a[2], bw = a[3],\n  ax = a[4], ay = a[5], az = a[6], aw = a[7];\n\n  let magnitude = bx * bx + by * by + bz * bz + bw * bw;\n  //Only scale if it makes sense\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n  let m11 = mat[0];\n  let m12 = mat[1];\n  let m13 = mat[2];\n  let m21 = mat[4];\n  let m22 = mat[5];\n  let m23 = mat[6];\n  let m31 = mat[8];\n  let m32 = mat[9];\n  let m33 = mat[10];\n\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport function getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  let trace = mat[0] + mat[5] + mat[10];\n  let S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if ((mat[0] > mat[5]) && (mat[0] > mat[10])) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  let ox = o[0];\n  let oy = o[1];\n  let oz = o[2];\n\n  let out0 = (1 - (yy + zz)) * sx;\n  let out1 = (xy + wz) * sx;\n  let out2 = (xz - wy) * sx;\n  let out4 = (xy - wz) * sy;\n  let out5 = (1 - (xx + zz)) * sy;\n  let out6 = (yz + wx) * sy;\n  let out8 = (xz + wy) * sz;\n  let out9 = (yz - wx) * sz;\n  let out10 = (1 - (xx + yy)) * sz;\n\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function frustum(out, left, right, bottom, top, near, far) {\n  let rl = 1 / (right - left);\n  let tb = 1 / (top - bottom);\n  let nf = 1 / (near - far);\n  out[0] = (near * 2) * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = (near * 2) * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (far * near * 2) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n  let f = 1.0 / Math.tan(fovy / 2);\n  let nf = 1 / (near - far);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (2 * far * near) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  let upTan = Math.tan(fov.upDegrees * Math.PI/180.0);\n  let downTan = Math.tan(fov.downDegrees * Math.PI/180.0);\n  let leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0);\n  let rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0);\n  let xScale = 2.0 / (leftTan + rightTan);\n  let yScale = 2.0 / (upTan + downTan);\n\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = ((upTan - downTan) * yScale * 0.5);\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = (far * near) / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n  let lr = 1 / (left - right);\n  let bt = 1 / (bottom - top);\n  let nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  let x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  let eyex = eye[0];\n  let eyey = eye[1];\n  let eyez = eye[2];\n  let upx = up[0];\n  let upy = up[1];\n  let upz = up[2];\n  let centerx = center[0];\n  let centery = center[1];\n  let centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n      Math.abs(eyey - centery) < glMatrix.EPSILON &&\n      Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n  let eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n\n  let z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n\n  let len = z0*z0 + z1*z1 + z2*z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  let x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n\n  len = x0*x0 + x1*x1 + x2*x2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n          a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n          a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\n          a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  out[9] = a[9] + (b[9] * scale);\n  out[10] = a[10] + (b[10] * scale);\n  out[11] = a[11] + (b[11] * scale);\n  out[12] = a[12] + (b[12] * scale);\n  out[13] = a[13] + (b[13] * scale);\n  out[14] = a[14] + (b[14] * scale);\n  out[15] = a[15] + (b[15] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n         a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] &&\n         a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n         a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3];\n  let a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7];\n  let a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11];\n  let a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\n\n  let b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3];\n  let b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7];\n  let b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11];\n  let b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n          Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n          Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n          Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n          Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n          Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n          Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n          Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let len = x*x + y*y + z*z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2];\n  let bx = b[0], by = b[1], bz = b[2];\n\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  let factorTimes2 = t * t;\n  let factor1 = factorTimes2 * (2 * t - 3) + 1;\n  let factor2 = factorTimes2 * (t - 2) + t;\n  let factor3 = factorTimes2 * (t - 1);\n  let factor4 = factorTimes2 * (3 - 2 * t);\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  let inverseFactor = 1 - t;\n  let inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  let factorTimes2 = t * t;\n  let factor1 = inverseFactorTimesTwo * inverseFactor;\n  let factor2 = 3 * t * inverseFactorTimesTwo;\n  let factor3 = 3 * factorTimes2 * inverseFactor;\n  let factor4 = factorTimes2 * t;\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n\n  let r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  let z = (glMatrix.RANDOM() * 2.0) - 1.0;\n  let zScale = Math.sqrt(1.0-z*z) * scale;\n\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n    let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n    let x = a[0], y = a[1], z = a[2];\n    // var qvec = [qx, qy, qz];\n    // var uv = vec3.cross([], qvec, a);\n    let uvx = qy * z - qz * y,\n        uvy = qz * x - qx * z,\n        uvz = qx * y - qy * x;\n    // var uuv = vec3.cross([], qvec, uv);\n    let uuvx = qy * uvz - qz * uvy,\n        uuvy = qz * uvx - qx * uvz,\n        uuvz = qx * uvy - qy * uvx;\n    // vec3.scale(uv, uv, 2 * w);\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n    // vec3.scale(uuv, uuv, 2);\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n    // return vec3.add(out, a, vec3.add(out, uv, uuv));\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let tempA = fromValues(a[0], a[1], a[2]);\n  let tempB = fromValues(b[0], b[1], b[2]);\n\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n\n  let cosine = dot(tempA, tempB);\n\n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2];\n  let b0 = b[0], b1 = b[1], b2 = b[2];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 3;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n    }\n\n    return a;\n  };\n})();\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  let len = x*x + y*y + z*z + w*w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  let aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, vectorScale) {\n  vectorScale = vectorScale || 1.0;\n\n  // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n  var v1, v2, v3, v4;\n  var s1, s2;\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2], w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  let x = a[0], y = a[1], z = a[2];\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n\n  // calculate quat * vec\n  let ix = qw * x + qy * z - qz * y;\n  let iy = qw * y + qz * x - qx * z;\n  let iz = qw * z + qx * y - qy * x;\n  let iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 4;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n    }\n\n    return a;\n  };\n})();\n","import * as glMatrix from \"./common.js\"\nimport * as mat3 from \"./mat3.js\"\nimport * as vec3 from \"./vec3.js\"\nimport * as vec4 from \"./vec4.js\"\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nexport function getAxisAngle(out_axis, q) {\n  let rad = Math.acos(q[3]) * 2.0;\n  let s = Math.sin(rad / 2.0);\n  if (s != 0.0) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let by = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bz = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nexport function calculateW(out, a) {\n  let x = a[0], y = a[1], z = a[2];\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  let omega, cosom, sinom, scale0, scale1;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if ( cosom < 0.0 ) {\n    cosom = -cosom;\n    bx = - bx;\n    by = - by;\n    bz = - bz;\n    bw = - bw;\n  }\n  // calculate coefficients\n  if ( (1.0 - cosom) > 0.000001 ) {\n    // standard case (slerp)\n    omega  = Math.acos(cosom);\n    sinom  = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let dot = a0*a0 + a1*a1 + a2*a2 + a3*a3;\n  let invDot = dot ? 1.0/dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0*invDot;\n  out[1] = -a1*invDot;\n  out[2] = -a2*invDot;\n  out[3] = a3*invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  let fTrace = m[0] + m[4] + m[8];\n  let fRoot;\n\n  if ( fTrace > 0.0 ) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5/fRoot;  // 1/(4w)\n    out[0] = (m[5]-m[7])*fRoot;\n    out[1] = (m[6]-m[2])*fRoot;\n    out[2] = (m[1]-m[3])*fRoot;\n  } else {\n    // |w| <= 1/2\n    let i = 0;\n    if ( m[4] > m[0] )\n      i = 1;\n    if ( m[8] > m[i*3+i] )\n      i = 2;\n    let j = (i+1)%3;\n    let k = (i+2)%3;\n\n    fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n    out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n    out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n  }\n\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, x, y, z) {\n    let halfToRad = 0.5 * Math.PI / 180.0;\n    x *= halfToRad;\n    y *= halfToRad;\n    z *= halfToRad;\n\n    let sx = Math.sin(x);\n    let cx = Math.cos(x);\n    let sy = Math.sin(y);\n    let cy = Math.cos(y);\n    let sz = Math.sin(z);\n    let cz = Math.cos(z);\n\n    out[0] = sx * cy * cz - cx * sy * sz;\n    out[1] = cx * sy * cz + sx * cy * sz;\n    out[2] = cx * cy * sz - sx * sy * cz;\n    out[3] = cx * cy * cz + sx * sy * sz;\n\n    return out;\n}\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nexport const clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nexport const fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const equals = vec4.equals;\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nexport const rotationTo = (function() {\n  let tmpvec3 = vec3.create();\n  let xUnitVec3 = vec3.fromValues(1,0,0);\n  let yUnitVec3 = vec3.fromValues(0,1,0);\n\n  return function(out, a, b) {\n    let dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001)\n        vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n})();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport const sqlerp = (function () {\n  let temp1 = create();\n  let temp2 = create();\n\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\n    return out;\n  };\n}());\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nexport const setAxes = (function() {\n  let matr = mat3.create();\n\n  return function(out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n\n    return normalize(out, fromMat3(out, matr));\n  };\n})();\n","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\nexport function create() {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = 0;\n  dq[1] = 0;\n  dq[2] = 0;\n  dq[3] = 1;\n  dq[4] = 0;\n  dq[5] = 0;\n  dq[6] = 0;\n  dq[7] = 0;\n  return dq;\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function clone(a) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  let ax = x2 * 0.5,\n    ay = y2 * 0.5,\n    az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {quat} q quaternion\n * @param {vec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromRotationTranslation(out, q, t) {\n  let ax = t[0] * 0.5,\n    ay = t[1] * 0.5,\n    az = t[2] * 0.5,\n    bx = q[0],\n    by = q[1],\n    bz = q[2],\n    bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Creates a dual quat from a translation\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {vec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {quat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {mat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  let outer = quat.create();\n  mat4.getRotation(outer, a);\n  let t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {quat2} a Dual Quaternion\n * @return {quat} real part\n */\nexport const getReal = quat.copy;\n\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {quat2} a Dual Quaternion\n * @return {quat} dual part\n */\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\nexport const setReal = quat.copy;\n\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {quat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\nexport function getTranslation(out, a) {\n  let ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to translate\n * @param {vec3} v vector to translate by\n * @returns {quat2} out\n */\nexport function translate(out, a, v) {\n  let ax1 = a[0],\n    ay1 = a[1],\n    az1 = a[2],\n    aw1 = a[3],\n    bx1 = v[0] * 0.5,\n    by1 = v[1] * 0.5,\n    bz1 = v[2] * 0.5,\n    ax2 = a[4],\n    ay2 = a[5],\n    az2 = a[6],\n    aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateX(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateY(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateZ(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {quat} q quaternion to rotate by\n * @returns {quat2} out\n */\nexport function rotateByQuatAppend(out, a, q) {\n  let qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3],\n    ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat} q quaternion to rotate by\n * @param {quat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\nexport function rotateByQuatPrepend(out, q, a) {\n  let qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3],\n    bx = a[0],\n    by = a[1],\n    bz = a[2],\n    bw = a[3];\n\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {vec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n  let axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  let bx = s * axis[0] / axisLength;\n  let by = s * axis[1] / axisLength;\n  let bz = s * axis[2] / axisLength;\n  let bw = Math.cos(rad);\n\n  let ax1 = a[0],\n    ay1 = a[1],\n    az1 = a[2],\n    aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n\n  let ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n\n  return out;\n}\n\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {quat2} out\n * @function\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {quat2} out\n */\nexport function multiply(out, a, b) {\n  let ax0 = a[0],\n    ay0 = a[1],\n    az0 = a[2],\n    aw0 = a[3],\n    bx1 = b[4],\n    by1 = b[5],\n    bz1 = b[6],\n    bw1 = b[7],\n    ax1 = a[4],\n    ay1 = a[5],\n    az1 = a[6],\n    aw1 = a[7],\n    bx0 = b[0],\n    by0 = b[1],\n    bz0 = b[2],\n    bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {quat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = quat.dot;\n\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\nexport function lerp(out, a, b, t) {\n  let mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\nexport function invert(out, a) {\n  let sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n\n/**\n * Calculates the length of a dual quat\n *\n * @param {quat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\nexport const length = quat.length;\n\n/**\n * Alias for {@link quat2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {quat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = quat.squaredLength;\n\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\nexport function normalize(out, a) {\n  let magnitude = squaredLength(a);\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    out[0] = a[0] / magnitude;\n    out[1] = a[1] / magnitude;\n    out[2] = a[2] / magnitude;\n    out[3] = a[3] / magnitude;\n    out[4] = a[4] / magnitude;\n    out[5] = a[5] / magnitude;\n    out[6] = a[6] / magnitude;\n    out[7] = a[7] / magnitude;\n  }\n  return out;\n}\n\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {quat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\nexport function str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat2} a the first dual quaternion.\n * @param {quat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n    a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {quat2} a the first dual quat.\n * @param {quat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5],\n    a6 = a[6],\n    a7 = a[7];\n  let b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n    Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n    Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n    Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n    Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n    Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n    Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n    Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)));\n}\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = 0;\n  out[1] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nexport function fromValues(x, y) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nexport function round (out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return Math.sqrt(x*x + y*y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return x*x + y*y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0],\n    y = a[1];\n  return Math.sqrt(x*x + y*y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength (a) {\n  var x = a[0],\n    y = a[1];\n  return x*x + y*y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n  var x = a[0],\n    y = a[1];\n  var len = x*x + y*y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n    ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0];\n  let y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {vec2} a The vec2 point to rotate\n * @param {vec2} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec2} out\n */\nexport function rotate(out, a, b, c) {\n  //Translate point to the origin\n  let p0 = a[0] - b[0],\n  p1 = a[1] - b[1],\n  sinC = Math.sin(c),\n  cosC = Math.cos(c);\n  \n  //perform rotation and translate to correct position\n  out[0] = p0*cosC - p1*sinC + b[0];\n  out[1] = p0*sinC + p1*cosC + b[1];\n\n  return out;\n}\n\n/**\n * Get the angle between two 2D vectors\n * @param {vec2} a The first operand\n * @param {vec2} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let x1 = a[0],\n    y1 = a[1],\n    x2 = b[0],\n    y2 = b[1];\n  \n  let len1 = x1*x1 + y1*y1;\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n  \n  let len2 = x2*x2 + y2*y2;\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n  \n  let cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n  \n  \n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1];\n  let b0 = b[0], b1 = b[1];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 2;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1];\n    }\n\n    return a;\n  };\n})();\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tvar styleTarget = fn.call(this, selector);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[selector] = styleTarget;\n\t\t}\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","import {mat3, mat4, vec2, vec3, vec4} from 'gl-matrix';\n\nimport {gl} from 'gl.js';\n\nconst POSITION_COMPONENTS = 2;\nconst SIZE_COMPONENTS = 2;\n\nclass TilemapTextureBuilder {\n    constructor(opts) {\n        Object.assign(this, {\n            tileWidth: 8,\n            tileHeight: 8,\n            width: 256,\n            height: 1,\n            layers: 2,\n            ...opts\n        });\n\n        this.copyIndex = 0;\n\n        this.texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n        gl.texStorage3D(gl.TEXTURE_2D_ARRAY, 1, gl.RGBA8, this.width * this.tileWidth, this.height * this.tileHeight, this.layers);\n        gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, null);\n\n    }\n\n    tileCoordinates() {\n        return {\n            x: this.copyIndex % this.width,\n            y: Math.floor(this.copyIndex / (this.width)) % this.height,\n            z: Math.floor(this.copyIndex / (this.width * this.height)) % this.layers\n        }\n    }\n\n    addTiles(src) {\n        const tileWide = this.detectWidthInTiles(src);\n        const tileHigh = this.detectHeightInTiles(src);\n\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        canvas.width = src.width;\n        canvas.height = src.height;\n\n        ctx.drawImage(src, 0, 0);\n\n        /**\n         *  Copies pixels in src from the tile starting at (tileX, tileY) to the current\n         * tile and advances the copy index\n         */\n        const copyTile = (tileX, tileY) => {\n            const imageData = ctx.getImageData(\n                tileX * this.tileWidth,\n                tileY * this.tileHeight,\n                this.tileWidth,\n                this.tileHeight\n            );\n\n            const {x, y, z} = this.tileCoordinates();\n\n            gl.texSubImage3D(\n                gl.TEXTURE_2D_ARRAY, // target\n                0,                   // mipmap level, always zero\n                x * this.tileWidth,  // xoffset\n                y * this.tileHeight, // yoffset\n                z,                   // zoffset\n                this.tileWidth,      // width\n                this.tileHeight,     // height\n                1,                   // depth\n                gl.RGBA,             // format, guaranteed by ImageData to be RGBA\n                gl.UNSIGNED_BYTE,    // type, guaranteed by ImageData to be Uint8ClampedArray, i.e. UNSIGNED_BYTE\n                imageData            // pixel data\n            );\n\n            this.copyIndex++;\n        };\n\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n\n        for (let y = 0; y < tileHigh; y++) {\n            for (let x = 0; x < tileWide; x++) {\n                if (this.isFull()) {\n                    break;\n                }\n                copyTile(x, y);\n            }\n        }\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, null);\n    }\n\n    detectWidthInTiles(src) {\n        return Math.floor(src.width / this.tileWidth);\n    }\n\n    detectHeightInTiles(src) {\n        return Math.floor(src.height / this.tileHeight);\n    }\n\n    get layerWidth() {\n        return this.tileWidth * this.width;\n    }\n\n    get layerHeight() {\n        return this.tileHeight * this.height;\n    }\n\n    get maxIndex() {\n        return this.width * this.height * this.layers;\n    }\n\n    isFull() {\n        return this.copyIndex >= this.maxIndex;\n    }\n\n    /**\n     * Reads texture from GL memory returns it as Array of ImageData\n     */\n    readback() {\n        // Uint8Array long enough to hold pixel data for one layer\n        const buffer = new Uint8Array(this.layerWidth * this.layerHeight * 4);\n        const fb = gl.createFramebuffer();\n        const layers = [];\n\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, fb);\n\n        for (let layer = 0; layer < this.layers; layer++) {\n            gl.framebufferTextureLayer(gl.READ_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, this.texture, 0, layer);\n            gl.readPixels(0, 0, this.layerWidth, this.layerHeight, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n            layers.push(new ImageData(new Uint8ClampedArray(buffer), this.layerWidth, this.layerHeight));\n        }\n\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n\n        return layers;\n    }\n}\n\n\nconst CoordinateConversions = {\n    canvasToWorldMatrix(viewMatrix, displaySize, virtualSize) {\n        const acc = mat4.create();\n        const temp = mat4.create();\n\n        // (scale to virtualSize) * (project viewport) * (subtract offset) * point\n\n        // (inverse viewMatrix) * (scale virtualSize / displaySize) * (flip y) * point\n\n        // flip y\n        mat4.multiply(\n            acc,\n            mat4.fromValues(\n                1,  0, 0, 0,\n                0, -1, 0, 0,\n                0,  0, 1, 0,\n                0, displaySize.height, 1, 1\n            ),\n            acc\n        );\n\n        // scale\n        mat4.fromScaling(\n            temp,\n            [virtualSize.width / displaySize.width, virtualSize.height / displaySize.height, 1]\n        );\n        mat4.multiply(acc, temp, acc);\n\n        // invert view\n        mat4.invert(temp, viewMatrix);\n        mat4.multiply(acc, temp, acc);\n\n        return acc;\n    }\n};\n\n\nexport {\n    TilemapTextureBuilder,\n    CoordinateConversions};\n","module.exports = \"#version 300 es\\n\\nprecision mediump float;\\nprecision mediump int;\\n\\nout vec4 out_color;\\n\\nin vec2 v_tex_coord;\\nflat in int v_tile_index;\\n\\nuniform highp sampler2DArray texture;\\nuniform lowp ivec2 tile_size;\\n\\n#define TILE_X_MASK 0x0F\\n#define TILE_Y_MASK 0xF0\\n#define TILE_Z_MASK 0xFF00\\n\\n#define TILE_Y_SHIFT 4\\n#define TILE_Z_SHIFT 8\\n\\n#define tile_coord(idx) (ivec3(idx & TILE_X_MASK, (idx & TILE_Y_MASK) >> TILE_Y_SHIFT, (idx & TILE_Z_MASK) >> TILE_Z_SHIFT))\\n\\nvoid main() {\\n    ivec3 tile_coords = tile_coord(v_tile_index);\\n\\n    out_color = texelFetch(texture, ivec3(tile_coords.xy * tile_size + ivec2(v_tex_coord), tile_coords.z), 0);\\n}\\n\"","module.exports = \"#version 300 es\\n\\nlayout(location = 0) in vec2 vertex;\\nlayout(location = 1) in vec3 position;\\nlayout(location = 2) in vec2 texcoord;\\nlayout(location = 3) in int tile_index;\\n\\nout vec2 v_tex_coord;\\nflat out int v_tile_index;\\n\\nuniform mat4 projection;\\n\\nvoid main() {\\n    vec4 transformed_position = projection * vec4(position + vec3(vertex, 0), 1);\\n    gl_Position = transformed_position;\\n    v_tex_coord = texcoord;\\n    v_tile_index = tile_index;\\n}\\n\"","import twgl from '../twgl';\nimport {gl} from '../gl';\nimport {arraySetter} from '../util';\nimport vs from '../../shaders/tilemap.vert';\nimport fs from '../../shaders/tilemap.frag';\n\nlet sharedProgram = null;\n\nclass TilemapRenderer {\n    /*\n    tilemap = {\n        width: width in tiles\n        height: height in tiles\n        tileWidth: tile width in pixels\n        tileHeight: tile height in pixels\n        tiles\n    }\n    */\n    constructor(opts) {\n        const {\n            tilemap,\n            game,\n            textureArray\n        } = opts;\n\n        this.tilemap = tilemap;\n        this.game = game;\n        this.gl = game.gl;\n        this.textureArray = textureArray;\n\n        this.tileWidth = this.tilemap.tileWidth;\n        this.tileHeight = this.tilemap.tileHeight;\n\n        // Share program between renderer instances\n        if (!sharedProgram) {\n            sharedProgram = twgl.createProgramInfo(gl, [vs, fs]);\n            this.programInfo = sharedProgram;\n        }\n\n        this.setup();\n    }\n\n    setup() {\n        this.bufferInfo = twgl.createBufferInfoFromArrays(gl, {\n            /* Per-vertex attributes common to each instance. */\n            vertex: {\n                data: new Float32Array([\n                    0, 0, // bottom left\n                    this.tileWidth, 0, // bottom right\n                    0, this.tileHeight, // top left\n                    this.tileWidth, this.tileHeight  // top right\n                ]),\n                numComponents: 2,\n                divisor: 0,\n                drawType: gl.STATIC_DRAW\n            },\n\n            position: {\n                numComponents: 3,\n                divisor: 1,\n                drawType: gl.DYNAMIC_DRAW\n            },\n\n            texcoord: {\n                data: [\n                    0, 0,\n                    this.tileWidth, 0,\n                    0, this.tileHeight,\n                    this.tileWidth, this.tileHeight\n                ],\n                numComponents: 2,\n                divisor: 0,\n                drawType: gl.STATIC_DRAW\n            },\n\n            tile_index: {\n                numComponents: 1,\n                divisor: 1,\n                drawType: gl.DYNAMIC_DRAW,\n                type: Int16Array\n            },\n\n            indices: {\n                data: [\n                    0,\n                    1,\n                    2,\n                    3\n                ]\n            }\n        });\n\n        this.arrays = {\n            position: new Float32Array(3 * this.maxCells()),\n            tile_index: new Int16Array(this.maxCells())\n        };\n\n        this.vao = twgl.createVertexArrayInfo(gl, this.programInfo, this.bufferInfo);\n    }\n\n    /* Returns maximum number of cells that could be rendered. If the display\n    is tw and th tiles wide and high, respectively, the value returned is\n    (tw + 1) * (th + 1) */\n    maxCells() {\n        return this.maxWidthInCells * this.maxHeightInCells;\n    }\n\n    get maxWidthInCells() {\n        return Math.floor(this.game.resolution.width / this.tileWidth) + 1;\n    }\n\n    get maxHeightInCells() {\n        return Math.floor(this.game.resolution.height / this.tileHeight) + 1;\n    }\n\n    draw({x, y, width, height}) {\n        const tileCount = {\n            x: Math.floor(width / this.tileWidth) + 1,\n            y: Math.floor(height / this.tileHeight) + 1\n        };\n\n        const startIndex = {\n            x: Math.floor(x / this.tileWidth),\n            y: Math.floor(y / this.tileHeight)\n        };\n\n        tileCount.x = Math.min(tileCount.x, this.tilemap.width - startIndex.x, this.maxWidthInCells);\n        tileCount.y = Math.min(tileCount.y, this.tilemap.height - startIndex.y, this.maxHeightInCells);\n\n        const offset = {x, y};\n\n        if (x > 0) {\n            offset.x = -(x % this.tileWidth);\n        }\n\n        if (y > 0) {\n            offset.y = -(y % this.tileHeight);\n        }\n\n        const addPosition = arraySetter(this.arrays.position);\n        const addTileIndex = arraySetter(this.arrays.tile_index);\n\n        for (let row = 0; row < tileCount.y; row++) {\n            const yCoord = row * this.tileHeight + offset.y;\n            for (let col = 0; col < tileCount.x; col++) {\n                const xCoord = col * this.tileWidth + offset.x;\n\n                const tile_index = this.tilemap.getTile(col + startIndex.x, row + startIndex.y);\n\n                addPosition([xCoord, yCoord, 0]);\n                addTileIndex(tile_index);\n            }\n        }\n\n        twgl.setAttribInfoBufferFromArray(\n            gl,\n            this.bufferInfo.attribs.position,\n            this.arrays.position\n        );\n\n        twgl.setAttribInfoBufferFromArray(\n            gl,\n            this.bufferInfo.attribs.tile_index,\n            this.arrays.tile_index\n        );\n\n        gl.useProgram(this.programInfo.program);\n\n        twgl.setUniforms(this.programInfo, {\n            projection: this.game.viewMatrix,\n            texture: this.textureArray,\n            tile_size: [this.tileWidth, this.tileHeight]\n        });\n\n        twgl.setBuffersAndAttributes(gl, this.programInfo, this.vao);\n        twgl.drawBufferInfo(gl, this.vao, gl.TRIANGLE_STRIP, undefined, undefined, tileCount.x * tileCount.y);\n    }\n}\n\nexport {TilemapRenderer};","import {TilemapTextureBuilder} from '../js/graphics.js';\nimport {Sprite} from '../js/graphics/Sprite.js';\nimport {loadImage} from '../js/util.js';\nimport '../css/app.css'\n\nimport App from 'app.js';\nimport {TilemapRenderer} from \"../js/graphics/TilemapRenderer\";\nimport {SpriteRenderer} from \"../js/graphics/SpriteRenderer\";\nimport {CameraPan} from '../js/controls';\nimport {Grid} from \"../js/graphics/Grid\";\n\n\nconst mountPoint = document.getElementById('content');\nconst canvas = document.createElement('canvas');\ncanvas.classList.add('game');\nmountPoint.appendChild(canvas);\n\n\nconst app = new App({\n    el: canvas,\n    clearColor: [0.1, 0.1, 0.1, 1],\n    resolution: {\n        width: 320,\n        height: 224\n    },\n    pixelMultiplier: 2\n});\n\nconst cameraControl = new CameraPan(app);\n\n\napp.load({\n    basePath: 'shaders/',\n    programs: ['tilemap', 'grid', 'sprite']\n});\n\n\n// app.load({\n//     basePath: 'img/',\n//     textures: {\n//         sonic: {\n//             src: 'img/Sonic1.gif',\n//             mag: app.gl.NEAREST,\n//             min: app.gl.LINEAR,\n//             flipY: true\n//         }\n//     }\n// });\n\n\nconst tilemapTex = new TilemapTextureBuilder({\n    tileWidth: 16,\n    tileHeight: 16,\n    width: 16,\n    height: 16,\n    layers: 4\n});\n\nasync function run() {\n    await app.loader.loading;\n\n    tilemapTex.addTiles(await loadImage('img/mario.png'));\n\n    const framebufferRenderer = new SpriteRenderer({\n        game: app,\n        textureInfo: {\n            texture: app.framebuffer.texture,\n            ...app.resolution\n        }\n    });\n\n    const renderer = new TilemapRenderer({\n        game: app,\n        textureArray: tilemapTex.texture,\n        tilemap: {\n            tileWidth: 16,\n            tileHeight: 16,\n            width: 33,\n            height: 28,\n            getTile(x, y) {\n                const w = 33;\n                const h = 28;\n\n                x = x % w;\n                y = y % h;\n\n                return x + (h - y - 1) * w;\n            }\n        }\n    });\n\n    const grid = new Grid(app);\n    grid.addGrid(16, 16, [1, 1, 1, 0.5], 1);\n\n    requestAnimationFrame(function render() {\n        app.adjustViewport();\n        app.clear();\n\n        app.framebuffer.attach();\n        app.clear();\n\n        app.enableCamera();\n\n        renderer.draw({\n            x: 0,\n            y: 224,\n            width: 320,\n            height: 224\n        });\n\n        grid.render();\n\n        app.disableCamera();\n\n        app.framebuffer.detach();\n        app.adjustViewport();\n\n        framebufferRenderer.render([\n            new Sprite({\n                position: [0, 0],\n                size: [app.resolution.width, app.resolution.height]\n            })\n        ]);\n\n        if (!app.debug) {\n            requestAnimationFrame(render);\n        }\n    });\n}\n\nrun();\n","//     Underscore.js 1.9.1\n//     http://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global ||\n            this ||\n            {};\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n  if (typeof exports != 'undefined' && !exports.nodeType) {\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.9.1';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      // The 2-argument case is omitted because we’re not using it.\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee;\n\n  // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  };\n\n  // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n  _.iteratee = builtinIteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n  var restArguments = function(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n      switch (startIndex) {\n        case 0: return func.call(this, rest);\n        case 1: return func.call(this, arguments[0], rest);\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\n      }\n      var args = Array(startIndex + 1);\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function(obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  }\n\n  var deepGet = function(obj, path) {\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n    return length ? obj : void 0;\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  var createReduce = function(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    };\n\n    return function(obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  };\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = restArguments(function(obj, path, args) {\n    var contextPath, func;\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n    return _.map(obj, function(context) {\n      var method = func;\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n        if (context == null) return void 0;\n        method = context[path];\n      }\n      return method == null ? method : method.apply(context, args);\n    });\n  });\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection.\n  _.shuffle = function(obj) {\n    return _.sample(obj, Infinity);\n  };\n\n  // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n    return sample.slice(0, n);\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior, partition) {\n    return function(obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = group(function(result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true);\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, Boolean);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0, len = value.length;\n          while (j < len) output[idx++] = value[j++];\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = restArguments(function(array, otherArrays) {\n    return _.difference(array, otherArrays);\n  });\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = restArguments(function(arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  });\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = restArguments(function(array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  });\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = restArguments(_.unzip);\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions.\n  var createPredicateIndexFinder = function(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  };\n\n  // Returns the first index on an array-like that passes a predicate test.\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions.\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n  _.chunk = function(array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0, length = array.length;\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n    return result;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = restArguments(function(func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function(callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  });\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n  _.partial = restArguments(function(func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  });\n\n  _.partial.placeholder = _;\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = restArguments(function(obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  });\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = restArguments(function(func, wait, args) {\n    return setTimeout(function() {\n      return func.apply(null, args);\n    }, wait);\n  });\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function() {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n\n    var later = function(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function(args) {\n      if (timeout) clearTimeout(timeout);\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function() {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  _.restArguments = restArguments;\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  };\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, defaults) {\n    return function(obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test.\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Internal pick helper function to determine if `obj` has key `key`.\n  var keyInObj = function(value, key, obj) {\n    return key in obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = restArguments(function(obj, keys) {\n    var result = {}, iteratee = keys[0];\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  });\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = restArguments(function(obj, keys) {\n    var iteratee = keys[0], context;\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  });\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq, deepEq;\n  eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  deepEq = function(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n  var nodelist = root.document && root.document.childNodes;\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`?\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n      obj = obj[key];\n    }\n    return !!length;\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n  _.property = function(path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n    return function(obj) {\n      return deepGet(obj, path);\n    };\n  };\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    if (obj == null) {\n      return function(){};\n    }\n    return function(path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n  // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped.\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n  _.result = function(obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n    return obj;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offset.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    var render;\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var chainResult = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n    return _;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return String(this._wrapped);\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define == 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}());\n","import {mat3, mat4, vec2, vec3, vec4} from 'gl-matrix';\n\nexport {Camera};\n\nclass Camera {\n    constructor(bounds) {\n        this._translation = vec2.create();\n        this._bounds = bounds;\n    }\n\n    centerAt(x, y) {\n        this._translation.set([\n            -(x - this._bounds.width / 2),\n            -(y - this._bounds.height / 2)\n        ]);\n\n        return this;\n    }\n\n    translate(x, y) {\n        vec2.sub(this._translation, this._translation, [x, y]);\n\n        return this;\n    }\n\n    get position() {\n        return vec2.clone(this._translation);\n    }\n\n    get translation() {\n        return this.position;\n    }\n\n    get matrix() {\n        return mat4.fromTranslation(mat4.create(), vec4.fromValues(...this._translation, 0, 1));\n    }\n}\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html {\\n    height: 100%;\\n    background-color: #555;\\n    color: #eee;\\n    font-family: monospace;\\n}\\n\\nbody {\\n    padding: 0;\\n    margin: 0;\\n    height: 100%;\\n}\\n\\n#content {\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    flex-direction: column;\\n}\\n\\ncanvas.game {\\n    width: 100vw;\\n    height: 100vh;\\n}\\n\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!./app.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./app.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./app.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \"#version 300 es\\n\\nprecision mediump float;\\n\\nout vec4 out_color;\\n\\nin vec2 v_tex_coord;\\n\\nuniform sampler2D texture;\\n\\nvoid main() {\\n    float line = v_tex_coord.y - floor(v_tex_coord.y);\\n\\n    vec4 texel = texelFetch(texture, ivec2(v_tex_coord), 0).xyzw;\\n    out_color = texel; //vec4(texel.xyz * (line >= 0.5 ? 1. : .25), texel.w);\\n}\\n\"","module.exports = \"#version 300 es\\n\\nlayout(location = 0) in vec2 vertex;\\nlayout(location = 1) in vec2 position;\\nlayout(location = 2) in vec2 size;\\nlayout(location = 3) in ivec2 texcoord;\\nlayout(location = 4) in vec2 offset;\\n\\nout vec2 v_tex_coord;\\n\\nuniform mat4 projection;\\n\\n/*\\n\\nConvert coordinates from world space to clip space\\n\\n 1. Scale [0, dim] -> [-1, 1] where dim is screen width or height\\n    dim pixels = 2 clip\\n    clip / pixels = 2 / dim\\n    x' = 2 * x / width - 1\\n    y' = 2 * y / height - 1\\n\\n    2/w  0   0   -1\\n     0  2/h  0   -1\\n     0   0   1    0\\n     0   0   0    1\\n*/\\n\\nvoid main() {\\n    vec4 transformed_position = projection * vec4(position + size * (vertex - offset), 0, 1);\\n    gl_Position = transformed_position;\\n    v_tex_coord = vec2(texcoord * ivec2(size));\\n}\\n\"","/*\n** Copyright (c) 2012 The Khronos Group Inc.\n**\n** Permission is hereby granted, free of charge, to any person obtaining a\n** copy of this software and/or associated documentation files (the\n** \"Materials\"), to deal in the Materials without restriction, including\n** without limitation the rights to use, copy, modify, merge, publish,\n** distribute, sublicense, and/or sell copies of the Materials, and to\n** permit persons to whom the Materials are furnished to do so, subject to\n** the following conditions:\n**\n** The above copyright notice and this permission notice shall be included\n** in all copies or substantial portions of the Materials.\n**\n** THE MATERIALS ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\n*/\n\n// Various functions for helping debug WebGL apps.\n\nWebGLDebugUtils = function() {\n\n/**\n * Wrapped logging function.\n * @param {string} msg Message to log.\n */\nvar log = function(msg) {\n  if (window.console && window.console.log) {\n    window.console.log(msg);\n  }\n};\n\n/**\n * Wrapped error logging function.\n * @param {string} msg Message to log.\n */\nvar error = function(msg) {\n  if (window.console && window.console.error) {\n    window.console.error(msg);\n  } else {\n    log(msg);\n  }\n};\n\n\n/**\n * Which arguments are enums based on the number of arguments to the function.\n * So\n *    'texImage2D': {\n *       9: { 0:true, 2:true, 6:true, 7:true },\n *       6: { 0:true, 2:true, 3:true, 4:true },\n *    },\n *\n * means if there are 9 arguments then 6 and 7 are enums, if there are 6\n * arguments 3 and 4 are enums\n *\n * @type {!Object.<number, !Object.<number, string>}\n */\nvar glValidEnumContexts = {\n  // Generic setters and getters\n\n  'enable': {1: { 0:true }},\n  'disable': {1: { 0:true }},\n  'getParameter': {1: { 0:true }},\n\n  // Rendering\n\n  'drawArrays': {3:{ 0:true }},\n  'drawElements': {4:{ 0:true, 2:true }},\n\n  // Shaders\n\n  'createShader': {1: { 0:true }},\n  'getShaderParameter': {2: { 1:true }},\n  'getProgramParameter': {2: { 1:true }},\n  'getShaderPrecisionFormat': {2: { 0: true, 1:true }},\n\n  // Vertex attributes\n\n  'getVertexAttrib': {2: { 1:true }},\n  'vertexAttribPointer': {6: { 2:true }},\n\n  // Textures\n\n  'bindTexture': {2: { 0:true }},\n  'activeTexture': {1: { 0:true }},\n  'getTexParameter': {2: { 0:true, 1:true }},\n  'texParameterf': {3: { 0:true, 1:true }},\n  'texParameteri': {3: { 0:true, 1:true, 2:true }},\n  // texImage2D and texSubImage2D are defined below with WebGL 2 entrypoints\n  'copyTexImage2D': {8: { 0:true, 2:true }},\n  'copyTexSubImage2D': {8: { 0:true }},\n  'generateMipmap': {1: { 0:true }},\n  // compressedTexImage2D and compressedTexSubImage2D are defined below with WebGL 2 entrypoints\n\n  // Buffer objects\n\n  'bindBuffer': {2: { 0:true }},\n  // bufferData and bufferSubData are defined below with WebGL 2 entrypoints\n  'getBufferParameter': {2: { 0:true, 1:true }},\n\n  // Renderbuffers and framebuffers\n\n  'pixelStorei': {2: { 0:true, 1:true }},\n  // readPixels is defined below with WebGL 2 entrypoints\n  'bindRenderbuffer': {2: { 0:true }},\n  'bindFramebuffer': {2: { 0:true }},\n  'checkFramebufferStatus': {1: { 0:true }},\n  'framebufferRenderbuffer': {4: { 0:true, 1:true, 2:true }},\n  'framebufferTexture2D': {5: { 0:true, 1:true, 2:true }},\n  'getFramebufferAttachmentParameter': {3: { 0:true, 1:true, 2:true }},\n  'getRenderbufferParameter': {2: { 0:true, 1:true }},\n  'renderbufferStorage': {4: { 0:true, 1:true }},\n\n  // Frame buffer operations (clear, blend, depth test, stencil)\n\n  'clear': {1: { 0: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }}},\n  'depthFunc': {1: { 0:true }},\n  'blendFunc': {2: { 0:true, 1:true }},\n  'blendFuncSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},\n  'blendEquation': {1: { 0:true }},\n  'blendEquationSeparate': {2: { 0:true, 1:true }},\n  'stencilFunc': {3: { 0:true }},\n  'stencilFuncSeparate': {4: { 0:true, 1:true }},\n  'stencilMaskSeparate': {2: { 0:true }},\n  'stencilOp': {3: { 0:true, 1:true, 2:true }},\n  'stencilOpSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},\n\n  // Culling\n\n  'cullFace': {1: { 0:true }},\n  'frontFace': {1: { 0:true }},\n\n  // ANGLE_instanced_arrays extension\n\n  'drawArraysInstancedANGLE': {4: { 0:true }},\n  'drawElementsInstancedANGLE': {5: { 0:true, 2:true }},\n\n  // EXT_blend_minmax extension\n\n  'blendEquationEXT': {1: { 0:true }},\n\n  // WebGL 2 Buffer objects\n\n  'bufferData': {\n    3: { 0:true, 2:true }, // WebGL 1\n    4: { 0:true, 2:true }, // WebGL 2\n    5: { 0:true, 2:true }  // WebGL 2\n  },\n  'bufferSubData': {\n    3: { 0:true }, // WebGL 1\n    4: { 0:true }, // WebGL 2\n    5: { 0:true }  // WebGL 2\n  },\n  'copyBufferSubData': {5: { 0:true, 1:true }},\n  'getBufferSubData': {3: { 0:true }, 4: { 0:true }, 5: { 0:true }},\n\n  // WebGL 2 Framebuffer objects\n\n  'blitFramebuffer': {10: { 8: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }, 9:true }},\n  'framebufferTextureLayer': {5: { 0:true, 1:true }},\n  'invalidateFramebuffer': {2: { 0:true }},\n  'invalidateSubFramebuffer': {6: { 0:true }},\n  'readBuffer': {1: { 0:true }},\n\n  // WebGL 2 Renderbuffer objects\n\n  'getInternalformatParameter': {3: { 0:true, 1:true, 2:true }},\n  'renderbufferStorageMultisample': {5: { 0:true, 2:true }},\n\n  // WebGL 2 Texture objects\n\n  'texStorage2D': {5: { 0:true, 2:true }},\n  'texStorage3D': {6: { 0:true, 2:true }},\n  'texImage2D': {\n    9: { 0:true, 2:true, 6:true, 7:true }, // WebGL 1 & 2\n    6: { 0:true, 2:true, 3:true, 4:true }, // WebGL 1\n    10: { 0:true, 2:true, 6:true, 7:true } // WebGL 2\n  },\n  'texImage3D': {\n    10: { 0:true, 2:true, 7:true, 8:true },\n    11: { 0:true, 2:true, 7:true, 8:true }\n  },\n  'texSubImage2D': {\n    9: { 0:true, 6:true, 7:true }, // WebGL 1 & 2\n    7: { 0:true, 4:true, 5:true }, // WebGL 1\n    10: { 0:true, 6:true, 7:true } // WebGL 2\n  },\n  'texSubImage3D': {\n    11: { 0:true, 8:true, 9:true },\n    12: { 0:true, 8:true, 9:true }\n  },\n  'copyTexSubImage3D': {9: { 0:true }},\n  'compressedTexImage2D': {\n    7: { 0: true, 2:true }, // WebGL 1 & 2\n    8: { 0: true, 2:true }, // WebGL 2\n    9: { 0: true, 2:true }  // WebGL 2\n  },\n  'compressedTexImage3D': {\n    8: { 0: true, 2:true },\n    9: { 0: true, 2:true },\n    10: { 0: true, 2:true }\n  },\n  'compressedTexSubImage2D': {\n    8: { 0: true, 6:true }, // WebGL 1 & 2\n    9: { 0: true, 6:true }, // WebGL 2\n    10: { 0: true, 6:true } // WebGL 2\n  },\n  'compressedTexSubImage3D': {\n    10: { 0: true, 8:true },\n    11: { 0: true, 8:true },\n    12: { 0: true, 8:true }\n  },\n\n  // WebGL 2 Vertex attribs\n\n  'vertexAttribIPointer': {5: { 2:true }},\n\n  // WebGL 2 Writing to the isDrawing buffer\n\n  'drawArraysInstanced': {4: { 0:true }},\n  'drawElementsInstanced': {5: { 0:true, 2:true }},\n  'drawRangeElements': {6: { 0:true, 4:true }},\n\n  // WebGL 2 Reading back pixels\n\n  'readPixels': {\n    7: { 4:true, 5:true }, // WebGL 1 & 2\n    8: { 4:true, 5:true }  // WebGL 2\n  },\n\n  // WebGL 2 Multiple Render Targets\n\n  'clearBufferfv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferiv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferuiv': {3: { 0:true }, 4: { 0:true }},\n  'clearBufferfi': {4: { 0:true }},\n\n  // WebGL 2 Query objects\n\n  'beginQuery': {2: { 0:true }},\n  'endQuery': {1: { 0:true }},\n  'getQuery': {2: { 0:true, 1:true }},\n  'getQueryParameter': {2: { 1:true }},\n\n  // WebGL 2 Sampler objects\n\n  'samplerParameteri': {3: { 1:true, 2:true }},\n  'samplerParameterf': {3: { 1:true }},\n  'getSamplerParameter': {2: { 1:true }},\n\n  // WebGL 2 Sync objects\n\n  'fenceSync': {2: { 0:true, 1: { 'enumBitwiseOr': [] } }},\n  'clientWaitSync': {3: { 1: { 'enumBitwiseOr': ['SYNC_FLUSH_COMMANDS_BIT'] } }},\n  'waitSync': {3: { 1: { 'enumBitwiseOr': [] } }},\n  'getSyncParameter': {2: { 1:true }},\n\n  // WebGL 2 Transform Feedback\n\n  'bindTransformFeedback': {2: { 0:true }},\n  'beginTransformFeedback': {1: { 0:true }},\n  'transformFeedbackVaryings': {3: { 2:true }},\n\n  // WebGL2 Uniform Buffer Objects and Transform Feedback Buffers\n\n  'bindBufferBase': {3: { 0:true }},\n  'bindBufferRange': {5: { 0:true }},\n  'getIndexedParameter': {2: { 0:true }},\n  'getActiveUniforms': {3: { 2:true }},\n  'getActiveUniformBlockParameter': {3: { 2:true }}\n};\n\n/**\n * Map of numbers to names.\n * @type {Object}\n */\nvar glEnums = null;\n\n/**\n * Map of names to numbers.\n * @type {Object}\n */\nvar enumStringToValue = null;\n\n/**\n * Initializes this module. Safe to call more than once.\n * @param {!WebGLRenderingContext} ctx A WebGL context. If\n *    you have more than one context it doesn't matter which one\n *    you pass in, it is only used to pull out constants.\n */\nfunction init(ctx) {\n  if (glEnums == null) {\n    glEnums = { };\n    enumStringToValue = { };\n    for (var propertyName in ctx) {\n      if (typeof ctx[propertyName] == 'number') {\n        glEnums[ctx[propertyName]] = propertyName;\n        enumStringToValue[propertyName] = ctx[propertyName];\n      }\n    }\n  }\n}\n\n/**\n * Checks the utils have been initialized.\n */\nfunction checkInit() {\n  if (glEnums == null) {\n    throw 'WebGLDebugUtils.init(ctx) not called';\n  }\n}\n\n/**\n * Returns true or false if value matches any WebGL enum\n * @param {*} value Value to check if it might be an enum.\n * @return {boolean} True if value matches one of the WebGL defined enums\n */\nfunction mightBeEnum(value) {\n  checkInit();\n  return (glEnums[value] !== undefined);\n}\n\n/**\n * Gets an string version of an WebGL enum.\n *\n * Example:\n *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\n *\n * @param {number} value Value to return an enum for\n * @return {string} The string version of the enum.\n */\nfunction glEnumToString(value) {\n  checkInit();\n  var name = glEnums[value];\n  return (name !== undefined) ? (\"gl.\" + name) :\n      (\"/*UNKNOWN WebGL ENUM*/ 0x\" + value.toString(16) + \"\");\n}\n\n/**\n * Returns the string version of a WebGL argument.\n * Attempts to convert enum arguments to strings.\n * @param {string} functionName the name of the WebGL function.\n * @param {number} numArgs the number of arguments passed to the function.\n * @param {number} argumentIndx the index of the argument.\n * @param {*} value The value of the argument.\n * @return {string} The value as a string.\n */\nfunction glFunctionArgToString(functionName, numArgs, argumentIndex, value) {\n  var funcInfo = glValidEnumContexts[functionName];\n  if (funcInfo !== undefined) {\n    var funcInfo = funcInfo[numArgs];\n    if (funcInfo !== undefined) {\n      if (funcInfo[argumentIndex]) {\n        if (typeof funcInfo[argumentIndex] === 'object' &&\n            funcInfo[argumentIndex]['enumBitwiseOr'] !== undefined) {\n          var enums = funcInfo[argumentIndex]['enumBitwiseOr'];\n          var orResult = 0;\n          var orEnums = [];\n          for (var i = 0; i < enums.length; ++i) {\n            var enumValue = enumStringToValue[enums[i]];\n            if ((value & enumValue) !== 0) {\n              orResult |= enumValue;\n              orEnums.push(glEnumToString(enumValue));\n            }\n          }\n          if (orResult === value) {\n            return orEnums.join(' | ');\n          } else {\n            return glEnumToString(value);\n          }\n        } else {\n          return glEnumToString(value);\n        }\n      }\n    }\n  }\n  if (value === null) {\n    return \"null\";\n  } else if (value === undefined) {\n    return \"undefined\";\n  } else {\n    return value.toString();\n  }\n}\n\n/**\n * Converts the arguments of a WebGL function to a string.\n * Attempts to convert enum arguments to strings.\n *\n * @param {string} functionName the name of the WebGL function.\n * @param {number} args The arguments.\n * @return {string} The arguments as a string.\n */\nfunction glFunctionArgsToString(functionName, args) {\n  // apparently we can't do args.join(\",\");\n  var argStr = \"\";\n  var numArgs = args.length;\n  for (var ii = 0; ii < numArgs; ++ii) {\n    argStr += ((ii == 0) ? '' : ', ') +\n        glFunctionArgToString(functionName, numArgs, ii, args[ii]);\n  }\n  return argStr;\n};\n\n\nfunction makePropertyWrapper(wrapper, original, propertyName) {\n  //log(\"wrap prop: \" + propertyName);\n  wrapper.__defineGetter__(propertyName, function() {\n    return original[propertyName];\n  });\n  // TODO(gmane): this needs to handle properties that take more than\n  // one value?\n  wrapper.__defineSetter__(propertyName, function(value) {\n    //log(\"set: \" + propertyName);\n    original[propertyName] = value;\n  });\n}\n\n// Makes a function that calls a function on another object.\nfunction makeFunctionWrapper(original, functionName) {\n  //log(\"wrap fn: \" + functionName);\n  var f = original[functionName];\n  return function() {\n    //log(\"call: \" + functionName);\n    var result = f.apply(original, arguments);\n    return result;\n  };\n}\n\n/**\n * Given a WebGL context returns a wrapped context that calls\n * gl.getError after every command and calls a function if the\n * result is not gl.NO_ERROR.\n *\n * @param {!WebGLRenderingContext} ctx The webgl context to\n *        wrap.\n * @param {!function(err, funcName, args): void} opt_onErrorFunc\n *        The function to call when gl.getError returns an\n *        error. If not specified the default function calls\n *        console.log with a message.\n * @param {!function(funcName, args): void} opt_onFunc The\n *        function to call when each webgl function is called.\n *        You can use this to log all calls for example.\n * @param {!WebGLRenderingContext} opt_err_ctx The webgl context\n *        to call getError on if different than ctx.\n */\nfunction makeDebugContext(ctx, opt_onErrorFunc, opt_onFunc, opt_err_ctx) {\n  opt_err_ctx = opt_err_ctx || ctx;\n  init(ctx);\n  opt_onErrorFunc = opt_onErrorFunc || function(err, functionName, args) {\n        // apparently we can't do args.join(\",\");\n        var argStr = \"\";\n        var numArgs = args.length;\n        for (var ii = 0; ii < numArgs; ++ii) {\n          argStr += ((ii == 0) ? '' : ', ') +\n              glFunctionArgToString(functionName, numArgs, ii, args[ii]);\n        }\n        error(\"WebGL error \"+ glEnumToString(err) + \" in \"+ functionName +\n              \"(\" + argStr + \")\");\n      };\n\n  // Holds booleans for each GL error so after we get the error ourselves\n  // we can still return it to the client app.\n  var glErrorShadow = { };\n\n  // Makes a function that calls a WebGL function and then calls getError.\n  function makeErrorWrapper(ctx, functionName) {\n    return function() {\n      if (opt_onFunc) {\n        opt_onFunc(functionName, arguments);\n      }\n      var result = ctx[functionName].apply(ctx, arguments);\n      var err = opt_err_ctx.getError();\n      if (err != 0) {\n        glErrorShadow[err] = true;\n        opt_onErrorFunc(err, functionName, arguments);\n      }\n      return result;\n    };\n  }\n\n  // Make a an object that has a copy of every property of the WebGL context\n  // but wraps all functions.\n  var wrapper = {};\n  for (var propertyName in ctx) {\n    if (typeof ctx[propertyName] == 'function') {\n      if (propertyName != 'getExtension') {\n        wrapper[propertyName] = makeErrorWrapper(ctx, propertyName);\n      } else {\n        var wrapped = makeErrorWrapper(ctx, propertyName);\n        wrapper[propertyName] = function () {\n          var result = wrapped.apply(ctx, arguments);\n          if (!result) {\n            return null;\n          }\n          return makeDebugContext(result, opt_onErrorFunc, opt_onFunc, opt_err_ctx);\n        };\n      }\n    } else {\n      makePropertyWrapper(wrapper, ctx, propertyName);\n    }\n  }\n\n  // Override the getError function with one that returns our saved results.\n  wrapper.getError = function() {\n    for (var err in glErrorShadow) {\n      if (glErrorShadow.hasOwnProperty(err)) {\n        if (glErrorShadow[err]) {\n          glErrorShadow[err] = false;\n          return err;\n        }\n      }\n    }\n    return ctx.NO_ERROR;\n  };\n\n  return wrapper;\n}\n\nfunction resetToInitialState(ctx) {\n  var isWebGL2RenderingContext = !!ctx.createTransformFeedback;\n\n  if (isWebGL2RenderingContext) {\n    ctx.bindVertexArray(null);\n  }\n\n  var numAttribs = ctx.getParameter(ctx.MAX_VERTEX_ATTRIBS);\n  var tmp = ctx.createBuffer();\n  ctx.bindBuffer(ctx.ARRAY_BUFFER, tmp);\n  for (var ii = 0; ii < numAttribs; ++ii) {\n    ctx.disableVertexAttribArray(ii);\n    ctx.vertexAttribPointer(ii, 4, ctx.FLOAT, false, 0, 0);\n    ctx.vertexAttrib1f(ii, 0);\n    if (isWebGL2RenderingContext) {\n      ctx.vertexAttribDivisor(ii, 0);\n    }\n  }\n  ctx.deleteBuffer(tmp);\n\n  var numTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);\n  for (var ii = 0; ii < numTextureUnits; ++ii) {\n    ctx.activeTexture(ctx.TEXTURE0 + ii);\n    ctx.bindTexture(ctx.TEXTURE_CUBE_MAP, null);\n    ctx.bindTexture(ctx.TEXTURE_2D, null);\n    if (isWebGL2RenderingContext) {\n      ctx.bindTexture(ctx.TEXTURE_2D_ARRAY, null);\n      ctx.bindTexture(ctx.TEXTURE_3D, null);\n      ctx.bindSampler(ii, null);\n    }\n  }\n\n  ctx.activeTexture(ctx.TEXTURE0);\n  ctx.useProgram(null);\n  ctx.bindBuffer(ctx.ARRAY_BUFFER, null);\n  ctx.bindBuffer(ctx.ELEMENT_ARRAY_BUFFER, null);\n  ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);\n  ctx.bindRenderbuffer(ctx.RENDERBUFFER, null);\n  ctx.disable(ctx.BLEND);\n  ctx.disable(ctx.CULL_FACE);\n  ctx.disable(ctx.DEPTH_TEST);\n  ctx.disable(ctx.DITHER);\n  ctx.disable(ctx.SCISSOR_TEST);\n  ctx.blendColor(0, 0, 0, 0);\n  ctx.blendEquation(ctx.FUNC_ADD);\n  ctx.blendFunc(ctx.ONE, ctx.ZERO);\n  ctx.clearColor(0, 0, 0, 0);\n  ctx.clearDepth(1);\n  ctx.clearStencil(-1);\n  ctx.colorMask(true, true, true, true);\n  ctx.cullFace(ctx.BACK);\n  ctx.depthFunc(ctx.LESS);\n  ctx.depthMask(true);\n  ctx.depthRange(0, 1);\n  ctx.frontFace(ctx.CCW);\n  ctx.hint(ctx.GENERATE_MIPMAP_HINT, ctx.DONT_CARE);\n  ctx.lineWidth(1);\n  ctx.pixelStorei(ctx.PACK_ALIGNMENT, 4);\n  ctx.pixelStorei(ctx.UNPACK_ALIGNMENT, 4);\n  ctx.pixelStorei(ctx.UNPACK_FLIP_Y_WEBGL, false);\n  ctx.pixelStorei(ctx.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n  // TODO: Delete this IF.\n  if (ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL) {\n    ctx.pixelStorei(ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL, ctx.BROWSER_DEFAULT_WEBGL);\n  }\n  ctx.polygonOffset(0, 0);\n  ctx.sampleCoverage(1, false);\n  ctx.scissor(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.stencilFunc(ctx.ALWAYS, 0, 0xFFFFFFFF);\n  ctx.stencilMask(0xFFFFFFFF);\n  ctx.stencilOp(ctx.KEEP, ctx.KEEP, ctx.KEEP);\n  ctx.viewport(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.clear(ctx.COLOR_BUFFER_BIT | ctx.DEPTH_BUFFER_BIT | ctx.STENCIL_BUFFER_BIT);\n\n  if (isWebGL2RenderingContext) {\n    ctx.drawBuffers([ctx.BACK]);\n    ctx.readBuffer(ctx.BACK);\n    ctx.bindBuffer(ctx.COPY_READ_BUFFER, null);\n    ctx.bindBuffer(ctx.COPY_WRITE_BUFFER, null);\n    ctx.bindBuffer(ctx.PIXEL_PACK_BUFFER, null);\n    ctx.bindBuffer(ctx.PIXEL_UNPACK_BUFFER, null);\n    var numTransformFeedbacks = ctx.getParameter(ctx.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS);\n    for (var ii = 0; ii < numTransformFeedbacks; ++ii) {\n      ctx.bindBufferBase(ctx.TRANSFORM_FEEDBACK_BUFFER, ii, null);\n    }\n    var numUBOs = ctx.getParameter(ctx.MAX_UNIFORM_BUFFER_BINDINGS);\n    for (var ii = 0; ii < numUBOs; ++ii) {\n      ctx.bindBufferBase(ctx.UNIFORM_BUFFER, ii, null);\n    }\n    ctx.disable(ctx.RASTERIZER_DISCARD);\n    ctx.pixelStorei(ctx.UNPACK_IMAGE_HEIGHT, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_IMAGES, 0);\n    ctx.pixelStorei(ctx.UNPACK_ROW_LENGTH, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_ROWS, 0);\n    ctx.pixelStorei(ctx.UNPACK_SKIP_PIXELS, 0);\n    ctx.pixelStorei(ctx.PACK_ROW_LENGTH, 0);\n    ctx.pixelStorei(ctx.PACK_SKIP_ROWS, 0);\n    ctx.pixelStorei(ctx.PACK_SKIP_PIXELS, 0);\n    ctx.hint(ctx.FRAGMENT_SHADER_DERIVATIVE_HINT, ctx.DONT_CARE);\n  }\n\n  // TODO: This should NOT be needed but Firefox fails with 'hint'\n  while(ctx.getError());\n}\n\nfunction makeLostContextSimulatingCanvas(canvas) {\n  var unwrappedContext_;\n  var wrappedContext_;\n  var onLost_ = [];\n  var onRestored_ = [];\n  var wrappedContext_ = {};\n  var contextId_ = 1;\n  var contextLost_ = false;\n  var resourceId_ = 0;\n  var resourceDb_ = [];\n  var numCallsToLoseContext_ = 0;\n  var numCalls_ = 0;\n  var canRestore_ = false;\n  var restoreTimeout_ = 0;\n  var isWebGL2RenderingContext;\n\n  // Holds booleans for each GL error so can simulate errors.\n  var glErrorShadow_ = { };\n\n  canvas.getContext = function(f) {\n    return function() {\n      var ctx = f.apply(canvas, arguments);\n      // Did we get a context and is it a WebGL context?\n      if ((ctx instanceof WebGLRenderingContext) || (window.WebGL2RenderingContext && (ctx instanceof WebGL2RenderingContext))) {\n        if (ctx != unwrappedContext_) {\n          if (unwrappedContext_) {\n            throw \"got different context\"\n          }\n          isWebGL2RenderingContext = window.WebGL2RenderingContext && (ctx instanceof WebGL2RenderingContext);\n          unwrappedContext_ = ctx;\n          wrappedContext_ = makeLostContextSimulatingContext(unwrappedContext_);\n        }\n        return wrappedContext_;\n      }\n      return ctx;\n    }\n  }(canvas.getContext);\n\n  function wrapEvent(listener) {\n    if (typeof(listener) == \"function\") {\n      return listener;\n    } else {\n      return function(info) {\n        listener.handleEvent(info);\n      }\n    }\n  }\n\n  var addOnContextLostListener = function(listener) {\n    onLost_.push(wrapEvent(listener));\n  };\n\n  var addOnContextRestoredListener = function(listener) {\n    onRestored_.push(wrapEvent(listener));\n  };\n\n\n  function wrapAddEventListener(canvas) {\n    var f = canvas.addEventListener;\n    canvas.addEventListener = function(type, listener, bubble) {\n      switch (type) {\n        case 'webglcontextlost':\n          addOnContextLostListener(listener);\n          break;\n        case 'webglcontextrestored':\n          addOnContextRestoredListener(listener);\n          break;\n        default:\n          f.apply(canvas, arguments);\n      }\n    };\n  }\n\n  wrapAddEventListener(canvas);\n\n  canvas.loseContext = function() {\n    if (!contextLost_) {\n      contextLost_ = true;\n      numCallsToLoseContext_ = 0;\n      ++contextId_;\n      while (unwrappedContext_.getError());\n      clearErrors();\n      glErrorShadow_[unwrappedContext_.CONTEXT_LOST_WEBGL] = true;\n      var event = makeWebGLContextEvent(\"context lost\");\n      var callbacks = onLost_.slice();\n      setTimeout(function() {\n          //log(\"numCallbacks:\" + callbacks.length);\n          for (var ii = 0; ii < callbacks.length; ++ii) {\n            //log(\"calling callback:\" + ii);\n            callbacks[ii](event);\n          }\n          if (restoreTimeout_ >= 0) {\n            setTimeout(function() {\n                canvas.restoreContext();\n              }, restoreTimeout_);\n          }\n        }, 0);\n    }\n  };\n\n  canvas.restoreContext = function() {\n    if (contextLost_) {\n      if (onRestored_.length) {\n        setTimeout(function() {\n            if (!canRestore_) {\n              throw \"can not restore. webglcontestlost listener did not call event.preventDefault\";\n            }\n            freeResources();\n            resetToInitialState(unwrappedContext_);\n            contextLost_ = false;\n            numCalls_ = 0;\n            canRestore_ = false;\n            var callbacks = onRestored_.slice();\n            var event = makeWebGLContextEvent(\"context restored\");\n            for (var ii = 0; ii < callbacks.length; ++ii) {\n              callbacks[ii](event);\n            }\n          }, 0);\n      }\n    }\n  };\n\n  canvas.loseContextInNCalls = function(numCalls) {\n    if (contextLost_) {\n      throw \"You can not ask a lost contet to be lost\";\n    }\n    numCallsToLoseContext_ = numCalls_ + numCalls;\n  };\n\n  canvas.getNumCalls = function() {\n    return numCalls_;\n  };\n\n  canvas.setRestoreTimeout = function(timeout) {\n    restoreTimeout_ = timeout;\n  };\n\n  function isWebGLObject(obj) {\n    //return false;\n    return (obj instanceof WebGLBuffer ||\n            obj instanceof WebGLFramebuffer ||\n            obj instanceof WebGLProgram ||\n            obj instanceof WebGLRenderbuffer ||\n            obj instanceof WebGLShader ||\n            obj instanceof WebGLTexture);\n  }\n\n  function checkResources(args) {\n    for (var ii = 0; ii < args.length; ++ii) {\n      var arg = args[ii];\n      if (isWebGLObject(arg)) {\n        return arg.__webglDebugContextLostId__ == contextId_;\n      }\n    }\n    return true;\n  }\n\n  function clearErrors() {\n    var k = Object.keys(glErrorShadow_);\n    for (var ii = 0; ii < k.length; ++ii) {\n      delete glErrorShadow_[k[ii]];\n    }\n  }\n\n  function loseContextIfTime() {\n    ++numCalls_;\n    if (!contextLost_) {\n      if (numCallsToLoseContext_ == numCalls_) {\n        canvas.loseContext();\n      }\n    }\n  }\n\n  // Makes a function that simulates WebGL when out of context.\n  function makeLostContextFunctionWrapper(ctx, functionName) {\n    var f = ctx[functionName];\n    return function() {\n      // log(\"calling:\" + functionName);\n      // Only call the functions if the context is not lost.\n      loseContextIfTime();\n      if (!contextLost_) {\n        //if (!checkResources(arguments)) {\n        //  glErrorShadow_[wrappedContext_.INVALID_OPERATION] = true;\n        //  return;\n        //}\n        var result = f.apply(ctx, arguments);\n        return result;\n      }\n    };\n  }\n\n  function freeResources() {\n    for (var ii = 0; ii < resourceDb_.length; ++ii) {\n      var resource = resourceDb_[ii];\n      if (resource instanceof WebGLBuffer) {\n        unwrappedContext_.deleteBuffer(resource);\n      } else if (resource instanceof WebGLFramebuffer) {\n        unwrappedContext_.deleteFramebuffer(resource);\n      } else if (resource instanceof WebGLProgram) {\n        unwrappedContext_.deleteProgram(resource);\n      } else if (resource instanceof WebGLRenderbuffer) {\n        unwrappedContext_.deleteRenderbuffer(resource);\n      } else if (resource instanceof WebGLShader) {\n        unwrappedContext_.deleteShader(resource);\n      } else if (resource instanceof WebGLTexture) {\n        unwrappedContext_.deleteTexture(resource);\n      }\n      else if (isWebGL2RenderingContext) {\n        if (resource instanceof WebGLQuery) {\n          unwrappedContext_.deleteQuery(resource);\n        } else if (resource instanceof WebGLSampler) {\n          unwrappedContext_.deleteSampler(resource);\n        } else if (resource instanceof WebGLSync) {\n          unwrappedContext_.deleteSync(resource);\n        } else if (resource instanceof WebGLTransformFeedback) {\n          unwrappedContext_.deleteTransformFeedback(resource);\n        } else if (resource instanceof WebGLVertexArrayObject) {\n          unwrappedContext_.deleteVertexArray(resource);\n        }\n      }\n    }\n  }\n\n  function makeWebGLContextEvent(statusMessage) {\n    return {\n      statusMessage: statusMessage,\n      preventDefault: function() {\n          canRestore_ = true;\n        }\n    };\n  }\n\n  return canvas;\n\n  function makeLostContextSimulatingContext(ctx) {\n    // copy all functions and properties to wrapper\n    for (var propertyName in ctx) {\n      if (typeof ctx[propertyName] == 'function') {\n         wrappedContext_[propertyName] = makeLostContextFunctionWrapper(\n             ctx, propertyName);\n       } else {\n         makePropertyWrapper(wrappedContext_, ctx, propertyName);\n       }\n    }\n\n    // Wrap a few functions specially.\n    wrappedContext_.getError = function() {\n      loseContextIfTime();\n      if (!contextLost_) {\n        var err;\n        while (err = unwrappedContext_.getError()) {\n          glErrorShadow_[err] = true;\n        }\n      }\n      for (var err in glErrorShadow_) {\n        if (glErrorShadow_[err]) {\n          delete glErrorShadow_[err];\n          return err;\n        }\n      }\n      return wrappedContext_.NO_ERROR;\n    };\n\n    var creationFunctions = [\n      \"createBuffer\",\n      \"createFramebuffer\",\n      \"createProgram\",\n      \"createRenderbuffer\",\n      \"createShader\",\n      \"createTexture\"\n    ];\n    if (isWebGL2RenderingContext) {\n      creationFunctions.push(\n        \"createQuery\",\n        \"createSampler\",\n        \"fenceSync\",\n        \"createTransformFeedback\",\n        \"createVertexArray\"\n      );\n    }\n    for (var ii = 0; ii < creationFunctions.length; ++ii) {\n      var functionName = creationFunctions[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return null;\n          }\n          var obj = f.apply(ctx, arguments);\n          obj.__webglDebugContextLostId__ = contextId_;\n          resourceDb_.push(obj);\n          return obj;\n        };\n      }(ctx[functionName]);\n    }\n\n    var functionsThatShouldReturnNull = [\n      \"getActiveAttrib\",\n      \"getActiveUniform\",\n      \"getBufferParameter\",\n      \"getContextAttributes\",\n      \"getAttachedShaders\",\n      \"getFramebufferAttachmentParameter\",\n      \"getParameter\",\n      \"getProgramParameter\",\n      \"getProgramInfoLog\",\n      \"getRenderbufferParameter\",\n      \"getShaderParameter\",\n      \"getShaderInfoLog\",\n      \"getShaderSource\",\n      \"getTexParameter\",\n      \"getUniform\",\n      \"getUniformLocation\",\n      \"getVertexAttrib\"\n    ];\n    if (isWebGL2RenderingContext) {\n      functionsThatShouldReturnNull.push(\n        \"getInternalformatParameter\",\n        \"getQuery\",\n        \"getQueryParameter\",\n        \"getSamplerParameter\",\n        \"getSyncParameter\",\n        \"getTransformFeedbackVarying\",\n        \"getIndexedParameter\",\n        \"getUniformIndices\",\n        \"getActiveUniforms\",\n        \"getActiveUniformBlockParameter\",\n        \"getActiveUniformBlockName\"\n      );\n    }\n    for (var ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {\n      var functionName = functionsThatShouldReturnNull[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return null;\n          }\n          return f.apply(ctx, arguments);\n        }\n      }(wrappedContext_[functionName]);\n    }\n\n    var isFunctions = [\n      \"isBuffer\",\n      \"isEnabled\",\n      \"isFramebuffer\",\n      \"isProgram\",\n      \"isRenderbuffer\",\n      \"isShader\",\n      \"isTexture\"\n    ];\n    if (isWebGL2RenderingContext) {\n      isFunctions.push(\n        \"isQuery\",\n        \"isSampler\",\n        \"isSync\",\n        \"isTransformFeedback\",\n        \"isVertexArray\"\n      );\n    }\n    for (var ii = 0; ii < isFunctions.length; ++ii) {\n      var functionName = isFunctions[ii];\n      wrappedContext_[functionName] = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return false;\n          }\n          return f.apply(ctx, arguments);\n        }\n      }(wrappedContext_[functionName]);\n    }\n\n    wrappedContext_.checkFramebufferStatus = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return wrappedContext_.FRAMEBUFFER_UNSUPPORTED;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.checkFramebufferStatus);\n\n    wrappedContext_.getAttribLocation = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return -1;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.getAttribLocation);\n\n    wrappedContext_.getVertexAttribOffset = function(f) {\n      return function() {\n        loseContextIfTime();\n        if (contextLost_) {\n          return 0;\n        }\n        return f.apply(ctx, arguments);\n      };\n    }(wrappedContext_.getVertexAttribOffset);\n\n    wrappedContext_.isContextLost = function() {\n      return contextLost_;\n    };\n\n    if (isWebGL2RenderingContext) {\n      wrappedContext_.getFragDataLocation = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return -1;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.getFragDataLocation);\n\n      wrappedContext_.clientWaitSync = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return wrappedContext_.WAIT_FAILED;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.clientWaitSync);\n\n      wrappedContext_.getUniformBlockIndex = function(f) {\n        return function() {\n          loseContextIfTime();\n          if (contextLost_) {\n            return wrappedContext_.INVALID_INDEX;\n          }\n          return f.apply(ctx, arguments);\n        };\n      }(wrappedContext_.getUniformBlockIndex);\n    }\n\n    return wrappedContext_;\n  }\n}\n\nreturn {\n  /**\n   * Initializes this module. Safe to call more than once.\n   * @param {!WebGLRenderingContext} ctx A WebGL context. If\n   *    you have more than one context it doesn't matter which one\n   *    you pass in, it is only used to pull out constants.\n   */\n  'init': init,\n\n  /**\n   * Returns true or false if value matches any WebGL enum\n   * @param {*} value Value to check if it might be an enum.\n   * @return {boolean} True if value matches one of the WebGL defined enums\n   */\n  'mightBeEnum': mightBeEnum,\n\n  /**\n   * Gets an string version of an WebGL enum.\n   *\n   * Example:\n   *   WebGLDebugUtil.init(ctx);\n   *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\n   *\n   * @param {number} value Value to return an enum for\n   * @return {string} The string version of the enum.\n   */\n  'glEnumToString': glEnumToString,\n\n  /**\n   * Converts the argument of a WebGL function to a string.\n   * Attempts to convert enum arguments to strings.\n   *\n   * Example:\n   *   WebGLDebugUtil.init(ctx);\n   *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 2, 0, gl.TEXTURE_2D);\n   *\n   * would return 'TEXTURE_2D'\n   *\n   * @param {string} functionName the name of the WebGL function.\n   * @param {number} numArgs The number of arguments\n   * @param {number} argumentIndx the index of the argument.\n   * @param {*} value The value of the argument.\n   * @return {string} The value as a string.\n   */\n  'glFunctionArgToString': glFunctionArgToString,\n\n  /**\n   * Converts the arguments of a WebGL function to a string.\n   * Attempts to convert enum arguments to strings.\n   *\n   * @param {string} functionName the name of the WebGL function.\n   * @param {number} args The arguments.\n   * @return {string} The arguments as a string.\n   */\n  'glFunctionArgsToString': glFunctionArgsToString,\n\n  /**\n   * Given a WebGL context returns a wrapped context that calls\n   * gl.getError after every command and calls a function if the\n   * result is not NO_ERROR.\n   *\n   * You can supply your own function if you want. For example, if you'd like\n   * an exception thrown on any GL error you could do this\n   *\n   *    function throwOnGLError(err, funcName, args) {\n   *      throw WebGLDebugUtils.glEnumToString(err) +\n   *            \" was caused by call to \" + funcName;\n   *    };\n   *\n   *    ctx = WebGLDebugUtils.makeDebugContext(\n   *        canvas.getContext(\"webgl\"), throwOnGLError);\n   *\n   * @param {!WebGLRenderingContext} ctx The webgl context to wrap.\n   * @param {!function(err, funcName, args): void} opt_onErrorFunc The function\n   *     to call when gl.getError returns an error. If not specified the default\n   *     function calls console.log with a message.\n   * @param {!function(funcName, args): void} opt_onFunc The\n   *     function to call when each webgl function is called. You\n   *     can use this to log all calls for example.\n   */\n  'makeDebugContext': makeDebugContext,\n\n  /**\n   * Given a canvas element returns a wrapped canvas element that will\n   * simulate lost context. The canvas returned adds the following functions.\n   *\n   * loseContext:\n   *   simulates a lost context event.\n   *\n   * restoreContext:\n   *   simulates the context being restored.\n   *\n   * lostContextInNCalls:\n   *   loses the context after N gl calls.\n   *\n   * getNumCalls:\n   *   tells you how many gl calls there have been so far.\n   *\n   * setRestoreTimeout:\n   *   sets the number of milliseconds until the context is restored\n   *   after it has been lost. Defaults to 0. Pass -1 to prevent\n   *   automatic restoring.\n   *\n   * @param {!Canvas} canvas The canvas element to wrap.\n   */\n  'makeLostContextSimulatingCanvas': makeLostContextSimulatingCanvas,\n\n  /**\n   * Resets a context to the initial state.\n   * @param {!WebGLRenderingContext} ctx The webgl context to\n   *     reset.\n   */\n  'resetToInitialState': resetToInitialState\n};\n\n}();\n","/*!\n * @license twgl.js 4.4.0 Copyright (c) 2015, Gregg Tavares All Rights Reserved.\n * Available via the MIT license.\n * see: http://github.com/greggman/twgl.js for details\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"twgl\"] = factory();\n\telse\n\t\troot[\"twgl\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 9);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.copyExistingProperties = copyExistingProperties;\nexports.copyNamedProperties = copyNamedProperties;\nexports.isBuffer = isBuffer;\nexports.isRenderbuffer = isRenderbuffer;\nexports.isShader = isShader;\nexports.isTexture = isTexture;\nexports.isSampler = isSampler;\nexports.warn = exports.error = void 0;\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Copy named properties\n *\n * @param {string[]} names names of properties to copy\n * @param {object} src object to copy properties from\n * @param {object} dst object to copy properties to\n */\nfunction copyNamedProperties(names, src, dst) {\n  names.forEach(function (name) {\n    var value = src[name];\n\n    if (value !== undefined) {\n      dst[name] = value;\n    }\n  });\n}\n/**\n * Copies properties from source to dest only if a matching key is in dest\n *\n * @param {Object.<string, ?>} src the source\n * @param {Object.<string, ?>} dst the dest\n */\n\n\nfunction copyExistingProperties(src, dst) {\n  Object.keys(dst).forEach(function (key) {\n    if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {\n      dst[key] = src[key];\n    }\n  });\n}\n\nvar error = _globalObject.default.console && _globalObject.default.console.error && typeof _globalObject.default.console.error === \"function\" ? _globalObject.default.console.error.bind(_globalObject.default.console) : function () {};\nexports.error = error;\nvar warn = _globalObject.default.console && _globalObject.default.console.warn && typeof _globalObject.default.console.warn === \"function\" ? _globalObject.default.console.warn.bind(_globalObject.default.console) : function () {};\nexports.warn = warn;\nvar repBuffer;\n\nfunction isBuffer(gl, t) {\n  if (!repBuffer) {\n    repBuffer = gl.createBuffer();\n  }\n\n  return t instanceof repBuffer.constructor;\n}\n\nvar repRenderbuffer;\n\nfunction isRenderbuffer(gl, t) {\n  if (!repRenderbuffer) {\n    repRenderbuffer = gl.createRenderbuffer();\n  }\n\n  return t instanceof repRenderbuffer.constructor;\n}\n\nvar repShader;\n\nfunction isShader(gl, t) {\n  if (!repShader) {\n    repShader = gl.createShader(gl.VERTEX_SHADER);\n  }\n\n  return t instanceof repShader.constructor;\n}\n\nvar repTexture;\n\nfunction isTexture(gl, t) {\n  if (!repTexture) {\n    repTexture = gl.createTexture();\n  }\n\n  return t instanceof repTexture.constructor;\n}\n\nvar repSampler;\n\nfunction isSampler(gl, t) {\n  if (!repSampler) {\n    if (gl.createSampler) {\n      repSampler = gl.createSampler();\n    } else {\n      return false; // it can't be a sampler if this is not WebGL2\n    }\n  }\n\n  return t instanceof repSampler.constructor;\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.getGLTypeForTypedArray = getGLTypeForTypedArray;\nexports.getGLTypeForTypedArrayType = getGLTypeForTypedArrayType;\nexports.getTypedArrayTypeForGLType = getTypedArrayTypeForGLType;\nexports.isArrayBuffer = void 0;\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level shader typed array related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.typedArray` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/typedArray\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar glTypeToTypedArray = {};\n{\n  var tt = glTypeToTypedArray;\n  tt[BYTE] = Int8Array;\n  tt[UNSIGNED_BYTE] = Uint8Array;\n  tt[SHORT] = Int16Array;\n  tt[UNSIGNED_SHORT] = Uint16Array;\n  tt[INT] = Int32Array;\n  tt[UNSIGNED_INT] = Uint32Array;\n  tt[FLOAT] = Float32Array;\n  tt[UNSIGNED_SHORT_4_4_4_4] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_5_5_1] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_6_5] = Uint16Array;\n  tt[HALF_FLOAT] = Uint16Array;\n  tt[UNSIGNED_INT_2_10_10_10_REV] = Uint32Array;\n  tt[UNSIGNED_INT_10F_11F_11F_REV] = Uint32Array;\n  tt[UNSIGNED_INT_5_9_9_9_REV] = Uint32Array;\n  tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\n  tt[UNSIGNED_INT_24_8] = Uint32Array;\n}\n/**\n * Get the GL type for a typedArray\n * @param {ArrayBuffer|ArrayBufferView} typedArray a typedArray\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\nfunction getGLTypeForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw \"unsupported typed array type\";\n}\n/**\n * Get the GL type for a typedArray type\n * @param {ArrayBufferViewType} typedArrayType a typedArray constructor\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getGLTypeForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw \"unsupported typed array type\";\n}\n/**\n * Get the typed array constructor for a given GL type\n * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\n * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getTypedArrayTypeForGLType(type) {\n  var CTOR = glTypeToTypedArray[type];\n\n  if (!CTOR) {\n    throw \"unknown gl type\";\n  }\n\n  return CTOR;\n}\n\nvar isArrayBuffer = _globalObject.default.SharedArrayBuffer ? function isArrayBufferOrSharedArrayBuffer(a) {\n  return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof _globalObject.default.SharedArrayBuffer);\n} : function isArrayBuffer(a) {\n  return a && a.buffer && a.buffer instanceof ArrayBuffer;\n};\nexports.isArrayBuffer = isArrayBuffer;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.default = void 0;\nvar global = typeof global !== 'undefined' // eslint-disable-line\n? global // eslint-disable-line\n: typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {};\nexports.default = global;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.add = add;\nexports.copy = copy;\nexports.create = create;\nexports.cross = cross;\nexports.distance = distance;\nexports.distanceSq = distanceSq;\nexports.divide = divide;\nexports.divScalar = divScalar;\nexports.dot = dot;\nexports.lerp = lerp;\nexports.length = length;\nexports.lengthSq = lengthSq;\nexports.mulScalar = mulScalar;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.normalize = normalize;\nexports.setDefaultType = setDefaultType;\nexports.subtract = subtract;\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n *\n * Vec3 math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec3. In other words you can do this\n *\n *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     var v3 = v3.create();\n *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any vector as the destination. So for example\n *\n *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n * @module twgl/v3\n */\nvar VecType = Float32Array;\n/**\n * A JavaScript array with 3 values or a Float32Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/v3.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Vec3\n * @memberOf module:twgl/v3\n */\n\n/**\n * Sets the type this library creates for a Vec3\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Vec3\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @return {Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction create(x, y, z) {\n  var dst = new VecType(3);\n\n  if (x) {\n    dst[0] = x;\n  }\n\n  if (y) {\n    dst[1] = y;\n  }\n\n  if (z) {\n    dst[2] = z;\n  }\n\n  return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction add(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n  return dst;\n}\n/**\n * Subtracts two vectors.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction subtract(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n  return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * (1 - t) * a + t * b.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {number} t Interpolation coefficient.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction lerp(a, b, t, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = (1 - t) * a[0] + t * b[0];\n  dst[1] = (1 - t) * a[1] + t * b[1];\n  dst[2] = (1 - t) * a[2] + t * b[2];\n  return dst;\n}\n/**\n * Mutiplies a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction mulScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n  return dst;\n}\n/**\n * Divides a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n  return dst;\n}\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector a cross b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction cross(a, b, dst) {\n  dst = dst || new VecType(3);\n  var t1 = a[2] * b[0] - a[0] * b[2];\n  var t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n  return dst;\n}\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @return {number} dot product\n * @memberOf module:twgl/v3\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction length(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n/**\n * Computes the square of the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} square of the length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction lengthSq(v) {\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\n/**\n * Computes the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distance(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n/**\n * Computes the square of the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} square of the distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distanceSq(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param {module:twgl/v3.Vec3} a The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The normalized vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction normalize(a, dst) {\n  dst = dst || new VecType(3);\n  var lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n  var len = Math.sqrt(lenSq);\n\n  if (len > 0.00001) {\n    dst[0] = a[0] / len;\n    dst[1] = a[1] / len;\n    dst[2] = a[2] / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return dst;\n}\n/**\n * Negates a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} -v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction negate(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n  return dst;\n}\n/**\n * Copies a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} A copy of v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction copy(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n  return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n  return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divide(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n  return dst;\n}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.isWebGL1 = isWebGL1;\nexports.isWebGL2 = isWebGL2;\nexports.glEnumToString = void 0;\n\n/*\n * Copyright 2017, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Gets the gl version as a number\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {number} version of gl\n */\n//function getVersionAsNumber(gl) {\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\n//}\n\n/**\n * Check if context is WebGL 2.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 2.0\n * @memberOf module:twgl\n */\nfunction isWebGL2(gl) {\n  // This is the correct check but it's slow\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGL2RenderingContext;\n  return !!gl.texStorage2D;\n}\n/**\n * Check if context is WebGL 1.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 1.0\n * @memberOf module:twgl\n */\n\n\nfunction isWebGL1(gl) {\n  // This is the correct check but it's slow\n  // const version = getVersionAsNumber(gl);\n  // return version <= 1.0 && version > 0.0;  // because as of 2016/5 Edge returns 0.96\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGLRenderingContext;\n  return !gl.texStorage2D;\n}\n/**\n * Gets a string for WebGL enum\n *\n * Note: Several enums are the same. Without more\n * context (which function) it's impossible to always\n * give the correct enum. As it is, for matching values\n * it gives all enums. Checking the WebGL2RenderingContext\n * that means\n *\n *      0     = ZERO | POINT | NONE | NO_ERROR\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\n *\n * It's also not useful for bits really unless you pass in individual bits.\n * In other words\n *\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\n *     twgl.glEnumToString(gl, bits);  // not going to work\n *\n * Note that some enums only exist on extensions. If you\n * want them to show up you need to pass the extension at least\n * once. For example\n *\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc`);\n *     if (ext) {\n *        twgl.glEnumToString(ext, 0);  // just prime the function\n *\n *        ..later..\n *\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n *        console.log(twgl.glEnumToString(gl, internalFormat));\n *\n * Notice I didn't have to pass the extension the second time. This means\n * you can have place that generically gets an enum for texture formats for example.\n * and as long as you primed the function with the extensions\n *\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\n * then twgl will automatically get the extension's enums.\n *\n * @param {WebGLRenderingContext|Extension} gl A WebGLRenderingContext or any extension object\n * @param {number} value the value of the enum you want to look up.\n * @memberOf module:twgl\n */\n\n\nvar glEnumToString = function () {\n  var haveEnumsForType = {};\n  var enums = {};\n\n  function addEnums(gl) {\n    var type = gl.constructor.name;\n\n    if (!haveEnumsForType[type]) {\n      for (var key in gl) {\n        if (typeof gl[key] === 'number') {\n          var existing = enums[gl[key]];\n          enums[gl[key]] = existing ? \"\".concat(existing, \" | \").concat(key) : key;\n        }\n      }\n\n      haveEnumsForType[type] = true;\n    }\n  }\n\n  return function glEnumToString(gl, value) {\n    addEnums(gl);\n    return enums[value] || \"0x\" + value.toString(16);\n  };\n}();\n\nexports.glEnumToString = glEnumToString;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttributeSetters = createAttributeSetters;\nexports.createProgram = createProgram;\nexports.createProgramFromScripts = createProgramFromScripts;\nexports.createProgramFromSources = createProgramFromSources;\nexports.createProgramInfo = createProgramInfo;\nexports.createProgramInfoFromProgram = createProgramInfoFromProgram;\nexports.createUniformSetters = createUniformSetters;\nexports.createUniformBlockSpecFromProgram = createUniformBlockSpecFromProgram;\nexports.createUniformBlockInfoFromProgram = createUniformBlockInfoFromProgram;\nexports.createUniformBlockInfo = createUniformBlockInfo;\nexports.createTransformFeedback = createTransformFeedback;\nexports.createTransformFeedbackInfo = createTransformFeedbackInfo;\nexports.bindTransformFeedbackInfo = bindTransformFeedbackInfo;\nexports.setAttributes = setAttributes;\nexports.setBuffersAndAttributes = setBuffersAndAttributes;\nexports.setUniforms = setUniforms;\nexports.setUniformBlock = setUniformBlock;\nexports.setBlockUniforms = setBlockUniforms;\nexports.bindUniformBlock = bindUniformBlock;\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level shader program related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.programs` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/programs\n */\nvar error = helper.error;\nvar warn = helper.warn;\nvar getElementById = _globalObject.default && _globalObject.default.document && _globalObject.default.document.getElementById ? _globalObject.default.document.getElementById.bind(_globalObject.default.document) : function () {\n  return null;\n};\nvar FLOAT = 0x1406;\nvar FLOAT_VEC2 = 0x8B50;\nvar FLOAT_VEC3 = 0x8B51;\nvar FLOAT_VEC4 = 0x8B52;\nvar INT = 0x1404;\nvar INT_VEC2 = 0x8B53;\nvar INT_VEC3 = 0x8B54;\nvar INT_VEC4 = 0x8B55;\nvar BOOL = 0x8B56;\nvar BOOL_VEC2 = 0x8B57;\nvar BOOL_VEC3 = 0x8B58;\nvar BOOL_VEC4 = 0x8B59;\nvar FLOAT_MAT2 = 0x8B5A;\nvar FLOAT_MAT3 = 0x8B5B;\nvar FLOAT_MAT4 = 0x8B5C;\nvar SAMPLER_2D = 0x8B5E;\nvar SAMPLER_CUBE = 0x8B60;\nvar SAMPLER_3D = 0x8B5F;\nvar SAMPLER_2D_SHADOW = 0x8B62;\nvar FLOAT_MAT2x3 = 0x8B65;\nvar FLOAT_MAT2x4 = 0x8B66;\nvar FLOAT_MAT3x2 = 0x8B67;\nvar FLOAT_MAT3x4 = 0x8B68;\nvar FLOAT_MAT4x2 = 0x8B69;\nvar FLOAT_MAT4x3 = 0x8B6A;\nvar SAMPLER_2D_ARRAY = 0x8DC1;\nvar SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;\nvar SAMPLER_CUBE_SHADOW = 0x8DC5;\nvar UNSIGNED_INT = 0x1405;\nvar UNSIGNED_INT_VEC2 = 0x8DC6;\nvar UNSIGNED_INT_VEC3 = 0x8DC7;\nvar UNSIGNED_INT_VEC4 = 0x8DC8;\nvar INT_SAMPLER_2D = 0x8DCA;\nvar INT_SAMPLER_3D = 0x8DCB;\nvar INT_SAMPLER_CUBE = 0x8DCC;\nvar INT_SAMPLER_2D_ARRAY = 0x8DCF;\nvar UNSIGNED_INT_SAMPLER_2D = 0x8DD2;\nvar UNSIGNED_INT_SAMPLER_3D = 0x8DD3;\nvar UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;\nvar UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\nvar TEXTURE_2D = 0x0DE1;\nvar TEXTURE_CUBE_MAP = 0x8513;\nvar TEXTURE_3D = 0x806F;\nvar TEXTURE_2D_ARRAY = 0x8C1A;\nvar typeMap = {};\n/**\n * Returns the corresponding bind point for a given sampler type\n */\n\nfunction getBindPointForSamplerType(gl, type) {\n  return typeMap[type].bindPoint;\n} // This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n// this code could be a lot smaller but that is sadly really slow (T_T)\n\n\nfunction floatSetter(gl, location) {\n  return function (v) {\n    gl.uniform1f(location, v);\n  };\n}\n\nfunction floatArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1fv(location, v);\n  };\n}\n\nfunction floatVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2fv(location, v);\n  };\n}\n\nfunction floatVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3fv(location, v);\n  };\n}\n\nfunction floatVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4fv(location, v);\n  };\n}\n\nfunction intSetter(gl, location) {\n  return function (v) {\n    gl.uniform1i(location, v);\n  };\n}\n\nfunction intArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1iv(location, v);\n  };\n}\n\nfunction intVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2iv(location, v);\n  };\n}\n\nfunction intVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3iv(location, v);\n  };\n}\n\nfunction intVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4iv(location, v);\n  };\n}\n\nfunction uintSetter(gl, location) {\n  return function (v) {\n    gl.uniform1ui(location, v);\n  };\n}\n\nfunction uintArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1uiv(location, v);\n  };\n}\n\nfunction uintVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2uiv(location, v);\n  };\n}\n\nfunction uintVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3uiv(location, v);\n  };\n}\n\nfunction uintVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4uiv(location, v);\n  };\n}\n\nfunction floatMat2Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2fv(location, false, v);\n  };\n}\n\nfunction floatMat3Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3fv(location, false, v);\n  };\n}\n\nfunction floatMat4Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4fv(location, false, v);\n  };\n}\n\nfunction floatMat23Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x3fv(location, false, v);\n  };\n}\n\nfunction floatMat32Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x2fv(location, false, v);\n  };\n}\n\nfunction floatMat24Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x4fv(location, false, v);\n  };\n}\n\nfunction floatMat42Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x2fv(location, false, v);\n  };\n}\n\nfunction floatMat34Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x4fv(location, false, v);\n  };\n}\n\nfunction floatMat43Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x3fv(location, false, v);\n  };\n}\n\nfunction samplerSetter(gl, type, unit, location) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  return utils.isWebGL2(gl) ? function (textureOrPair) {\n    var texture;\n    var sampler;\n\n    if (helper.isTexture(gl, textureOrPair)) {\n      texture = textureOrPair;\n      sampler = null;\n    } else {\n      texture = textureOrPair.texture;\n      sampler = textureOrPair.sampler;\n    }\n\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n    gl.bindSampler(unit, sampler);\n  } : function (texture) {\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n  };\n}\n\nfunction samplerArraySetter(gl, type, unit, location, size) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  var units = new Int32Array(size);\n\n  for (var ii = 0; ii < size; ++ii) {\n    units[ii] = unit + ii;\n  }\n\n  return utils.isWebGL2(gl) ? function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (textureOrPair, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      var texture;\n      var sampler;\n\n      if (helper.isTexture(gl, textureOrPair)) {\n        texture = textureOrPair;\n        sampler = null;\n      } else {\n        texture = textureOrPair.texture;\n        sampler = textureOrPair.sampler;\n      }\n\n      gl.bindSampler(unit, sampler);\n      gl.bindTexture(bindPoint, texture);\n    });\n  } : function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (texture, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      gl.bindTexture(bindPoint, texture);\n    });\n  };\n}\n\ntypeMap[FLOAT] = {\n  Type: Float32Array,\n  size: 4,\n  setter: floatSetter,\n  arraySetter: floatArraySetter\n};\ntypeMap[FLOAT_VEC2] = {\n  Type: Float32Array,\n  size: 8,\n  setter: floatVec2Setter\n};\ntypeMap[FLOAT_VEC3] = {\n  Type: Float32Array,\n  size: 12,\n  setter: floatVec3Setter\n};\ntypeMap[FLOAT_VEC4] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatVec4Setter\n};\ntypeMap[INT] = {\n  Type: Int32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[INT_VEC2] = {\n  Type: Int32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[INT_VEC3] = {\n  Type: Int32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[INT_VEC4] = {\n  Type: Int32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[UNSIGNED_INT] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: uintSetter,\n  arraySetter: uintArraySetter\n};\ntypeMap[UNSIGNED_INT_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: uintVec2Setter\n};\ntypeMap[UNSIGNED_INT_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: uintVec3Setter\n};\ntypeMap[UNSIGNED_INT_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: uintVec4Setter\n};\ntypeMap[BOOL] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[BOOL_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[BOOL_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[BOOL_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[FLOAT_MAT2] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatMat2Setter\n};\ntypeMap[FLOAT_MAT3] = {\n  Type: Float32Array,\n  size: 36,\n  setter: floatMat3Setter\n};\ntypeMap[FLOAT_MAT4] = {\n  Type: Float32Array,\n  size: 64,\n  setter: floatMat4Setter\n};\ntypeMap[FLOAT_MAT2x3] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat23Setter\n};\ntypeMap[FLOAT_MAT2x4] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat24Setter\n};\ntypeMap[FLOAT_MAT3x2] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat32Setter\n};\ntypeMap[FLOAT_MAT3x4] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat34Setter\n};\ntypeMap[FLOAT_MAT4x2] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat42Setter\n};\ntypeMap[FLOAT_MAT4x3] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat43Setter\n};\ntypeMap[SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[SAMPLER_2D_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_2D_ARRAY_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_CUBE_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\n\nfunction floatAttribSetter(gl, index) {\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    gl.enableVertexAttribArray(index);\n    gl.vertexAttribPointer(index, b.numComponents || b.size, b.type || gl.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n\n    if (b.divisor !== undefined) {\n      gl.vertexAttribDivisor(index, b.divisor);\n    }\n  };\n}\n\nfunction intAttribSetter(gl, index) {\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    gl.enableVertexAttribArray(index);\n    gl.vertexAttribIPointer(index, b.numComponents || b.size, b.type || gl.INT, b.stride || 0, b.offset || 0);\n\n    if (b.divisor !== undefined) {\n      gl.vertexAttribDivisor(index, b.divisor);\n    }\n  };\n}\n\nfunction matAttribSetter(gl, index, typeInfo) {\n  var defaultSize = typeInfo.size;\n  var count = typeInfo.count;\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    var numComponents = b.size || b.numComponents || defaultSize;\n    var size = numComponents / count;\n    var type = b.type || gl.FLOAT;\n    var typeInfo = typeMap[type];\n    var stride = typeInfo.size * numComponents;\n    var normalize = b.normalize || false;\n    var offset = b.offset || 0;\n    var rowOffset = stride / count;\n\n    for (var i = 0; i < count; ++i) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(index + i, size, type, normalize, stride, offset + rowOffset * i);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index + i, b.divisor);\n      }\n    }\n  };\n}\n\nvar attrTypeMap = {};\nattrTypeMap[FLOAT] = {\n  size: 4,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC2] = {\n  size: 8,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC3] = {\n  size: 12,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC4] = {\n  size: 16,\n  setter: floatAttribSetter\n};\nattrTypeMap[INT] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[FLOAT_MAT2] = {\n  size: 4,\n  setter: matAttribSetter,\n  count: 2\n};\nattrTypeMap[FLOAT_MAT3] = {\n  size: 9,\n  setter: matAttribSetter,\n  count: 3\n};\nattrTypeMap[FLOAT_MAT4] = {\n  size: 16,\n  setter: matAttribSetter,\n  count: 4\n}; // make sure we don't see a global gl\n\nvar gl = undefined; // eslint-disable-line\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @param {number} [lineOffset] amount to add to line number\n * @memberOf module:twgl\n */\n\nfunction addLineNumbers(src, lineOffset) {\n  lineOffset = lineOffset || 0;\n  ++lineOffset;\n  return src.split(\"\\n\").map(function (line, ndx) {\n    return ndx + lineOffset + \": \" + line;\n  }).join(\"\\n\");\n}\n\nvar spaceRE = /^[ \\t]*\\n/;\n/**\n * Loads a shader.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} shaderSource The shader source.\n * @param {number} shaderType The type of shader.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors.\n * @return {WebGLShader} The created shader.\n */\n\nfunction loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\n  var errFn = opt_errorCallback || error; // Create the shader object\n\n  var shader = gl.createShader(shaderType); // Remove the first end of line because WebGL 2.0 requires\n  // #version 300 es\n  // as the first line. No whitespace allowed before that line\n  // so\n  //\n  // <script>\n  // #version 300 es\n  // </script>\n  //\n  // Has one line before it which is invalid according to GLSL ES 3.00\n  //\n\n  var lineOffset = 0;\n\n  if (spaceRE.test(shaderSource)) {\n    lineOffset = 1;\n    shaderSource = shaderSource.replace(spaceRE, '');\n  } // Load the shader source\n\n\n  gl.shaderSource(shader, shaderSource); // Compile the shader\n\n  gl.compileShader(shader); // Check the compile status\n\n  var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    var lastError = gl.getShaderInfoLog(shader);\n    errFn(addLineNumbers(shaderSource, lineOffset) + \"\\n*** Error compiling shader: \" + lastError);\n    gl.deleteShader(shader);\n    return null;\n  }\n\n  return shader;\n}\n/**\n * @typedef {Object} ProgramOptions\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>} [attribLocations] a attribute name to location map\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @memberOf module:twgl\n */\n\n/**\n * Gets the program options based on all these optional arguments\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments pased on\n */\n\n\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\n  var transformFeedbackVaryings;\n\n  if (typeof opt_locations === 'function') {\n    opt_errorCallback = opt_locations;\n    opt_locations = undefined;\n  }\n\n  if (typeof opt_attribs === 'function') {\n    opt_errorCallback = opt_attribs;\n    opt_attribs = undefined;\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\n    // If we have an errorCallback we can just return this object\n    // Otherwise we need to construct one with default errorCallback\n    if (opt_attribs.errorCallback) {\n      return opt_attribs;\n    }\n\n    var opt = opt_attribs;\n    opt_errorCallback = opt.errorCallback;\n    opt_attribs = opt.attribLocations;\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\n  }\n\n  var options = {\n    errorCallback: opt_errorCallback || error,\n    transformFeedbackVaryings: transformFeedbackVaryings\n  };\n\n  if (opt_attribs) {\n    var attribLocations = {};\n\n    if (Array.isArray(opt_attribs)) {\n      opt_attribs.forEach(function (attrib, ndx) {\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\n      });\n    } else {\n      attribLocations = opt_attribs;\n    }\n\n    options.attribLocations = attribLocations;\n  }\n\n  return options;\n}\n\nvar defaultShaderType = [\"VERTEX_SHADER\", \"FRAGMENT_SHADER\"];\n\nfunction getShaderTypeFromScriptType(scriptType) {\n  if (scriptType.indexOf(\"frag\") >= 0) {\n    return gl.FRAGMENT_SHADER;\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\n    return gl.VERTEX_SHADER;\n  }\n\n  return undefined;\n}\n\nfunction deleteShaders(gl, shaders) {\n  shaders.forEach(function (shader) {\n    gl.deleteShader(shader);\n  });\n}\n/**\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\n * program and calls useProgram.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgram(gl, [vs, fs], options);\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgram(gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var realShaders = [];\n  var newShaders = [];\n\n  for (var ndx = 0; ndx < shaders.length; ++ndx) {\n    var shader = shaders[ndx];\n\n    if (typeof shader === 'string') {\n      var elem = getElementById(shader);\n      var src = elem ? elem.text : shader;\n      var type = gl[defaultShaderType[ndx]];\n\n      if (elem && elem.type) {\n        type = getShaderTypeFromScriptType(elem.type) || type;\n      }\n\n      shader = loadShader(gl, src, type, progOptions.errorCallback);\n      newShaders.push(shader);\n    }\n\n    if (helper.isShader(gl, shader)) {\n      realShaders.push(shader);\n    }\n  }\n\n  if (realShaders.length !== shaders.length) {\n    progOptions.errorCallback(\"not enough shaders for program\");\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  var program = gl.createProgram();\n  realShaders.forEach(function (shader) {\n    gl.attachShader(program, shader);\n  });\n\n  if (progOptions.attribLocations) {\n    Object.keys(progOptions.attribLocations).forEach(function (attrib) {\n      gl.bindAttribLocation(program, progOptions.attribLocations[attrib], attrib);\n    });\n  }\n\n  var varyings = progOptions.transformFeedbackVaryings;\n\n  if (varyings) {\n    if (varyings.attribs) {\n      varyings = varyings.attribs;\n    }\n\n    if (!Array.isArray(varyings)) {\n      varyings = Object.keys(varyings);\n    }\n\n    gl.transformFeedbackVaryings(program, varyings, progOptions.transformFeedbackMode || gl.SEPARATE_ATTRIBS);\n  }\n\n  gl.linkProgram(program); // Check the link status\n\n  var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n  if (!linked) {\n    // something went wrong with the link\n    var lastError = gl.getProgramInfoLog(program);\n    progOptions.errorCallback(\"Error in program linking:\" + lastError);\n    gl.deleteProgram(program);\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  return program;\n}\n/**\n * Loads a shader from a script tag.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} scriptId The id of the script tag.\n * @param {number} [opt_shaderType] The type of shader. If not passed in it will\n *     be derived from the type of the script tag.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors.\n * @return {WebGLShader?} The created shader or null if error.\n */\n\n\nfunction createShaderFromScript(gl, scriptId, opt_shaderType, opt_errorCallback) {\n  var shaderSource = \"\";\n  var shaderScript = getElementById(scriptId);\n\n  if (!shaderScript) {\n    throw \"*** Error: unknown script element\" + scriptId;\n  }\n\n  shaderSource = shaderScript.text;\n  var shaderType = opt_shaderType || getShaderTypeFromScriptType(shaderScript.type);\n\n  if (!shaderType) {\n    throw \"*** Error: unknown shader type\";\n  }\n\n  return loadShader(gl, shaderSource, shaderType, opt_errorCallback);\n}\n/**\n * Creates a program from 2 script tags.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderScriptIds Array of ids of the script\n *        tags for the shaders. The first is assumed to be the\n *        vertex shader, the second the fragment shader.\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram} The created program.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromScripts(gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderScriptIds.length; ++ii) {\n    var shader = createShaderFromScript(gl, shaderScriptIds[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Creates a program from 2 sources.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram} The created program.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromSources(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderSources.length; ++ii) {\n    var shader = loadShader(gl, shaderSources[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Returns true if attribute/uniform is a reserved/built in\n *\n * It makes no sense to me why GL returns these because it's\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\n * with names that start with `gl_` (and `webgl_` in WebGL)\n *\n * I can only assume they are there because they might count\n * when computing the number of uniforms/attributes used when you want to\n * know if you are near the limit. That doesn't really make sense\n * to me but the fact that these get returned are in the spec.\n *\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\n *    `gl.getActiveAttrib`.\n * @return {bool} true if it's reserved\n */\n\n\nfunction isBuiltIn(info) {\n  var name = info.name;\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\n}\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:twgl.setUniforms}\n *\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformSetters(gl, program) {\n  var textureUnit = 0;\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n\n  function createUniformSetter(program, uniformInfo) {\n    var location = gl.getUniformLocation(program, uniformInfo.name);\n    var isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === \"[0]\";\n    var type = uniformInfo.type;\n    var typeInfo = typeMap[type];\n\n    if (!typeInfo) {\n      throw \"unknown type: 0x\" + type.toString(16); // we should never get here.\n    }\n\n    var setter;\n\n    if (typeInfo.bindPoint) {\n      // it's a sampler\n      var unit = textureUnit;\n      textureUnit += uniformInfo.size;\n\n      if (isArray) {\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n      } else {\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n      }\n    } else {\n      if (typeInfo.arraySetter && isArray) {\n        setter = typeInfo.arraySetter(gl, location);\n      } else {\n        setter = typeInfo.setter(gl, location);\n      }\n    }\n\n    setter.location = location;\n    return setter;\n  }\n\n  var uniformSetters = {};\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      continue;\n    }\n\n    var name = uniformInfo.name; // remove the array suffix.\n\n    if (name.substr(-3) === \"[0]\") {\n      name = name.substr(0, name.length - 3);\n    }\n\n    var setter = createUniformSetter(program, uniformInfo);\n    uniformSetters[name] = setter;\n  }\n\n  return uniformSetters;\n}\n/**\n * @typedef {Object} TransformFeedbackInfo\n * @property {number} index index of transform feedback\n * @property {number} type GL type\n * @property {number} size 1 - 4\n * @memberOf module:twgl\n */\n\n/**\n * Create TransformFeedbackInfo for passing to bind/unbindTransformFeedbackInfo.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedbackInfo(gl, program) {\n  var info = {};\n  var numVaryings = gl.getProgramParameter(program, gl.TRANSFORM_FEEDBACK_VARYINGS);\n\n  for (var ii = 0; ii < numVaryings; ++ii) {\n    var varying = gl.getTransformFeedbackVarying(program, ii);\n    info[varying.name] = {\n      index: ii,\n      type: varying.type,\n      size: varying.size\n    };\n  }\n\n  return info;\n}\n/**\n * Binds buffers for transform feedback.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @memberOf module:twgl\n */\n\n\nfunction bindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n\n  for (var name in bufferInfo) {\n    var varying = transformFeedbackInfo[name];\n\n    if (varying) {\n      var buf = bufferInfo[name];\n\n      if (buf.offset) {\n        gl.bindBufferRange(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size);\n      } else {\n        gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer);\n      }\n    }\n  }\n}\n/**\n * Unbinds buffers afetr transform feedback.\n *\n * Buffers can not be bound to 2 bind points so if you try to bind a buffer used\n * in a transform feedback as an ARRAY_BUFFER for an attribute it will fail.\n *\n * This function unbinds all buffers that were bound with {@link module:twgl.bindTransformFeedbackInfo}.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n */\n\n\nfunction unbindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n\n  for (var name in bufferInfo) {\n    var varying = transformFeedbackInfo[name];\n\n    if (varying) {\n      gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, null);\n    }\n  }\n}\n/**\n * Creates a transform feedback and sets the buffers\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @return {WebGLTransformFeedback} the created transform feedback\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedback(gl, programInfo, bufferInfo) {\n  var tf = gl.createTransformFeedback();\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, tf);\n  gl.useProgram(programInfo.program);\n  bindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null); // This is only needed because of a bug in Chrome 56. Will remove\n  // when chrome fixes it.\n\n  unbindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  return tf;\n}\n/**\n * @typedef {Object} UniformData\n * @property {number} type The WebGL type enum for this uniform\n * @property {number} size The number of elements for this uniform\n * @property {number} blockNdx The block index this uniform appears in\n * @property {number} offset The byte offset in the block for this uniform's value\n * @memberOf module:twgl\n */\n\n/**\n * The specification for one UniformBlockObject\n *\n * @typedef {Object} BlockSpec\n * @property {number} index The index of the block.\n * @property {number} size The size in bytes needed for the block\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n * @property {bool} usedByVertexShader Self explanitory\n * @property {bool} usedByFragmentShader Self explanitory\n * @property {bool} used Self explanitory\n * @memberOf module:twgl\n */\n\n/**\n * A `UniformBlockSpec` represents the data needed to create and bind\n * UniformBlockObjects for a given program\n *\n * @typedef {Object} UniformBlockSpec\n * @property {Object.<string, module:twgl.BlockSpec> blockSpecs The BlockSpec for each block by block name\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a UniformBlockSpec for the given program.\n *\n * A UniformBlockSpec represents the data needed to create and bind\n * UniformBlockObjects\n *\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockSpecFromProgram(gl, program) {\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  var uniformData = [];\n  var uniformIndices = [];\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    uniformIndices.push(ii);\n    uniformData.push({});\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      break;\n    } // REMOVE [0]?\n\n\n    uniformData[ii].name = uniformInfo.name;\n  }\n\n  [[\"UNIFORM_TYPE\", \"type\"], [\"UNIFORM_SIZE\", \"size\"], // num elements\n  [\"UNIFORM_BLOCK_INDEX\", \"blockNdx\"], [\"UNIFORM_OFFSET\", \"offset\"]].forEach(function (pair) {\n    var pname = pair[0];\n    var key = pair[1];\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function (value, ndx) {\n      uniformData[ndx][key] = value;\n    });\n  });\n  var blockSpecs = {};\n  var numUniformBlocks = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\n\n  for (var _ii = 0; _ii < numUniformBlocks; ++_ii) {\n    var name = gl.getActiveUniformBlockName(program, _ii);\n    var blockSpec = {\n      index: _ii,\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      size: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_DATA_SIZE),\n      uniformIndices: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES)\n    };\n    blockSpec.used = blockSpec.usedByVertexSahder || blockSpec.usedByFragmentShader;\n    blockSpecs[name] = blockSpec;\n  }\n\n  return {\n    blockSpecs: blockSpecs,\n    uniformData: uniformData\n  };\n}\n\nvar arraySuffixRE = /\\[\\d+\\]\\.$/; // better way to check?\n\n/**\n * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\n * and a corresponding WebGLBuffer to hold those values on the GPU\n *\n * @typedef {Object} UniformBlockInfo\n * @property {string} name The name of the block\n * @property {ArrayBuffer} array The array buffer that contains the uniform values\n * @property {Float32Array} asFloat A float view on the array buffer. This is useful\n *    inspecting the contents of the buffer in the debugger.\n * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\n * @property {number} [offset] offset into buffer\n * @property {Object.<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\n *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\n *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\n *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\n *   `Int32Array` view, etc.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {WebGLProgram} program A WebGLProgram\n * @param {module:twgl.UniformBlockSpec} uinformBlockSpec. A UniformBlockSpec as returned\n *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\nfunction createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName) {\n  var blockSpecs = uniformBlockSpec.blockSpecs;\n  var uniformData = uniformBlockSpec.uniformData;\n  var blockSpec = blockSpecs[blockName];\n\n  if (!blockSpec) {\n    warn(\"no uniform block object named:\", blockName);\n    return {\n      name: blockName,\n      uniforms: {}\n    };\n  }\n\n  var array = new ArrayBuffer(blockSpec.size);\n  var buffer = gl.createBuffer();\n  var uniformBufferIndex = blockSpec.index;\n  gl.bindBuffer(gl.UNIFORM_BUFFER, buffer);\n  gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\n  var prefix = blockName + \".\";\n\n  if (arraySuffixRE.test(prefix)) {\n    prefix = prefix.replace(arraySuffixRE, \".\");\n  }\n\n  var uniforms = {};\n  blockSpec.uniformIndices.forEach(function (uniformNdx) {\n    var data = uniformData[uniformNdx];\n    var typeInfo = typeMap[data.type];\n    var Type = typeInfo.Type;\n    var length = data.size * typeInfo.size;\n    var name = data.name;\n\n    if (name.substr(0, prefix.length) === prefix) {\n      name = name.substr(prefix.length);\n    }\n\n    uniforms[name] = new Type(array, data.offset, length / Type.BYTES_PER_ELEMENT);\n  });\n  return {\n    name: blockName,\n    array: array,\n    asFloat: new Float32Array(array),\n    // for debugging\n    buffer: buffer,\n    uniforms: uniforms\n  };\n}\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo}\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockInfo(gl, programInfo, blockName) {\n  return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName);\n}\n/**\n * Binds a unform block to the matching uniform block point.\n * Matches by blocks by name so blocks must have the same name not just the same\n * structure.\n *\n * If you have changed any values and you upload the valus into the corresponding WebGLBuffer\n * call {@link module:twgl.setUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\n *     no buffer is bound.\n * @memberOf module:twgl/programs\n */\n\n\nfunction bindUniformBlock(gl, programInfo, uniformBlockInfo) {\n  var uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\n  var blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\n\n  if (blockSpec) {\n    var bufferBindIndex = blockSpec.index;\n    gl.bindBufferRange(gl.UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, uniformBlockInfo.offset || 0, uniformBlockInfo.array.byteLength);\n    return true;\n  }\n\n  return false;\n}\n/**\n * Uploads the current uniform values to the corresponding WebGLBuffer\n * and binds that buffer to the program's corresponding bind point for the uniform block object.\n *\n * If you haven't changed any values and you only need to bind the uniform block object\n * call {@link module:twgl.bindUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniformBlock(gl, programInfo, uniformBlockInfo) {\n  if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\n    gl.bufferData(gl.UNIFORM_BUFFER, uniformBlockInfo.array, gl.DYNAMIC_DRAW);\n  }\n}\n/**\n * Sets values of a uniform block object\n *\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\n * @param {Object.<string, ?>} values A uniform name to value map where the value is correct for the given\n *    type of uniform. So for example given a block like\n *\n *       uniform SomeBlock {\n *         float someFloat;\n *         vec2 someVec2;\n *         vec3 someVec3Array[2];\n *         int someInt;\n *       }\n *\n *  You can set the values of the uniform block with\n *\n *       twgl.setBlockUniforms(someBlockInfo, {\n *          someFloat: 12.3,\n *          someVec2: [1, 2],\n *          someVec3Array: [1, 2, 3, 4, 5, 6],\n *          someInt: 5,\n *       }\n *\n *  Arrays can be JavaScript arrays or typed arrays\n *\n *  Any name that doesn't match will be ignored\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBlockUniforms(uniformBlockInfo, values) {\n  var uniforms = uniformBlockInfo.uniforms;\n\n  for (var name in values) {\n    var array = uniforms[name];\n\n    if (array) {\n      var value = values[name];\n\n      if (value.length) {\n        array.set(value);\n      } else {\n        array[0] = value;\n      }\n    }\n  }\n}\n/**\n * Set uniforms and binds related textures.\n *\n * example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     const tex1 = gl.createTexture();\n *     const tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     var texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     const moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *     twgl.setUniforms(programInfo, moreUniforms);\n *\n * You can also add WebGLSamplers to uniform samplers as in\n *\n *     const uniforms = {\n *       u_someSampler: {\n *         texture: someWebGLTexture,\n *         sampler: someWebGLSampler,\n *       },\n *     };\n *\n * In which case both the sampler and texture will be bound to the\n * same unit.\n *\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n *        uniforms.\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n *\n *     const sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     const localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, sharedUniforms);\n *     twgl.setUniforms(programInfo, localUniforms};\n *\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniforms(setters, values) {\n  // eslint-disable-line\n  var actualSetters = setters.uniformSetters || setters;\n  var numArgs = arguments.length;\n\n  for (var andx = 1; andx < numArgs; ++andx) {\n    var vals = arguments[andx];\n\n    if (Array.isArray(vals)) {\n      var numValues = vals.length;\n\n      for (var ii = 0; ii < numValues; ++ii) {\n        setUniforms(actualSetters, vals[ii]);\n      }\n    } else {\n      for (var name in vals) {\n        var setter = actualSetters[name];\n\n        if (setter) {\n          setter(vals[name]);\n        }\n      }\n    }\n  }\n}\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:twgl.setAttributes} for example\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createAttributeSetters(gl, program) {\n  var attribSetters = {};\n  var numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n  for (var ii = 0; ii < numAttribs; ++ii) {\n    var attribInfo = gl.getActiveAttrib(program, ii);\n\n    if (isBuiltIn(attribInfo)) {\n      continue;\n    }\n\n    var index = gl.getAttribLocation(program, attribInfo.name);\n    var typeInfo = attrTypeMap[attribInfo.type];\n    var setter = typeInfo.setter(gl, index, typeInfo);\n    setter.location = index;\n    attribSetters[attribInfo.name] = setter;\n  }\n\n  return attribSetters;\n}\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n *\n * Example:\n *\n *     const program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const attribSetters = createAttributeSetters(program);\n *\n *     const positionBuffer = gl.createBuffer();\n *     const texcoordBuffer = gl.createBuffer();\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n * *   divisor: the divisor for instances. Default = undefined\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n * @memberOf module:twgl/programs\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n */\n\n\nfunction setAttributes(setters, buffers) {\n  for (var name in buffers) {\n    var setter = setters[name];\n\n    if (setter) {\n      setter(buffers[name]);\n    }\n  }\n}\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n *\n * For the example above it is equivilent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgrmaInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n * @param {(module:twgl.BufferInfo|module:twgl.vertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\n  if (buffers.vertexArrayObject) {\n    gl.bindVertexArray(buffers.vertexArrayObject);\n  } else {\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n\n    if (buffers.indices) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\n    }\n  }\n}\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n * @propetty {module:twgl.UniformBlockSpec} [uniformBlockSpace] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\n * @memberOf module:twgl\n */\n\n/**\n * Creates a ProgramInfo from an existing program.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfoFromProgram(gl, program) {\n  var uniformSetters = createUniformSetters(gl, program);\n  var attribSetters = createAttributeSetters(gl, program);\n  var programInfo = {\n    program: program,\n    uniformSetters: uniformSetters,\n    attribSetters: attribSetters\n  };\n\n  if (utils.isWebGL2(gl)) {\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\n  }\n\n  return programInfo;\n}\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramInfo(gl, [vs, fs], options);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the attributes. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfo(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var good = true;\n  shaderSources = shaderSources.map(function (source) {\n    // Lets assume if there is no \\n it's an id\n    if (source.indexOf(\"\\n\") < 0) {\n      var script = getElementById(source);\n\n      if (!script) {\n        progOptions.errorCallback(\"no element with id: \" + source);\n        good = false;\n      } else {\n        source = script.text;\n      }\n    }\n\n    return source;\n  });\n\n  if (!good) {\n    return null;\n  }\n\n  var program = createProgramFromSources(gl, shaderSources, progOptions);\n\n  if (!program) {\n    return null;\n  }\n\n  return createProgramInfoFromProgram(gl, program);\n}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.axisRotate = axisRotate;\nexports.axisRotation = axisRotation;\nexports.copy = copy;\nexports.frustum = frustum;\nexports.getAxis = getAxis;\nexports.getTranslation = getTranslation;\nexports.identity = identity;\nexports.inverse = inverse;\nexports.lookAt = lookAt;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.ortho = ortho;\nexports.perspective = perspective;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.rotationX = rotationX;\nexports.rotationY = rotationY;\nexports.rotationZ = rotationZ;\nexports.scale = scale;\nexports.scaling = scaling;\nexports.setAxis = setAxis;\nexports.setDefaultType = setDefaultType;\nexports.setTranslation = setTranslation;\nexports.transformDirection = transformDirection;\nexports.transformNormal = transformNormal;\nexports.transformPoint = transformPoint;\nexports.translate = translate;\nexports.translation = translation;\nexports.transpose = transpose;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = m4.create();\n *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = m4.identity();\n *     const trans = m4.translation([1, 2, 3]);\n *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n * @module twgl/m4\n */\nvar MatType = Float32Array;\nvar tempV3a = v3.create();\nvar tempV3b = v3.create();\nvar tempV3c = v3.create();\n/**\n * A JavaScript array with 16 values or a Float32Array with 16 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/m4.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Mat4\n * @memberOf module:twgl/m4\n */\n\n/**\n * Sets the type this library creates for a Mat4\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Mat4\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n/**\n * Negates a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} -m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction negate(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = -m[0];\n  dst[1] = -m[1];\n  dst[2] = -m[2];\n  dst[3] = -m[3];\n  dst[4] = -m[4];\n  dst[5] = -m[5];\n  dst[6] = -m[6];\n  dst[7] = -m[7];\n  dst[8] = -m[8];\n  dst[9] = -m[9];\n  dst[10] = -m[10];\n  dst[11] = -m[11];\n  dst[12] = -m[12];\n  dst[13] = -m[13];\n  dst[14] = -m[14];\n  dst[15] = -m[15];\n  return dst;\n}\n/**\n * Copies a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] The matrix.\n * @return {module:twgl/m4.Mat4} A copy of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction copy(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = m[0];\n  dst[1] = m[1];\n  dst[2] = m[2];\n  dst[3] = m[3];\n  dst[4] = m[4];\n  dst[5] = m[5];\n  dst[6] = m[6];\n  dst[7] = m[7];\n  dst[8] = m[8];\n  dst[9] = m[9];\n  dst[10] = m[10];\n  dst[11] = m[11];\n  dst[12] = m[12];\n  dst[13] = m[13];\n  dst[14] = m[14];\n  dst[15] = m[15];\n  return dst;\n}\n/**\n * Creates an n-by-n identity matrix.\n *\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction identity(dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Takes the transpose of a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The transpose of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transpose(m, dst) {\n  dst = dst || new MatType(16);\n\n  if (dst === m) {\n    var t;\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  dst[0] = m00;\n  dst[1] = m10;\n  dst[2] = m20;\n  dst[3] = m30;\n  dst[4] = m01;\n  dst[5] = m11;\n  dst[6] = m21;\n  dst[7] = m31;\n  dst[8] = m02;\n  dst[9] = m12;\n  dst[10] = m22;\n  dst[11] = m32;\n  dst[12] = m03;\n  dst[13] = m13;\n  dst[14] = m23;\n  dst[15] = m33;\n  return dst;\n}\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The inverse of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction inverse(m, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  var tmp_0 = m22 * m33;\n  var tmp_1 = m32 * m23;\n  var tmp_2 = m12 * m33;\n  var tmp_3 = m32 * m13;\n  var tmp_4 = m12 * m23;\n  var tmp_5 = m22 * m13;\n  var tmp_6 = m02 * m33;\n  var tmp_7 = m32 * m03;\n  var tmp_8 = m02 * m23;\n  var tmp_9 = m22 * m03;\n  var tmp_10 = m02 * m13;\n  var tmp_11 = m12 * m03;\n  var tmp_12 = m20 * m31;\n  var tmp_13 = m30 * m21;\n  var tmp_14 = m10 * m31;\n  var tmp_15 = m30 * m11;\n  var tmp_16 = m10 * m21;\n  var tmp_17 = m20 * m11;\n  var tmp_18 = m00 * m31;\n  var tmp_19 = m30 * m01;\n  var tmp_20 = m00 * m21;\n  var tmp_21 = m20 * m01;\n  var tmp_22 = m00 * m11;\n  var tmp_23 = m10 * m01;\n  var t0 = tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31 - (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  var t1 = tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31 - (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  var t2 = tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31 - (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  var t3 = tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21 - (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n  var d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n  dst[0] = d * t0;\n  dst[1] = d * t1;\n  dst[2] = d * t2;\n  dst[3] = d * t3;\n  dst[4] = d * (tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30 - (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n  dst[5] = d * (tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30 - (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n  dst[6] = d * (tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30 - (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n  dst[7] = d * (tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20 - (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n  dst[8] = d * (tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33 - (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n  dst[9] = d * (tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33 - (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n  dst[10] = d * (tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33 - (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n  dst[11] = d * (tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23 - (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n  dst[12] = d * (tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12 - (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n  dst[13] = d * (tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22 - (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n  dst[14] = d * (tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02 - (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n  dst[15] = d * (tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12 - (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n  return dst;\n}\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param {module:twgl/m4.Mat4} a The matrix on the left.\n * @param {module:twgl/m4.Mat4} b The matrix on the right.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The matrix product of a and b.\n * @memberOf module:twgl/m4\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new MatType(16);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4 + 0];\n  var a11 = a[4 + 1];\n  var a12 = a[4 + 2];\n  var a13 = a[4 + 3];\n  var a20 = a[8 + 0];\n  var a21 = a[8 + 1];\n  var a22 = a[8 + 2];\n  var a23 = a[8 + 3];\n  var a30 = a[12 + 0];\n  var a31 = a[12 + 1];\n  var a32 = a[12 + 2];\n  var a33 = a[12 + 3];\n  var b00 = b[0];\n  var b01 = b[1];\n  var b02 = b[2];\n  var b03 = b[3];\n  var b10 = b[4 + 0];\n  var b11 = b[4 + 1];\n  var b12 = b[4 + 2];\n  var b13 = b[4 + 3];\n  var b20 = b[8 + 0];\n  var b21 = b[8 + 1];\n  var b22 = b[8 + 2];\n  var b23 = b[8 + 3];\n  var b30 = b[12 + 0];\n  var b31 = b[12 + 1];\n  var b32 = b[12 + 2];\n  var b33 = b[12 + 3];\n  dst[0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n  return dst;\n}\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param {module:twgl/m4.Mat4} a The matrix.\n * @param {Vec3} v The vector.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} a once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction setTranslation(a, v, dst) {\n  dst = dst || identity();\n\n  if (a !== dst) {\n    dst[0] = a[0];\n    dst[1] = a[1];\n    dst[2] = a[2];\n    dst[3] = a[3];\n    dst[4] = a[4];\n    dst[5] = a[5];\n    dst[6] = a[6];\n    dst[7] = a[7];\n    dst[8] = a[8];\n    dst[9] = a[9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} [dst] vector..\n * @return {Vec3} The translation component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getTranslation(m, dst) {\n  dst = dst || v3.create();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\n * @return {Vec3} [dst] vector.\n * @return {Vec3} The axis component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getAxis(m, axis, dst) {\n  dst = dst || v3.create();\n  var off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param {Vec3} v the axis vector\n * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\n * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If none a new one is created\n * @return {module:twgl/m4.Mat4} dst\n * @memberOf module:twgl/m4\n */\n\n\nfunction setAxis(a, v, axis, dst) {\n  if (dst !== a) {\n    dst = copy(a, dst);\n  }\n\n  var off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\n * @param {number} aspect The aspect ratio width / height.\n * @param {number} zNear The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} zFar The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n  dst = dst || new MatType(16);\n  var f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n  var rangeInv = 1.0 / (zNear - zFar);\n  dst[0] = f / aspect;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = f;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = (zNear + zFar) * rangeInv;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = zNear * zFar * rangeInv * 2;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 othogonal transformation matrix given the left, right,\n * bottom, and top dimensions of the near clipping plane as well as the\n * near and far clipping plane distances.\n * @param {number} left Left side of the near clipping plane viewport.\n * @param {number} right Right side of the near clipping plane viewport.\n * @param {number} top Top of the near clipping plane viewport.\n * @param {number} bottom Bottom of the near clipping plane viewport.\n * @param {number} near The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} far The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction ortho(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 2 / (right - left);\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 / (top - bottom);\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 2 / (near - far);\n  dst[11] = 0;\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = (far + near) / (near - far);\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective projection matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction frustum(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  var dx = right - left;\n  var dy = top - bottom;\n  var dz = near - far;\n  dst[0] = 2 * near / dx;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 * near / dy;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = (left + right) / dx;\n  dst[9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 look-at transformation.\n *\n * This is a matrix which positions the camera itself. If you want\n * a view matrix (a matrix which moves things in front of the camera)\n * take the inverse of this.\n *\n * @param {Vec3} eye The position of the eye.\n * @param {Vec3} target The position meant to be viewed.\n * @param {Vec3} up A vector pointing up.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The look-at matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction lookAt(eye, target, up, dst) {\n  dst = dst || new MatType(16);\n  var xAxis = tempV3a;\n  var yAxis = tempV3b;\n  var zAxis = tempV3c;\n  v3.normalize(v3.subtract(eye, target, zAxis), zAxis);\n  v3.normalize(v3.cross(up, zAxis, xAxis), xAxis);\n  v3.normalize(v3.cross(zAxis, xAxis, yAxis), yAxis);\n  dst[0] = xAxis[0];\n  dst[1] = xAxis[1];\n  dst[2] = xAxis[2];\n  dst[3] = 0;\n  dst[4] = yAxis[0];\n  dst[5] = yAxis[1];\n  dst[6] = yAxis[2];\n  dst[7] = 0;\n  dst[8] = zAxis[0];\n  dst[9] = zAxis[1];\n  dst[10] = zAxis[2];\n  dst[11] = 0;\n  dst[12] = eye[0];\n  dst[13] = eye[1];\n  dst[14] = eye[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param {Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The translation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translation(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by translation by the given vector v.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translate(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[0] = m00;\n    dst[1] = m01;\n    dst[2] = m02;\n    dst[3] = m03;\n    dst[4] = m10;\n    dst[5] = m11;\n    dst[6] = m12;\n    dst[7] = m13;\n    dst[8] = m20;\n    dst[9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationX(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = c;\n  dst[6] = s;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = -s;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the x-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateX(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[4] = c * m10 + s * m20;\n  dst[5] = c * m11 + s * m21;\n  dst[6] = c * m12 + s * m22;\n  dst[7] = c * m13 + s * m23;\n  dst[8] = c * m20 - s * m10;\n  dst[9] = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[3] = m[3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationY(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = 0;\n  dst[2] = -s;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = s;\n  dst[9] = 0;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the y-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateY(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 - s * m20;\n  dst[1] = c * m01 - s * m21;\n  dst[2] = c * m02 - s * m22;\n  dst[3] = c * m03 - s * m23;\n  dst[8] = c * m20 + s * m00;\n  dst[9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[4] = m[4];\n    dst[5] = m[5];\n    dst[6] = m[6];\n    dst[7] = m[7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationZ(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = s;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = -s;\n  dst[5] = c;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the z-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateZ(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 + s * m10;\n  dst[1] = c * m01 + s * m11;\n  dst[2] = c * m02 + s * m12;\n  dst[3] = c * m03 + s * m13;\n  dst[4] = c * m10 - s * m00;\n  dst[5] = c * m11 - s * m01;\n  dst[6] = c * m12 - s * m02;\n  dst[7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[8] = m[8];\n    dst[9] = m[9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param {Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\n *     around the axis.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotation(axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  dst[0] = xx + (1 - xx) * c;\n  dst[1] = x * y * oneMinusCosine + z * s;\n  dst[2] = x * z * oneMinusCosine - y * s;\n  dst[3] = 0;\n  dst[4] = x * y * oneMinusCosine - z * s;\n  dst[5] = yy + (1 - yy) * c;\n  dst[6] = y * z * oneMinusCosine + x * s;\n  dst[7] = 0;\n  dst[8] = x * z * oneMinusCosine + y * s;\n  dst[9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by rotation around the given axis by the\n * given angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotate(m, axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  var r00 = xx + (1 - xx) * c;\n  var r01 = x * y * oneMinusCosine + z * s;\n  var r02 = x * z * oneMinusCosine - y * s;\n  var r10 = x * y * oneMinusCosine - z * s;\n  var r11 = yy + (1 - yy) * c;\n  var r12 = y * z * oneMinusCosine + x * s;\n  var r20 = x * z * oneMinusCosine + y * s;\n  var r21 = y * z * oneMinusCosine - x * s;\n  var r22 = zz + (1 - zz) * c;\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  dst[0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param {Vec3} v A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The scaling matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scaling(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = v[0];\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = v[1];\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = v[2];\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix, scaling in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param {module:twgl/m4.Mat4} m The matrix to be modified.\n * @param {Vec3} v A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scale(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2];\n  dst[3] = v0 * m[0 * 4 + 3];\n  dst[4] = v1 * m[1 * 4 + 0];\n  dst[5] = v1 * m[1 * 4 + 1];\n  dst[6] = v1 * m[1 * 4 + 2];\n  dst[7] = v1 * m[1 * 4 + 3];\n  dst[8] = v2 * m[2 * 4 + 0];\n  dst[9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The point.\n * @param {Vec3} dst optional vec3 to store result\n * @return {Vec3} dst or new vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformPoint(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n  dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\n  dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\n  dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n * direction, transforms that direction by the matrix, and returns the result;\n * assumes the transformation of 3-dimensional space represented by the matrix\n * is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion. Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The direction.\n * @param {Vec3} dst optional Vec3 to store result\n * @return {Vec3} dst or new Vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformDirection(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n * as a normal to a surface, and computes a vector which is normal upon\n * transforming that surface by the matrix. The effect of this function is the\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\n * function assumes the transformation of 3-dimensional space represented by the\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion.  Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The normal.\n * @param {Vec3} [dst] The direction.\n * @return {Vec3} The transformed direction.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformNormal(m, v, dst) {\n  dst = dst || v3.create();\n  var mi = inverse(m);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttribsFromArrays = createAttribsFromArrays;\nexports.createBuffersFromArrays = createBuffersFromArrays;\nexports.createBufferFromArray = createBufferFromArray;\nexports.createBufferFromTypedArray = createBufferFromTypedArray;\nexports.createBufferInfoFromArrays = createBufferInfoFromArrays;\nexports.setAttribInfoBufferFromArray = setAttribInfoBufferFromArray;\nexports.setAttributePrefix = setAttributePrefix;\nexports.setAttributeDefaults_ = setDefaults;\nexports.getNumComponents_ = getNumComponents;\nexports.getArray_ = getArray;\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level attribute and buffer related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/attributes\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  attribPrefix: \"\"\n};\n/**\n * Sets the default attrib prefix\n *\n * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n * as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n *\n * In otherwords I'll create arrays of geometry like this\n *\n *     var arrays = {\n *       position: ...\n *       normal: ...\n *       texcoord: ...\n *     };\n *\n * But need those mapped to attributes and my attributes start with `a_`.\n *\n * @deprecated see {@link module:twgl.setDefaults}\n * @param {string} prefix prefix for attribs\n * @memberOf module:twgl/attributes\n */\n\nfunction setAttributePrefix(prefix) {\n  defaults.attribPrefix = prefix;\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n}\n\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || gl.STATIC_DRAW);\n}\n/**\n * Given typed array creates a WebGLBuffer and copies the typed array\n * into it.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n * @return {WebGLBuffer} the created WebGLBuffer\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\n  if (helper.isBuffer(gl, typedArray)) {\n    return typedArray;\n  }\n\n  type = type || gl.ARRAY_BUFFER;\n  var buffer = gl.createBuffer();\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n  return buffer;\n}\n\nfunction isIndices(name) {\n  return name === \"indices\";\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n}\n\nfunction getArray(array) {\n  return array.length ? array : array.data;\n}\n\nvar texcoordRE = /coord|texture/i;\nvar colorRE = /color|colour/i;\n\nfunction guessNumComponentsFromName(name, length) {\n  var numComponents;\n\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3; // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw \"Can not guess numComponents for attribute '\" + name + \"'. Tried \" + numComponents + \" but \" + length + \" values is not evenly divisible by \" + numComponents + \". You should specify it.\";\n  }\n\n  return numComponents;\n}\n\nfunction getNumComponents(array, arrayName) {\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\n}\n\nfunction makeTypedArray(array, name) {\n  if (typedArrays.isArrayBuffer(array)) {\n    return array;\n  }\n\n  if (typedArrays.isArrayBuffer(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array\n    };\n  }\n\n  var Type = array.type;\n\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint16Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n\n  return new Type(array.data);\n}\n/**\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n * for the attribute.\n *\n * @typedef {Object} AttribInfo\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] synonym for `numComponents`.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {number} [divisor] the divisor in instances. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * Use this type of array spec when TWGL can't guess the type or number of compoments of an array\n * @typedef {Object} FullArraySpec\n * @property {(number|number[]|ArrayBufferView)} data The data of the array. A number alone becomes the number of elements of type.\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n *    If `coord` is in the name assumes `numComponents = 2`.\n *    If `color` is in the name assumes `numComponents = 4`.\n *    otherwise assumes `numComponents = 3`\n * @property {constructor} type The type. This is only used if `data` is a JavaScript array. It is the constructor for the typedarray. (eg. `Uint8Array`).\n * For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: Uint8Array, data: [255,0,255,255, ...], }`.\n * @property {number} [size] synonym for `numComponents`.\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n * @property {string} [name] synonym for `attrib`.\n * @property {string} [attribName] synonym for `attrib`.\n * @memberOf module:twgl\n */\n\n/**\n * An individual array in {@link module:twgl.Arrays}\n *\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\n *\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\n * @memberOf module:twgl\n */\n\n/**\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n * @memberOf module:twgl\n */\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      var arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      var attribs = {\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * notes:\n *\n * *   Arrays can take various forms\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {module:twgl.Arrays} arrays The arrays\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createAttribsFromArrays(gl, arrays) {\n  var attribs = {};\n  Object.keys(arrays).forEach(function (arrayName) {\n    if (!isIndices(arrayName)) {\n      var array = arrays[arrayName];\n      var attribName = array.attrib || array.name || array.attribName || defaults.attribPrefix + arrayName;\n      var buffer;\n      var type;\n      var normalization;\n      var numComponents;\n      var numValues;\n\n      if (typeof array === \"number\" || typeof array.data === \"number\") {\n        numValues = array.data || array;\n        var arrayType = array.type || Float32Array;\n        var numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\n        type = typedArrays.getGLTypeForTypedArrayType(arrayType);\n        normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\n        numComponents = array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues);\n        buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, numBytes, array.drawType || gl.STATIC_DRAW);\n      } else {\n        var typedArray = makeTypedArray(array, arrayName);\n        buffer = createBufferFromTypedArray(gl, typedArray, undefined, array.drawType);\n        type = typedArrays.getGLTypeForTypedArray(typedArray);\n        normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArray(typedArray);\n        numComponents = getNumComponents(array, arrayName);\n        numValues = typedArray.length;\n      }\n\n      attribs[attribName] = {\n        buffer: buffer,\n        numComponents: numComponents,\n        type: type,\n        normalize: normalization,\n        stride: array.stride || 0,\n        offset: array.offset || 0,\n        divisor: array.divisor === undefined ? undefined : array.divisor,\n        drawType: array.drawType\n      };\n    }\n  });\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  return attribs;\n}\n/**\n * Sets the contents of a buffer attached to an attribInfo\n *\n * This is helper function to dynamically update a buffer.\n *\n * Let's say you make a bufferInfo\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n *  And you want to dynamically upate the positions. You could do this\n *\n *     // assuming arrays.position has already been updated with new data.\n *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\n *\n * @param {WebGLRenderingContext} gl\n * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\n *   the name of the attribute will include the prefix.\n * @param {ArraySpec} array Note: it is arguably ineffient to pass in anything but a typed array because anything\n *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\n *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\n * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\n *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\n *    for the portion of the array you want to use.\n *\n *        var someArray = new Float32Array(1000); // an array with 1000 floats\n *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\n *\n *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\n * @memberOf module:twgl/attributes\n */\n\n\nfunction setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\n  array = makeTypedArray(array);\n\n  if (offset !== undefined) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, attribInfo.buffer);\n    gl.bufferSubData(gl.ARRAY_BUFFER, offset, array);\n  } else {\n    setBufferFromTypedArray(gl, gl.ARRAY_BUFFER, attribInfo.buffer, array, attribInfo.drawType);\n  }\n}\n\nfunction getBytesPerValueForGLType(gl, type) {\n  if (type === gl.BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.INT) return 4; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_INT) return 4; // eslint-disable-line\n\n  if (type === gl.FLOAT) return 4; // eslint-disable-line\n\n  return 0;\n}\n/**\n * tries to get the number of elements from a set of arrays.\n */\n\n\nvar positionKeys = ['position', 'positions', 'a_position'];\n\nfunction getNumElementsFromNonIndexedArrays(arrays) {\n  var key;\n\n  for (var _ii = 0; _ii < positionKeys.length; ++_ii) {\n    key = positionKeys[_ii];\n\n    if (key in arrays) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(arrays)[0];\n  }\n\n  var array = arrays[key];\n  var length = getArray(array).length;\n  var numComponents = getNumComponents(array, key);\n  var numElements = length / numComponents;\n\n  if (length % numComponents > 0) {\n    throw \"numComponents \" + numComponents + \" not correct for length \" + length;\n  }\n\n  return numElements;\n}\n\nfunction getNumElementsFromAttributes(gl, attribs) {\n  var key;\n  var ii;\n\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n\n    if (key in attribs) {\n      break;\n    }\n\n    key = defaults.attribPrefix + key;\n\n    if (key in attribs) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(attribs)[0];\n  }\n\n  var attrib = attribs[key];\n  gl.bindBuffer(gl.ARRAY_BUFFER, attrib.buffer);\n  var numBytes = gl.getBufferParameter(gl.ARRAY_BUFFER, gl.BUFFER_SIZE);\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  var bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\n  var totalElements = numBytes / bytesPerValue;\n  var numComponents = attrib.numComponents || attrib.size; // TODO: check stride\n\n  var numElements = totalElements / numComponents;\n\n  if (numElements % 1 !== 0) {\n    throw \"numComponents \" + numComponents + \" not correct for length \" + length;\n  }\n\n  return numElements;\n}\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs approriate to call `setAttributes`\n * @memberOf module:twgl\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * Given an object like\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         a_position: { buffer: WebGLBuffer, numComponents: 3, },\n *         a_normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         a_texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     var arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also by TypedArrays\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or augmentedTypedArrays\n *\n *     var positions = createAugmentedTypedArray(3, 4);\n *     var texcoords = createAugmentedTypedArray(2, 4);\n *     var normals   = createAugmentedTypedArray(3, 4);\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     var arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     var bufferInfo = {\n *       attribs: {\n *         a_position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         a_texcoods: { numComponents: 2, buffer: gl.createBuffer(), },\n *         a_normals: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.Arrays} arrays Your data\n * @return {module:twgl.BufferInfo} A BufferInfo\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferInfoFromArrays(gl, arrays) {\n  var bufferInfo = {\n    attribs: createAttribsFromArrays(gl, arrays)\n  };\n  var indices = arrays.indices;\n\n  if (indices) {\n    var newIndices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, gl.ELEMENT_ARRAY_BUFFER);\n    bufferInfo.numElements = newIndices.length;\n    bufferInfo.elementType = typedArrays.getGLTypeForTypedArray(newIndices);\n  } else {\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\n  }\n\n  return bufferInfo;\n}\n/**\n * Creates a buffer from an array, typed array, or array spec\n *\n * Given something like this\n *\n *     [1, 2, 3],\n *\n * or\n *\n *     new Uint16Array([1,2,3]);\n *\n * or\n *\n *     {\n *        data: [1, 2, 3],\n *        type: Uint8Array,\n *     }\n *\n * returns a WebGLBuffer that constains the given data.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\n * @param {string} arrayName name of array. Used to guess the type if type can not be dervied other wise.\n * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromArray(gl, array, arrayName) {\n  var type = arrayName === \"indices\" ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;\n  var typedArray = makeTypedArray(array, arrayName);\n  return createBufferFromTypedArray(gl, typedArray, type);\n}\n/**\n * Creates buffers from arrays or typed arrays\n *\n * Given something like this\n *\n *     var arrays = {\n *        positions: [1, 2, 3],\n *        normals: [0, 0, 1],\n *     }\n *\n * returns something like\n *\n *     buffers = {\n *       positions: WebGLBuffer,\n *       normals: WebGLBuffer,\n *     }\n *\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.Arrays} arrays\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBuffersFromArrays(gl, arrays) {\n  var buffers = {};\n  Object.keys(arrays).forEach(function (key) {\n    buffers[key] = createBufferFromArray(gl, arrays[key], key);\n  }); // Ugh!\n\n  if (arrays.indices) {\n    buffers.numElements = arrays.indices.length;\n    buffers.elementType = typedArrays.getGLTypeForTypedArray(makeTypedArray(arrays.indices), 'indices');\n  } else {\n    buffers.numElements = getNumElementsFromNonIndexedArrays(arrays);\n  }\n\n  return buffers;\n}\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.setTextureDefaults_ = setDefaults;\nexports.createSampler = createSampler;\nexports.createSamplers = createSamplers;\nexports.setSamplerParameters = setSamplerParameters;\nexports.createTexture = createTexture;\nexports.setEmptyTexture = setEmptyTexture;\nexports.setTextureFromArray = setTextureFromArray;\nexports.loadTextureFromUrl = loadTextureFromUrl;\nexports.setTextureFromElement = setTextureFromElement;\nexports.setTextureFilteringForSize = setTextureFilteringForSize;\nexports.setTextureParameters = setTextureParameters;\nexports.setDefaultTextureColor = setDefaultTextureColor;\nexports.createTextures = createTextures;\nexports.resizeTexture = resizeTexture;\nexports.getNumComponentsForFormat = getNumComponentsForFormat;\nexports.getBytesPerElementForInternalFormat = getBytesPerElementForInternalFormat;\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level texture related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.textures` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/textures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  textureColor: new Uint8Array([128, 192, 255, 255]),\n  textureOptions: {},\n  crossOrigin: undefined\n};\nvar isArrayBuffer = typedArrays.isArrayBuffer; // Should we make this on demand?\n\nvar ctx = _globalObject.default.document && _globalObject.default.document.createElement ? _globalObject.default.document.createElement(\"canvas\").getContext(\"2d\") : null; // NOTE: Chrome supports 2D canvas in a Worker (behind flag as of v64 but\n//       not only does Firefox NOT support it but Firefox freezes immediately\n//       if you try to create one instead of just returning null and continuing.\n//  : (global.OffscreenCanvas && (new global.OffscreenCanvas(1, 1)).getContext(\"2d\"));  // OffscreenCanvas may not support 2d\n// NOTE: We can maybe remove some of the need for the 2d canvas. In WebGL2\n// we can use the various unpack settings. Otherwise we could try using\n// the ability of an imagebitmap to be cut. Unfortunately cutting an imagebitmap\n// is async and the current TWGL code expects a non-Async result though that\n// might not be a problem. ImageBitmap though is not available in Edge or Safari\n// as of 2018-01-02\n\n/* PixelFormat */\n\nvar ALPHA = 0x1906;\nvar RGB = 0x1907;\nvar RGBA = 0x1908;\nvar LUMINANCE = 0x1909;\nvar LUMINANCE_ALPHA = 0x190A;\nvar DEPTH_COMPONENT = 0x1902;\nvar DEPTH_STENCIL = 0x84F9;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\nvar R8 = 0x8229;\nvar R8_SNORM = 0x8F94;\nvar R16F = 0x822D;\nvar R32F = 0x822E;\nvar R8UI = 0x8232;\nvar R8I = 0x8231;\nvar RG16UI = 0x823A;\nvar RG16I = 0x8239;\nvar RG32UI = 0x823C;\nvar RG32I = 0x823B;\nvar RG8 = 0x822B;\nvar RG8_SNORM = 0x8F95;\nvar RG16F = 0x822F;\nvar RG32F = 0x8230;\nvar RG8UI = 0x8238;\nvar RG8I = 0x8237;\nvar R16UI = 0x8234;\nvar R16I = 0x8233;\nvar R32UI = 0x8236;\nvar R32I = 0x8235;\nvar RGB8 = 0x8051;\nvar SRGB8 = 0x8C41;\nvar RGB565 = 0x8D62;\nvar RGB8_SNORM = 0x8F96;\nvar R11F_G11F_B10F = 0x8C3A;\nvar RGB9_E5 = 0x8C3D;\nvar RGB16F = 0x881B;\nvar RGB32F = 0x8815;\nvar RGB8UI = 0x8D7D;\nvar RGB8I = 0x8D8F;\nvar RGB16UI = 0x8D77;\nvar RGB16I = 0x8D89;\nvar RGB32UI = 0x8D71;\nvar RGB32I = 0x8D83;\nvar RGBA8 = 0x8058;\nvar SRGB8_ALPHA8 = 0x8C43;\nvar RGBA8_SNORM = 0x8F97;\nvar RGB5_A1 = 0x8057;\nvar RGBA4 = 0x8056;\nvar RGB10_A2 = 0x8059;\nvar RGBA16F = 0x881A;\nvar RGBA32F = 0x8814;\nvar RGBA8UI = 0x8D7C;\nvar RGBA8I = 0x8D8E;\nvar RGB10_A2UI = 0x906F;\nvar RGBA16UI = 0x8D76;\nvar RGBA16I = 0x8D88;\nvar RGBA32I = 0x8D82;\nvar RGBA32UI = 0x8D70;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar DEPTH_COMPONENT24 = 0x81A6;\nvar DEPTH_COMPONENT32F = 0x8CAC;\nvar DEPTH32F_STENCIL8 = 0x8CAD;\nvar DEPTH24_STENCIL8 = 0x88F0;\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar HALF_FLOAT_OES = 0x8D61; // Thanks Khronos for making this different >:(\n\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar RG = 0x8227;\nvar RG_INTEGER = 0x8228;\nvar RED = 0x1903;\nvar RED_INTEGER = 0x8D94;\nvar RGB_INTEGER = 0x8D98;\nvar RGBA_INTEGER = 0x8D99;\nvar formatInfo = {};\n{\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\n  // the name.\n  var f = formatInfo;\n  f[ALPHA] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE_ALPHA] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RED] = {\n    numColorComponents: 1\n  };\n  f[RED_INTEGER] = {\n    numColorComponents: 1\n  };\n  f[RG] = {\n    numColorComponents: 2\n  };\n  f[RG_INTEGER] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGB_INTEGER] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RGBA_INTEGER] = {\n    numColorComponents: 4\n  };\n  f[DEPTH_COMPONENT] = {\n    numColorComponents: 1\n  };\n  f[DEPTH_STENCIL] = {\n    numColorComponents: 2\n  };\n}\nvar textureInternalFormatInfo = {};\n{\n  // NOTE: these properties need unique names so we can let Uglify mangle the name.\n  var t = textureInternalFormatInfo; // unsized formats\n\n  t[ALPHA] = {\n    textureFormat: ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE] = {\n    textureFormat: LUMINANCE,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE_ALPHA] = {\n    textureFormat: LUMINANCE_ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [2, 4, 4, 8],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[RGB] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 6, 6, 12, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGBA] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 8, 8, 16, 2, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1]\n  }; // sized formats\n\n  t[R8] = {\n    textureFormat: RED,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 1,\n    type: UNSIGNED_BYTE\n  };\n  t[R8_SNORM] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 1,\n    type: BYTE\n  };\n  t[R16F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[R32F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT\n  };\n  t[R8UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 1,\n    type: UNSIGNED_BYTE\n  };\n  t[R8I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 1,\n    type: BYTE\n  };\n  t[R16UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: UNSIGNED_SHORT\n  };\n  t[R16I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: SHORT\n  };\n  t[R32UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT\n  };\n  t[R32I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: INT\n  };\n  t[RG8] = {\n    textureFormat: RG,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 2,\n    type: UNSIGNED_BYTE\n  };\n  t[RG8_SNORM] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 2,\n    type: BYTE\n  };\n  t[RG16F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [8, 4],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RG32F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: FLOAT\n  };\n  t[RG8UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: UNSIGNED_BYTE\n  };\n  t[RG8I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: BYTE\n  };\n  t[RG16UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_SHORT\n  };\n  t[RG16I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: SHORT\n  };\n  t[RG32UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: UNSIGNED_INT\n  };\n  t[RG32I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: INT\n  };\n  t[RGB8] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[SRGB8] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[RGB565] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGB8_SNORM] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: BYTE\n  };\n  t[R11F_G11F_B10F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_10F_11F_11F_REV]\n  };\n  t[RGB9_E5] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_5_9_9_9_REV]\n  };\n  t[RGB16F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGB32F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: FLOAT\n  };\n  t[RGB8UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[RGB8I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 3,\n    type: BYTE\n  };\n  t[RGB16UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 6,\n    type: UNSIGNED_SHORT\n  };\n  t[RGB16I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 6,\n    type: SHORT\n  };\n  t[RGB32UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: UNSIGNED_INT\n  };\n  t[RGB32I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: INT\n  };\n  t[RGBA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[SRGB8_ALPHA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[RGBA8_SNORM] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: BYTE\n  };\n  t[RGB5_A1] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2, 4],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_5_5_1, UNSIGNED_INT_2_10_10_10_REV]\n  };\n  t[RGBA4] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_4_4_4_4]\n  };\n  t[RGB10_A2] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_2_10_10_10_REV\n  };\n  t[RGBA16F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [16, 8],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGBA32F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: FLOAT\n  };\n  t[RGBA8UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[RGBA8I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: BYTE\n  };\n  t[RGB10_A2UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_2_10_10_10_REV\n  };\n  t[RGBA16UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: UNSIGNED_SHORT\n  };\n  t[RGBA16I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: SHORT\n  };\n  t[RGBA32I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: INT\n  };\n  t[RGBA32UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: UNSIGNED_INT\n  }; // Sized Internal\n\n  t[DEPTH_COMPONENT16] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2, 4],\n    type: [UNSIGNED_SHORT, UNSIGNED_INT]\n  };\n  t[DEPTH_COMPONENT24] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT\n  };\n  t[DEPTH_COMPONENT32F] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT\n  };\n  t[DEPTH24_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_24_8\n  };\n  t[DEPTH32F_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT_32_UNSIGNED_INT_24_8_REV\n  };\n  Object.keys(t).forEach(function (internalFormat) {\n    var info = t[internalFormat];\n    info.bytesPerElementMap = {};\n\n    if (Array.isArray(info.bytesPerElement)) {\n      info.bytesPerElement.forEach(function (bytesPerElement, ndx) {\n        var type = info.type[ndx];\n        info.bytesPerElementMap[type] = bytesPerElement;\n      });\n    } else {\n      var type = info.type;\n      info.bytesPerElementMap[type] = info.bytesPerElement;\n    }\n  });\n}\n/**\n * Gets the number of bytes per element for a given internalFormat / type\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {number} the number of bytes per element for the given internalFormat, type combo\n * @memberOf module:twgl/textures\n */\n\nfunction getBytesPerElementForInternalFormat(internalFormat, type) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  var bytesPerElement = info.bytesPerElementMap[type];\n\n  if (bytesPerElement === undefined) {\n    throw \"unknown internal format\";\n  }\n\n  return bytesPerElement;\n}\n/**\n * Gets the format for a given internalFormat\n *\n * @param {number} internalFormat The internal format\n * @return {{format:number, type:number}} the corresponding format and type\n */\n\n\nfunction getFormatAndTypeForInternalFormat(internalFormat) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return {\n    format: info.textureFormat,\n    type: Array.isArray(info.type) ? info.type[0] : info.type\n  };\n}\n/**\n * Returns true if value is power of 2\n * @param {number} value number to check.\n * @return true if value is power of 2\n */\n\n\nfunction isPowerOf2(value) {\n  return (value & value - 1) === 0;\n}\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {boolean} true if we can generate mips\n */\n\n\nfunction canGenerateMipmap(gl, width, height, internalFormat\n/*, type */\n) {\n  if (!utils.isWebGL2(gl)) {\n    return isPowerOf2(width) && isPowerOf2(height);\n  }\n\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.colorRenderable && info.textureFilterable;\n}\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {boolean} true if we can generate mips\n */\n\n\nfunction canFilter(internalFormat\n/*, type */\n) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.textureFilterable;\n}\n/**\n * Gets the number of compontents for a given image format.\n * @param {number} format the format.\n * @return {number} the number of components for the format.\n * @memberOf module:twgl/textures\n */\n\n\nfunction getNumComponentsForFormat(format) {\n  var info = formatInfo[format];\n\n  if (!info) {\n    throw \"unknown format: \" + format;\n  }\n\n  return info.numColorComponents;\n}\n/**\n * Gets the texture type for a given array type.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @return {number} the gl texture type\n */\n\n\nfunction getTextureTypeForArrayType(gl, src, defaultType) {\n  if (isArrayBuffer(src)) {\n    return typedArrays.getGLTypeForTypedArray(src);\n  }\n\n  return defaultType || gl.UNSIGNED_BYTE;\n}\n\nfunction guessDimensions(gl, target, width, height, numElements) {\n  if (numElements % 1 !== 0) {\n    throw \"can't guess dimensions\";\n  }\n\n  if (!width && !height) {\n    var size = Math.sqrt(numElements / (target === gl.TEXTURE_CUBE_MAP ? 6 : 1));\n\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width;\n\n    if (height % 1) {\n      throw \"can't guess dimensions\";\n    }\n  } else if (!width) {\n    width = numElements / height;\n\n    if (width % 1) {\n      throw \"can't guess dimensions\";\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Sets the default texture color.\n *\n * The default texture color is used when loading textures from\n * urls. Because the URL will be loaded async we'd like to be\n * able to use the texture immediately. By putting a 1x1 pixel\n * color in the texture we can start using the texture before\n * the URL has loaded.\n *\n * @param {number[]} color Array of 4 values in the range 0 to 1\n * @deprecated see {@link module:twgl.setDefaults}\n * @memberOf module:twgl/textures\n */\n\n\nfunction setDefaultTextureColor(color) {\n  defaults.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n\n  if (newDefaults.textureColor) {\n    setDefaultTextureColor(newDefaults.textureColor);\n  }\n}\n/**\n * A function to generate the source for a texture.\n * @callback TextureFunc\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options the texture options\n * @return {*} Returns any of the things documentented for `src` for {@link module:twgl.TextureOptions}.\n * @memberOf module:twgl\n */\n\n/**\n * Texture options passed to most texture functions. Each function will use whatever options\n * are appropriate for its needs. This lets you pass the same options to all functions.\n *\n * Note: A `TexImageSource` is defined in the WebGL spec as a `HTMLImageElement`, `HTMLVideoElement`,\n * `HTMLCanvasElement`, `ImageBitmap`, or `ImageData`.\n *\n * @typedef {Object} TextureOptions\n * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\n * @property {number} [level] the mip level to affect. Defaults to 0. Note, if set auto will be considered false unless explicitly set to true.\n * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\n * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\n * @property {number} [depth] the depth of a texture. Only used if src is an array or type array or null and target is `TEXTURE_3D` .\n * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\n *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\n * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\n * @property {number} [minMag] both the min and mag filter settings.\n * @property {number} [internalFormat] internal format for texture. Defaults to `gl.RGBA`\n * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\n * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBufferView. If `src`\n *     is ArrayBufferView defaults to type that matches ArrayBufferView type.\n * @property {number} [wrap] Texture wrapping for both S and T (and R if TEXTURE_3D or WebGLSampler). Defaults to `gl.REPEAT` for 2D unless src is WebGL1 and src not npot and `gl.CLAMP_TO_EDGE` for cube\n * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapR] Texture wrapping for R. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [minLod] TEXTURE_MIN_LOD setting\n * @property {number} [maxLod] TEXTURE_MAX_LOD setting\n * @property {number} [baseLevel] TEXTURE_BASE_LEVEL setting\n * @property {number} [maxLevel] TEXTURE_MAX_LEVEL setting\n * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\n * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {(number[]|ArrayBufferView)} color color used as temporary 1x1 pixel color for textures loaded async when src is a string.\n *    If it's a JavaScript array assumes color is 0 to 1 like most GL colors as in `[1, 0, 0, 1] = red=1, green=0, blue=0, alpha=0`.\n *    Defaults to `[0.5, 0.75, 1, 1]`. See {@link module:twgl.setDefaultTextureColor}. If `false` texture is set. Can be used to re-load a texture\n * @property {boolean} [auto] If `undefined` or `true`, in WebGL1, texture filtering is set automatically for non-power of 2 images and\n *    mips are generated for power of 2 images. In WebGL2 mips are generated if they can be. Note: if `level` is set above\n *    then then `auto` is assumed to be `false` unless explicity set to `true`.\n * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\n *\n *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n *\n * @property {(number[]|ArrayBufferView|TexImageSource|TexImageSource[]|string|string[]|module:twgl.TextureFunc)} [src] source for texture\n *\n *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\n *    1x1 pixel texture will be returned immediatley. The texture will be updated once the image has downloaded.\n *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\n *    The pieces will be uploaded in `cubeFaceOrder`\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_CUBE_MAP` then it must have 6 entries, one for each face of a cube map.\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_2D_ARRAY` then eact entry is a slice of the a 2d array texture\n *    and will be scaled to the specified width and height OR to the size of the first image that loads.\n *\n *    If `TexImageSource` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\n *    `HTMLCanvasElement`, `HTMLVideoElement`.\n *\n *    If `number[]` or `ArrayBufferView` it's assumed to be data for a texture. If `width` or `height` is\n *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponents`\n *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\n *    by 6. Then\n *\n *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\n *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\n *\n *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\n *\n * If `number[]` will be converted to `type`.\n *\n * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\n * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\n * an array etc...\n *\n * If `src` is undefined then an empty texture will be created of size `width` by `height`.\n *\n * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\n *    default: undefined. Also see {@link module:twgl.setDefaults}.\n *\n * @memberOf module:twgl\n */\n// NOTE: While querying GL is considered slow it's not remotely as slow\n// as uploading a texture. On top of that you're unlikely to call this in\n// a perf critical loop. Even if upload a texture every frame that's unlikely\n// to be more than 1 or 2 textures a frame. In other words, the benefits of\n// making the API easy to use outweigh any supposed perf benefits\n//\n// Also note I get that having one global of these is bad practice.\n// As long as it's used correctly it means no garbage which probably\n// doesn't matter when dealing with textures but old habits die hard.\n\n\nvar lastPackState = {};\n/**\n * Saves any packing state that will be set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\nfunction savePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    lastPackState.colorspaceConversion = gl.getParameter(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL);\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    lastPackState.premultiplyAlpha = gl.getParameter(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    lastPackState.flipY = gl.getParameter(gl.UNPACK_FLIP_Y_WEBGL);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, options.flipY);\n  }\n}\n/**\n * Restores any packing state that was set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction restorePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, lastPackState.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, lastPackState.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, lastPackState.flipY);\n  }\n}\n/**\n * Saves state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction saveSkipState(gl) {\n  lastPackState.unpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n\n  if (utils.isWebGL2(gl)) {\n    lastPackState.unpackRowLength = gl.getParameter(gl.UNPACK_ROW_LENGTH);\n    lastPackState.unpackImageHeight = gl.getParameter(gl.UNPACK_IMAGE_HEIGHT);\n    lastPackState.unpackSkipPixels = gl.getParameter(gl.UNPACK_SKIP_PIXELS);\n    lastPackState.unpackSkipRows = gl.getParameter(gl.UNPACK_SKIP_ROWS);\n    lastPackState.unpackSkipImages = gl.getParameter(gl.UNPACK_SKIP_IMAGES);\n  }\n}\n/**\n * Restores state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction restoreSkipState(gl) {\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, lastPackState.unpackAlignment);\n\n  if (utils.isWebGL2(gl)) {\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, lastPackState.unpackRowLength);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, lastPackState.unpackImageHeight);\n    gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, lastPackState.unpackSkipPixels);\n    gl.pixelStorei(gl.UNPACK_SKIP_ROWS, lastPackState.unpackSkipRows);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, lastPackState.unpackSkipImages);\n  }\n}\n/**\n * Sets the parameters of a texture or sampler\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number|WebGLSampler} target texture target or sampler\n * @param {function()} parameteriFn texParamteri or samplerParameteri fn\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n */\n\n\nfunction setTextureSamplerParameters(gl, target, parameteriFn, options) {\n  if (options.minMag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.minMag);\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.minMag);\n  }\n\n  if (options.min) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.min);\n  }\n\n  if (options.mag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.mag);\n  }\n\n  if (options.wrap) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrap);\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrap);\n\n    if (target === gl.TEXTURE_3D || helper.isSampler(gl, target)) {\n      parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrap);\n    }\n  }\n\n  if (options.wrapR) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrapR);\n  }\n\n  if (options.wrapS) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrapS);\n  }\n\n  if (options.wrapT) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrapT);\n  }\n\n  if (options.minLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_LOD, options.minLod);\n  }\n\n  if (options.maxLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LOD, options.maxLod);\n  }\n\n  if (options.baseLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_BASE_LEVEL, options.baseLevel);\n  }\n\n  if (options.maxLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LEVEL, options.maxLevel);\n  }\n}\n/**\n * Sets the texture parameters of a texture.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureParameters(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  setTextureSamplerParameters(gl, target, gl.texParameteri, options);\n}\n/**\n * Sets the sampler parameters of a sampler.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLSampler} sampler the WebGLSampler to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setSamplerParameters(gl, sampler, options) {\n  setTextureSamplerParameters(gl, sampler, gl.samplerParameteri, options);\n}\n/**\n * Creates a new sampler object and sets parameters.\n *\n * Example:\n *\n *      const sampler = twgl.createSampler(gl, {\n *        minMag: gl.NEAREST,         // sets both TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER\n *        wrap: gl.CLAMP_TO_NEAREST,  // sets both TEXTURE_WRAP_S and TEXTURE_WRAP_T and TEXTURE_WRAP_R\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per sampler.\n * @return {Object.<string,WebGLSampler>} the created samplers by name\n */\n\n\nfunction createSampler(gl, options) {\n  var sampler = gl.createSampler();\n  setSamplerParameters(gl, sampler, options);\n  return sampler;\n}\n/**\n * Creates a multiple sampler objects and sets parameters on each.\n *\n * Example:\n *\n *      const samplers = twgl.createSamplers(gl, {\n *        nearest: {\n *          minMag: gl.NEAREST,\n *        },\n *        nearestClampS: {\n *          minMag: gl.NEAREST,\n *          wrapS: gl.CLAMP_TO_NEAREST,\n *        },\n *        linear: {\n *          minMag: gl.LINEAR,\n *        },\n *        nearestClamp: {\n *          minMag: gl.NEAREST,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClamp: {\n *          minMag: gl.LINEAR,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClampT: {\n *          minMag: gl.LINEAR,\n *          wrapT: gl.CLAMP_TO_EDGE,\n *        },\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set on the sampler\n */\n\n\nfunction createSamplers(gl, samplerOptions) {\n  var samplers = {};\n  Object.keys(samplerOptions).forEach(function (name) {\n    samplers[name] = createSampler(gl, samplerOptions[name]);\n  });\n  return samplers;\n}\n/**\n * Makes a 1x1 pixel\n * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\n * @param {(number[]|ArrayBufferView)} [color] The color using 0-1 values\n * @return {Uint8Array} Unit8Array with color.\n */\n\n\nfunction make1Pixel(color) {\n  color = color || defaults.textureColor;\n\n  if (isArrayBuffer(color)) {\n    return color;\n  }\n\n  return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n/**\n * Sets filtering or generates mips for texture based on width or height\n * If width or height is not passed in uses `options.width` and//or `options.height`\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @param {number} [width] width of texture\n * @param {number} [height] height of texture\n * @param {number} [internalFormat] The internalFormat parameter from texImage2D etc..\n * @param {number} [type] The type parameter for texImage2D etc..\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type) {\n  options = options || defaults.textureOptions;\n  internalFormat = internalFormat || gl.RGBA;\n  type = type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n  width = width || options.width;\n  height = height || options.height;\n  gl.bindTexture(target, tex);\n\n  if (canGenerateMipmap(gl, width, height, internalFormat, type)) {\n    gl.generateMipmap(target);\n  } else {\n    var filtering = canFilter(internalFormat, type) ? gl.LINEAR : gl.NEAREST;\n    gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n}\n\nfunction shouldAutomaticallySetTextureFilteringForSize(options) {\n  return options.auto === true || options.auto === undefined && options.level === undefined;\n}\n/**\n * Gets an array of cubemap face enums\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @return {number[]} cubemap face enums\n */\n\n\nfunction getCubeFaceOrder(gl, options) {\n  options = options || {};\n  return options.cubeFaceOrder || [gl.TEXTURE_CUBE_MAP_POSITIVE_X, gl.TEXTURE_CUBE_MAP_NEGATIVE_X, gl.TEXTURE_CUBE_MAP_POSITIVE_Y, gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, gl.TEXTURE_CUBE_MAP_POSITIVE_Z, gl.TEXTURE_CUBE_MAP_NEGATIVE_Z];\n}\n/**\n * @typedef {Object} FaceInfo\n * @property {number} face gl enum for texImage2D\n * @property {number} ndx face index (0 - 5) into source data\n * @ignore\n */\n\n/**\n * Gets an array of FaceInfos\n * There's a bug in some NVidia drivers that will crash the driver if\n * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\n * the user's desired order from his faces to WebGL and make sure we\n * do the faces in WebGL order\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundent but\n *    it's needed internally to sort the array of `ndx` properties by `face`.\n */\n\n\nfunction getCubeFacesWithNdx(gl, options) {\n  var faces = getCubeFaceOrder(gl, options); // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\n\n  var facesWithNdx = faces.map(function (face, ndx) {\n    return {\n      face: face,\n      ndx: ndx\n    };\n  });\n  facesWithNdx.sort(function (a, b) {\n    return a.face - b.face;\n  });\n  return facesWithNdx;\n}\n/**\n * Set a texture from the contents of an element. Will also set\n * texture filtering or generate mips based on the dimensions of the element\n * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\n * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {HTMLElement} element a canvas, img, or video element.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @kind function\n */\n\n\nfunction setTextureFromElement(gl, tex, element, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  var level = options.level || 0;\n  var width = element.width;\n  var height = element.height;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // guess the parts\n    var imgWidth = element.width;\n    var imgHeight = element.height;\n    var size;\n    var slices;\n\n    if (imgWidth / 6 === imgHeight) {\n      // It's 6x1\n      size = imgHeight;\n      slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\n    } else if (imgHeight / 6 === imgWidth) {\n      // It's 1x6\n      size = imgWidth;\n      slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\n    } else if (imgWidth / 3 === imgHeight / 2) {\n      // It's 3x2\n      size = imgWidth / 3;\n      slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\n    } else if (imgWidth / 2 === imgHeight / 3) {\n      // It's 2x3\n      size = imgWidth / 2;\n      slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\n    } else {\n      throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\n    }\n\n    if (ctx) {\n      ctx.canvas.width = size;\n      ctx.canvas.height = size;\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size;\n        ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\n        gl.texImage2D(f.face, level, internalFormat, format, type, ctx.canvas);\n      }); // Free up the canvas memory\n\n      ctx.canvas.width = 1;\n      ctx.canvas.height = 1;\n    } else if (_globalObject.default.createImageBitmap) {\n      // NOTE: It seems like we should prefer ImageBitmap because unlike canvas it's\n      // note lossy? (alpha is not premultiplied? although I'm not sure what\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size; // We can't easily use a default texture color here as it would have to match\n        // the type across all faces where as with a 2D one there's only one face\n        // so we're replacing everything all at once. It also has to be the correct size.\n        // On the other hand we need all faces to be the same size so as one face loads\n        // the rest match else the texture will be unrenderable.\n\n        gl.texImage2D(f.face, level, internalFormat, size, size, 0, format, type, null);\n\n        _globalObject.default.createImageBitmap(element, xOffset, yOffset, size, size, {\n          premultiplyAlpha: 'none',\n          colorSpaceConversion: 'none'\n        }).then(function (imageBitmap) {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex);\n          gl.texImage2D(f.face, level, internalFormat, format, type, imageBitmap);\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n          }\n        });\n      });\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    var smallest = Math.min(element.width, element.height);\n    var largest = Math.max(element.width, element.height);\n    var depth = largest / smallest;\n\n    if (depth % 1 !== 0) {\n      throw \"can not compute 3D dimensions of element\";\n    }\n\n    var xMult = element.width === largest ? 1 : 0;\n    var yMult = element.height === largest ? 1 : 0;\n    saveSkipState(gl);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, element.width);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, 0);\n    gl.texImage3D(target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null);\n\n    for (var d = 0; d < depth; ++d) {\n      var srcX = d * smallest * xMult;\n      var srcY = d * smallest * yMult;\n      gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, srcX);\n      gl.pixelStorei(gl.UNPACK_SKIP_ROWS, srcY);\n      gl.texSubImage3D(target, level, 0, 0, d, smallest, smallest, 1, format, type, element);\n    }\n\n    restoreSkipState(gl);\n  } else {\n    gl.texImage2D(target, level, internalFormat, format, type, element);\n  }\n\n  restorePackState(gl, options);\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n}\n\nfunction noop() {}\n/**\n * Loads an image\n * @param {string} url url to image\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @return {HTMLImageElement} the image being loaded.\n */\n\n\nfunction loadImage(url, crossOrigin, callback) {\n  callback = callback || noop;\n  var img;\n\n  if (_globalObject.default.Image) {\n    img = new _globalObject.default.Image();\n    crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults.crossOrigin;\n\n    if (crossOrigin !== undefined) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    var clearEventHandlers = function clearEventHandlers() {\n      img.removeEventListener('error', onError); // eslint-disable-line\n\n      img.removeEventListener('load', onLoad); // eslint-disable-line\n\n      img = null;\n    };\n\n    var onError = function onError() {\n      var msg = \"couldn't load image: \" + url;\n      helper.error(msg);\n      callback(msg, img);\n      clearEventHandlers();\n    };\n\n    var onLoad = function onLoad() {\n      callback(null, img);\n      clearEventHandlers();\n    };\n\n    img.addEventListener('error', onError);\n    img.addEventListener('load', onLoad);\n    img.src = url;\n    return img;\n  } else if (_globalObject.default.ImageBitmap) {\n    var err;\n    var bm;\n\n    var cb = function cb() {\n      callback(err, bm);\n    };\n\n    var options = {};\n\n    if (crossOrigin) {\n      options.mode = 'cors'; // TODO: not sure how to translate image.crossOrigin\n    }\n\n    fetch(url, options).then(function (response) {\n      if (!response.ok) {\n        throw response;\n      }\n\n      return response.blob();\n    }).then(function (blob) {\n      return _globalObject.default.createImageBitmap(blob, {\n        premultiplyAlpha: 'none',\n        colorSpaceConversion: 'none'\n      });\n    }).then(function (bitmap) {\n      // not sure if this works. We don't want\n      // to catch the user's error. So, call\n      // the callback in a timeout so we're\n      // not in this scope inside the promise.\n      bm = bitmap;\n      setTimeout(cb);\n    }).catch(function (e) {\n      err = e;\n      setTimeout(cb);\n    });\n    img = null;\n  }\n\n  return img;\n}\n/**\n * check if object is a TexImageSource\n *\n * @param {Object} obj Object to test\n * @return {boolean} true if object is a TexImageSource\n */\n\n\nfunction isTexImageSource(obj) {\n  return _globalObject.default.ImageBitmap && obj instanceof _globalObject.default.ImageBitmap || _globalObject.default.ImageData && obj instanceof _globalObject.default.ImageData || _globalObject.default.HTMLElement && obj instanceof _globalObject.default.HTMLElement;\n}\n/**\n * if obj is an TexImageSource then just\n * uses it otherwise if obj is a string\n * then load it first.\n *\n * @param {string|TexImageSource} obj\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n */\n\n\nfunction loadAndUseImage(obj, crossOrigin, callback) {\n  if (isTexImageSource(obj)) {\n    setTimeout(function () {\n      callback(null, obj);\n    });\n    return obj;\n  }\n\n  return loadImage(obj, crossOrigin, callback);\n}\n/**\n * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\n * the default texture color is used which can be set by calling `setDefaultTextureColor`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureTo1PixelColor(gl, tex, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n\n  if (options.color === false) {\n    return;\n  } // Assume it's a URL\n  // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\n\n\n  var color = make1Pixel(options.color);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, 0, gl.RGBA, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  } else {\n    gl.texImage2D(target, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  }\n}\n/**\n * The src image(s) used to create a texture.\n *\n * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\n * you can pass in urls for images to load into the textures. If it's a single url\n * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\n * this will be a corresponding array of images for the cubemap.\n *\n * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback TextureReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} texture the texture.\n * @param {module:twgl.TextureSrc} souce image(s) used to as the src for the texture\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when all images have finished downloading and been uploaded into their respective textures\n * @callback TexturesReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\n * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback CubemapReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each face.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback ThreeDReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each slice.\n * @memberOf module:twgl\n */\n\n/**\n * Loads a texture from an image from a Url as specified in `options.src`\n * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\n * immediately useable. It will be updated with the contents of the image once the image has finished\n * downloading. Filtering options will be set as approriate for image unless `options.auto === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\n *    be non null if there was an error.\n * @return {HTMLImageElement} the image being downloaded.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadTextureFromUrl(gl, tex, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var img = loadAndUseImage(options.src, options.crossOrigin, function (err, img) {\n    if (err) {\n      callback(err, tex, img);\n    } else {\n      setTextureFromElement(gl, tex, img, options);\n      callback(null, tex, img);\n    }\n  });\n  return img;\n}\n/**\n * Loads a cubemap from 6 urls or TexImageSources as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadCubemapFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n\n  if (urls.length !== 6) {\n    throw \"there must be 6 urls for a cubemap\";\n  }\n\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n\n  if (target !== gl.TEXTURE_CUBE_MAP) {\n    throw \"target must be TEXTURE_CUBE_MAP\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = 6;\n  var errors = [];\n  var faces = getCubeFaceOrder(gl, options);\n  var imgs; // eslint-disable-line\n\n  function uploadImg(faceTarget) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        if (img.width !== img.height) {\n          errors.push(\"cubemap face img is not a square: \" + img.src);\n        } else {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex); // So assuming this is the first image we now have one face that's img sized\n          // and 5 faces that are 1x1 pixel so size the other faces\n\n          if (numToLoad === 5) {\n            // use the default order\n            getCubeFaceOrder(gl).forEach(function (otherTarget) {\n              // Should we re-use the same face or a color?\n              gl.texImage2D(otherTarget, level, internalFormat, format, type, img);\n            });\n          } else {\n            gl.texImage2D(faceTarget, level, internalFormat, format, type, img);\n          }\n\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            gl.generateMipmap(target);\n          }\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(faces[ndx]));\n  });\n}\n/**\n * Loads a 2d array or 3d texture from urls OR TexImageSources as specified in `options.src`.\n * Will set the texture to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n *\n * If the width and height is not specified the width and height of the first\n * image loaded will be used. Note that since images are loaded async\n * which image downloads first is unknown.\n *\n * If an image is not the same size as the width and height it will be scaled\n * to that width and height.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.ThreeDReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadSlicesFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D_ARRAY;\n\n  if (target !== gl.TEXTURE_3D && target !== gl.TEXTURE_2D_ARRAY) {\n    throw \"target must be TEXTURE_3D or TEXTURE_2D_ARRAY\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = urls.length;\n  var errors = [];\n  var imgs; // eslint-disable-line\n\n  var level = options.level || 0;\n  var width = options.width;\n  var height = options.height;\n  var depth = urls.length;\n  var firstImage = true;\n\n  function uploadImg(slice) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        savePackState(gl, options);\n        gl.bindTexture(target, tex);\n\n        if (firstImage) {\n          firstImage = false;\n          width = options.width || img.width;\n          height = options.height || img.height;\n          gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null); // put it in every slice otherwise some slices will be 0,0,0,0\n\n          for (var s = 0; s < depth; ++s) {\n            gl.texSubImage3D(target, level, 0, 0, s, width, height, 1, format, type, img);\n          }\n        } else {\n          var src = img;\n\n          if (img.width !== width || img.height !== height) {\n            // Size the image to fix\n            src = ctx.canvas;\n            ctx.canvas.width = width;\n            ctx.canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n          }\n\n          gl.texSubImage3D(target, level, 0, 0, slice, width, height, 1, format, type, src); // free the canvas memory\n\n          if (src === ctx.canvas) {\n            ctx.canvas.width = 0;\n            ctx.canvas.height = 0;\n          }\n        }\n\n        restorePackState(gl, options);\n\n        if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n          gl.generateMipmap(target);\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(ndx));\n  });\n}\n/**\n * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\n * guess the size. See {@link module:twgl.TextureOptions}.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {(number[]|ArrayBufferView)} src An array or typed arry with texture data.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFromArray(gl, tex, src, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var width = options.width;\n  var height = options.height;\n  var depth = options.depth;\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n\n  if (!isArrayBuffer(src)) {\n    var Type = typedArrays.getTypedArrayTypeForGLType(type);\n    src = new Type(src);\n  } else if (src instanceof Uint8ClampedArray) {\n    src = new Uint8Array(src.buffer);\n  }\n\n  var bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\n  var numElements = src.byteLength / bytesPerElement; // TODO: check UNPACK_ALIGNMENT?\n\n  if (numElements % 1) {\n    throw \"length wrong size for format: \" + utils.glEnumToString(gl, format);\n  }\n\n  var dimensions;\n\n  if (target === gl.TEXTURE_3D) {\n    if (!width && !height && !depth) {\n      var size = Math.cbrt(numElements);\n\n      if (size % 1 !== 0) {\n        throw \"can't guess cube size of array of numElements: \" + numElements;\n      }\n\n      width = size;\n      height = size;\n      depth = size;\n    } else if (width && (!height || !depth)) {\n      dimensions = guessDimensions(gl, target, height, depth, numElements / width);\n      height = dimensions.width;\n      depth = dimensions.height;\n    } else if (height && (!width || !depth)) {\n      dimensions = guessDimensions(gl, target, width, depth, numElements / height);\n      width = dimensions.width;\n      depth = dimensions.height;\n    } else {\n      dimensions = guessDimensions(gl, target, width, height, numElements / depth);\n      width = dimensions.width;\n      height = dimensions.height;\n    }\n  } else {\n    dimensions = guessDimensions(gl, target, width, height, numElements);\n    width = dimensions.width;\n    height = dimensions.height;\n  }\n\n  saveSkipState(gl);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, options.unpackAlignment || 1);\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    var elementsPerElement = bytesPerElement / src.BYTES_PER_ELEMENT;\n    var faceSize = numElements / 6 * elementsPerElement;\n    getCubeFacesWithNdx(gl, options).forEach(function (f) {\n      var offset = faceSize * f.ndx;\n      var data = src.subarray(offset, offset + faceSize);\n      gl.texImage2D(f.face, level, internalFormat, width, height, 0, format, type, data);\n    });\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, src);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, src);\n  }\n\n  restorePackState(gl, options);\n  restoreSkipState(gl);\n  return {\n    width: width,\n    height: height,\n    depth: depth,\n    type: type\n  };\n}\n/**\n * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\n * You must set `options.width` and `options.height`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setEmptyTexture(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null);\n    }\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, options.width, options.height, 0, format, type, null);\n  }\n\n  restorePackState(gl, options);\n}\n/**\n * Creates a texture based on the options passed in.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\n * @return {WebGLTexture} the created texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTexture(gl, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  var tex = gl.createTexture();\n  var target = options.target || gl.TEXTURE_2D;\n  var width = options.width || 1;\n  var height = options.height || 1;\n  var internalFormat = options.internalFormat || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var type = options.type || formatType.type;\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // this should have been the default for CUBEMAPS :(\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  var src = options.src;\n\n  if (src) {\n    if (typeof src === \"function\") {\n      src = src(gl, options);\n    }\n\n    if (typeof src === \"string\") {\n      loadTextureFromUrl(gl, tex, options, callback);\n    } else if (isArrayBuffer(src) || Array.isArray(src) && (typeof src[0] === 'number' || Array.isArray(src[0]) || isArrayBuffer(src[0]))) {\n      var dimensions = setTextureFromArray(gl, tex, src, options);\n      width = dimensions.width;\n      height = dimensions.height;\n      type = dimensions.type;\n    } else if (Array.isArray(src) && (typeof src[0] === 'string' || isTexImageSource(src[0]))) {\n      if (target === gl.TEXTURE_CUBE_MAP) {\n        loadCubemapFromUrls(gl, tex, options, callback);\n      } else {\n        loadSlicesFromUrls(gl, tex, options, callback);\n      }\n    } else if (isTexImageSource(src)) {\n      setTextureFromElement(gl, tex, src, options);\n      width = src.width;\n      height = src.height;\n    } else {\n      throw \"unsupported src type\";\n    }\n  } else {\n    setEmptyTexture(gl, tex, options);\n  }\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n  return tex;\n}\n/**\n * Resizes a texture based on the options passed in.\n *\n * Note: This is not a generic resize anything function.\n * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\n * It will use `options.src` if it exists to try to determine a `type`\n * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\n * for the texture. Texture parameters will be set accordingly\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the texture to resize\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {number} [width] the new width. If not passed in will use `options.width`\n * @param {number} [height] the new height. If not passed in will use `options.height`\n * @memberOf module:twgl/textures\n */\n\n\nfunction resizeTexture(gl, tex, options, width, height) {\n  width = width || options.width;\n  height = height || options.height;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type;\n  var src = options.src;\n\n  if (!src) {\n    type = options.type || formatType.type;\n  } else if (isArrayBuffer(src) || Array.isArray(src) && typeof src[0] === 'number') {\n    type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  } else {\n    type = options.type || formatType.type;\n  }\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, width, height, 0, format, type, null);\n    }\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\n  }\n}\n/**\n * Check if a src is an async request.\n * if src is a string we're going to download an image\n * if src is an array of strings we're going to download cubemap images\n * @param {*} src The src from a TextureOptions\n * @returns {bool} true if src is async.\n */\n\n\nfunction isAsyncSrc(src) {\n  return typeof src === 'string' || Array.isArray(src) && typeof src[0] === 'string';\n}\n/**\n * Creates a bunch of textures based on the passed in options.\n *\n * Example:\n *\n *     const textures = twgl.createTextures(gl, {\n *       // a power of 2 image\n *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\n *       // a non-power of 2 image\n *       clover: { src: \"images/clover.jpg\" },\n *       // From a canvas\n *       fromCanvas: { src: ctx.canvas },\n *       // A cubemap from 6 images\n *       yokohama: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: [\n *           'images/yokohama/posx.jpg',\n *           'images/yokohama/negx.jpg',\n *           'images/yokohama/posy.jpg',\n *           'images/yokohama/negy.jpg',\n *           'images/yokohama/posz.jpg',\n *           'images/yokohama/negz.jpg',\n *         ],\n *       },\n *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\n *       goldengate: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: 'images/goldengate.jpg',\n *       },\n *       // A 2x2 pixel texture from a JavaScript array\n *       checker: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         src: [\n *           255,255,255,255,\n *           192,192,192,255,\n *           192,192,192,255,\n *           255,255,255,255,\n *         ],\n *       },\n *       // a 1x2 pixel texture from a typed array.\n *       stripe: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         format: gl.LUMINANCE,\n *         src: new Uint8Array([\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *         ]),\n *         width: 1,\n *       },\n *     });\n *\n * Now\n *\n * *   `textures.hftIcon` will be a 2d texture\n * *   `textures.clover` will be a 2d texture\n * *   `textures.fromCanvas` will be a 2d texture\n * *   `textures.yohohama` will be a cubemap texture\n * *   `textures.goldengate` will be a cubemap texture\n * *   `textures.checker` will be a 2d texture\n * *   `textures.stripe` will be a 2d texture\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\n * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\n * @return {Object.<string,WebGLTexture>} the created textures by name\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTextures(gl, textureOptions, callback) {\n  callback = callback || noop;\n  var numDownloading = 0;\n  var errors = [];\n  var textures = {};\n  var images = {};\n\n  function callCallbackIfReady() {\n    if (numDownloading === 0) {\n      setTimeout(function () {\n        callback(errors.length ? errors : undefined, textures, images);\n      }, 0);\n    }\n  }\n\n  Object.keys(textureOptions).forEach(function (name) {\n    var options = textureOptions[name];\n    var onLoadFn;\n\n    if (isAsyncSrc(options.src)) {\n      onLoadFn = function onLoadFn(err, tex, img) {\n        images[name] = img;\n        --numDownloading;\n\n        if (err) {\n          errors.push(err);\n        }\n\n        callCallbackIfReady();\n      };\n\n      ++numDownloading;\n    }\n\n    textures[name] = createTexture(gl, options, onLoadFn);\n  }); // queue the callback if there are no images to download.\n  // We do this because if your code is structured to wait for\n  // images to download but then you comment out all the async\n  // images your code would break.\n\n  callCallbackIfReady();\n  return textures;\n} // Using quotes prevents Uglify from changing the names.\n// No speed diff AFAICT.\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  m4: true,\n  v3: true,\n  primitives: true\n};\nexports.primitives = exports.v3 = exports.m4 = void 0;\n\nvar m4 = _interopRequireWildcard(__webpack_require__(6));\n\nexports.m4 = m4;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nexports.v3 = v3;\n\nvar primitives = _interopRequireWildcard(__webpack_require__(10));\n\nexports.primitives = primitives;\n\nvar _twgl = __webpack_require__(11);\n\nObject.keys(_twgl).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _twgl[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.create3DFVertices = create3DFVertices;\nexports.createAugmentedTypedArray = createAugmentedTypedArray;\nexports.createCubeVertices = createCubeVertices;\nexports.createPlaneVertices = createPlaneVertices;\nexports.createSphereVertices = createSphereVertices;\nexports.createTruncatedConeVertices = createTruncatedConeVertices;\nexports.createXYQuadVertices = createXYQuadVertices;\nexports.createCresentVertices = createCresentVertices;\nexports.createCylinderVertices = createCylinderVertices;\nexports.createTorusVertices = createTorusVertices;\nexports.createDiscVertices = createDiscVertices;\nexports.deindexVertices = deindexVertices;\nexports.flattenNormals = flattenNormals;\nexports.makeRandomVertexColors = makeRandomVertexColors;\nexports.reorientDirections = reorientDirections;\nexports.reorientNormals = reorientNormals;\nexports.reorientPositions = reorientPositions;\nexports.reorientVertices = reorientVertices;\nexports.concatVertices = concatVertices;\nexports.duplicateVertices = duplicateVertices;\nexports.createDiscBuffers = exports.createDiscBufferInfo = exports.createTorusBuffers = exports.createTorusBufferInfo = exports.createCylinderBuffers = exports.createCylinderBufferInfo = exports.createCresentBuffers = exports.createCresentBufferInfo = exports.createXYQuadBuffers = exports.createXYQuadBufferInfo = exports.createTruncatedConeBuffers = exports.createTruncatedConeBufferInfo = exports.createSphereBuffers = exports.createSphereBufferInfo = exports.createPlaneBuffers = exports.createPlaneBufferInfo = exports.createCubeBuffers = exports.createCubeBufferInfo = exports.create3DFBuffers = exports.create3DFBufferInfo = void 0;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(7));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar m4 = _interopRequireWildcard(__webpack_require__(6));\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Various functions to make simple primitives\n *\n * note: Most primitive functions come in 3 styles\n *\n * *  `createSomeShapeBufferInfo`\n *\n *    These functions are almost always the functions you want to call. They\n *    create vertices then make WebGLBuffers and create {@link module:twgl.AttribInfo}s\n *    returing a {@link module:twgl.BufferInfo} you can pass to {@link module:twgl.setBuffersAndAttributes}\n *    and {@link module:twgl.drawBufferInfo} etc...\n *\n * *  `createSomeShapeBuffers`\n *\n *    These create WebGLBuffers and put your data in them but nothing else.\n *    It's a shortcut to doing it yourself if you don't want to use\n *    the higher level functions.\n *\n * *  `createSomeShapeVertices`\n *\n *    These just create vertices, no buffers. This allows you to manipulate the vertices\n *    or add more data before generating a {@link module:twgl.BufferInfo}. Once you're finished\n *    manipulating the vertices call {@link module:twgl.createBufferInfoFromArrays}.\n *\n *    example:\n *\n *        const arrays = twgl.primitives.createPlaneArrays(1);\n *        twgl.primitives.reorientVertices(arrays, m4.rotationX(Math.PI * 0.5));\n *        const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n * @module twgl/primitives\n */\nvar getArray = attributes.getArray_; // eslint-disable-line\n\nvar getNumComponents = attributes.getNumComponents_; // eslint-disable-line\n\n/**\n * Add `push` to a typed array. It just keeps a 'cursor'\n * and allows use to `push` values into the array so we\n * don't have to manually compute offsets\n * @param {TypedArray} typedArray TypedArray to augment\n * @param {number} numComponents number of components.\n */\n\nfunction augmentTypedArray(typedArray, numComponents) {\n  var cursor = 0;\n\n  typedArray.push = function () {\n    for (var ii = 0; ii < arguments.length; ++ii) {\n      var value = arguments[ii];\n\n      if (value instanceof Array || typedArrays.isArrayBuffer(value)) {\n        for (var jj = 0; jj < value.length; ++jj) {\n          typedArray[cursor++] = value[jj];\n        }\n      } else {\n        typedArray[cursor++] = value;\n      }\n    }\n  };\n\n  typedArray.reset = function (opt_index) {\n    cursor = opt_index || 0;\n  };\n\n  typedArray.numComponents = numComponents;\n  Object.defineProperty(typedArray, 'numElements', {\n    get: function get() {\n      return this.length / this.numComponents | 0;\n    }\n  });\n  return typedArray;\n}\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param {number} numComponents number of components\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n * @return {ArrayBufferView} A typed array.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createAugmentedTypedArray(numComponents, numElements, opt_type) {\n  var Type = opt_type || Float32Array;\n  return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n}\n\nfunction allButIndices(name) {\n  return name !== \"indices\";\n}\n/**\n * Given indexed vertices creates a new set of vertices unindexed by expanding the indexed vertices.\n * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\n * @return {Object.<string, TypedArray>} The deindexed vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction deindexVertices(vertices) {\n  var indices = vertices.indices;\n  var newVertices = {};\n  var numElements = indices.length;\n\n  function expandToUnindexed(channel) {\n    var srcBuffer = vertices[channel];\n    var numComponents = srcBuffer.numComponents;\n    var dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\n\n    for (var ii = 0; ii < numElements; ++ii) {\n      var ndx = indices[ii];\n      var offset = ndx * numComponents;\n\n      for (var jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n\n    newVertices[channel] = dstBuffer;\n  }\n\n  Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\n  return newVertices;\n}\n/**\n * flattens the normals of deindexed vertices in place.\n * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\n * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\n * @memberOf module:twgl/primitives\n */\n\n\nfunction flattenNormals(vertices) {\n  if (vertices.indices) {\n    throw \"can't flatten normals of indexed vertices. deindex them first\";\n  }\n\n  var normals = vertices.normal;\n  var numNormals = normals.length;\n\n  for (var ii = 0; ii < numNormals; ii += 9) {\n    // pull out the 3 normals for this triangle\n    var nax = normals[ii + 0];\n    var nay = normals[ii + 1];\n    var naz = normals[ii + 2];\n    var nbx = normals[ii + 3];\n    var nby = normals[ii + 4];\n    var nbz = normals[ii + 5];\n    var ncx = normals[ii + 6];\n    var ncy = normals[ii + 7];\n    var ncz = normals[ii + 8]; // add them\n\n    var nx = nax + nbx + ncx;\n    var ny = nay + nby + ncy;\n    var nz = naz + nbz + ncz; // normalize them\n\n    var length = Math.sqrt(nx * nx + ny * ny + nz * nz);\n    nx /= length;\n    ny /= length;\n    nz /= length; // copy them back in\n\n    normals[ii + 0] = nx;\n    normals[ii + 1] = ny;\n    normals[ii + 2] = nz;\n    normals[ii + 3] = nx;\n    normals[ii + 4] = ny;\n    normals[ii + 5] = nz;\n    normals[ii + 6] = nx;\n    normals[ii + 7] = ny;\n    normals[ii + 8] = nz;\n  }\n\n  return vertices;\n}\n\nfunction applyFuncToV3Array(array, matrix, fn) {\n  var len = array.length;\n  var tmp = new Float32Array(3);\n\n  for (var ii = 0; ii < len; ii += 3) {\n    fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\n    array[ii] = tmp[0];\n    array[ii + 1] = tmp[1];\n    array[ii + 2] = tmp[2];\n  }\n}\n\nfunction transformNormal(mi, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n/**\n * Reorients directions by the given matrix..\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientDirections(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformDirection);\n  return array;\n}\n/**\n * Reorients normals by the inverse-transpose of the given\n * matrix..\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientNormals(array, matrix) {\n  applyFuncToV3Array(array, m4.inverse(matrix), transformNormal);\n  return array;\n}\n/**\n * Reorients positions by the given matrix. In other words, it\n * multiplies each vertex by the given matrix.\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientPositions(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformPoint);\n  return array;\n}\n/**\n * Reorients arrays by the given matrix. Assumes arrays have\n * names that contains 'pos' could be reoriented as positions,\n * 'binorm' or 'tan' as directions, and 'norm' as normals.\n *\n * @param {Object.<string, (number[]|TypedArray)>} arrays The vertices to reorient\n * @param {Matrix} matrix matrix to reorient by.\n * @return {Object.<string, (number[]|TypedArray)>} same arrays that were passed in.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientVertices(arrays, matrix) {\n  Object.keys(arrays).forEach(function (name) {\n    var array = arrays[name];\n\n    if (name.indexOf(\"pos\") >= 0) {\n      reorientPositions(array, matrix);\n    } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\n      reorientDirections(array, matrix);\n    } else if (name.indexOf(\"norm\") >= 0) {\n      reorientNormals(array, matrix);\n    }\n  });\n  return arrays;\n}\n/**\n * Creates XY quad BufferInfo\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\n * @memberOf module:twgl/primitives\n * @function createXYQuadBufferInfo\n */\n\n/**\n * Creates XY quad Buffers\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {module:twgl.BufferInfo} the created XY Quad buffers\n * @memberOf module:twgl/primitives\n * @function createXYQuadBuffers\n */\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, TypedArray> the created XY Quad vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createXYQuadVertices(size, xOffset, yOffset) {\n  size = size || 2;\n  xOffset = xOffset || 0;\n  yOffset = yOffset || 0;\n  size *= 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [xOffset + -1 * size, yOffset + -1 * size, xOffset + 1 * size, yOffset + -1 * size, xOffset + -1 * size, yOffset + 1 * size, xOffset + 1 * size, yOffset + 1 * size]\n    },\n    normal: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n    texcoord: [0, 0, 1, 0, 0, 1, 1, 1],\n    indices: [0, 1, 2, 2, 1, 3]\n  };\n}\n/**\n * Creates XZ plane BufferInfo.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {@module:twgl.BufferInfo} The created plane BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createPlaneBufferInfo\n */\n\n/**\n * Creates XZ plane buffers.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, WebGLBuffer>} The created plane buffers.\n * @memberOf module:twgl/primitives\n * @function createPlaneBuffers\n */\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, TypedArray>} The created plane vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createPlaneVertices(width, depth, subdivisionsWidth, subdivisionsDepth, matrix) {\n  width = width || 1;\n  depth = depth || 1;\n  subdivisionsWidth = subdivisionsWidth || 1;\n  subdivisionsDepth = subdivisionsDepth || 1;\n  matrix = matrix || m4.identity();\n  var numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  for (var z = 0; z <= subdivisionsDepth; z++) {\n    for (var x = 0; x <= subdivisionsWidth; x++) {\n      var u = x / subdivisionsWidth;\n      var v = z / subdivisionsDepth;\n      positions.push(width * u - width * 0.5, 0, depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  var numVertsAcross = subdivisionsWidth + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (var _z = 0; _z < subdivisionsDepth; _z++) {\n    // eslint-disable-line\n    for (var _x = 0; _x < subdivisionsWidth; _x++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_z + 0) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x, (_z + 0) * numVertsAcross + _x + 1); // Make triangle 2 of quad.\n\n      indices.push((_z + 1) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x + 1, (_z + 0) * numVertsAcross + _x + 1);\n    }\n  }\n\n  var arrays = reorientVertices({\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  }, matrix);\n  return arrays;\n}\n/**\n * Creates sphere BufferInfo.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createSphereBufferInfo\n */\n\n/**\n * Creates sphere buffers.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\n * @memberOf module:twgl/primitives\n * @function createSphereBuffers\n */\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, TypedArray>} The created sphere vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createSphereVertices(radius, subdivisionsAxis, subdivisionsHeight, opt_startLatitudeInRadians, opt_endLatitudeInRadians, opt_startLongitudeInRadians, opt_endLongitudeInRadians) {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || Math.PI * 2;\n  var latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n  var longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians; // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n\n  var numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices); // Generate the individual vertices in our vertex buffer.\n\n  for (var y = 0; y <= subdivisionsHeight; y++) {\n    for (var x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      var u = x / subdivisionsAxis;\n      var v = y / subdivisionsHeight;\n      var theta = longRange * u;\n      var phi = latRange * v;\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      var ux = cosTheta * sinPhi;\n      var uy = cosPhi;\n      var uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  var numVertsAround = subdivisionsAxis + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n\n  for (var _x2 = 0; _x2 < subdivisionsAxis; _x2++) {\n    // eslint-disable-line\n    for (var _y = 0; _y < subdivisionsHeight; _y++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_y + 0) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2); // Make triangle 2 of quad.\n\n      indices.push((_y + 1) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2 + 1);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Array of the indices of corners of each face of a cube.\n * @type {Array.<number[]>}\n */\n\n\nvar CUBE_FACE_INDICES = [[3, 7, 5, 1], // right\n[6, 2, 0, 4], // left\n[6, 7, 3, 2], // ??\n[0, 1, 5, 4], // ??\n[7, 6, 4, 5], // front\n[2, 3, 1, 0]];\n/**\n * Creates a BufferInfo for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCubeBufferInfo\n */\n\n/**\n * Creates the buffers and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCubeBuffers\n */\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\nfunction createCubeVertices(size) {\n  size = size || 1;\n  var k = size / 2;\n  var cornerVertices = [[-k, -k, -k], [+k, -k, -k], [-k, +k, -k], [+k, +k, -k], [-k, -k, +k], [+k, -k, +k], [-k, +k, +k], [+k, +k, +k]];\n  var faceNormals = [[+1, +0, +0], [-1, +0, +0], [+0, +1, +0], [+0, -1, +0], [+0, +0, +1], [+0, +0, -1]];\n  var uvCoords = [[1, 0], [0, 0], [0, 1], [1, 1]];\n  var numVertices = 6 * 4;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (var f = 0; f < 6; ++f) {\n    var faceIndices = CUBE_FACE_INDICES[f];\n\n    for (var v = 0; v < 4; ++v) {\n      var position = cornerVertices[faceIndices[v]];\n      var normal = faceNormals[f];\n      var uv = uvCoords[v]; // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n\n      positions.push(position);\n      normals.push(normal);\n      texcoords.push(uv);\n    } // Two triangles make a square face.\n\n\n    var offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a BufferInfo for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created cone BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBufferInfo\n */\n\n/**\n * Creates buffers for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created cone buffers.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBuffers\n */\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created cone vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTruncatedConeVertices(bottomRadius, topRadius, height, radialSubdivisions, verticalSubdivisions, opt_topCap, opt_bottomCap) {\n  if (radialSubdivisions < 3) {\n    throw Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  var topCap = opt_topCap === undefined ? true : opt_topCap;\n  var bottomCap = opt_bottomCap === undefined ? true : opt_bottomCap;\n  var extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n  var numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra) * 2, Uint16Array);\n  var vertsAroundEdge = radialSubdivisions + 1; // The slant of the cone is constant across its surface\n\n  var slant = Math.atan2(bottomRadius - topRadius, height);\n  var cosSlant = Math.cos(slant);\n  var sinSlant = Math.sin(slant);\n  var start = topCap ? -2 : 0;\n  var end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (var yy = start; yy <= end; ++yy) {\n    var v = yy / verticalSubdivisions;\n    var y = height * v;\n    var ringRadius = void 0;\n\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius + (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n\n    y -= height / 2;\n\n    for (var ii = 0; ii < vertsAroundEdge; ++ii) {\n      var sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      var cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      normals.push(yy < 0 || yy > verticalSubdivisions ? 0 : sin * cosSlant, yy < 0 ? -1 : yy > verticalSubdivisions ? 1 : sinSlant, yy < 0 || yy > verticalSubdivisions ? 0 : cos * cosSlant);\n      texcoords.push(ii / radialSubdivisions, 1 - v);\n    }\n  }\n\n  for (var _yy = 0; _yy < verticalSubdivisions + extra; ++_yy) {\n    // eslint-disable-line\n    for (var _ii = 0; _ii < radialSubdivisions; ++_ii) {\n      // eslint-disable-line\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 0) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii);\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 0 + _ii);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Expands RLE data\n * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param {number[]} [padding] value to add each entry with.\n * @return {number[]} the expanded rleData\n */\n\n\nfunction expandRLEData(rleData, padding) {\n  padding = padding || [];\n  var data = [];\n\n  for (var ii = 0; ii < rleData.length; ii += 4) {\n    var runLength = rleData[ii];\n    var element = rleData.slice(ii + 1, ii + 4);\n    element.push.apply(element, padding);\n\n    for (var jj = 0; jj < runLength; ++jj) {\n      data.push.apply(data, element);\n    }\n  }\n\n  return data;\n}\n/**\n * Creates 3D 'F' BufferInfo.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function create3DFBufferInfo\n */\n\n/**\n * Creates 3D 'F' buffers.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function create3DFBuffers\n */\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction create3DFVertices() {\n  var positions = [// left column front\n  0, 0, 0, 0, 150, 0, 30, 0, 0, 0, 150, 0, 30, 150, 0, 30, 0, 0, // top rung front\n  30, 0, 0, 30, 30, 0, 100, 0, 0, 30, 30, 0, 100, 30, 0, 100, 0, 0, // middle rung front\n  30, 60, 0, 30, 90, 0, 67, 60, 0, 30, 90, 0, 67, 90, 0, 67, 60, 0, // left column back\n  0, 0, 30, 30, 0, 30, 0, 150, 30, 0, 150, 30, 30, 0, 30, 30, 150, 30, // top rung back\n  30, 0, 30, 100, 0, 30, 30, 30, 30, 30, 30, 30, 100, 0, 30, 100, 30, 30, // middle rung back\n  30, 60, 30, 67, 60, 30, 30, 90, 30, 30, 90, 30, 67, 60, 30, 67, 90, 30, // top\n  0, 0, 0, 100, 0, 0, 100, 0, 30, 0, 0, 0, 100, 0, 30, 0, 0, 30, // top rung front\n  100, 0, 0, 100, 30, 0, 100, 30, 30, 100, 0, 0, 100, 30, 30, 100, 0, 30, // under top rung\n  30, 30, 0, 30, 30, 30, 100, 30, 30, 30, 30, 0, 100, 30, 30, 100, 30, 0, // between top rung and middle\n  30, 30, 0, 30, 60, 30, 30, 30, 30, 30, 30, 0, 30, 60, 0, 30, 60, 30, // top of middle rung\n  30, 60, 0, 67, 60, 30, 30, 60, 30, 30, 60, 0, 67, 60, 0, 67, 60, 30, // front of middle rung\n  67, 60, 0, 67, 90, 30, 67, 60, 30, 67, 60, 0, 67, 90, 0, 67, 90, 30, // bottom of middle rung.\n  30, 90, 0, 30, 90, 30, 67, 90, 30, 30, 90, 0, 67, 90, 30, 67, 90, 0, // front of bottom\n  30, 90, 0, 30, 150, 30, 30, 90, 30, 30, 90, 0, 30, 150, 0, 30, 150, 30, // bottom\n  0, 150, 0, 0, 150, 30, 30, 150, 30, 0, 150, 0, 30, 150, 30, 30, 150, 0, // left side\n  0, 0, 0, 0, 0, 30, 0, 150, 30, 0, 0, 0, 0, 150, 30, 0, 150, 0];\n  var texcoords = [// left column front\n  0.22, 0.19, 0.22, 0.79, 0.34, 0.19, 0.22, 0.79, 0.34, 0.79, 0.34, 0.19, // top rung front\n  0.34, 0.19, 0.34, 0.31, 0.62, 0.19, 0.34, 0.31, 0.62, 0.31, 0.62, 0.19, // middle rung front\n  0.34, 0.43, 0.34, 0.55, 0.49, 0.43, 0.34, 0.55, 0.49, 0.55, 0.49, 0.43, // left column back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // middle rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // top rung front\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // under top rung\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // between top rung and middle\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // top of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // front of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom of middle rung.\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // front of bottom\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // left side\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0];\n  var normals = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 0, 0, 1, // left column back\n  // top rung back\n  // middle rung back\n  18, 0, 0, -1, // top\n  6, 0, 1, 0, // top rung front\n  6, 1, 0, 0, // under top rung\n  6, 0, -1, 0, // between top rung and middle\n  6, 1, 0, 0, // top of middle rung\n  6, 0, 1, 0, // front of middle rung\n  6, 1, 0, 0, // bottom of middle rung.\n  6, 0, -1, 0, // front of bottom\n  6, 1, 0, 0, // bottom\n  6, 0, -1, 0, // left side\n  6, -1, 0, 0]);\n  var colors = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 200, 70, 120, // left column back\n  // top rung back\n  // middle rung back\n  18, 80, 70, 200, // top\n  6, 70, 200, 210, // top rung front\n  6, 200, 200, 70, // under top rung\n  6, 210, 100, 70, // between top rung and middle\n  6, 210, 160, 70, // top of middle rung\n  6, 70, 180, 210, // front of middle rung\n  6, 100, 70, 210, // bottom of middle rung.\n  6, 76, 210, 100, // front of bottom\n  6, 140, 210, 80, // bottom\n  6, 90, 130, 110, // left side\n  6, 160, 160, 220], [255]);\n  var numVerts = positions.length / 3;\n  var arrays = {\n    position: createAugmentedTypedArray(3, numVerts),\n    texcoord: createAugmentedTypedArray(2, numVerts),\n    normal: createAugmentedTypedArray(3, numVerts),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array)\n  };\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (var ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return arrays;\n}\n/**\n * Creates cresent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCresentBufferInfo\n */\n\n/**\n * Creates cresent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates cresent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCresentVertices(verticalRadius, outerRadius, innerRadius, thickness, subdivisionsDown, startOffset, endOffset) {\n  if (subdivisionsDown <= 0) {\n    throw Error('subdivisionDown must be > 0');\n  }\n\n  startOffset = startOffset || 0;\n  endOffset = endOffset || 1;\n  var subdivisionsThick = 2;\n  var offsetRange = endOffset - startOffset;\n  var numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  function lerp(a, b, s) {\n    return a + (b - a) * s;\n  }\n\n  function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\n    for (var z = 0; z <= subdivisionsDown; z++) {\n      var uBack = x / (subdivisionsThick - 1);\n      var v = z / subdivisionsDown;\n      var xBack = (uBack - 0.5) * 2;\n      var angle = (startOffset + v * offsetRange) * Math.PI;\n      var s = Math.sin(angle);\n      var c = Math.cos(angle);\n      var radius = lerp(verticalRadius, arcRadius, s);\n      var px = xBack * thickness;\n      var py = c * verticalRadius;\n      var pz = s * radius;\n      positions.push(px, py, pz);\n      var n = v3.add(v3.multiply([0, s, c], normalMult), normalAdd);\n      normals.push(n);\n      texcoords.push(uBack * uMult + uAdd, v);\n    }\n  } // Generate the individual vertices in our vertex buffer.\n\n\n  for (var x = 0; x < subdivisionsThick; x++) {\n    var uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\n    createArc(outerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\n    createArc(innerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\n  } // Do outer surface.\n\n\n  var indices = createAugmentedTypedArray(3, subdivisionsDown * 2 * (2 + subdivisionsThick), Uint16Array);\n\n  function createSurface(leftArcOffset, rightArcOffset) {\n    for (var z = 0; z < subdivisionsDown; ++z) {\n      // Make triangle 1 of quad.\n      indices.push(leftArcOffset + z + 0, leftArcOffset + z + 1, rightArcOffset + z + 0); // Make triangle 2 of quad.\n\n      indices.push(leftArcOffset + z + 1, rightArcOffset + z + 1, rightArcOffset + z + 0);\n    }\n  }\n\n  var numVerticesDown = subdivisionsDown + 1; // front\n\n  createSurface(numVerticesDown * 0, numVerticesDown * 4); // right\n\n  createSurface(numVerticesDown * 5, numVerticesDown * 7); // back\n\n  createSurface(numVerticesDown * 6, numVerticesDown * 2); // left\n\n  createSurface(numVerticesDown * 3, numVerticesDown * 1);\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates cylinder BufferInfo. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCylinderBufferInfo\n */\n\n/**\n * Creates cylinder buffers. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCylinderBuffers\n */\n\n/**\n * Creates cylinder vertices. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCylinderVertices(radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap) {\n  return createTruncatedConeVertices(radius, radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap);\n}\n/**\n * Creates BufferInfo for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTorusBufferInfo\n */\n\n/**\n * Creates buffers for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createTorusBuffers\n */\n\n/**\n * Creates vertices for a torus\n *\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTorusVertices(radius, thickness, radialSubdivisions, bodySubdivisions, startAngle, endAngle) {\n  if (radialSubdivisions < 3) {\n    throw Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw Error('verticalSubdivisions must be 3 or greater');\n  }\n\n  startAngle = startAngle || 0;\n  endAngle = endAngle || Math.PI * 2;\n  var range = endAngle - startAngle;\n  var radialParts = radialSubdivisions + 1;\n  var bodyParts = bodySubdivisions + 1;\n  var numVertices = radialParts * bodyParts;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * bodySubdivisions * 2, Uint16Array);\n\n  for (var slice = 0; slice < bodyParts; ++slice) {\n    var v = slice / bodySubdivisions;\n    var sliceAngle = v * Math.PI * 2;\n    var sliceSin = Math.sin(sliceAngle);\n    var ringRadius = radius + sliceSin * thickness;\n    var ny = Math.cos(sliceAngle);\n    var y = ny * thickness;\n\n    for (var ring = 0; ring < radialParts; ++ring) {\n      var u = ring / radialSubdivisions;\n      var ringAngle = startAngle + u * range;\n      var xSin = Math.sin(ringAngle);\n      var zCos = Math.cos(ringAngle);\n      var x = xSin * ringRadius;\n      var z = zCos * ringRadius;\n      var nx = xSin * sliceSin;\n      var nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (var _slice = 0; _slice < bodySubdivisions; ++_slice) {\n    // eslint-disable-line\n    for (var _ring = 0; _ring < radialSubdivisions; ++_ring) {\n      // eslint-disable-line\n      var nextRingIndex = 1 + _ring;\n      var nextSliceIndex = 1 + _slice;\n      indices.push(radialParts * _slice + _ring, radialParts * nextSliceIndex + _ring, radialParts * _slice + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + _ring, radialParts * nextSliceIndex + nextRingIndex, radialParts * _slice + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createDiscBufferInfo\n */\n\n/**\n * Creates disc buffers. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createDiscBuffers\n */\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createDiscVertices(radius, divisions, stacks, innerRadius, stackPower) {\n  if (divisions < 3) {\n    throw Error('divisions must be at least 3');\n  }\n\n  stacks = stacks ? stacks : 1;\n  stackPower = stackPower ? stackPower : 1;\n  innerRadius = innerRadius ? innerRadius : 0; // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n\n  var numVertices = (divisions + 1) * (stacks + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n  var firstIndex = 0;\n  var radiusSpan = radius - innerRadius;\n  var pointsPerStack = divisions + 1; // Build the disk one stack at a time.\n\n  for (var stack = 0; stack <= stacks; ++stack) {\n    var stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (var i = 0; i <= divisions; ++i) {\n      var theta = 2.0 * Math.PI * i / divisions;\n      var x = stackRadius * Math.cos(theta);\n      var z = stackRadius * Math.sin(theta);\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - i / divisions, stack / stacks);\n\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        var a = firstIndex + (i + 1);\n        var b = firstIndex + i;\n        var c = firstIndex + i - pointsPerStack;\n        var d = firstIndex + (i + 1) - pointsPerStack; // Make a quad of the vertices a, b, c, d.\n\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * creates a random integer between 0 and range - 1 inclusive.\n * @param {number} range\n * @return {number} random value between 0 and range - 1 inclusive.\n */\n\n\nfunction randInt(range) {\n  return Math.random() * range | 0;\n}\n/**\n * Used to supply random colors\n * @callback RandomColorFunc\n * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\n * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\n * @return {number} a number from 0 to 255\n * @memberOf module:twgl/primitives\n */\n\n/**\n * @typedef {Object} RandomVerticesOptions\n * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\n * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\n * @memberOf module:twgl/primitives\n */\n\n/**\n * Creates an augmentedTypedArray of random vertex colors.\n * If the vertices are indexed (have an indices array) then will\n * just make random colors. Otherwise assumes they are triangles\n * and makes one random color for every 3 vertices.\n * @param {Object.<string, augmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\n * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\n * @return {Object.<string, augmentedTypedArray>} same vertices as passed in with `color` added.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction makeRandomVertexColors(vertices, options) {\n  options = options || {};\n  var numElements = vertices.position.numElements;\n  var vcolors = createAugmentedTypedArray(4, numElements, Uint8Array);\n\n  var rand = options.rand || function (ndx, channel) {\n    return channel < 3 ? randInt(256) : 255;\n  };\n\n  vertices.color = vcolors;\n\n  if (vertices.indices) {\n    // just make random colors if index\n    for (var ii = 0; ii < numElements; ++ii) {\n      vcolors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\n    }\n  } else {\n    // make random colors per triangle\n    var numVertsPerColor = options.vertsPerColor || 3;\n    var numSets = numElements / numVertsPerColor;\n\n    for (var _ii2 = 0; _ii2 < numSets; ++_ii2) {\n      // eslint-disable-line\n      var color = [rand(_ii2, 0), rand(_ii2, 1), rand(_ii2, 2), rand(_ii2, 3)];\n\n      for (var jj = 0; jj < numVertsPerColor; ++jj) {\n        vcolors.push(color);\n      }\n    }\n  }\n\n  return vertices;\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a buffers for them\n */\n\n\nfunction createBufferFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBuffersFromArrays(gl, arrays);\n  };\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a bufferInfo object for them\n */\n\n\nfunction createBufferInfoFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(null, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBufferInfoFromArrays(gl, arrays);\n  };\n}\n\nvar arraySpecPropertyNames = [\"numComponents\", \"size\", \"type\", \"normalize\", \"stride\", \"offset\", \"attrib\", \"name\", \"attribName\"];\n/**\n * Copy elements from one array to another\n *\n * @param {Array|TypedArray} src source array\n * @param {Array|TypedArray} dst dest array\n * @param {number} dstNdx index in dest to copy src\n * @param {number} [offset] offset to add to copied values\n */\n\nfunction copyElements(src, dst, dstNdx, offset) {\n  offset = offset || 0;\n  var length = src.length;\n\n  for (var ii = 0; ii < length; ++ii) {\n    dst[dstNdx + ii] = src[ii] + offset;\n  }\n}\n/**\n * Creates an array of the same time\n *\n * @param {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} srcArray array who's type to copy\n * @param {number} length size of new array\n * @return {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} array with same type as srcArray\n */\n\n\nfunction createArrayOfSameType(srcArray, length) {\n  var arraySrc = getArray(srcArray);\n  var newArray = new arraySrc.constructor(length);\n  var newArraySpec = newArray; // If it appears to have been augmented make new one augemented\n\n  if (arraySrc.numComponents && arraySrc.numElements) {\n    augmentTypedArray(newArray, arraySrc.numComponents);\n  } // If it was a fullspec make new one a fullspec\n\n\n  if (srcArray.data) {\n    newArraySpec = {\n      data: newArray\n    };\n    helper.copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\n  }\n\n  return newArraySpec;\n}\n/**\n * Concatinates sets of vertices\n *\n * Assumes the vertices match in composition. For example\n * if one set of vertices has positions, normals, and indices\n * all sets of vertices must have positions, normals, and indices\n * and of the same type.\n *\n * Example:\n *\n *      const cubeVertices = twgl.primtiives.createCubeVertices(2);\n *      const sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\n *      // move the sphere 2 units up\n *      twgl.primitives.reorientVertices(\n *          sphereVertices, twgl.m4.translation([0, 2, 0]));\n *      // merge the sphere with the cube\n *      const cubeSphereVertices = twgl.primitives.concatVertices(\n *          [cubeVertices, sphereVertices]);\n *      // turn them into WebGL buffers and attrib data\n *      const bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\n *\n * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\n * @return {module:twgl.Arrays} The concatinated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction concatVertices(arrayOfArrays) {\n  var names = {};\n  var baseName; // get names of all arrays.\n  // and numElements for each set of vertices\n\n  var _loop = function _loop(ii) {\n    var arrays = arrayOfArrays[ii];\n    Object.keys(arrays).forEach(function (name) {\n      // eslint-disable-line\n      if (!names[name]) {\n        names[name] = [];\n      }\n\n      if (!baseName && name !== 'indices') {\n        baseName = name;\n      }\n\n      var arrayInfo = arrays[name];\n      var numComponents = getNumComponents(arrayInfo, name);\n      var array = getArray(arrayInfo);\n      var numElements = array.length / numComponents;\n      names[name].push(numElements);\n    });\n  };\n\n  for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n    _loop(ii);\n  } // compute length of combined array\n  // and return one for reference\n\n\n  function getLengthOfCombinedArrays(name) {\n    var length = 0;\n    var arraySpec;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n      length += array.length;\n\n      if (!arraySpec || arrayInfo.data) {\n        arraySpec = arrayInfo;\n      }\n    }\n\n    return {\n      length: length,\n      spec: arraySpec\n    };\n  }\n\n  function copyArraysToNewArray(name, base, newArray) {\n    var baseIndex = 0;\n    var offset = 0;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n\n      if (name === 'indices') {\n        copyElements(array, newArray, offset, baseIndex);\n        baseIndex += base[ii];\n      } else {\n        copyElements(array, newArray, offset);\n      }\n\n      offset += array.length;\n    }\n  }\n\n  var base = names[baseName];\n  var newArrays = {};\n  Object.keys(names).forEach(function (name) {\n    var info = getLengthOfCombinedArrays(name);\n    var newArraySpec = createArrayOfSameType(info.spec, info.length);\n    copyArraysToNewArray(name, base, getArray(newArraySpec));\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n/**\n * Creates a duplicate set of vertices\n *\n * This is useful for calling reorientVertices when you\n * also want to keep the original available\n *\n * @param {module:twgl.Arrays} arrays of vertices\n * @return {module:twgl.Arrays} The dupilicated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction duplicateVertices(arrays) {\n  var newArrays = {};\n  Object.keys(arrays).forEach(function (name) {\n    var arraySpec = arrays[name];\n    var srcArray = getArray(arraySpec);\n    var newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\n    copyElements(srcArray, getArray(newArraySpec), 0);\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\nvar create3DFBufferInfo = createBufferInfoFunc(create3DFVertices);\nexports.create3DFBufferInfo = create3DFBufferInfo;\nvar create3DFBuffers = createBufferFunc(create3DFVertices);\nexports.create3DFBuffers = create3DFBuffers;\nvar createCubeBufferInfo = createBufferInfoFunc(createCubeVertices);\nexports.createCubeBufferInfo = createCubeBufferInfo;\nvar createCubeBuffers = createBufferFunc(createCubeVertices);\nexports.createCubeBuffers = createCubeBuffers;\nvar createPlaneBufferInfo = createBufferInfoFunc(createPlaneVertices);\nexports.createPlaneBufferInfo = createPlaneBufferInfo;\nvar createPlaneBuffers = createBufferFunc(createPlaneVertices);\nexports.createPlaneBuffers = createPlaneBuffers;\nvar createSphereBufferInfo = createBufferInfoFunc(createSphereVertices);\nexports.createSphereBufferInfo = createSphereBufferInfo;\nvar createSphereBuffers = createBufferFunc(createSphereVertices);\nexports.createSphereBuffers = createSphereBuffers;\nvar createTruncatedConeBufferInfo = createBufferInfoFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBufferInfo = createTruncatedConeBufferInfo;\nvar createTruncatedConeBuffers = createBufferFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBuffers = createTruncatedConeBuffers;\nvar createXYQuadBufferInfo = createBufferInfoFunc(createXYQuadVertices);\nexports.createXYQuadBufferInfo = createXYQuadBufferInfo;\nvar createXYQuadBuffers = createBufferFunc(createXYQuadVertices);\nexports.createXYQuadBuffers = createXYQuadBuffers;\nvar createCresentBufferInfo = createBufferInfoFunc(createCresentVertices);\nexports.createCresentBufferInfo = createCresentBufferInfo;\nvar createCresentBuffers = createBufferFunc(createCresentVertices);\nexports.createCresentBuffers = createCresentBuffers;\nvar createCylinderBufferInfo = createBufferInfoFunc(createCylinderVertices);\nexports.createCylinderBufferInfo = createCylinderBufferInfo;\nvar createCylinderBuffers = createBufferFunc(createCylinderVertices);\nexports.createCylinderBuffers = createCylinderBuffers;\nvar createTorusBufferInfo = createBufferInfoFunc(createTorusVertices);\nexports.createTorusBufferInfo = createTorusBufferInfo;\nvar createTorusBuffers = createBufferFunc(createTorusVertices);\nexports.createTorusBuffers = createTorusBuffers;\nvar createDiscBufferInfo = createBufferInfoFunc(createDiscVertices);\nexports.createDiscBufferInfo = createDiscBufferInfo;\nvar createDiscBuffers = createBufferFunc(createDiscVertices);\nexports.createDiscBuffers = createDiscBuffers;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  addExtensionsToContext: true,\n  getContext: true,\n  getWebGLContext: true,\n  resizeCanvasToDisplaySize: true,\n  setDefaults: true\n};\nexports.addExtensionsToContext = addExtensionsToContext;\nexports.getContext = getContext;\nexports.getWebGLContext = getWebGLContext;\nexports.resizeCanvasToDisplaySize = resizeCanvasToDisplaySize;\nexports.setDefaults = setDefaults;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(7));\n\nObject.keys(attributes).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = attributes[key];\n});\n\nvar textures = _interopRequireWildcard(__webpack_require__(8));\n\nObject.keys(textures).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = textures[key];\n});\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nObject.keys(utils).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = utils[key];\n});\n\nvar _draw = __webpack_require__(12);\n\nObject.keys(_draw).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _draw[key];\n});\n\nvar _framebuffers = __webpack_require__(13);\n\nObject.keys(_framebuffers).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _framebuffers[key];\n});\n\nvar _programs = __webpack_require__(5);\n\nObject.keys(_programs).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _programs[key];\n});\n\nvar _typedarrays = __webpack_require__(1);\n\nObject.keys(_typedarrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _typedarrays[key];\n});\n\nvar _vertexArrays = __webpack_require__(14);\n\nObject.keys(_vertexArrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _vertexArrays[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * The main TWGL module.\n *\n * For most use cases you shouldn't need anything outside this module.\n * Exceptions between the stuff added to twgl-full (v3, m4, primitives)\n *\n * @module twgl\n * @borrows module:twgl/attributes.setAttribInfoBufferFromArray as setAttribInfoBufferFromArray\n * @borrows module:twgl/attributes.createBufferInfoFromArrays as createBufferInfoFromArrays\n * @borrows module:twgl/attributes.createVertexArrayInfo as createVertexArrayInfo\n * @borrows module:twgl/draw.drawBufferInfo as drawBufferInfo\n * @borrows module:twgl/draw.drawObjectList as drawObjectList\n * @borrows module:twgl/framebuffers.createFramebufferInfo as createFramebufferInfo\n * @borrows module:twgl/framebuffers.resizeFramebufferInfo as resizeFramebufferInfo\n * @borrows module:twgl/framebuffers.bindFramebufferInfo as bindFramebufferInfo\n * @borrows module:twgl/programs.createProgramInfo as createProgramInfo\n * @borrows module:twgl/programs.createUniformBlockInfo as createUniformBlockInfo\n * @borrows module:twgl/programs.bindUniformBlock as bindUniformBlock\n * @borrows module:twgl/programs.setUniformBlock as setUniformBlock\n * @borrows module:twgl/programs.setBlockUniforms as setBlockUniforms\n * @borrows module:twgl/programs.setUniforms as setUniforms\n * @borrows module:twgl/programs.setBuffersAndAttributes as setBuffersAndAttributes\n * @borrows module:twgl/textures.setTextureFromArray as setTextureFromArray\n * @borrows module:twgl/textures.createTexture as createTexture\n * @borrows module:twgl/textures.resizeTexture as resizeTexture\n * @borrows module:twgl/textures.createTextures as createTextures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  addExtensionsToContext: true\n};\n/**\n * Various default settings for twgl.\n *\n * Note: You can call this any number of times. Example:\n *\n *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\n *     twgl.setDefaults({ attribPrefix: 'a_' });\n *\n * is equivalent to\n *\n *     twgl.setDefaults({\n *       textureColor: [1, 0, 0, 1],\n *       attribPrefix: 'a_',\n *     });\n *\n * @typedef {Object} Defaults\n * @property {string} attribPrefix The prefix to stick on attributes\n *\n *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n *   as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n *\n *   In otherwords I'll create arrays of geometry like this\n *\n *       const arrays = {\n *         position: ...\n *         normal: ...\n *         texcoord: ...\n *       };\n *\n *   But need those mapped to attributes and my attributes start with `a_`.\n *\n *   Default: `\"\"`\n *\n * @property {number[]} textureColor Array of 4 values in the range 0 to 1\n *\n *   The default texture color is used when loading textures from\n *   urls. Because the URL will be loaded async we'd like to be\n *   able to use the texture immediately. By putting a 1x1 pixel\n *   color in the texture we can start using the texture before\n *   the URL has loaded.\n *\n *   Default: `[0.5, 0.75, 1, 1]`\n *\n * @property {string} crossOrigin\n *\n *   If not undefined sets the crossOrigin attribute on images\n *   that twgl creates when downloading images for textures.\n *\n *   Also see {@link module:twgl.TextureOptions}.\n *\n * @property {bool} addExtensionsToContext\n *\n *   If true, then, when twgl will try to add any supported WebGL extensions\n *   directly to the context under their normal GL names. For example\n *   if ANGLE_instances_arrays exists then twgl would enable it,\n *   add the functions `vertexAttribDivisor`, `drawArraysInstanced`,\n *   `drawElementsInstanced`, and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR`\n *   to the `WebGLRenderingContext`.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets various defaults for twgl.\n *\n * In the interest of terseness which is kind of the point\n * of twgl I've integrated a few of the older functions here\n *\n * @param {module:twgl.Defaults} newDefaults The default settings.\n * @memberOf module:twgl\n */\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n  attributes.setAttributeDefaults_(newDefaults); // eslint-disable-line\n\n  textures.setTextureDefaults_(newDefaults); // eslint-disable-line\n}\n\nvar prefixRE = /^(.*?)_/;\n\nfunction addExtensionToContext(gl, extensionName) {\n  utils.glEnumToString(gl, 0);\n  var ext = gl.getExtension(extensionName);\n\n  if (ext) {\n    var enums = {};\n    var fnSuffix = prefixRE.exec(extensionName)[1];\n    var enumSuffix = '_' + fnSuffix;\n\n    for (var key in ext) {\n      var value = ext[key];\n      var isFunc = typeof value === 'function';\n      var suffix = isFunc ? fnSuffix : enumSuffix;\n      var name = key; // examples of where this is not true are WEBGL_compressed_texture_s3tc\n      // and WEBGL_compressed_texture_pvrtc\n\n      if (key.endsWith(suffix)) {\n        name = key.substring(0, key.length - suffix.length);\n      }\n\n      if (gl[name] !== undefined) {\n        if (!isFunc && gl[name] !== value) {\n          helper.warn(name, gl[name], value, key);\n        }\n      } else {\n        if (isFunc) {\n          gl[name] = function (origFn) {\n            return function () {\n              return origFn.apply(ext, arguments);\n            };\n          }(value);\n        } else {\n          gl[name] = value;\n          enums[name] = value;\n        }\n      }\n    } // pass the modified enums to glEnumToString\n\n\n    enums.constructor = {\n      name: ext.constructor.name\n    };\n    utils.glEnumToString(enums, 0);\n  }\n\n  return ext;\n}\n/*\n * If you're wondering why the code doesn't just iterate\n * over all extensions using `gl.getExtensions` is that it's possible\n * some future extension is incompatible with this code. Rather than\n * have thing suddenly break it seems better to manually add to this\n * list.\n *\n */\n\n\nvar supportedExtensions = ['ANGLE_instanced_arrays', 'EXT_blend_minmax', 'EXT_color_buffer_float', 'EXT_color_buffer_half_float', 'EXT_disjoint_timer_query', 'EXT_disjoint_timer_query_webgl2', 'EXT_frag_depth', 'EXT_sRGB', 'EXT_shader_texture_lod', 'EXT_texture_filter_anisotropic', 'OES_element_index_uint', 'OES_standard_derivatives', 'OES_texture_float', 'OES_texture_float_linear', 'OES_texture_half_float', 'OES_texture_half_float_linear', 'OES_vertex_array_object', 'WEBGL_color_buffer_float', 'WEBGL_compressed_texture_atc', 'WEBGL_compressed_texture_etc1', 'WEBGL_compressed_texture_pvrtc', 'WEBGL_compressed_texture_s3tc', 'WEBGL_compressed_texture_s3tc_srgb', 'WEBGL_depth_texture', 'WEBGL_draw_buffers'];\n/**\n * Attempts to enable all of the following extensions\n * and add their functions and constants to the\n * `WebGLRenderingContext` using their normal non-extension like names.\n *\n *      ANGLE_instanced_arrays\n *      EXT_blend_minmax\n *      EXT_color_buffer_float\n *      EXT_color_buffer_half_float\n *      EXT_disjoint_timer_query\n *      EXT_disjoint_timer_query_webgl2\n *      EXT_frag_depth\n *      EXT_sRGB\n *      EXT_shader_texture_lod\n *      EXT_texture_filter_anisotropic\n *      OES_element_index_uint\n *      OES_standard_derivatives\n *      OES_texture_float\n *      OES_texture_float_linear\n *      OES_texture_half_float\n *      OES_texture_half_float_linear\n *      OES_vertex_array_object\n *      WEBGL_color_buffer_float\n *      WEBGL_compressed_texture_atc\n *      WEBGL_compressed_texture_etc1\n *      WEBGL_compressed_texture_pvrtc\n *      WEBGL_compressed_texture_s3tc\n *      WEBGL_compressed_texture_s3tc_srgb\n *      WEBGL_depth_texture\n *      WEBGL_draw_buffers\n *\n * For example if `ANGLE_instanced_arrays` exists then the functions\n * `drawArraysInstanced`, `drawElementsInstanced`, `vertexAttribDivisor`\n * and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR` are added to the\n * `WebGLRenderingContext`.\n *\n * Note that if you want to know if the extension exists you should\n * probably call `gl.getExtension` for each extension. Alternatively\n * you can check for the existance of the functions or constants that\n * are expected to be added. For example\n *\n *    if (gl.drawBuffers) {\n *      // Either WEBGL_draw_buffers was enabled OR you're running in WebGL2\n *      ....\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @memberOf module:twgl\n */\n\nfunction addExtensionsToContext(gl) {\n  for (var ii = 0; ii < supportedExtensions.length; ++ii) {\n    addExtensionToContext(gl, supportedExtensions[ii]);\n  }\n}\n/**\n * Creates a webgl context.\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\n\n\nfunction create3DContext(canvas, opt_attribs) {\n  var names = [\"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL1 context.\n *\n * Note: Will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextCreationAttirbutes} [opt_attribs] optional webgl context creation attributes\n * @memberOf module:twgl\n */\n\n\nfunction getWebGLContext(canvas, opt_attribs) {\n  var gl = create3DContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Creates a webgl context.\n *\n * Will return a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *     twgl.isWebGL2(gl);\n *\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\n\n\nfunction createContext(canvas, opt_attribs) {\n  var names = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL context.  Will create a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *    function isWebGL2(gl) {\n *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\n *    }\n *\n * Note: For a WebGL1 context will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextCreationAttirbutes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\n\n\nfunction getContext(canvas, opt_attribs) {\n  var gl = createContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Resize a canvas to match the size it's displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` or other scale value if you want to.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:twgl\n */\n\n\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  multiplier = Math.max(0, multiplier);\n  var width = canvas.clientWidth * multiplier | 0;\n  var height = canvas.clientHeight * multiplier | 0;\n\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n\n  return false;\n}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.drawBufferInfo = drawBufferInfo;\nexports.drawObjectList = drawObjectList;\n\nvar programs = _interopRequireWildcard(__webpack_require__(5));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Drawing related functions\n *\n * For backward compatibily they are available at both `twgl.draw` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/draw\n */\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @param {enum} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\n * @memberOf module:twgl/draw\n */\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\n  type = type === undefined ? gl.TRIANGLES : type;\n  var indices = bufferInfo.indices;\n  var elementType = bufferInfo.elementType;\n  var numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n\n  if (elementType || indices) {\n    if (instanceCount !== undefined) {\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset, instanceCount);\n    } else {\n      gl.drawElements(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n}\n/**\n * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\n *\n * You need either a `BufferInfo` or a `VertexArrayInfo`.\n *\n * @typedef {Object} DrawObject\n * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In otherwords `undefined` = `true`\n * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\n * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\n * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @property {Object<string, ?>} uniforms The values for the uniforms.\n *   You can pass multiple objects by putting them in an array. For example\n *\n *     var sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     var localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     var drawObj = {\n *       ...\n *       uniforms: [sharedUniforms, localUniforms],\n *     };\n *\n * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\n * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElemnts`. Defaults to bufferInfo.numElements.\n * @property {number} [instanceCount] the number of instances. Defaults to undefined.\n * @memberOf module:twgl\n */\n\n/**\n * Draws a list of objects\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n * @memberOf module:twgl/draw\n */\n\n\nfunction drawObjectList(gl, objectsToDraw) {\n  var lastUsedProgramInfo = null;\n  var lastUsedBufferInfo = null;\n  objectsToDraw.forEach(function (object) {\n    if (object.active === false) {\n      return;\n    }\n\n    var programInfo = object.programInfo;\n    var bufferInfo = object.vertexArrayInfo || object.bufferInfo;\n    var bindBuffers = false;\n    var type = object.type === undefined ? gl.TRIANGLES : object.type;\n\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program); // We have to rebind buffers when changing programs because we\n      // only bind buffers the program uses. So if 2 programs use the same\n      // bufferInfo but the 1st one uses only positions the when the\n      // we switch to the 2nd one some of the attributes will not be on.\n\n      bindBuffers = true;\n    } // Setup all the needed attributes.\n\n\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\n        gl.bindVertexArray(null);\n      }\n\n      lastUsedBufferInfo = bufferInfo;\n      programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    } // Set the uniforms.\n\n\n    programs.setUniforms(programInfo, object.uniforms); // Draw\n\n    drawBufferInfo(gl, bufferInfo, type, object.count, object.offset, object.instanceCount);\n  });\n\n  if (lastUsedBufferInfo.vertexArrayObject) {\n    gl.bindVertexArray(null);\n  }\n}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.bindFramebufferInfo = bindFramebufferInfo;\nexports.createFramebufferInfo = createFramebufferInfo;\nexports.resizeFramebufferInfo = resizeFramebufferInfo;\n\nvar textures = _interopRequireWildcard(__webpack_require__(8));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Framebuffer related functions\n *\n * For backward compatibily they are available at both `twgl.framebuffer` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/framebuffers\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar UNSIGNED_BYTE = 0x1401;\n/* PixelFormat */\n\nvar DEPTH_COMPONENT = 0x1902;\nvar RGBA = 0x1908;\n/* Framebuffer Object. */\n\nvar RGBA4 = 0x8056;\nvar RGB5_A1 = 0x8057;\nvar RGB565 = 0x8D62;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar STENCIL_INDEX = 0x1901;\nvar STENCIL_INDEX8 = 0x8D48;\nvar DEPTH_STENCIL = 0x84F9;\nvar COLOR_ATTACHMENT0 = 0x8CE0;\nvar DEPTH_ATTACHMENT = 0x8D00;\nvar STENCIL_ATTACHMENT = 0x8D20;\nvar DEPTH_STENCIL_ATTACHMENT = 0x821A;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar CLAMP_TO_EDGE = 0x812F;\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\nvar LINEAR = 0x2601;\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\n/**\n * The options for a framebuffer attachment.\n *\n * Note: For a `format` that is a texture include all the texture\n * options from {@link module:twgl.TextureOptions} for example\n * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\n * `auto` defaults to `false` for attachment textures but `min` and `mag` default\n * to `gl.LINEAR` and `wrap` defaults to `CLAMP_TO_EDGE`\n *\n * @typedef {Object} AttachmentOptions\n * @property {number} [attach] The attachment point. Defaults\n *   to `gl.COLOR_ATTACTMENT0 + ndx` unless type is a depth or stencil type\n *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\n *   on the format or attachment type.\n * @property {number} [format] The format. If one of `gl.RGBA4`,\n *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\n *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\n *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\n * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\n * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\n *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\n * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\n * @property {WebGLObject} [attachment] An existing renderbuffer or texture.\n *    If provided will attach this Object. This allows you to share\n *    attachemnts across framebuffers.\n * @memberOf module:twgl\n */\n\nvar defaultAttachments = [{\n  format: RGBA,\n  type: UNSIGNED_BYTE,\n  min: LINEAR,\n  wrap: CLAMP_TO_EDGE\n}, {\n  format: DEPTH_STENCIL\n}];\nvar attachmentsByFormat = {};\nattachmentsByFormat[DEPTH_STENCIL] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT16] = DEPTH_ATTACHMENT;\n\nfunction getAttachmentPointForFormat(format) {\n  return attachmentsByFormat[format];\n}\n\nvar renderbufferFormats = {};\nrenderbufferFormats[RGBA4] = true;\nrenderbufferFormats[RGB5_A1] = true;\nrenderbufferFormats[RGB565] = true;\nrenderbufferFormats[DEPTH_STENCIL] = true;\nrenderbufferFormats[DEPTH_COMPONENT16] = true;\nrenderbufferFormats[STENCIL_INDEX] = true;\nrenderbufferFormats[STENCIL_INDEX8] = true;\n\nfunction isRenderbufferFormat(format) {\n  return renderbufferFormats[format];\n}\n/**\n * @typedef {Object} FramebufferInfo\n * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\n * @property {WebGLObject[]} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a framebuffer and attachments.\n *\n * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n * Passing in a specific size\n *\n *     const width = 256;\n *     const height = 256;\n *     const fbi = twgl.createFramebufferInfo(gl, attachments, width, height);\n *\n * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\n * [WebGL only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\n *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction createFramebufferInfo(gl, attachments, width, height) {\n  var target = gl.FRAMEBUFFER;\n  var fb = gl.createFramebuffer();\n  gl.bindFramebuffer(target, fb);\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  attachments = attachments || defaultAttachments;\n  var colorAttachmentCount = 0;\n  var framebufferInfo = {\n    framebuffer: fb,\n    attachments: [],\n    width: width,\n    height: height\n  };\n  attachments.forEach(function (attachmentOptions) {\n    var attachment = attachmentOptions.attachment;\n    var format = attachmentOptions.format;\n    var attachmentPoint = getAttachmentPointForFormat(format);\n\n    if (!attachmentPoint) {\n      attachmentPoint = COLOR_ATTACHMENT0 + colorAttachmentCount++;\n    }\n\n    if (!attachment) {\n      if (isRenderbufferFormat(format)) {\n        attachment = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n        gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n      } else {\n        var textureOptions = Object.assign({}, attachmentOptions);\n        textureOptions.width = width;\n        textureOptions.height = height;\n\n        if (textureOptions.auto === undefined) {\n          textureOptions.auto = false;\n          textureOptions.min = textureOptions.min || textureOptions.minMag || gl.LINEAR;\n          textureOptions.mag = textureOptions.mag || textureOptions.minMag || gl.LINEAR;\n          textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n          textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n        }\n\n        attachment = textures.createTexture(gl, textureOptions);\n      }\n    }\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.framebufferRenderbuffer(target, attachmentPoint, gl.RENDERBUFFER, attachment);\n    } else if (helper.isTexture(gl, attachment)) {\n      gl.framebufferTexture2D(target, attachmentPoint, attachmentOptions.texTarget || gl.TEXTURE_2D, attachment, attachmentOptions.level || 0);\n    } else {\n      throw \"unknown attachment type\";\n    }\n\n    framebufferInfo.attachments.push(attachment);\n  });\n  return framebufferInfo;\n}\n/**\n * Resizes the attachments of a framebuffer.\n *\n * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebufferInfo}\n * because TWGL has no idea the format/type of each attachment.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments\n *         twgl.resizeFramebufferInfo(gl, fbi);\n *       }\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments to match\n *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\n *       }\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebufferInfo}.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  framebufferInfo.width = width;\n  framebufferInfo.height = height;\n  attachments = attachments || defaultAttachments;\n  attachments.forEach(function (attachmentOptions, ndx) {\n    var attachment = framebufferInfo.attachments[ndx];\n    var format = attachmentOptions.format;\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n      gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n    } else if (helper.isTexture(gl, attachment)) {\n      textures.resizeTexture(gl, attachment, attachmentOptions, width, height);\n    } else {\n      throw \"unknown attachment type\";\n    }\n  });\n}\n/**\n * Binds a framebuffer\n *\n * This function pretty much soley exists because I spent hours\n * trying to figure out why something I wrote wasn't working only\n * to realize I forget to set the viewport dimensions.\n * My hope is this function will fix that.\n *\n * It is effectively the same as\n *\n *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\n *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n *   If not passed will bind the canvas.\n * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction bindFramebufferInfo(gl, framebufferInfo, target) {\n  target = target || gl.FRAMEBUFFER;\n\n  if (framebufferInfo) {\n    gl.bindFramebuffer(target, framebufferInfo.framebuffer);\n    gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\n  } else {\n    gl.bindFramebuffer(target, null);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createVertexArrayInfo = createVertexArrayInfo;\nexports.createVAOAndSetAttributes = createVAOAndSetAttributes;\nexports.createVAOFromBufferInfo = createVAOFromBufferInfo;\n\nvar programs = _interopRequireWildcard(__webpack_require__(5));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * vertex array object related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/vertexArrays\n */\n\n/**\n * @typedef {Object} VertexArrayInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\n * @memberOf module:twgl\n */\n\n/**\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n *   who's attributes use the same attribute locations for the same purposes.\n *\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n *\n * also\n *\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n *   will affect the Vertex Array Object state.\n *\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n *\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n *    now attribute D's location.\n *\n *    So, you can pass in both shader 1 and shader 2's programInfo\n *\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n\n  if (!programInfos.length) {\n    programInfos = [programInfos];\n  }\n\n  programInfos.forEach(function (programInfo) {\n    programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  });\n  gl.bindVertexArray(null);\n  return {\n    numElements: bufferInfo.numElements,\n    elementType: bufferInfo.elementType,\n    vertexArrayObject: vao\n  };\n}\n/**\n * Creates a vertex array object and then sets the attributes on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOAndSetAttributes(gl, setters, attribs, indices) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  programs.setAttributes(setters, attribs);\n\n  if (indices) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indices);\n  } // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n  // like when creating buffers for other stuff will mess up this VAO's binding\n\n\n  gl.bindVertexArray(null);\n  return vao;\n}\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>| module:twgl.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n  return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n}\n\n/***/ })\n/******/ ]);\n});","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import {_} from 'underscore'\nimport twgl from './twgl';\nimport {gl} from './gl';\n\nfunction getGl() {\n    return gl;\n}\n\ngetGl();\n\nfunction createTextures(opts) {\n    return new Promise(function(resolve, reject) {\n        twgl.createTextures(gl, opts, function(errors, textures, images) {\n            resolve({errors, textures, images});\n        });\n    });\n}\n\nclass Loader {\n    constructor(opts) {\n        this.cache = new Map();\n        this.textureCache = new Map();\n        this.programCache = new Map();\n        this.errors = {\n            programs: new Map(),\n            textures: new Map(),\n            paths: new Map()\n        }\n        this.loading = null;\n        this.load(opts);\n    }\n\n    load(opts) {\n        let {basePath,\n            raiseOnFailure,\n            paths,\n            textures,\n            programs} = ({basePath: '', raiseOnFailure: true, ...opts});\n        // trim trailing slashes\n        basePath = basePath.replace(/\\/+$/, '');\n\n        const loadPromise = new Promise(async (resolve, reject) => {\n            if (paths) {\n                await this.loadPaths(paths, basePath, raiseOnFailure);\n            }\n\n            if (textures) {\n                let {errors, textures: tex, images} = await createTextures(textures);\n                if (errors) {\n                    console.log(errors);\n                }\n                Object.keys(tex).forEach((key) => {\n                    this.textureCache.set(key, tex[key]);\n                });\n            }\n\n            if (programs) {\n                for (let progOpts of programs) {\n                    let name = progOpts;\n                    let opts;\n\n                    if (_.isObject(progOpts)) {\n                        name = progOpts.name;\n                        opts = progOpts.opts;\n                    }\n\n                    if (this.programCache.has(name)) {\n                        console.log(`Warning: attempted to load already loaded program '${name}'`);\n                        continue;\n                    }\n\n                    const fp = _.compact([basePath, name.split('.').join('/')]).join('/');\n\n                    const vsName = `${fp}.vert`;\n                    const fsName = `${fp}.frag`;\n                    await this.loadPaths([vsName, fsName], '', raiseOnFailure);\n                    this.programCache.set(\n                        name,\n                        twgl.createProgramInfo(gl, [this.get(vsName), this.get(fsName)], opts)\n                    );\n                }\n            }\n\n            resolve(this);\n        });\n\n        this.loading = this.loading ? this.loading.then(res => loadPromise) : loadPromise;\n\n        return this.loading;\n    }\n\n    get(path) {\n        const ret = this.cache.get(path);\n        if (ret === undefined) {\n            raise `No value for key ${path}`;\n        }\n        return ret;\n    }\n\n    getTexture(name) {\n        const ret = this.textureCache.get(name);\n        if (ret === undefined) {\n            raise `No texture value for key ${path}`;\n        }\n        return ret;\n    }\n\n    getProgram(name) {\n        return this.programCache.get(name)\n    }\n\n    async loadPaths(paths, basePath, raiseOnFailure = true) {\n        for (let path of paths) {\n            if (this.cache.has(basePath + path)) {\n                console.log(`Warning: attempted to load already loaded path '${basePath + path}'`);\n                continue;\n            }\n            const contents = await this.fetch(basePath + path, raiseOnFailure);\n            if (contents) {\n                this.cache.set(basePath + path, contents);\n            }\n        }\n    }\n\n    async fetch(path, raiseOnFailure = true) {\n        const req = await fetch(path);\n\n        if (req.ok) {\n            return await req.text();\n        } else if (raiseOnFailure) {\n            throw `failed to fetch resource '${path}'; got status ${req.status} '${req.statusText}'`;\n        } else {\n            this.errors.paths.set(path, req.statusText);\n\n            return false;\n        }\n    }\n}\n\nexport {Loader};\n","import {Loader} from 'resource.js';\nimport {CoordinateConversions} from 'graphics.js';\nimport {mat3, mat4} from 'gl-matrix';\nimport {registerContext, gl} from 'gl.js';\nimport {attachFramebuffer} from 'util.js';\nimport 'vendor/webgl-debug.js'\nimport {Sprite} from './graphics/Sprite';\nimport {SpriteRenderer} from './graphics/SpriteRenderer'\nimport {Camera} from \"./graphics/Camera\";\n\n//import * as glMatrix from 'gl-matrix';\n\nfunction logGLCall(functionName, args) {\n    console.log(\"gl.\" + functionName + \"(\" +\n        WebGLDebugUtils.glFunctionArgsToString(functionName, args) + \")\");\n}\n\nfunction throwOnGLError(err, funcName, args) {\n    throw WebGLDebugUtils.glEnumToString(err) + \" was caused by call to: \" + funcName;\n}\n\nconst initCanvas = (containerId, canvasClass) => {\n    if (!containerId) {\n        throw new Error('argument containerId, id of containing element required');\n    }\n    const mountPoint = document.getElementById(containerId);\n    const canvas = document.createElement('canvas');\n    if (canvasClass) {\n        canvas.classList.add(canvasClass);\n    }\n    mountPoint.appendChild(canvas);\n\n    return canvas;\n};\n\n/**\n * options:\n * el\n * debug - default: false\n * clearColor - default: [0.4, 0.4, 0.4, 1]\n * resolution - default: { width: 352, height: 224 }\n * pixelMultiplier - default: 2\n */\nclass App {\n    constructor(options) {\n        this.clearColor = options.clearColor || [0.4, 0.4, 0.4, 1];\n        this.resolution = options.resolution || {width: 352, height: 224};\n        this.pixelMultiplier = options.pixelMultiplier || 2;\n        this.debug = options.debug;\n\n        if (typeof options.el === 'string') {\n            this.canvas = document.getElementById(options.el);\n        } else {\n            this.canvas = options.el;\n        }\n\n        // create rendering context\n        this.gl = this.canvas.getContext('webgl2');\n\n        if (this.debug) {\n            WebGLDebugUtils.init(this.gl);\n            this.gl = WebGLDebugUtils.makeDebugContext(this.gl, undefined, logGLCall);\n        }\n\n        registerContext(this.gl);\n\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n\n        this.framebuffer = attachFramebuffer(gl, this.resolution.width, this.resolution.height);\n        this.framebufferRenderer = new SpriteRenderer({\n            game: this,\n            textureInfo: {\n                texture: this.framebuffer.texture,\n                ...this.resolution\n            }\n        });\n        this.loader = new Loader();\n        this.projection = mat4.ortho(mat4.create(), 0, this.resolution.width, 0, this.resolution.height, -1, 1);\n        this.camera = new Camera(this.resolution);\n        this.cameraEnabled = true;\n        this.updateCanvasSize();\n        this.adjustViewport();\n    }\n\n    updateCanvasSize() {\n        const width = this.resolution.width * this.pixelMultiplier;\n        const height = this.resolution.height * this.pixelMultiplier;\n\n        this.canvas.style.width = `${width}px`;\n        this.canvas.style.height = `${height}px`;\n\n        this.canvas.width = width * (window.devicePixelRatio || 1);\n        this.canvas.height = height * (window.devicePixelRatio || 1);\n    }\n\n    adjustViewport() {\n        // Use device pixels rather than CSS pixels to set viewport\n        // This will handle devicePixelRatios different than 1\n        const canvas_width = this.canvas.width;\n        const canvas_height = this.canvas.height;\n\n        this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n\n        this._canvasToWorld = CoordinateConversions.canvasToWorldMatrix(\n            this.camera.matrix,\n            {width: canvas_width, height: canvas_height},\n            this.resolution\n        );\n    }\n\n    clear() {\n        this.gl.clearColor(...this.clearColor);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n    }\n\n    load(paths) {\n        return this.loader.load(paths);\n    }\n\n    getProgram(key) {\n        const ret = this.loader.getProgram(key);\n\n        if (!ret) {\n            throw `No program loaded for key '${key}'`;\n        }\n\n        return ret;\n    }\n\n    enableCamera() {\n        this.cameraEnabled = true;\n    }\n\n    disableCamera() {\n        this.cameraEnabled = false;\n    }\n\n    get canvasToWorld() {\n        return this._canvasToWorld;\n    }\n\n    get viewMatrix() {\n        let camera = mat4.create();\n        if (this.cameraEnabled) {\n            camera = this.camera.matrix;\n        }\n        return mat4.multiply(mat4.create(), this.projection, camera);\n    }\n\n    beginRenderToTexture() {\n        this.framebuffer.attach();\n        this.clear();\n    }\n\n    endRenderToTexture() {\n        this.framebuffer.detach();\n        this.adjustViewport();\n    }\n\n    start() {\n        let timestamp;\n\n        const update = time => {\n            if (!timestamp) {\n                timestamp = time;\n            }\n\n            let dt = time - timestamp;\n            timestamp = time;\n            //this.framebuffer.attach();\n\n            if (this.stage) {\n                this.stage.prerender(dt);\n\n                this.beginRenderToTexture();\n\n                this.stage.render(dt);\n\n                this.stage.postrender(dt);\n\n                this.endRenderToTexture();\n\n                this.clear();\n\n                this.framebufferRenderer.render(\n                    [new Sprite({\n                        position: [0, 0],\n                        size: [this.resolution.width, this.resolution.height]\n                    })],\n                    this.projection\n                );\n\n                // possible post fullscreen render hook here\n            }\n\n            if (this.running) {\n                requestAnimationFrame(update);\n            }\n        };\n\n        if (!this.running) {\n            requestAnimationFrame(update);\n            this.running = true;\n        }\n    }\n\n    setStage(stage) {\n        this.stage = stage;\n        stage.app = this;\n        stage.init(this);\n    }\n}\n\nexport default App;\n\nexport {\n    App,\n    initCanvas\n};\n","import * as twgl from '../../node_modules/twgl.js';\n\nexport {twgl};\n\nexport default twgl;\n","import twgl from '../twgl';\nimport {gl} from '../gl';\n\nimport vs from '../../shaders/grid.vert';\nimport fs from '../../shaders/grid.frag';\n\nexport {Grid};\n\nconst GRID_VERTICES = new Float32Array([\n    0, 0, // bottom left\n    1, 0, // bottom right\n    0, 1, // top left\n    1, 1  // top right\n]);\n\nfunction makeGridVertices({xcells, ycells}, {w, h}, {lineWidth}) {\n    const position = new Float32Array(2 * (xcells + ycells));\n    const size = new Float32Array(2 * (xcells + ycells));\n    const width = w * (xcells + 1);\n    const height = h * (ycells + 1);\n\n    for (let row = 0; row < ycells; ++row) {\n        position[2 * row] = 0;     // pos x\n        position[2 * row + 1] = row * h; // pos y\n        size[2 * row] = width;     // line length\n        size[2 * row + 1] = lineWidth; // line thickness\n    }\n\n    for (let col = 0; col < xcells; ++col) {\n        position[2 * ycells + 2 * col] = col * w; // pos x\n        position[2 * ycells + 2 * col + 1] = 0;     // pos y\n        size[2 * ycells + 2 * col] = lineWidth; // line length\n        size[2 * ycells + 2 * col + 1] = height;    // line thickness\n    }\n\n    return {\n        position,\n        size\n    }\n}\n\nlet sharedProgram = null;\n\nclass Grid {\n    constructor(options) {\n        this.resolution = options.resolution;\n\n        if (!sharedProgram) {\n            sharedProgram = twgl.createProgramInfo(gl, [vs, fs]);\n        }\n        this.programInfo = sharedProgram;\n\n        this.bufferInfo = twgl.createBufferInfoFromArrays(gl, {\n            vertex: {\n                data: GRID_VERTICES,\n                numComponents: 2,\n                divisor: 0,\n                drawType: gl.STATIC_DRAW\n            },\n            position: {\n                numComponents: 2,\n                divisor: 1,\n                drawType: gl.DYNAMIC_DRAW\n            },\n            size: {\n                numComponents: 2,\n                divisor: 1,\n                drawType: gl.DYNAMIC_DRAW\n            },\n            indices: {\n                data: [\n                    0,\n                    1,\n                    2,\n                    3\n                ]\n            }\n        });\n\n        this.vao = twgl.createVertexArrayInfo(gl, this.programInfo, this.bufferInfo);\n\n        this.grids = [];\n    }\n\n    addGrid(sx = 32, sy = 32, lineColor = [1, 1, 1, 1], lineWidth = 2) {\n        const xcells = Math.ceil(this.resolution.width / sx) + 1;\n        const ycells = Math.ceil(this.resolution.height / sy) + 1;\n        const instanceCount = xcells + ycells;\n\n        const {position, size} = makeGridVertices({xcells, ycells}, {w: sx, h: sy}, {lineWidth: lineWidth});\n\n        this.grids.push({\n            position,\n            size,\n            instanceCount,\n            lineColor,\n            sx,\n            sy\n        })\n    }\n\n    render(x, y, projection) {\n        gl.useProgram(this.programInfo.program);\n\n        twgl.setBuffersAndAttributes(gl, this.programInfo, this.vao);\n\n        const cameraPos = [x, y];\n\n        this.grids.forEach(gridInfo => {\n            const {position, size, instanceCount, lineColor, sx, sy} = gridInfo;\n\n            const offset = [cameraPos[0] % sx, cameraPos[1] % sy];\n            if (offset[0] > 0) {\n                offset[0] = offset[0] - sx;\n            }\n\n            if (offset[1] > 0) {\n                offset[1] = offset[1] - sy;\n            }\n\n            twgl.setAttribInfoBufferFromArray(\n                gl,\n                this.bufferInfo.attribs.position,\n                position\n            );\n\n            twgl.setAttribInfoBufferFromArray(\n                gl,\n                this.bufferInfo.attribs.size,\n                size\n            );\n\n            twgl.setUniforms(this.programInfo, {\n                line_color: lineColor,\n                projection: projection,\n                offset: offset\n            });\n\n            twgl.drawBufferInfo(gl, this.vao, gl.TRIANGLE_STRIP, undefined, undefined, instanceCount);\n        });\n    }\n}","module.exports = \"#version 300 es\\n\\nprecision mediump float;\\n\\nuniform vec4 line_color;\\n\\nout vec4 out_color;\\n\\nvoid main() {\\n    out_color = line_color;\\n}\\n\"","module.exports = \"#version 300 es\\n\\nlayout(location = 0) in vec2 vertex;\\nlayout(location = 1) in vec2 position;\\nlayout(location = 2) in vec2 size;\\n\\nuniform mat4 projection;\\nuniform vec2 offset;\\n\\nvoid main() {\\n    vec4 transformed_position = projection * vec4(position + size * vertex + offset, 0, 1);\\n    gl_Position = transformed_position;\\n}\\n\""],"sourceRoot":""}